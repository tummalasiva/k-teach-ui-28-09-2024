{"version":3,"file":"static/js/559.8f722cb2.chunk.js","mappings":"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","sources":["data/menu.js","components/Dashboard/ChartBar.jsx","components/Dashboard/Attendance.jsx","components/Dashboard/QuickLinks.jsx","components/Dashboard/Events.jsx","components/Dashboard/FilterStudent.jsx","pages/Dashboard.jsx","forms/AddForm.jsx","forms/FormModal.jsx","data/tableKeys/academicYearData.js","pages/Administrator/AcademicYear.jsx","data/tableKeys/designation.js","pages/HumanResource/ManageDesignation.jsx","data/tableKeys/departmentData.js","pages/HumanResource/ManageDepartment.jsx","data/tableKeys/overviewData.js","data/tableKeys/employeeData.js","data/tableKeys/inactiveEmployee.js","pages/HumanResource/Employee.jsx","data/tableKeys/offerLetterData.js","forms/LetterViewModal.jsx","pages/HumanResource/OfferLetter.jsx","data/tableKeys/relievingLetterData.js","pages/HumanResource/RelievingLetter.jsx","data/tableKeys/offBoardingData.js","pages/HumanResource/OffBoarding.jsx","data/tableKeys/experienceLetterData.js","pages/HumanResource/ExperienceLetter.jsx","data/tableKeys/teacherActivityData.js","pages/HumanResource/TeacherActivity.jsx","data/tableKeys/rolePermissionData.js","data/roleData.js","pages/Administrator/RolePermission.jsx","data/tableKeys/userRoleData.js","pages/Administrator/UserRole.jsx","pages/Administrator/ResetPassword.jsx","data/tableKeys/enquiries.js","forms/ViewModel.jsx","pages/Pre-Admission/Enquiries.jsx","data/tableKeys/exams.js","pages/Pre-Admission/QuizQuestion.jsx","pages/Pre-Admission/AddOrUpdateExamModal.jsx","pages/Pre-Admission/Exams.jsx","pages/Pre-Admission/AddOrUpdateExamSchedule.jsx","forms/DeleteModal.jsx","pages/Pre-Admission/ExamSchedules.jsx","data/tableKeys/result.js","pages/Pre-Admission/Result.jsx","data/tableKeys/academicClassData.js","pages/Academic/Class.jsx","data/tableKeys/academicSectionData.js","forms/CustomSelect.jsx","pages/Academic/Section.jsx","data/tableKeys/academicSubjectData.js","pages/Academic/Subject.jsx","data/tableKeys/studentAttendanceReportData.js","pages/Attendance/StudentAttendanceTable.jsx","utils.js","pages/Attendance/StudentAttendance.jsx","data/tableKeys/employeeReportData.js","pages/Attendance/EmployeeAttendanceTable.jsx","pages/Attendance/EmployeeAttendance.jsx","pages/ClassRoutine.jsx","components/Student/StudentCount.jsx","pages/Student/Overview.jsx","data/tableKeys/admitStudentData.js","pages/Student/AdmitStudent.jsx","components/StickyBar.jsx","pages/Student/Reshuffle.jsx","data/tableKeys/promotionData.js","pages/Student/Promotion.jsx","pages/Student/BulkAdmission.jsx","data/tableKeys/studentCredentials.js","pages/Student/Credential.jsx","pages/Student/QuickAdmit.jsx","data/tableKeys/studentActivity.js","pages/Student/StudentActivity.jsx","data/tableKeys/assignmentData.js","pages/AddEditAssignment.jsx","pages/Assignment.jsx","data/tableKeys/noticeData.js","pages/Announcement/Notice.jsx","data/tableKeys/newsData.js","pages/Announcement/News.jsx","data/tableKeys/holidayData.js","pages/Announcement/Holiday.jsx","data/tableKeys/awardAchievementsData.js","pages/Announcement/AwardsAndAchievements.jsx","data/tableKeys/horizontalSplashNewsData.js","pages/Announcement/AddHorizontalSplash.jsx","data/tableKeys/popupSplashNewsData.js","pages/Announcement/AddPopup.jsx","pages/Announcement/SplashNews.jsx","data/tableKeys/galleryListData.js","pages/Gallery.jsx","data/tableKeys/notificationsData.js","pages/Notifications.jsx","data/tableKeys/eventData.js","pages/Event.jsx","data/tableKeys/examGradeData.js","pages/Exam/ExamGrade.jsx","data/tableKeys/examTermData.js","pages/Exam/ExamTerm.jsx","data/tableKeys/examListData.js","data/tableKeys/ScheduleListData.js","pages/Exam/ExamSchedule.jsx","pages/Exam/ExamHallTicket.jsx","pages/ExamMark/DivisionWiseReport.jsx","pages/ExamMark/SubjectWiseReport.jsx","data/tableKeys/consolidateMarksCardData.js","pages/ExamMark/ConsolidatedMarkSheet.jsx","data/tableKeys/marksCardData.js","pages/ExamMark/Markscard.jsx","data/tableKeys/examResultData.js","pages/ExamMark/ExamResultViewModel.jsx","pages/ExamMark/ExamResult.jsx","forms/CustomInput.jsx","pages/ExamMark/ManageMark.jsx","data/tableKeys/examAttendanceData.js","pages/ExamMark/ExamAttendance.jsx","pages/LMS/Courses.jsx","context/ContentContext.js","pages/LMS/CourseContentTable.jsx","pages/LMS/CourseDialogs/VideoDialog.jsx","pages/LMS/CourseDialogs/QuizDialog.jsx","pages/LMS/CourseDialogs/FlashcardDialog.jsx","pages/LMS/CourseDialogs/MaterialsDialog.jsx","pages/LMS/CourseDialogs/AddChapterDialog.jsx","pages/LMS/ShowCourseContent.jsx","pages/LMS/CourseContent.jsx","pages/LMS/Live.jsx","pages/LMS/Storage.jsx","data/tableKeys/libraryBooksData.js","pages/Library/BookViewModal.jsx","pages/Library/Books.jsx","data/tableKeys/periodicalData.js","pages/Library/Periodical.jsx","data/tableKeys/studentMember.js","data/tableKeys/studentNonMember.js","pages/Library/StudentLibraryMember.jsx","data/tableKeys/studentLibraryDueData.js","data/tableKeys/studentLibraryHistoryData.js","data/tableKeys/studentlibraryIssueData.js","pages/Library/StudentIssueReturn.jsx","data/tableKeys/employeeLibraryNonMemberData.js","data/tableKeys/employeeLibraryMemberData.js","pages/Library/EmployeeLibraryMember.jsx","data/tableKeys/employeeLibraryHistroyData.js","data/tableKeys/employeeLibraryDueData.js","data/tableKeys/employeeLibraryIssueData.js","pages/Library/EmployeeIssueReturn.jsx","data/tableKeys/leaveTypeData.js","pages/LeaveManagement/LeaveType.jsx","data/tableKeys/studentLeaveData.js","pages/LeaveManagement/StudentsLeave.jsx","data/tableKeys/employeeLeaveManageData.js","data/tableKeys/employeeLeaveListData.js","pages/LeaveManagement/EmployeeLeave.jsx","pages/LeaveManagement/LeaveReport.jsx","data/tableKeys/itemData.js","pages/Inventory/Item.jsx","data/tableKeys/vendorData.js","pages/Inventory/Vendor.jsx","data/tableKeys/transactionData.js","pages/Inventory/InOutTransaction.jsx","data/tableKeys/stockListData.js","pages/Inventory/OverviewTable.jsx","pages/Inventory/StockList.jsx","data/tableKeys/issueDetailData.js","pages/Inventory/Issue.jsx","data/tableKeys/sellDetailData.js","pages/Inventory/Sell.jsx","pages/Certificate/StudyCertificate.jsx","pages/Certificate/TransferCertificate.jsx","data/tableKeys/receiptBookData.js","data/tableKeys/feeMapData.js","pages/Fees/AddUpdateFeeMap.jsx","pages/Fees/ReceiptBook.jsx","data/tableKeys/feeMapCategoryData.js","pages/Fees/FeeMapCategory.jsx","pages/Fees/CollectFees.jsx","data/tableKeys/balanceFeeReportData.js","pages/Fees/BalanceFeeReport.jsx","data/tableKeys/feeOverviewPaymentData.js","data/tableKeys/feeOverviewReceiptData.js","pages/Fees/FeeOverview.jsx","data/tableKeys/reconciliationData.js","pages/Fees/Reconciliation.jsx","data/tableKeys/manageHostelData.js","pages/Hostel/HostelViewDialog.jsx","pages/Hostel/ManageHostel.jsx","data/tableKeys/manageHostelRoom.js","pages/Hostel/ManageRoomType.jsx","data/tableKeys/manageHostelRoomBedData.js","pages/Hostel/RoomAndBedViewDialog.jsx","pages/Hostel/ManageRoomAndBed.jsx","data/tableKeys/hostelMemberData.js","data/tableKeys/hostelNonMember.js","pages/Hostel/HostelMember.jsx","data/tableKeys/vehicleData.js","pages/Transport/VehicleViewDialog.jsx","pages/Transport/Vehicle.jsx","data/tableKeys/manageRouteData.js","pages/Transport/RouteAndTripViewDialog.jsx","pages/Transport/ManageRouteAndTrips.jsx","data/tableKeys/transportAddMemberData.js","data/tableKeys/transportMemberData.js","pages/Transport/TransportMember.jsx","data/tableKeys/routesData.js","pages/Transport/Routes.jsx","data/tableKeys/vehicleLogData.js","pages/Transport/VehicleLog.jsx","data/tableKeys/vehcleFirmData.js","components/Transport/Firm.jsx","data/tableKeys/vehicleFuelData.js","components/Transport/Fuel.jsx","data/tableKeys/vehicleRepairData.js","components/Transport/Repair.jsx","data/tableKeys/vehicleTireData.js","components/Transport/VehicleTire.jsx","data/tableKeys/vehicleGreecingData.js","components/Transport/Greecing.jsx","pages/Transport/VehicleMaintenance.jsx","data/tableKeys/salaryGradeData.js","pages/PayRoll/SalaryGrade.jsx","data/tableKeys/paymentHistoryData.js","pages/PayRoll/MakePayment.jsx","data/tableKeys/libraryTabularData.js","pages/Report/LibraryReport.jsx","pages/Report/StudentYearlyAttendance.jsx","pages/Report/EmployeeYearlyAttendance.jsx","data/tableKeys/studentActivityReportData.js","pages/Report/StudentActivityReport.jsx","pages/Report/StudentAttendance.jsx","pages/Report/EmployeeAttendance.jsx","data/tableKeys/visitorInfoData.js","pages/VisitorInfo/VisitorInfoViewModel.jsx","pages/VisitorInfo/VisitorInfo.jsx","data/tableKeys/studentCheckoutData.js","pages/VisitorInfo/StudentCheckout.jsx","data/tableKeys/ticketData.js","pages/HelpDesk.jsx","data/tableKeys/guardianFeedbackData.js","pages/GuardianFeedback.jsx","data/tableKeys/studentBulkPhotoData.js","pages/Student/StudentBulkPhoto.jsx","pages/Report/StudentReport.jsx","pages/HumanResource/AddEmployee.jsx","data/tableKeys/manageInstituteData.js","pages/ManageInstitute/ManageInstitute.jsx","forms/AddOrUpdateFiles.jsx","pages/ManageInstitute/AddInstitute.jsx","pages/AccountSettings/FormTable.jsx","pages/AccountSettings/ProfileUpdate.jsx","pages/AccountSettings/Profile.jsx","pages/HumanResource/UpdateEmployee.jsx","pages/Student/AddStudent.jsx","pages/LMS/AddCourse.jsx","pages/LMS/UpdateCourse.jsx","components/LoaddingScreen.jsx","pages/LMS/Room.jsx","pages/Communication/Compose.jsx","data/tableKeys/communicationReportData.js","pages/Communication/Report.jsx","pages/Communication/Credentials.jsx","pages/Student/BulkPhoto.jsx","components/NavDrawer.jsx","components/PageHeader.jsx","components/Tables/CustomTable.jsx","components/Tables/NoTableData.jsx","components/Tabs/TabPanel.jsx","components/Tabs/Tablist.jsx","forms/FileListModal.jsx","forms/FileSelect.jsx","forms/FormDatePicker.jsx"],"sourcesContent":["/** @format */\n\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\n\nimport React from \"react\";\nimport GiteIcon from \"@mui/icons-material/Gite\";\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\";\nimport DirectionsBusIcon from \"@mui/icons-material/DirectionsBus\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\nimport ManIcon from \"@mui/icons-material/Man\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport FeedbackIcon from \"@mui/icons-material/Feedback\";\nimport PhotoRoundedIcon from \"@mui/icons-material/PhotoRounded\";\nimport WcIcon from \"@mui/icons-material/Wc\";\nimport SubdirectoryArrowRightOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowRightOutlined\";\n\nimport {\n  SettingsSuggest,\n  AccountBalance,\n  AccessTime,\n  Groups,\n  CheckBox,\n  TextSnippet,\n  SchoolRounded,\n  CardMembershipRounded,\n  CampaignRounded,\n  Person,\n  CurrencyRupee,\n  BarChart,\n  InstallMobileRounded,\n} from \"@mui/icons-material\";\n\nimport NotificationsActiveRoundedIcon from \"@mui/icons-material/NotificationsActiveRounded\";\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\n\nimport Diversity2Icon from \"@mui/icons-material/Diversity2\";\n\nconst SIDE_MENU_DATA = [\n  {\n    name: \"Dashboard\",\n    path: \"/sch/dashboard\",\n    renderName: [],\n    subMenus: [],\n    icon: <DashboardRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Manage Institute\",\n    path: \"/sch/manage-institute\",\n    renderName: [\"\"],\n    subMenus: [],\n    icon: <SettingsSuggest color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Administrator\",\n    path: \"\",\n    renderName: [\n      \"academicYear\",\n      \"userRole\",\n      \"rolePermission\",\n      \"userPasswordReset\",\n    ],\n\n    icon: <Person color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Academic Year\",\n        renderName: \"academicYear\",\n        path: \"/sch/administrator/academicYear\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      // {\n      //   name: \"User Role(ACL)\",\n      //   renderName: \"userRole\",\n      //   path: \"/sch/administrator/user-role\",\n      //   icon: (\n      //     <SubdirectoryArrowRightOutlinedIcon\n      //       color=\"primary\"\n      //       fontSize=\"small\"\n      //     />\n      //   ),\n      // },\n      {\n        name: \"Roles & Permissions\",\n        renderName: \"rolePermission\",\n        path: \"/sch/administrator/role-permission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"User Password Reset\",\n        renderName: \"userPasswordReset\",\n        path: \"/sch/administrator/reset-password\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Human Resource\",\n    path: \"\",\n    renderName: [\n      \"manageDesignation\",\n      \"manageDepartment\",\n      \"employee\",\n      \"offerLetter\",\n      \"relievingLetter\",\n      \"offBoarding\",\n      \"experienceLetter\",\n      \"teacherActivity\",\n    ],\n    icon: <Diversity2Icon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Designation\",\n        renderName: \"manageDesignation\",\n        path: \"/sch/human-resource/manage-designation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Department\",\n        renderName: \"manageDepartment\",\n        path: \"/sch/human-resource/manage-department\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee\",\n        renderName: \"employee\",\n        path: \"/sch/human-resource/employee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Offer-Letter\",\n        renderName: \"offerLetter\",\n        path: \"/sch/human-resource/offer-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Relieving Letter\",\n        renderName: \"relievingLetter\",\n        path: \"/sch/human-resource/relieving-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Off Boarding\",\n        renderName: \"offBoarding\",\n        path: \"/sch/human-resource/off-boarding\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Experience Letter\",\n        renderName: \"experienceLetter\",\n        path: \"/sch/human-resource/experience-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Teacher Activity\",\n        renderName: \"teacherActivity\",\n        path: \"/sch/human-resource/teacher-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Pre-Admission\",\n    path: \"\",\n    renderName: [\"enquiries\", \"enquiries\", \"examSchedules\", \"result\"],\n    icon: <ManIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Enquiries\",\n        renderName: \"enquiries\",\n        path: \"/sch/pre-admission/enquiries\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exams\",\n        renderName: \"exams\",\n        path: \"/sch/pre-admission/exams\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Schedules\",\n        renderName: \"examSchedules\",\n        path: \"/sch/pre-admission/exam-schedules\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Result\",\n        renderName: \"result\",\n        path: \"/sch/pre-admission/result\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Academic\",\n    path: \"\",\n    renderName: [\"class\", \"section\", \"subject\"],\n    icon: <AccountBalance color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Class\",\n        renderName: \"class\",\n        path: \"/sch/academic/class\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Section\",\n        renderName: \"section\",\n        path: \"/sch/academic/section\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject\",\n        renderName: \"subject\",\n        path: \"/sch/academic/subject\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Attendance\",\n    path: \"\",\n    renderName: [\"studentAttendance\", \"employeeAttendance\"],\n    icon: <CheckBox color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Student Attendance\",\n        renderName: \"studentAttendance\",\n        path: \"/sch/attendence/student-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Attendance\",\n        renderName: \"employeeAttendance\",\n        path: \"/sch/attendence/employee-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Class Routine\",\n    path: \"/sch/class-routine\",\n    renderName: [\"class-routine\"],\n    subMenus: [],\n    icon: <AccessTime color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Student\",\n    path: \"\",\n    renderName: [\n      \"overview\",\n      \"admitStudent\",\n      \"reshuffle\",\n      \"promotion\",\n      \"bulkAdmission\",\n      \"credential\",\n      \"quickAdmit\",\n      \"studentActivity\",\n    ],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Overview\",\n        renderName: \"overview\",\n        path: \"/sch/student/overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Admit Student\",\n        renderName: \"admitStudent\",\n        path: \"/sch/student/admit-student\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reshuffle\",\n        renderName: \"reshuffle\",\n        path: \"/sch/student/reshuffle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Promotion\",\n        renderName: \"promotion\",\n        path: \"/sch/student/promotion\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Bulk Admission\",\n        renderName: \"bulkAdmission\",\n        path: \"/sch/student/bulk-admission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credential\",\n        renderName: \"credential\",\n        path: \"/sch/student/credential\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Quick Admit\",\n        renderName: \"quickAdmit\",\n        path: \"/sch/student/quick-admit\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Activity\",\n        renderName: \"studentActivity\",\n        path: \"/sch/student/student-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Assignment\",\n    path: \"/sch/assignment\",\n    renderName: [\"assgnment\"],\n    subMenus: [],\n    icon: <AssignmentRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Communication\",\n    path: \"\",\n    renderName: [\"compose\", \"report\", \"credentials\"],\n    icon: <InstallMobileRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Compose\",\n        renderName: \"compose\",\n        path: \"/sch/communication_compose\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Report\",\n        renderName: \"report\",\n        path: \"/sch/communication_report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credentials\",\n        renderName: \"credentials\",\n        path: \"/sch/communication_credentials\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Announcement\",\n    path: \"\",\n    renderName: [\n      \"notice\",\n      \"news\",\n      \"holiday\",\n      \"awardsAndAchievements\",\n      \"splashNews\",\n    ],\n    icon: <CampaignRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Notice\",\n        renderName: \"notice\",\n        path: \"/sch/announcement/notice\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"News\",\n        renderName: \"news\",\n        path: \"/sch/announcement/news\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Holiday\",\n        renderName: \"holiday\",\n        path: \"/sch/announcement/holiday\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Awards And Achievements\",\n        renderName: \"awardsAndAchievements\",\n        path: \"/sch/announcement/awardsAndAchievements\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Splash News\",\n        renderName: \"splashNews\",\n        path: \"/sch/announcement/splashNews\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Gallery\",\n    path: \"/sch/gallery\",\n    renderName: [\"gallery\"],\n    subMenus: [],\n    icon: <PhotoRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Notifications\",\n    path: \"/sch/notifications\",\n    renderName: [\"notifications\"],\n    subMenus: [],\n    icon: <NotificationsActiveRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Event\",\n    path: \"/sch/event\",\n    renderName: [\"event\"],\n    subMenus: [],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Exam\",\n    path: \"\",\n    renderName: [\"examGrade\", \"examTerm\", \"examSchedule\", \"examHallTicket\"],\n    icon: <TextSnippet color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Exam Grade\",\n        renderName: \"examGrade\",\n        path: \"/sch/exam/exam-grade\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Term\",\n        renderName: \"examTerm\",\n        path: \"/sch/exam/exam-term\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Schedule\",\n        renderName: \"examSchedule\",\n        path: \"/sch/exam/exam-schedule\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Hall Ticket\",\n        renderName: \"examHallTicket\",\n        path: \"/sch/exam/exam-hall-ticket\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Exam Mark\",\n    path: \"\",\n    renderName: [\n      \"examAttendance\",\n      \"manageMark\",\n      \"examResult\",\n      \"marksCard\",\n      \"consolidatedMarksSheet\",\n      \"subjectWiseReport\",\n      \"divisionWiseReport\",\n    ],\n    icon: <SchoolRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Exam Attendance\",\n        renderName: \"examAttendance\",\n        path: \"/sch/exam-Mark/exam-Attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Mark\",\n        renderName: \"manageMark\",\n        path: \"/sch/exam-Mark/manage-mark\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Result\",\n        renderName: \"examResult\",\n        path: \"/sch/exam-Mark/exam-result\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Marks Card\",\n        renderName: \"marksCard\",\n        path: \"/sch/exam-Mark/marks-card\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Consolidated Marks Sheet\",\n        renderName: \"consolidatedMarksSheet\",\n        path: \"/sch/exam-Mark/consolidated-marks-sheet\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject Wise Report\",\n        renderName: \"subjectWiseReport\",\n        path: \"/sch/exam-Mark/subject-wise-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Division Wise Report\",\n        renderName: \"divisionWiseReport\",\n        path: \"/sch/exam-Mark/division-wise-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"LMS\",\n    path: \"\",\n    renderName: [\"storage\", \"courses\", \"courseContent\", \"live\"],\n    icon: <LibraryBooksIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Storage\",\n        renderName: \"storage\",\n        path: \"/sch/lms/storage\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Courses\",\n        renderName: \"courses\",\n        path: \"/sch/lms/courses\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Course Content\",\n        renderName: \"courseContent\",\n        path: \"/sch/lms/course-content\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Live\",\n        renderName: \"live\",\n        path: \"/sch/lms/live\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Library\",\n    path: \"\",\n    renderName: [\n      \"books\",\n      \"periodical\",\n      \"studentLibraryMember\",\n      \"employeeLibraryMember\",\n      \"studentIssueReturn\",\n    ],\n    icon: <LibraryBooksIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Books\",\n        renderName: \"books\",\n        path: \"/sch/library/books\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Periodical\",\n        renderName: \"periodical\",\n        path: \"/sch/library/periodical\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Library Member\",\n        renderName: \"studentLibraryMember\",\n        path: \"/sch/library/student-library-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Library Member\",\n        renderName: \"employeeLibraryMember\",\n        path: \"/sch/library/employee-library-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Issue & Return\",\n        renderName: \"studentIssueReturn\",\n        path: \"/sch/library/student-issue-return\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Leave Management\",\n    path: \"\",\n    renderName: [\"leaveType\", \"employeeLeave\", \"studentLeave\", \"leaveReport\"],\n    icon: <CheckBox color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Leave Type\",\n        renderName: \"leaveType\",\n        path: \"/sch/leave-management/leave-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Leave\",\n        renderName: \"employeeLeave\",\n        path: \"/sch/leave-management/employee-leave\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Students Leave\",\n        renderName: \"studentLeave\",\n        path: \"/sch/leave-management/student-leave\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Leave Report\",\n        renderName: \"leaveReport\",\n        path: \"/sch/leave-management/leave-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Inventory\",\n    path: \"\",\n    renderName: [\"item\", \"vendor\", \"transaction\", \"stockList\", \"issue\", \"sell\"],\n    icon: <InventoryIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Item\",\n        renderName: \"item\",\n        path: \"/sch/inventory/item\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vendor\",\n        renderName: \"vendor\",\n        path: \"/sch/inventory/vendor\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"In/Out Transaction\",\n        renderName: \"transaction\",\n        path: \"/sch/inventory/transaction\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Stock List\",\n        renderName: \"stockList\",\n        path: \"/sch/inventory/stockList\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Issue\",\n        renderName: \"issue\",\n        path: \"/sch/inventory/issue\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Sell\",\n        renderName: \"sell\",\n        path: \"/sch/inventory/sell\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Certificate\",\n    path: \"\",\n    renderName: [\"studyCertificate\", \"transferCertificate\"],\n    icon: <CardMembershipRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Study Certificate\",\n        renderName: \"studyCertificate\",\n        path: \"/sch/certificate/study-certificate\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Transfer Certificate\",\n        renderName: \"transferCertificate\",\n        path: \"/sch/certificate/transfer-certificate\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Fees\",\n    path: \"\",\n    renderName: [\n      \"receiptBook\",\n      \"feeMapCategory\",\n      \"collectFees\",\n      \"balanceFee\",\n      \"feeOverview\",\n      \"reconciliation\",\n    ],\n    icon: <CurrencyRupee color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Receipt Book\",\n        renderName: \"receiptBook\",\n        path: \"/sch/fees/receipt-book\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Map Category\",\n        renderName: \"feeMapCategory\",\n        path: \"/sch/fees/feeMap-category\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Collect Fees\",\n        renderName: \"collectFees\",\n        path: \"/sch/fees/collect-fees\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Balance Fee\",\n        renderName: \"balanceFee\",\n        path: \"/sch/fees/balance-fee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Overview\",\n        renderName: \"feeOverview\",\n        path: \"/sch/fees/fee-overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reconciliation\",\n        renderName: \"reconciliation\",\n        path: \"/sch/fees/re-conciliation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Hostel\",\n    path: \"\",\n    renderName: [\n      \"manageHostel\",\n      \"manageRoomType\",\n      \"manageRoomBed\",\n      \"hostelMember\",\n    ],\n    icon: <GiteIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Hostel\",\n        renderName: \"manageHostel\",\n        path: \"/sch/hostel/manage-hostel\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Type\",\n        renderName: \"manageRoomType\",\n        path: \"/sch/hostel/manage-room-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Bed\",\n        renderName: \"manageRoomBed\",\n        path: \"/sch/hostel/manage-room-bed\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Hostel Member\",\n        renderName: \"hostelMember\",\n        path: \"/sch/hostel/hostel-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Transport\",\n    path: \"\",\n    renderName: [\n      \"vehicle\",\n      \"manageRoute\",\n      \"routes\",\n      \"trasportMember\",\n      \"vehicleLog\",\n      \"vehicleMaintenance\",\n    ],\n    icon: <DirectionsBusIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Vehicle\",\n        renderName: \"vehicle\",\n        path: \"/sch/transport/vehicle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Route & Trips\",\n        renderName: \"manageRoute\",\n        path: \"/sch/transport/manage-route\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Routes\",\n        renderName: \"routes\",\n        path: \"/sch/transport/routes\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Trasport Member\",\n        renderName: \"trasportMember\",\n        path: \"/sch/transport/trasport-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vehicle Log\",\n        renderName: \"vehicleLog\",\n        path: \"/sch/transport/vehicle-log\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vehicle Maintenance\",\n        renderName: \"vehicleMaintenance\",\n        path: \"/sch/transport/vehicle-maintenance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Payroll\",\n    path: \"\",\n    renderName: [\"salaryGrade\", \"makePayment\"],\n    icon: <CurrencyRupeeIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Salary Grade\",\n        renderName: \"salaryGrade\",\n        path: \"/sch/payroll/salary-grade\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Make Payment\",\n        renderName: \"makePayment\",\n        path: \"/sch/payroll/make-payment\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Report\",\n    path: \"\",\n    renderName: [\n      \"libraryReport\",\n      \"studentAttendance\",\n      \"studentYearlyAttendane\",\n      \"employeeAttendance\",\n      \"employeeYearlyAttendance\",\n      \"studentReport\",\n      \"studentActivityReport\",\n    ],\n    icon: <BarChart color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Library Report\",\n        renderName: \"libraryReport\",\n        path: \"/sch/report/library-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Attendance\",\n        renderName: \"studentAttendance\",\n        path: \"/sch/report/student-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Yearly Attendane\",\n        renderName: \"studentYearlyAttendaneroutes\",\n        path: \"/sch/report/student-yearly-attendane\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Attendance\",\n        renderName: \"employeeAttendance\",\n        path: \"/sch/report/employee-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Yearly Attendance\",\n        renderName: \"employeeYearlyAttendance\",\n        path: \"/sch/report/employee-yearly-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Student Report\",\n        renderName: \"studentReport\",\n        path: \"/sch/report/student-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Activity Report\",\n        renderName: \"studentActivityReport\",\n        path: \"/sch/report/student-activity-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Visitor Info\",\n    path: \"\",\n    renderName: [\"visitorInfo\", \"studentCheckout\"],\n    icon: <WcIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Visitor Info\",\n        renderName: \"visitorInfo\",\n        path: \"/sch/visitorInfo/visitor-info\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Checkout\",\n        renderName: \"studentCheckout\",\n        path: \"/sch/visitorInfo/student-checkout\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Help Desk\",\n    path: \"/sch/help-desk\",\n    renderName: [\"Help desk\"],\n    subMenus: [],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Guardian Feedback\",\n    path: \"/sch/guardian-feedback\",\n    renderName: [\"guardianFeedback\"],\n    subMenus: [],\n    icon: <FeedbackIcon color=\"primary\" fontSize=\"small\" />,\n  },\n];\n\nexport default {\n  SIDE_MENU_DATA,\n};\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Box, Paper } from \"@mui/material\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst ChartBar = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [uniqueSections, setUniqueSections] = useState([]);\n  const { ref, width } = useResizeObserver();\n\n  const getRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getDashboardStudentDetails,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      const transformedData = data.result.map((classItem) => {\n        const transformedItem = { className: classItem.className };\n        Object.keys(classItem.sections).forEach((section) => {\n          transformedItem[section] = classItem.sections[section];\n        });\n        return transformedItem;\n      });\n\n      setClasses(transformedData);\n\n      const sections = new Set();\n      data.result.forEach((classItem) => {\n        Object.keys(classItem.sections).forEach((section) => {\n          sections.add(section);\n        });\n      });\n\n      setUniqueSections([...sections]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <Box sx={{ display: \"flex\", flex: 1 }} ref={ref}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Paper sx={{ width: \"100%\", height: \"100%\" }}>\n          <BarChart\n            width={width ? width - 10 : 700}\n            height={350}\n            data={classes}\n            margin={{ top: 20, right: 5, left: 5, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"className\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {uniqueSections.map((sectionName) => (\n              <Bar\n                key={sectionName}\n                dataKey={sectionName}\n                fill={getRandomColor()}\n                stackId=\"stack\"\n              />\n            ))}\n          </BarChart>\n        </Paper>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ChartBar;\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Groups } from \"@mui/icons-material\";\nimport ChartBar from \"./ChartBar\";\nimport { Link } from \"react-router-dom\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst OuterCard = styled(Card)(({ theme }) => ({\n  marginBottom: \"15px\",\n  padding: \"20px 0\",\n  height: \"auto\",\n  width: \"100%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n}));\n\nconst InnerBox = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\",\n}));\n\nconst Content = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  fontSize: \"16px\",\n  fontWeight: 600,\n}));\n\nconst Data = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  textAlign: \"center\",\n}));\n\nconst Count = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"3px\",\n}));\n\nexport default function Attendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [studentAttendence, setStudentAttendence] = useState([]);\n  const [employeeAttendence, setEmployeeAttendence] = useState([]);\n\n  const getStudentAttendanceSummary = async () => {\n    try {\n      const [studentData, employeeData] = await Promise.all([\n        get(PRIVATE_URLS.studentAttendance.getAttendanceSummaryForToday, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }),\n        get(\n          PRIVATE_URLS.employeeAttendance.getEmployeeAttendanceSummaryForToday,\n          {\n            params: {\n              schoolId: selectedSetting._id,\n            },\n          }\n        ),\n      ]);\n\n      // console.log(studentData.data?.result, \"student attendance data\");\n      // console.log(employeeData?.data?.result, \"employee attendance data\");\n      setStudentAttendence(studentData.data?.result);\n      setEmployeeAttendence(employeeData?.data?.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudentAttendanceSummary();\n  }, [selectedSetting._id]);\n\n  const darkMode = window.localStorage.getItem(\"isDarkMode\");\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, margin: \"20px 0px\" }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={4} lg={4}>\n            <OuterCard>\n              <InnerBox>\n                <Groups\n                  sx={{\n                    width: \"80px\",\n                    height: \"70px\",\n                    color: darkMode === \"true\" ? \"#fff\" : \"#1b3779\",\n                  }}\n                />\n              </InnerBox>\n              {/* <Content> */}\n              <Data>\n                <Typography sx={{ fontWeight: 600 }}>\n                  Students Attendance\n                </Typography>\n                <Count>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#FF8042\" }}>Total Students: </span>\n                      {studentAttendence?.totalStudents}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#00C49F\" }}>Not Taken: </span>\n                      {studentAttendence?.attendanceNotTaken}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#0088FE\" }}>Total Present: </span>\n                      {studentAttendence?.totalPresent}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"red\" }}>Total Absent: </span>\n                      {studentAttendence?.totalAbsent}\n                    </Typography>\n                  </Stack>\n                </Count>\n              </Data>\n              {/* </Content> */}\n            </OuterCard>\n            <OuterCard>\n              <InnerBox>\n                <Groups\n                  sx={{\n                    width: \"80px\",\n                    height: \"70px\",\n                    color: darkMode === \"true\" ? \"#fff\" : \"#1b3779\",\n                  }}\n                />\n              </InnerBox>\n\n              {/* <Content> */}\n              <Data>\n                <Typography sx={{ fontWeight: 600 }}>\n                  Employees Attendance\n                </Typography>\n                <Count>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#FF8042\" }}>\n                        Total Employees:{\" \"}\n                      </span>\n                      {employeeAttendence?.totalEmployees}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#00C49F\" }}>Not Taken: </span>\n                      {employeeAttendence?.attendanceNotTaken}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#0088FE\" }}>Total Present: </span>\n                      {employeeAttendence?.totalPresent}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"red\" }}>Total Absent: </span>\n                      {employeeAttendence?.totalAbsent}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#FFBB28\" }}>Total Late: </span>\n                      {employeeAttendence?.totalLate}\n                    </Typography>\n                  </Stack>\n                </Count>\n              </Data>\n              {/* </Content> */}\n            </OuterCard>\n          </Grid>\n          <Grid item xs={12} sm={12} md={8} lg={8}>\n            <ChartBar />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Card, Fab, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nimport {\n  CardMembership,\n  FindInPage,\n  Groups,\n  Message,\n} from \"@mui/icons-material\";\nimport { Link } from \"react-router-dom\";\n\nconst DataContainer = styled(Card)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  justifyContent: \"space-evenly\",\n  padding: \"25px 0px\",\n  flexDirection: \"column\",\n}));\nconst StyledFab = styled(Fab)(({ theme }) => ({\n  background: \"#1b3779\",\n  color: \"#fff\",\n  \"&:hover\": {\n    color: \"#1b3779\",\n  },\n}));\nexport default function QuickLinks() {\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"center\">\n            <Typography sx={{ fontSize: 18, fontWeight: \"bold\" }}>\n              Quick Links\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/student/add-student\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Groups />\n                  </StyledFab>\n                </Box>\n                <Box>Admit Students</Box>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/human-resource/add-employee\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Groups />\n                  </StyledFab>\n                </Box>\n                <Box>Admit Employee</Box>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/exam-Mark/exam-result\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <FindInPage />\n                  </StyledFab>\n                </Box>\n\n                <Typography> Exam Results</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/exam-Mark/marks-card\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <CardMembership />\n                  </StyledFab>\n                </Box>\n                <Typography>Marks Cards</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/communication_compose\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Message />\n                  </StyledFab>\n                </Box>\n                <Typography>Communication</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Collapsible from \"react-collapsible\";\n\nimport dayjs from \"dayjs\";\nimport \"../Styles/Dashboard.css\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\n\nconst ScrollContainer = styled(Box)(({ theme }) => ({\n  borderRadius: \"5px\",\n  margin: \"18px\",\n  transform: \"translateY(0%)\",\n  animation: \"scroll 15s linear infinite\",\n  animationPlayState: \"running\",\n\n  \"&:hover\": {\n    animationPlayState: \"paused\",\n  },\n\n  \"@keyframes scroll\": {\n    from: {\n      transform: \"translateY(50%)\",\n    },\n    to: {\n      transform: \"translateY(-100%)\",\n    },\n  },\n}));\n\nconst DashboardScorlText = styled(Card)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"10px 0px\",\n\n  height: \"100%\",\n}));\n\nconst NoDataFound = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"5px\",\n  padding: \"5px\",\n  fontWeight: 700,\n}));\n\nconst DashboardNewsConent = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  height: \"auto\",\n  width: \"95%\",\n  marginLeft: \"1rem\",\n  marginRight: \"2rem\",\n  paddingBottom: \"5px\",\n  position: \"relative\",\n}));\n\nconst BoldTrigger = styled(Typography)(({ theme }) => ({\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  fontSize: \"18px\",\n  borderLeft: \"7px solid #ffeb3b\",\n  paddingLeft: theme.spacing(1),\n}));\n\nconst NoticeItem = styled(Typography)(({ theme }) => ({\n  fontWeight: 700,\n  \"&:hover\": {\n    color: themeData.darkPalette.primary.main,\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Events() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [notice, setNotice] = useState([]);\n  const [holidays, setHolidays] = useState([]);\n  // console.log(notice?.length, \"resss\");\n\n  const getNotice = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setNotice(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getHolidays = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setHolidays(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getNotice();\n    getHolidays();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, mt: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Calendar\n              tileClassName={({ date }) => {\n                const today = new Date();\n                if (date.toDateString() === today.toDateString()) {\n                  return \"blue-day\";\n                }\n                return \"\";\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Card sx={{ minHeight: \"200px\", padding: \"15px\" }}>\n              <Collapsible open={true}>\n                <BoldTrigger>{`Notices: (${notice?.length})`}</BoldTrigger>\n                <Divider sx={{ width: \"100%\", mt: 1 }} />\n                <Box\n                  sx={{\n                    height: \"140px\",\n                    maxHeight: \"140px\",\n                    overflow: \"auto\",\n                  }}>\n                  <DashboardScorlText elevation={0}>\n                    <ScrollContainer>\n                      {notice?.map((data, index) => (\n                        <DashboardNewsConent key={index}>\n                          <NoticeItem component=\"li\">{data.notice}</NoticeItem>\n                        </DashboardNewsConent>\n                      ))}\n                    </ScrollContainer>\n                    {!notice?.length && (\n                      <NoDataFound variant=\"h6\">No data found</NoDataFound>\n                    )}\n                  </DashboardScorlText>\n                </Box>\n              </Collapsible>\n            </Card>\n\n            <Card\n              sx={{ minHeight: \"200px\", padding: \"15px\", marginTop: \"10px\" }}>\n              <Collapsible open={true}>\n                <BoldTrigger>{`Holidays: (${holidays?.length})`}</BoldTrigger>\n                <Divider sx={{ width: \"100%\", mt: 1 }} />\n                <Box\n                  sx={{\n                    height: \"140px\",\n                    maxHeight: \"140px\",\n                    overflow: \"auto\",\n                  }}>\n                  <DashboardScorlText elevation={0}>\n                    <ScrollContainer>\n                      {holidays?.map((data, index) => (\n                        <DashboardNewsConent key={index}>\n                          <NoticeItem component=\"li\">{data.title}</NoticeItem>\n                        </DashboardNewsConent>\n                      ))}\n                    </ScrollContainer>\n                    {!holidays?.length && (\n                      <NoDataFound variant=\"h6\">No data found</NoDataFound>\n                    )}\n                  </DashboardScorlText>\n                </Box>\n              </Collapsible>\n            </Card>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function FilterStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudent = (values) => {\n    if (values.student) navigate(`/sch/student/edit-student/${values.student}`);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudent,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\n\nimport Attendance from \"../components/Dashboard/Attendance\";\nimport QuickLinks from \"../components/Dashboard/QuickLinks\";\nimport Events from \"../components/Dashboard/Events\";\nimport FilterStudent from \"../components/Dashboard/FilterStudent\";\n\nexport default function Dashboard() {\n  return (\n    <>\n      <PageHeader title=\"Welcome To School ERP \" />\n      <FilterStudent />\n      <Attendance />\n      <QuickLinks />\n      <Events />\n    </>\n  );\n}\n","import { Box, Fab, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport themeData from \"../data/themeData\";\nexport default function AddForm({ disabled, title, onAddClick = () => {} }) {\n  return (\n    <>\n      <Box\n        sx={{\n          position: \"fixed\",\n          width: \"-moz-fit-content\",\n          width: \"fit-content\",\n          right: \"70px\",\n          bottom: \"20px\",\n        }}\n      >\n        <Tooltip title={title}>\n          <Fab\n            variant=\"contained\"\n            onClick={onAddClick}\n            disabled={disabled}\n            sx={{\n              color: \"#ffff\",\n              background: themeData.darkPalette.primary.main,\n              \":hover\": { background: themeData.darkPalette.primary.main },\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </Tooltip>\n      </Box>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Divider,\n  useMediaQuery,\n  useTheme,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function FormModal({\n  formTitle = \"\",\n  children,\n  formik,\n  open = false,\n  onClose = () => {},\n  submitButtonTitle = \"\",\n  styles = {},\n  adding = false,\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n          component: \"form\",\n          onSubmit: formik.handleSubmit,\n        }}\n      >\n        <DialogTitle sx={{ fontWeight: 600 }}>{formTitle}</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}\n        >\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={onClose}\n          >\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={adding}\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {submitButtonTitle}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","export const academicYearTableKeys = [\n  {\n    name: \"Academic Year\",\n    key: \"academicYear\",\n  },\n\n  {\n    name: \"Status\t\",\n    key: \"active\",\n  },\n  {\n    name: \"Note\t\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\n\n// custom components\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicYearTableKeys } from \"../../data/tableKeys/academicYearData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\n\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useContext } from \"react\";\n\nexport default function AcademicYear() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((d) => ({ ...d, academicYear: `${d.from}-${d.to}` }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.academicYear.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.academicYear.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  console.log(selectedSetting, \"0000000\");\n  // get data on page load\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleToggleActiveStatus = async (academicYear) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.academicYear.toggleActiveStatus + \"/\" + academicYear._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Academic Year\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        bodyDataModal=\"academic year\"\n        bodyData={data}\n        tableKeys={academicYearTableKeys}\n        onEditClick={handleEditClick}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleActiveStatus}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Academic Year\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Academic Year\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"from\"\n              label=\"From Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"to\"\n              label=\"To Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const designationTableKeys = [\n  {\n    name: \"Designation\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { designationTableKeys } from \"../../data/tableKeys/designation\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nexport default function ManageDesignation() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDesigationHandel = () => {\n    setOpen(true);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.designation.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.designation.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.designation.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Designation\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={designationTableKeys}\n        bodyDataModal=\"designation\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Add form fab button =======*/}\n      <AddForm title=\"Add Desigation\" onAddClick={AddDesigationHandel} />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Desigation\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n      >\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Desigation\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const departmentTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { departmentTableKeys } from \"../../data/tableKeys/departmentData\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function ManageDepartment() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setData(data.result);\n\n      // console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.department.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.department.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name ? dataToEdit?.name : \"\",\n      orderSequence: dataToEdit?.orderSequence\n        ? dataToEdit?.orderSequence\n        : data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.department.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Department\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={departmentTableKeys}\n        bodyDataModal=\"department\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Department\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Department\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          {/* {dataToEdit && ( */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          {/* )} */}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n      {/* =========================== */}\n    </>\n  );\n}\n","export const overviewTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Male\",\n    key: \"male\",\n  },\n  {\n    name: \"Female\",\n    key: \"female\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","export const employeeTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","export const inactiveTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { overviewTableKeys } from \"../../data/tableKeys/overviewData\";\nimport { employeeTableKeys } from \"../../data/tableKeys/employeeData\";\nimport { inactiveTableKeys } from \"../../data/tableKeys/inactiveEmployee\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, del, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, Delete, Edit, ListAlt, Print, Search } from \"@mui/icons-material\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\n\nexport default function Employee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [value, setSelectValue] = useState(0);\n  const [activeData, setActiveData] = useState([]);\n  const [InactiveData, setInactiveData] = useState([]);\n  const [overviewData, setOverviewData] = useState([]);\n  const [allEmployee, setAllEmployee] = useState([]);\n  const [searchFilter, setSearchFilter] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const AddEmployeeHandle = (e) => {\n    navigate(\"/sch/human-resource/add-employee\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"employyeee\");\n      setAllEmployee(data.result);\n\n      const activeData = data.result\n        .filter((item) => item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      const inactiveData = data.result\n        .filter((item) => !item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      setActiveData(activeData);\n      setInactiveData(inactiveData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataDepartment = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const overviewData = data.result.map((department) => {\n        const maleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"male\" &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const femaleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"female\" &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const totalCount = maleCount + femaleCount;\n        return {\n          ...department,\n          male: maleCount,\n          female: femaleCount,\n          total: totalCount,\n        };\n      });\n\n      setOverviewData(overviewData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDataDepartment();\n  }, [allEmployee, selectedSetting._id]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.employee.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/human-resource/edit-employee/${data._id}`);\n  };\n\n  const handleSearch = (e) => {\n    const { value } = e.target;\n    setSearch(value.trim());\n    if (value.trim() !== \"\") {\n      activeData.length > 0 &&\n        setSearchFilter(\n          activeData.filter((ele) =>\n            ele.basicInfo.name\n              .toLowerCase()\n              .includes(value.toLowerCase().trim())\n          )\n        );\n    } else {\n      setSearchFilter([]);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Employee List\", \"Inactive Employee List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={\"\"}\n          tableKeys={overviewTableKeys}\n          bodyData={overviewData}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={employeeTableKeys}\n          bodyData={search ? searchFilter : activeData}\n          bodyDataModal=\"employee\"\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={inactiveTableKeys}\n          bodyDataModal=\"employee\"\n          bodyData={search ? searchFilter : InactiveData}\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n\n      {/* == Fab button component =========== */}\n      <AddForm title=\"Add Employee\" onAddClick={AddEmployeeHandle} />\n    </>\n  );\n}\n","export const offerLetterTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useRef } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ReactToPrint from \"react-to-print\";\n\nexport default function LetterViewModal({\n  open,\n  content,\n  onClose,\n  onPrintClick,\n  title,\n}) {\n  const contentRef = useRef(null);\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}>\n      <DialogTitle\n        sx={{ m: 0, p: 2, fontWeight: 600 }}\n        id=\"customized-dialog-title\">\n        {title}\n      </DialogTitle>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: \"absolute\",\n          right: 8,\n          top: 8,\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent>\n        <Typography gutterBottom>\n          <div\n            class=\"printContainer\"\n            ref={contentRef}\n            dangerouslySetInnerHTML={{ __html: content }}></div>\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <ReactToPrint\n          trigger={() => (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \":hover\": { background: \"#1b3779\" },\n              }}\n              onClick={onPrintClick}\n              startIcon={<PrintIcon />}>\n              Print\n            </Button>\n          )}\n          content={() => contentRef.current}\n        />\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { offerLetterTableKeys } from \"../../data/tableKeys/offerLetterData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function OfferLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.offerLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.offerLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.offerLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      offerLetter:\n        dataToEdit?.offerLetter ||\n        ` <strong>Congratulations! You've Been Selected for the Role of [Job Title]</strong>\n          <p>[Company Name]</p>\n          <p>[Address eg. Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103]</p>\n          <p>[City, State, ZIP Code]</p>\n          <p>Date: [DD, MM, YY]</p>\n          <strong>Dear [Candidate's Full Name],</strong>\n          <p>We are thrilled to offer you the position of [Job Title] at [Company Name]. After careful consideration, we believe your skills, experience, and vision make you the perfect fit for our team.</p>\n          <strong>Position Details:</strong>\n            <p><strong>- Job Title:</strong> [Job Title]</p>\n            <p><strong>- Department:</strong> [Department]</p>\n            <p><strong>- Supervisor:</strong> [Supervisor/Manager Name]</p>\n            <p><strong>- Start Date:</strong> [Start Date]</p>\n            <p><strong>- Compensation:</strong> [Salary or Compensation Details]</p>\n        <strong>Work Hours:</strong>\n        <p>[Regular work hours, any flexible schedule options, etc.]</p>\n        <p>We believe that [Company Name] is a place where you can grow and thrive. Your role as [Job Title] will be pivotal in driving our company's success and we look forward to the innovative contributions you will bring to our team.</p>\n        <p>Please indicate your acceptance of this offer by signing and returning a copy of this letter by <strong>[Acceptance Deadline]</strong>. Should you have any questions or need further clarification, feel free to reach out to <strong>[HR Contact Name]</strong> at <strong>[HR Contact Email]</strong> or <strong>[HR Contact Phone Number]</strong>.</p>\n        <p>We eagerly await your positive response and look forward to welcoming you to the [Company Name] family.</p>\n        <p>Warm Regards,</p>\n        <p>[HR, Manager Name]</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p style=\"text-align:\"center;\">&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.offerLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.offerLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Offer Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\"Offer letter list\", \"Add offer letter\", \"Edit offer letter\"]\n            : [\"Offer letter list\", \"Add offer Letter\"]\n        }\n      />\n\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={offerLetterTableKeys}\n          bodyDataModal=\"offer letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Offer Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                value={entryFormik.values.offerLetter}\n                required\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.offerLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const relievingLetterDataTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { relievingLetterDataTableKeys } from \"../../data/tableKeys/relievingLetterData\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { Button, Grid } from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function RelievingLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n  const componentRef = useRef();\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.relievingLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.relievingLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.relievingLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      relievingLetter:\n        dataToEdit?.relievingLetter ||\n        `<strong>Relieving Letter</strong>\n        <p>[Company Name]</p>\n        <p>Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n        <p>Date: DD, MM, YY\t</p>\n        <p>Dear [Employee's Full Name],</p>\n        <p>We hereby acknowledge receipt of your resignation letter dated <strong>[Resignation Date]</strong>, in which you requested to be relieved from your position as <strong>[Employee's Designation]</strong> at <strong>[Company Name]</strong>. We are pleased to provide you with your relieving letter.</p>\n        <p>This is to inform you that you <strong>[Employee ID]</strong> will be relieved after careful consideration and necessary formalities.</p>\n        <p>You have successfully completed your tenure at <strong>[Company Name]</strong> as <strong>[Job Title]</strong> from <strong>[Joining Date]</strong> to <strong>[Last Working Date]</strong>. We appreciate your dedicated service and commitment during your time with us.</p>\n        <p>Sincerely,</p>\n        <p>HR, Manager</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.relievingLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.relievingLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Relieving letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Relieving letter list\",\n                \"Add relieving letter\",\n                \"Edit relieving letter\",\n              ]\n            : [\"Relieving letter list\", \"Add relieving letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={relievingLetterDataTableKeys}\n          bodyDataModal=\"relieving letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Relieving  Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              gap={1}\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","export const offBoardingDataTableKeys = [\n  {\n    name: \"Employee name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joininng Date\",\n    key: \"date\",\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\n\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { offBoardingDataTableKeys } from \"../../data/tableKeys/offBoardingData\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\nexport default function OffBoarding() {\n  const [value, setSelectValue] = useState(0);\n  const [formFields, setFormFields] = useState([{ name: \"\", file: null }]);\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      user: \"\",\n      name: \"\",\n      bloodGroup: \"\",\n      dob: dayjs(new Date()),\n      joiningDate: dayjs(new Date()),\n      resignDate: dayjs(new Date()),\n      relivingDate: dayjs(new Date()),\n      gender: \"\",\n      contactNumber: \"\",\n      status: \"\",\n      feedback: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  const handleAddRow = () => {\n    setFormFields([...formFields, { name: \"\", file: \"\" }]);\n  };\n  const handleRemove = (index) => {\n    const list = [...formFields];\n    list.splice(index, 1);\n    setFormFields(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Off-Boarding letter list\", \"Add Off-Boarding\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\"]}\n          tableKeys={offBoardingDataTableKeys}\n          bodyDataModal=\"Off-Boarding letter\"\n          bodyData={data}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"Select User Type\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"user\"\n                formik={entryFormik}\n                label=\"Select User\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Basic Information\n              </Typography>\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"gender\"\n                formik={entryFormik}\n                label=\"Select Gender\"\n                options={Gender_Options}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"bloodGroup\"\n                formik={entryFormik}\n                label=\"Select Blood Group\"\n                options={BloodGroup_Options}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"dob\"\n                formik={entryFormik}\n                label=\"DOB\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Working Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"joiningDate\"\n                formik={entryFormik}\n                label=\"Joining Date\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"resignDate\"\n                formik={entryFormik}\n                label=\"Resign Date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"relivingDate\"\n                formik={entryFormik}\n                label=\"RelivingD ate\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Profile Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Select Status\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={9} item>\n              <FormInput\n                required={true}\n                name=\"feedback\"\n                formik={entryFormik}\n                label=\"Feedback\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Additional Document Information\n              </Typography>\n            </Grid>\n            {formFields.map((field, index) => (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormInput\n                    required={true}\n                    name=\"name\"\n                    formik={entryFormik}\n                    label=\"Name\"\n                  />\n                </Grid>\n\n                <Grid xs={12} md={12} lg={4} item>\n                  <FormInput\n                    required={true}\n                    name=\"file\"\n                    formik={entryFormik}\n                    label=\"Select Image\"\n                    type=\"file\"\n                  />\n                </Grid>\n                <Grid item xs={1} md={1} lg={3} mt={1} alignSelf=\"center\">\n                  <Button onClick={() => handleRemove(index)}>\n                    <ClearIcon color=\"error\" />\n                  </Button>\n                </Grid>\n              </>\n            ))}\n            <Grid xs={12} md={12} lg={12} item>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={handleAddRow}\n                startIcon={<AddIcon />}\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Box display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n          <Button size=\"small\" color=\"error\" variant=\"contained\">\n            Cancel\n          </Button>\n          <Button size=\"small\" variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","export const experienceTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { experienceTableKeys } from \"../../data/tableKeys/experienceLetterData\";\nimport { Button, Grid } from \"@mui/material\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useReactToPrint } from \"react-to-print\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\n\nexport default function ExperienceLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.experienceLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.experienceLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.experienceLetter.create, payload);\n        getData();\n      }\n\n      setSelectValue(0);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      experienceLetter:\n        dataToEdit?.experienceLetter ||\n        ` <strong>Experience Letter</strong>\n          <p>Webpruce Company</p>\n          <p>Date: 12, January 2024</p>\n          <p>Place: Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n          <p>To Whom It May Concern,</p>\n          <p>This is to certify that <strong>[Employee's Full Name]</strong> was employed with us as a <strong>[Job Title]</strong> in the <strong>[Department]</strong> department from <strong>[Start Date]</strong> to <strong>[End Date]</strong>.</p>\n          <p>During their tenure with us, [Employee's Full Name] was responsible for:</p>\n          <p>- Key Responsibility 1</p>\n          <p>- Key Responsibility 2</p>\n          <p>We found [Employee's Full Name] to be a dedicated and reliable employee who consistently showed a high level of professionalism. They are leaving us due to [reason for leaving, if appropriate], and we wish them all the best in their future endeavors.</p>\n          <p>We highly recommend [Employee's Full Name] for any future employment opportunities and are confident that they will be an asset to any organization they join.</p>\n          <p>If you require any further information, please do not hesitate to contact us.</p>\n          <p>Warm Regards,</p>\n          <p><strong>[Your Name]</strong></p>\n          <p><strong>[Your Job Title]</strong></p>\n          <p><strong>[Contact Information]</strong></p>\n          <br/>\n          <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n        `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.experienceLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.experienceLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Experience Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Experience letter list\",\n                \"Add experience letter\",\n                \"Edit experience letter\",\n              ]\n            : [\"Experience letter list\", \"Add experience Letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={experienceTableKeys}\n          bodyDataModal=\"experience  letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n\n        <LetterViewModal\n          title={\"Experience Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              gap={1}\n              item\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const teacherActivityTableKeys = [\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Topic\",\n    key: \"topic\",\n  },\n];\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { teacherActivityTableKeys } from \"../../data/tableKeys/teacherActivityData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nexport default function TeacherActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingFind, setLoadingFind] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  let currentUserStringified = window.localStorage.getItem(\"current_ecs_user\");\n\n  let currentUser = JSON.parse(currentUserStringified);\n\n  const getData = async (values) => {\n    try {\n      setLoadingFind(true);\n      const { data } = await get(PRIVATE_URLS.teacherActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            teacher: values.teacher,\n            class: values.class,\n            section: values.section,\n            subject: values.subject,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n      setLoadingFind(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingFind(false);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const emp = data.result\n        ?.filter((e) =>\n          e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n        )\n        .map((d) => ({ label: d.basicInfo.name, value: d._id }));\n\n      const empOption = [{ label: \"Me\", value: currentUser._id }, ...emp];\n      setEmployees(empOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    if (newValue !== 1) {\n      setDataToEdit(null);\n    }\n    setSelectValue(newValue);\n  };\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      // formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSections = async (classId) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: classId,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      // formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n      // formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.teacherActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.teacherActivity.create,\n          payload\n        );\n      }\n      formik.handleSubmit();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      section: dataToEdit?.section._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      topic: dataToEdit?.topic || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      teacher: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections(entryFormik.values.class);\n      getSubject();\n      formik.resetForm();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections(formik.values.class);\n      getSubject();\n      entryFormik.resetForm();\n    }\n  }, [formik.values.class]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.teacherActivity.delete + \"/\" + id);\n\n      getData();\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Teacher Activity\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"All Activity\", dataToEdit ? \"Edit Activity\" : \"Add Activity\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"teacher\"\n                  formik={formik}\n                  label=\"Select Teacher\"\n                  options={employees}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={formik}\n                  label=\"Subject\"\n                  options={subjects}\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                item\n                display={\"flex\"}\n                justifyContent={\"flex-end\"}>\n                <LoadingButton\n                  loading={loadingFind}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  Find\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={teacherActivityTableKeys}\n          bodyDataModal=\"teacher activity\"\n          bodyData={data}\n          onDeleteClick={handleDelete}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select subject\"\n                  options={subjects}\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  required={true}\n                  name=\"topic\"\n                  formik={entryFormik}\n                  label=\"Topic covered\"\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                mt={1}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}\n                item>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleClose}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const rolePermissionTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nexport const ROLE_PERMISSIONS = [\n  {\n    module: \"Institute Selector\",\n    subModule: [\n      {\n        module: \"Institute Selector\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Dashboard\",\n    subModule: [\n      {\n        module: \"Dashboard\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Institute\",\n    subModule: [\n      {\n        module: \"Institute\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Administrator\",\n    subModule: [\n      {\n        module: \"Academic Year\",\n        permissions: [],\n      },\n      {\n        module: \"Roles and Permissions\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Human Resources\",\n    subModule: [\n      {\n        module: \"Designation\",\n        permissions: [],\n      },\n      {\n        module: \"Department\",\n        permissions: [],\n      },\n      {\n        module: \"Employee\",\n        permissions: [],\n      },\n      {\n        module: \"Offer Letter\",\n        permissions: [],\n      },\n      {\n        module: \"Relieving Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Off Boarding\",\n        permissions: [],\n      },\n\n      {\n        module: \"Experience Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Teacher Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Pre-Admission\",\n    subModule: [\n      {\n        module: \"Enquiries\",\n        permissions: [],\n      },\n      {\n        module: \"Exams\",\n        permissions: [],\n      },\n      {\n        module: \"Exam Schedules\",\n        permissions: [],\n      },\n      {\n        module: \"Result\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Academic\",\n    subModule: [\n      {\n        module: \"Class\",\n        permissions: [],\n      },\n      {\n        module: \"Section\",\n        permissions: [],\n      },\n      {\n        module: \"Subject\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Attendance\",\n    subModule: [\n      {\n        module: \"Student Attendance\",\n        permissions: [],\n      },\n      {\n        module: \"Employee Attendance\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Class Routine\",\n    subModule: [\n      {\n        module: \"Class Routine\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Student\",\n    subModule: [\n      {\n        module: \"Overview\",\n        permissions: [],\n      },\n      {\n        module: \"Admit Student\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reshuffle\",\n        permissions: [],\n      },\n\n      {\n        module: \"Promotion\",\n        permissions: [],\n      },\n      {\n        module: \"Bulk Admission\",\n        permissions: [],\n      },\n      {\n        module: \"Credential\",\n        permissions: [],\n      },\n      {\n        module: \"Quick Admit\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Assignment\",\n    subModule: [\n      {\n        module: \"Assignment\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Communication\",\n    subModule: [\n      {\n        module: \"Compose\",\n        permissions: [],\n      },\n      {\n        module: \"Report\",\n        permissions: [],\n      },\n      {\n        module: \"Credential\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Announcement\",\n    subModule: [\n      {\n        module: \"Notice\",\n        permissions: [],\n      },\n      {\n        module: \"News\",\n        permissions: [],\n      },\n\n      {\n        module: \"Holiday\",\n        permissions: [],\n      },\n\n      {\n        module: \"Awards And Achievement\",\n        permissions: [],\n      },\n      {\n        module: \"Splash News\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Gallery\",\n    subModule: [\n      {\n        module: \"Gallery\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Notification\",\n    subModule: [\n      {\n        module: \"Notification\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Event\",\n    subModule: [\n      {\n        module: \"Event\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Exam\",\n    subModule: [\n      {\n        module: \"Exam Grade\",\n        permissions: [],\n      },\n      {\n        module: \"Exam Term\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Schedule\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Hall Ticket\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Exam Mark\",\n    subModule: [\n      {\n        module: \"Exam Attendance\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Mark\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Result\",\n        permissions: [],\n      },\n\n      {\n        module: \"Marks Card\",\n        permissions: [],\n      },\n\n      {\n        module: \"Consolidated Marks Sheet\",\n        permissions: [],\n      },\n\n      {\n        module: \"Subject Wise Report\",\n        permissions: [],\n      },\n\n      {\n        module: \"Division Wise Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"LMS\",\n    subModule: [\n      {\n        module: \"Storage\",\n        permissions: [],\n      },\n      {\n        module: \"Courses\",\n        permissions: [],\n      },\n\n      {\n        module: \"Course Content\",\n        permissions: [],\n      },\n\n      {\n        module: \"Live\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Library\",\n    subModule: [\n      {\n        module: \"Books\",\n        permissions: [],\n      },\n      {\n        module: \"Periodical\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Library Member\",\n        permissions: [],\n      },\n\n      {\n        module: \"Employee Library Member\",\n        permissions: [],\n      },\n      {\n        module: \"Issue and Returns\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Leave Management\",\n    subModule: [\n      {\n        module: \"Leave Type\",\n        permissions: [],\n      },\n      {\n        module: \"Employee Leave\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Leave\",\n        permissions: [],\n      },\n\n      {\n        module: \"Leave Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Inventory\",\n    subModule: [\n      {\n        module: \"Item\",\n        permissions: [],\n      },\n      {\n        module: \"Vendor\",\n        permissions: [],\n      },\n\n      {\n        module: \"In/Out Transaction\",\n        permissions: [],\n      },\n\n      {\n        module: \"Stock ist\",\n        permissions: [],\n      },\n\n      {\n        module: \"Issue\",\n        permissions: [],\n      },\n\n      {\n        module: \"Sell\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Certificate\",\n    subModule: [\n      {\n        module: \"Study Certificate\",\n        permissions: [],\n      },\n      {\n        module: \"Transfer Certificate\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Fees\",\n    subModule: [\n      {\n        module: \"Receipt Book\",\n        permissions: [],\n      },\n      {\n        module: \"Fee Map Category\",\n        permissions: [],\n      },\n\n      {\n        module: \"Collect Fees\",\n        permissions: [],\n      },\n\n      {\n        module: \"Balance Fee\",\n        permissions: [],\n      },\n\n      {\n        module: \"Fee Overview\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reconciliation\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Hostel\",\n    subModule: [\n      {\n        module: \"Manage Hostel\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Room Type\",\n        permissions: [],\n      },\n\n      {\n        module: \"Manage Room Bed\",\n        permissions: [],\n      },\n\n      {\n        module: \"Hostel Member\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Transport\",\n    subModule: [\n      {\n        module: \"Vehicle\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Route And Trips\",\n        permissions: [],\n      },\n\n      {\n        module: \"Routes\",\n        permissions: [],\n      },\n\n      {\n        module: \"Transport Member\",\n        permissions: [],\n      },\n\n      {\n        module: \"Vehicle Log\",\n        permissions: [],\n      },\n\n      {\n        module: \"Vehicle Maintenance\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Payroll\",\n    subModule: [\n      {\n        module: \"Salary Grade\",\n        permissions: [],\n      },\n      {\n        module: \"Make Payment\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Report\",\n    subModule: [\n      {\n        module: \"Library Report\",\n        permissions: [],\n      },\n      {\n        module: \"Student Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Studnet Yearly Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Emplyee Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Employee Yearly Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Report\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Activity Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Visitor Info\",\n    subModule: [\n      {\n        module: \"Visitor Info\",\n        permissions: [],\n      },\n      {\n        module: \"Student Checkout\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Help Desk\",\n    subModule: [\n      {\n        module: \"Help Desk\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Guardian Feedback\",\n    subModule: [\n      {\n        module: \"Guardian Feedback\",\n        permissions: [],\n      },\n    ],\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { rolePermissionTableKeys } from \"../../data/tableKeys/rolePermissionData\";\nimport { ROLE_PERMISSIONS } from \"../../data/roleData\";\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nfunction toggleItemInArray(array, item) {\n  const index = array.indexOf(item);\n\n  if (index === -1) {\n    // Item not present, add it to the array\n    array.push(item);\n  } else {\n    // Item present, remove it from the array\n    array.splice(index, 1);\n  }\n\n  return array;\n}\n\nfunction addIfNotPresent(arr, str) {\n  if (!arr.includes(str)) {\n    arr.push(str);\n  }\n  return arr;\n}\n\nfunction removeFromArray(arr, str) {\n  const index = arr.indexOf(str);\n  if (index !== -1) {\n    arr.splice(index, 1);\n  }\n  return arr;\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst CRUD_OPERATIONS = [\"view\", \"add\", \"update\", \"delete\"];\n\nexport default function RolePermission() {\n  const [value, setValue] = React.useState(0);\n  const [roles, setRoles] = useState([]);\n  const [roleToEdit, setRoleToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [roleKeys, setRoleKeys] = useState([]);\n  const [allPermissionUpdate, setAllPermissionUpdate] = useState([\n    \"view\",\n    \"add\",\n    \"update\",\n    \"delete\",\n  ]);\n\n  const getRoleKeys = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.getRoleKeys);\n\n      if (roleToEdit) {\n        let allKeys = [...roleToEdit.permissions];\n        for (let key of data.result) {\n          if (!allKeys.find((k) => k.module == key.module)) {\n            allKeys.push(key);\n          }\n        }\n        setRoleKeys(allKeys);\n      } else {\n        setRoleKeys(data.result);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getRoleKeys();\n    if (value == 0) {\n      setRoleToEdit(null);\n    }\n  }, [value]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleRoleEditClick = (data) => {\n    setRoleToEdit(data);\n    setValue(1);\n  };\n  const handleCancelClick = () => {\n    setValue(0);\n  };\n  const openRoleAddUpdateModal = () => {\n    setValue(0);\n    setOpen(true);\n  };\n\n  const handleModalClose = () => setOpen(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleAddOrUpdate = async (values) => {\n    let payload = {\n      ...values,\n      permissions: roleKeys,\n    };\n\n    if (!roleToEdit) {\n      payload[\"permissions\"] = roleKeys.map((r) => ({ ...r, permissions: [] }));\n    }\n\n    try {\n      if (roleToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.role.update + \"/\" + roleToEdit._id,\n          payload\n        );\n        setValue(0);\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.role.create, payload);\n        setValue(0);\n        getData();\n      }\n\n      formik.resetForm();\n      setOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formikUpdate = useFormik({\n    initialValues: {\n      name: roleToEdit?.name || \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePermission = (module, permission) => {\n    setRoleKeys(\n      roleKeys.map((k) =>\n        k.module === module\n          ? {\n              ...k,\n              permissions: toggleItemInArray(\n                k.permissions,\n                permission.toLowerCase()\n              ),\n            }\n          : k\n      )\n    );\n  };\n\n  const handleUpdateAll = (permission) => {\n    setRoleKeys(\n      roleKeys.map((r) => ({\n        ...r,\n        permissions: allPermissionUpdate.includes(permission)\n          ? removeFromArray(r.permissions, permission)\n          : addIfNotPresent(r.permissions, permission),\n      }))\n    );\n  };\n\n  useEffect(() => {\n    let allPermissions = [];\n\n    for (let co of CRUD_OPERATIONS) {\n      if (\n        roleKeys.every((module) =>\n          module.permissions.includes(co.toLowerCase())\n        )\n      ) {\n        allPermissions.push(co.toLowerCase());\n      } else {\n        allPermissions.filter((p) => p !== co);\n      }\n    }\n\n    setAllPermissionUpdate(allPermissions);\n  }, [roleKeys]);\n\n  const handleDeleteRole = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.role.delete + \"/\" + id);\n      setRoles(roles.filter((r) => r._id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Role Permission\" />\n\n      <TabList\n        onChange={handleChange}\n        value={value}\n        labels={roleToEdit && value === 1 ? [\"List\", \"Edit\"] : [\"List\"]}\n      />\n      <TabPanel value={value} index={0}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"role permission\"\n          bodyData={roles}\n          onEditClick={handleRoleEditClick}\n          tableKeys={rolePermissionTableKeys}\n          onDeleteClick={handleDeleteRole}\n        />\n        <AddForm title=\"Add Role\" onAddClick={openRoleAddUpdateModal} />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle=\"Create Role\"\n        onClose={handleModalClose}\n        submitButtonTitle=\"Create\">\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={formik}\n              name=\"name\"\n              label=\"Role Name\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {roleToEdit && value == 1 && (\n        <TabPanel value={value} index={1}>\n          <Grid container rowSpacing={1} columnSpacing={2}>\n            <Grid item xs={12} sm={12} md={12}>\n              <FormInput\n                required={true}\n                name=\"name\"\n                type=\"text\"\n                formik={formikUpdate}\n                label=\"Role Name\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <Typography\n                sx={{\n                  margin: \"10px 0px\",\n                  fontWeight: \"500\",\n                  fontSize: \"16px\",\n                  fontWeight: 700,\n                }}>\n                {\" \"}\n                Set permission for this role\n              </Typography>\n            </Grid>\n          </Grid>\n          <TableContainer component={Paper} sx={{ marginBottom: \"60px\" }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                      paddingLeft: \"15px\",\n                    }}>\n                    Module Name\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    View\n                    <Checkbox\n                      onChange={() => handleUpdateAll(\"view\")}\n                      name=\"view\"\n                      checked={allPermissionUpdate.includes(\"view\")}\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Add{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"add\")}\n                      onChange={() => handleUpdateAll(\"add\")}\n                      name=\"add\"\n                    />{\" \"}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Update{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"update\")}\n                      onChange={() => handleUpdateAll(\"update\")}\n                      name=\"update\"\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Delete{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"delete\")}\n                      onChange={() => handleUpdateAll(\"delete\")}\n                      name=\"delete\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ROLE_PERMISSIONS.map((roleModule, i) => {\n                  const { module, subModule } = roleModule;\n\n                  return (\n                    <>\n                      <TableRow key={i}>\n                        <TableCell\n                          colSpan={5}\n                          sx={{\n                            backgroundColor: (theme) =>\n                              theme.palette.mode === \"dark\"\n                                ? \"rgba(32,33,32,1)\"\n                                : theme.palette.grey[100],\n                          }}>\n                          <Typography fontWeight={\"bold\"} paddingLeft={\"10px\"}>\n                            {module}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                      {subModule.map((m, i) => (\n                        <TableRow k={m.module + i.toString()}>\n                          <TableCell align=\"center\">{m.module}</TableCell>\n\n                          {CRUD_OPERATIONS.map((o) => (\n                            <TableCell align=\"center\" key={o}>\n                              <Checkbox\n                                onChange={() =>\n                                  handleChangePermission(m.module, o)\n                                }\n                                checked={\n                                  roleKeys\n                                    .find((role) => role.module === m.module)\n                                    ?.permissions?.includes(o) || false\n                                }\n                              />\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      ))}\n                    </>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <StyledBox\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? \"rgba(32,33,32,1)\"\n                      : theme.palette.grey[100],\n                }}>\n                <Stack spacing={2} direction=\"row\">\n                  <Button\n                    onClick={handleCancelClick}\n                    variant=\"contained\"\n                    color=\"error\"\n                    size=\"small\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={formikUpdate.handleSubmit}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Update\n                  </Button>\n                </Stack>\n              </StyledBox>\n            </Grid>\n          </Grid>\n        </TabPanel>\n      )}\n    </>\n  );\n}\n","export const userRoleTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"role\",\n  },\n];\n","import React, { useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { userRoleTableKeys } from \"../../data/tableKeys/userRoleData\";\n\nexport default function UserRole() {\n  const [data, setData] = useState([]);\n\n  return (\n    <>\n      <PageHeader title=\"User Role\" />\n      <CustomTable\n        actions={[\"edit\"]}\n        bodyDataModal=\"user role\"\n        bodyData={data}\n        tableKeys={userRoleTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Paper, Grid, Button } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nexport default function ResetPassword() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.userType,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        employeeId: values.employeeId,\n        password: values.password,\n      };\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.account.changePasswordForUser,\n        payload\n      );\n      resetForm();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      employeeId: \"\",\n      password: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.userType) {\n      getEmployees();\n    }\n  }, [entryFormik.values.userType, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"User Password Reset\" />\n      <Paper sx={{ padding: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"User Type\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"employeeId\"\n                formik={entryFormik}\n                label=\"Employees\"\n                options={employees}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                formik={entryFormik}\n                label=\"Password\"\n                name=\"password\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Change Password\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nexport const enquriesTableKeys = [\n  {\n    name: \"Student Name\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Submitted On\",\n    key: \"submittedOn\",\n    isDate: true,\n  },\n  // {\n  //   name: \"Approval Status\",\n  //   key: \"status\",\n  // },\n];\n","/** @format */\n\nimport React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ViewModel({ open, onClose, title, children }) {\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{ m: 0, p: 2, fontWeight: 600 }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { enquriesTableKeys } from \"../../data/tableKeys/enquiries\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  DialogContent,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  tableCellClasses,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport { Box, ButtonGroup, styled } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ViewModel from \"../../forms/ViewModel\";\n\nconst MuiBUtton = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"blue\",\n    color: \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nconst CustomActionComponent = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const updateStatus = async (status) => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.preadmissionEnqiry.update + \"/\" + data._id, {\n        status,\n      });\n      setLoading(false);\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      {/* <Stack direction=\"row\" spacing={2}>\n        {[\"Pending\", \"approved\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"rejected\")}\n            disableElevation\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        )}\n        {[\"Pending\", \"rejected\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"approved\")}\n            disableElevation\n            size=\"small\"\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        )}\n      </Stack> */}\n\n      <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\n        {[\"Approved\", \"Pending\"].includes(data.status) ? (\n          <LoadingButton\n            variant=\"contained\"\n            size=\"small\"\n            loading={loading == \"Rejected\"}\n            onClick={() => updateStatus(\"Rejected\")}\n            color=\"error\">\n            Reject\n          </LoadingButton>\n        ) : null}\n\n        {[\"Rejected\", \"Pending\"].includes(data.status) ? (\n          <LoadingButton\n            size=\"small\"\n            variant=\"contained\"\n            loading={loading == \"Approved\"}\n            onClick={() => updateStatus(\"Approved\")}\n            color=\"success\">\n            Approve\n          </LoadingButton>\n        ) : null}\n      </Stack>\n    </>\n  );\n};\n\nexport default function Enquiries() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [activeButton, setActiveButton] = useState(\"Pending\");\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    contents: \"\",\n    action: () => {},\n  });\n\n  const handleButtonClick = (status) => {\n    setActiveButton(status);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const getEnquiries = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionEnqiry.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"studentDetails.academicDetails.academicYear\": values.academicYear,\n            \"studentDetails.academicDetails.class\": values.class,\n            fromDate: values.fromDate,\n            toDate: values.toDate,\n          },\n        },\n      });\n      let tableData = data.result.map((d) => ({\n        ...d,\n        studentName: d.studentDetails?.basicDetails?.name,\n        submittedOn: d.createdAt,\n        class: d.studentDetails?.academicDetails?.class?.name,\n      }));\n      setData(tableData);\n      setFilteredData(tableData.filter((d) => d.status === activeButton));\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getEnquiries,\n  });\n\n  useEffect(() => {\n    if (!activeButton) {\n      return setFilteredData(data);\n    }\n    setFilteredData(data.filter((e) => e.status === activeButton));\n  }, [activeButton]);\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      contents: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.preadmissionEnqiry.delete + \"/\" + _id\n      );\n      getEnquiries();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Enquiries\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              loading={loading}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <MuiBUtton>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          {[\"Pending\", \"Approved\", \"Rejected\"].map((v, i) => (\n            <Button\n              key={i}\n              variant=\"outlined\"\n              onClick={() => {\n                handleButtonClick(v);\n              }}\n              style={{\n                backgroundColor: activeButton === v ? \"#1b3779\" : \"\",\n                color: activeButton === v ? \"white\" : \"black\",\n                textTransform: \"capitalize\",\n              }}>\n              {v}:{data.filter((item) => item.status === v).length}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </MuiBUtton>\n\n      <CustomTable\n        actions={[\"custom\", \"delete\", \"view\"]}\n        tableKeys={enquriesTableKeys}\n        bodyDataModal=\"enquiries\"\n        bodyData={filteredData}\n        onUpdate={entryFormik.handleSubmit}\n        CustomAction={CustomActionComponent}\n        onViewClick={handleClickOpenView}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ==== view enquery ===== */}\n      <ViewModel\n        title=\"Enquiry Details\"\n        open={modalData?.open}\n        tableData={modalData?.contents}\n        onClose={onCloseViewModel}>\n        {/* ======== Desktop view table ============ */}\n        <DialogContent\n          dividers\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"block\",\n              md: \"block\",\n              lg: \"block\",\n            },\n          }}>\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Academic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents.class || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Academic Year\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {`${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.from} - ${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.to}` ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Basic Information\n          </Typography>\n\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Student Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentName || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Date Of Birth\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {dayjs(\n                    modalData?.contents?.studentDetails?.basicDetails?.dob ||\n                      \"NA\"\n                  ).format(\"DD-MM-YYYY\")}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Gender\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.gender ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Blood Group\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.bloodGroup?.toUpperCase() ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Religion\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.caste ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Caste Income Certificate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.casteIncomeCertificateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Mother Tongue\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.motherTongue || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Birth Place\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.birthPlace || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Aadhar Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.aadharNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Contact Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianContactNumber || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Alternate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.alternateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Relation With Guardian\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.relationWithGuardian || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  National Id\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.nationalId || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Present Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.presentAddress || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Permanent Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.permanentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Previous School Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow width={200}>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous School Name\n                </StyledTableCell>\n                <StyledTableCell>\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.schoolName || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  TC Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.tcNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Father Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Mother Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Other Information:\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Health Condition\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.healthCondition || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Email\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails?.email ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Hostel Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.hostelRequired || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Transport Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.transportRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n\n        {/* ======== Mobile view table ============ */}\n        <DialogContent\n          dividers\n          sx={{\n            display: {\n              xs: \"block\",\n              sm: \"none\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}>\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Academic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Academic Year\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {`${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.from} - ${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.to}` ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Basic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Student Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Date Of Birth\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {dayjs(\n                    modalData?.contents?.studentDetails?.basicDetails?.dob ||\n                      \"NA\"\n                  ).format(\"DD-MM-YYYY\")}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Gender\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.gender ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Blood Group\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.bloodGroup?.toUpperCase() ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Religion\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.caste ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Caste Income Certificate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.casteIncomeCertificateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Mother Tongue\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.motherTongue || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Birth Place\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.birthPlace || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Aadhar Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.aadharNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Contact Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianContactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Alternate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.alternateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Relation With Guardian\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.relationWithGuardian || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  National Id\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.nationalId || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Present Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.presentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Permanent Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.permanentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Previous School Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow width={200}>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous School Name\n                </StyledTableCell>\n                <StyledTableCell>\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.schoolName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  TC Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.tcNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Father Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Mother Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Other Information:\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Health Condition\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.healthCondition || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Email\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails?.email ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Hostel Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.hostelRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Transport Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.transportRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nexport const examsTableKeys = [\n  {\n    name: \"Exam Name\",\n    key: \"examName\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  // {\n  //   name: \"Question\",\n  //   key: \"question\",\n  // },\n];\n","/** @format */\n\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n}));\n\nconst Question = styled(Typography)(() => ({\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n}));\n\nconst Option = styled(Typography)(() => ({\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n}));\n\nconst InputLabels = styled(InputLabel)(() => ({\n  fontSize: \"12px\",\n  fontWeight: 580,\n  color: \"#616161\",\n  paddingLeft: \"10px\",\n}));\n\nconst RadioButtons = styled(Radio)(() => ({\n  marginTop: \"-10px\",\n}));\n\nexport default function QuizQuestion({\n  quiz = {},\n  questionIndex,\n  quizData,\n  setQuizData,\n}) {\n  const handleQuestionChange = (e, i) => {\n    setQuizData(\n      quizData.map((q, index) =>\n        index === i ? { ...q, question: e.target.value } : q\n      )\n    );\n  };\n\n  const handleRemoveQuestion = (questionIndex) => {\n    setQuizData((prevQuizData) =>\n      prevQuizData.filter((_, index) => index !== questionIndex)\n    );\n  };\n\n  const handleSetCorrectOption = (o, questionIndex) => {\n    setQuizData(\n      quizData.map((q, i) =>\n        i === questionIndex ? { ...q, correctOption: o } : q\n      )\n    );\n  };\n\n  const handleOptionChange = (e, questionIndex, optionIndex) => {\n    let questionToUpdate = quizData.filter((q, i) => i === questionIndex)[0];\n    let options = questionToUpdate.options;\n    let newOptions = options.map((o, i) =>\n      i === optionIndex ? e.target.value : o\n    );\n    setQuizData(\n      quizData.map((q, i) =>\n        i === questionIndex ? { ...q, options: newOptions } : q\n      )\n    );\n  };\n  return (\n    <Wrapper>\n      <InputLabels\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n        {questionIndex + 1}.{\" \"}\n        {quiz.question ? \"Update Your Question!\" : \"Write your question\"}\n      </InputLabels>\n\n      <TextField\n        fullWidth\n        size=\"small\"\n        name=\"question\"\n        maxRows={3}\n        multiline\n        value={quiz.question}\n        placeholder=\"Type here...\"\n        onChange={(e) => handleQuestionChange(e, questionIndex)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              {questionIndex > 0 ? (\n                <IconButton\n                  color=\"error\"\n                  size=\"small\"\n                  onClick={() => handleRemoveQuestion(questionIndex)}>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </IconButton>\n              ) : null}\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Grid\n        sx={{\n          marginBottom: \"10px\",\n          backgroundColor: (theme) => theme.palette.grey[100],\n          borderRadius: \"5px\",\n          padding: \"20px\",\n          border: \"1px solid lightgrey\",\n          marginTop: \"10px\",\n        }}\n        container\n        rowGap={2}>\n        {quiz.options.map((o, i) => (\n          <Grid key={i} item xs={12} md={6} sx={{ padding: \"0 10px\" }}>\n            <Box\n              sx={{\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                display: \"flex\",\n              }}>\n              <RadioButtons\n                size=\"small\"\n                {...label}\n                color=\"default\"\n                checked={quiz.correctOption && quiz.correctOption === o}\n                onChange={(e) => handleSetCorrectOption(o, questionIndex)}\n                value={o}\n                type=\"radio\"\n              />\n              <InputLabels>Option {i + 1}</InputLabels>\n            </Box>\n            <TextField\n              multiline\n              maxRows={3}\n              fullWidth\n              size=\"small\"\n              name={`option${i + 1}`}\n              value={o}\n              onChange={(e) => handleOptionChange(e, questionIndex, i)}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useMediaQuery,\n  Button,\n  IconButton,\n  InputAdornment,\n  FormControlLabel,\n  Checkbox,\n  Radio,\n  RadioGroup,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useTheme } from \"@mui/material\";\nimport QuizQuestion from \"./QuizQuestion\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { toast } from \"react-toastify\";\n\nexport default function AddOrUpdateExamModal({\n  open = false,\n  onClose = () => {},\n  dataToUpdate = null,\n}) {\n  const theme = useTheme();\n  const { selectedSetting } = useContext(SettingContext);\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYears, setAcademicYears] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [markForm, setMarkForm] = useState({});\n  const [submiload, setSubmitload] = useState(false);\n  const [quizData, setQuizData] = useState([\n    {\n      question: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: \"\",\n    },\n  ]);\n  const [additionalInstructions, setAdditionalInstructions] = useState([\"\"]);\n  const [negativeMarking, setNegativeMarking] = useState(false);\n\n  const getData = async () => {\n    try {\n      const [academicYearData, classData] = await Promise.all([\n        get(PRIVATE_URLS.academicYear.list),\n        get(PRIVATE_URLS.class.list, {\n          params: { schoolId: selectedSetting._id },\n        }),\n      ]);\n\n      setAcademicYears(academicYearData.data?.result);\n      setClasses(classData.data?.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleOnChangeForm = (e) => {\n    const { name, value } = e.target;\n    setAddForm({\n      ...addForm,\n      [name]: value,\n    });\n  };\n\n  const handleAddQuizs = () => {\n    setQuizData([\n      ...quizData,\n      {\n        question: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctOption: \"\",\n      },\n    ]);\n  };\n\n  const handleAddInstruction = () => {\n    setAdditionalInstructions([...additionalInstructions, \"\"]);\n  };\n\n  const handleAdditionalInstructionChange = (e, index) => {\n    const updatedInstructions = [...additionalInstructions];\n    updatedInstructions[index] = e.target.value;\n    setAdditionalInstructions(updatedInstructions);\n  };\n\n  const handleDeleteInstruction = (index) => {\n    const updatedInstructions = [...additionalInstructions];\n    updatedInstructions.splice(index, 1);\n    setAdditionalInstructions(updatedInstructions);\n  };\n\n  const hanleMarkChange = (e) => {\n    const { name, value } = e.target;\n    setMarkForm((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleCheckboxChange = (event) => {\n    setNegativeMarking(event.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const quiz = quizData.map((q, index) => {\n        return {\n          question: q.question,\n          options: [\n            { value: q.options[0] },\n            { value: q.options[1] },\n            { value: q.options[2] },\n            { value: q.options[3] },\n          ],\n\n          correctOption: q.correctOption,\n        };\n      });\n      if (quiz.filter((q) => !q.question || !q.options).length)\n        return toast.error(\"Question cannot be empty\");\n      if (quiz.some((q) => q.options.some((option) => option.name === \"\")))\n        return toast.error(\"Option cannot be empty\");\n\n      if (quiz.filter((q) => !q.correctOption).length)\n        return toast.error(\"Please select a correct option\");\n      setSubmitload(true);\n      let playload = {\n        schoolId: selectedSetting._id,\n        academicYear: addForm.academicYear,\n        classId: addForm.schoolClass,\n        examName: addForm.examName,\n        passingPercentage: markForm.passingMark,\n        quiz: quiz,\n        negativeMarking: negativeMarking,\n        negativeMarkingPerQuestion: markForm.negativeMarking,\n        marksPerQuestion: markForm.mark,\n        additionalInstructions: additionalInstructions.map((add) => ({\n          point: add,\n        })),\n      };\n\n      const { data } = await post(\n        PRIVATE_URLS.preadmissionExam.create,\n        playload\n      );\n      handleClose();\n      // handleEditClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setSubmitload(false);\n  };\n\n  const handleClose = () => {\n    // setEditId(null);\n    setQuizData([\n      {\n        question: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctOption: \"\",\n      },\n    ]);\n    setAddForm({});\n    setMarkForm({});\n    setNegativeMarking(false);\n    setAdditionalInstructions([]);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullScreen={fullScreen}\n      maxWidth=\"md\"\n      fullWidth\n      aria-labelledby=\"responsive-dialog-title\">\n      <Box component=\"form\" sx={{ padding: 2 }} onSubmit={handleSubmit}>\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              fontWeight=\"bold\">\n              {dataToUpdate ? \"Update Exam\" : \"Add Exam\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <FormControl size=\"small\" fullWidth required>\n              <InputLabel>Academic Year</InputLabel>\n              <Select\n                labelId=\"demo-simpless-select-filled-label\"\n                id=\"demo-simple-select-filled-l\"\n                varient=\"outlined\"\n                label=\"academic year\"\n                name=\"academicYear\"\n                value={addForm.academicYear || \"\"}\n                onChange={handleOnChangeForm}>\n                {academicYears &&\n                  academicYears.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {row.from} - {row.to}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <FormControl size=\"small\" fullWidth required>\n              <InputLabel>Class</InputLabel>\n              <Select\n                variant=\"outlined\"\n                label=\"class\"\n                labelId=\"demo-simple-select-filled-label\"\n                id=\"demo-simple-select-filled\"\n                name=\"schoolClass\"\n                value={addForm.schoolClass || \"\"}\n                onChange={handleOnChangeForm}>\n                {classes &&\n                  classes.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {row.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4} sx={{ mt: 0.2 }}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              required\n              size=\"small\"\n              label=\"Exam name\"\n              name=\"examName\"\n              id=\"filled-required\"\n              value={addForm.examName || \"\"}\n              onChange={handleOnChangeForm}\n            />\n          </Grid>\n        </Grid>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            padding: \"10px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mt: 4,\n            mb: 2,\n            border: \"1px solid lightgray\",\n            borderRadius: \"5px\",\n          }}>\n          <Typography sx={{ textAlign: \"left\", fontWeight: \"bold\" }}>\n            Add Questions:\n          </Typography>\n\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleAddQuizs}\n            startIcon={<AddIcon />}>\n            ADD\n          </Button>\n        </Box>\n\n        {quizData?.map((q, questionIndex) => (\n          <QuizQuestion\n            quiz={q}\n            questionIndex={questionIndex}\n            key={questionIndex}\n            quizData={quizData}\n            setQuizData={setQuizData}\n          />\n        ))}\n\n        <Box sx={{ mt: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              padding: \"10px\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mt: 4,\n              mb: 2,\n              border: \"1px solid lightgray\",\n              borderRadius: \"5px\",\n            }}>\n            <Typography sx={{ fontWeight: \"bold\" }}>\n              Additional Instruction:\n            </Typography>\n\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={handleAddInstruction}>\n              Add\n            </Button>\n          </Box>\n\n          {additionalInstructions.map((instruction, index) => (\n            <Grid container key={index} sx={{ mt: 1 }}>\n              <Grid item xs={12} md={12} lg={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  size=\"small\"\n                  multiline\n                  value={instruction}\n                  onChange={(e) => handleAdditionalInstructionChange(e, index)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          color=\"error\"\n                          size=\"small\"\n                          onClick={() => handleDeleteInstruction(index)}>\n                          <DeleteIcon fontSize=\"small\" color=\"error\" />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ))}\n        </Box>\n\n        <Grid container spacing={2} sx={{ mt: 1.5 }}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                gap: \"4px\",\n              }}>\n              <Typography sx={{ fontSize: \"16px\" }}>\n                Negative Marking:{\" \"}\n              </Typography>\n\n              <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n                value={negativeMarking}\n                onChange={handleCheckboxChange}\n                sx={{ mt: 1 }}>\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n\n              {/* <Typography sx={{ fontSize: \"16px\" }}>\n                Negative Marking:{\" \"}\n              </Typography>\n              <Box>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      fontSize=\"small\"\n                      checked={negativeMarking}\n                      onChange={handleCheckboxChange}\n                    />\n                  }\n                  label={\n                    <Typography style={{ fontSize: \"15px\" }}>Yes</Typography>\n                  }\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      fontSize=\"small\"\n                      checked={negativeMarking}\n                      onChange={(event) =>\n                        setNegativeMarking(event.target.checked)\n                      }\n                    />\n                  }\n                  label={\n                    <Typography style={{ fontSize: \"15px\" }}>No</Typography>\n                  }\n                />\n              </Box> */}\n            </Box>\n          </Grid>\n          {negativeMarking === \"true\" && (\n            <Grid item xs={12} md={12} lg={4}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                required\n                label=\"Negative Marks Per Question\"\n                type=\"number\"\n                name=\"negativeMarking\"\n                value={markForm.negativeMarking || \"\"}\n                onChange={hanleMarkChange}\n                InputLabelProps={{ style: { fontSize: 12 } }}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12} md={12} lg={4}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              required\n              label=\"Marks Per Question\"\n              type=\"number\"\n              name=\"mark\"\n              value={markForm.mark || \"\"}\n              onChange={hanleMarkChange}\n              InputLabelProps={{ style: { fontSize: 12 } }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12} lg={4}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Pass percentage (%)\"\n              size=\"small\"\n              required\n              type=\"number\"\n              name=\"passingMark\"\n              value={markForm.passingMark || \"\"}\n              onChange={hanleMarkChange}\n              InputLabelProps={{ style: { fontSize: 12 } }}\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: \"3%\",\n              mt: 3,\n            }}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"error\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n\n            <LoadingButton\n              loading={submiload}\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \"&:hover\": {\n                  background: \"#1b3779\",\n                },\n              }}>\n              Submit\n            </LoadingButton>\n          </Box>\n        </Grid>\n      </Box>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { examsTableKeys } from \"../../data/tableKeys/exams\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddForm from \"../../forms/AddForm\";\nimport AddOrUpdateExamModal from \"./AddOrUpdateExamModal\";\n\nexport default function Exams() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [gettingList, setGettingList] = useState(false);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  // question model;\n  const [openQuestionModel, setOpenQuestionModel] = useState(false);\n  const handleCloseQuestionModel = () => setOpenQuestionModel(false);\n  const handleOpenQuestionModel = () => setOpenQuestionModel(true);\n\n  // get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  // get exam list\n  const getExamList = async (values) => {\n    try {\n      setGettingList(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            class: values.class,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setData(data.result.map((d) => ({ ...d, class: d.class.name })));\n    } catch (error) {\n      console.log(error);\n    }\n    setGettingList(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n    },\n    onSubmit: getExamList,\n  });\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.preadmissionExam.delete + \"/\" + _id\n      );\n\n      getExamList();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exams\" />\n\n      <AddForm title=\"Add Exam\" onAddClick={handleOpenQuestionModel} />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              loading={gettingList}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={examsTableKeys}\n        bodyDataModal=\"exams\"\n        bodyData={data}\n        onDeleteClick={handleDelete}\n      />\n      <AddOrUpdateExamModal\n        open={openQuestionModel}\n        onClose={handleCloseQuestionModel}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Grid } from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function AddOrUpdateExamSchedule({\n  open,\n  selectedSetting,\n  handleClose = () => {},\n}) {\n  const [dataToEdit, setDataToEdit] = useState();\n  const [loading, setLoading] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [exams, setExams] = useState([]);\n\n  // get years\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"classId\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik?.values.academicYear,\n            class: entryFormik?.values.classId,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setExams(data.result.map((d) => ({ label: d.examName, value: d._id })));\n      entryFormik.setFieldValue(\"examId\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        dateOfExam: dayjs(values.dateOfExam).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n\n      console.log(payload, \"ppppppp\");\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.preadmissionExamSchedule.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.preadmissionExamSchedule.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      classId: \"\",\n      examId: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      roomNumber: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik?.values.academicYear && entryFormik?.values.classId) {\n      getExamList();\n    }\n  }, [\n    entryFormik?.values.academicYear,\n    entryFormik?.values.classId,\n    selectedSetting,\n  ]);\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Schedules\" : \"Add Exam Schedules\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"classId\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"examId\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"dateOfExam\"\n              label=\"Date of Exam\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"time\"\n              name=\"startTime\"\n              label=\"Start Time\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"time\"\n              name=\"endTime\"\n              label=\"End Time\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"roomNumber\"\n              label=\"Room No.\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"address\" label=\"Address\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport image from \"../assets/images/deleteicon.png\";\nimport { Box, Button, Modal, Typography } from \"@mui/material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 350,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  p: 2,\n};\nexport default function DeleteModal(props) {\n  console.log(props, \"llkprops\");\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        open={props.deleteModal}\n        onClose={() => props.setDeleteModal(false)}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Are you sure want to delete this item?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => props.setDeleteModal(false)}>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                props.handleDelete(props.id);\n                props.setDeleteModal(false);\n              }}\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\">\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddOrUpdateExamSchedule from \"./AddOrUpdateExamSchedule\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport copy from \"clipboard-copy\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { toast } from \"react-toastify\";\nimport { Delete } from \"@mui/icons-material\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nexport default function ExamSchedules() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // get years\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik?.values.academicYear,\n            class: entryFormik?.values.class,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setExams(data.result.map((d) => ({ label: d.examName, value: d._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamSchedules = async (values) => {\n    console.log(values, \"exam values\");\n\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionExamSchedule.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            class: values.class,\n            exam: values.exam,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      console.log(data.result, \"exam list\");\n      setData(data.result.map((d) => ({ ...d, class: d.class.name })));\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      exam: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getExamSchedules,\n  });\n\n  useEffect(() => {\n    if (entryFormik?.values.academicYear && entryFormik?.values.class) {\n      getExamList();\n    }\n  }, [\n    entryFormik?.values.academicYear,\n    entryFormik?.values.class,\n    selectedSetting,\n  ]);\n\n  const AddExamSchedules = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // setDataToEdit(null);\n  };\n\n  const handleCopyLink = (copylink) => {\n    console.log(copylink, \"copylink\");\n    copy(`${copylink}`);\n    toast.success(\"Exam Link Copied successfully\");\n  };\n\n  const handleUpdateLink = async (id) => {\n    try {\n      const res = await put(\n        `${PRIVATE_URLS.preadmissionExamSchedule.enableExamLink}${id}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitNotify = async (e, id) => {\n    e.preventDefault();\n    try {\n      const res = await post(\n        `${PRIVATE_URLS.preadmissionExamSchedule.sendVenueDetailsToStudents}/${id}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(\n        PRIVATE_URLS.preadmissionExamSchedule.delete + \"/\" + id\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Schedules\" />\n\n      <AddForm title=\"Add Exam Schedules\" onAddClick={AddExamSchedules} />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Academic Year</TableCell>\n\n              <TableCell align=\"center\">Class</TableCell>\n              <TableCell align=\"center\">Exam</TableCell>\n              <TableCell align=\"center\">Exam Link</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          {data.map((data, index) => (\n            <TableRow>\n              <TableCell align=\"center\">\n                {page * rowsPerPage + index + 1}\n              </TableCell>\n              <TableCell align=\"center\">\n                {data.academicYear.academicYearFrom}-\n                {data.academicYear.academicYearTo}\n              </TableCell>\n\n              <TableCell align=\"center\">{data.class.name}</TableCell>\n              <TableCell align=\"center\">{data.exam?.examName}</TableCell>\n              <TableCell align=\"center\">\n                <Tooltip\n                  title={`${\n                    data.examLinkEnabled === true ? \"Enable\" : \"Disable\"\n                  }`}>\n                  <Switch\n                    key={data._id}\n                    onClick={() => handleUpdateLink(data._id)}\n                    defaultChecked={data.examLinkEnabled ? true : false}\n                  />\n                </Tooltip>\n\n                <Tooltip title=\"Copy Link\">\n                  <IconButton\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleCopyLink(data?.examLink)}>\n                    <ContentCopyIcon fontSize=\"small\" color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n\n              <TableCell>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    gap: 2,\n                  }}>\n                  <Tooltip title=\"Update\">\n                    <IconButton\n                      style={{\n                        color: \"#1b3779\",\n                      }}\n                      size=\"small\">\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={() => setDeleteModal(data._id)}>\n                      <Delete color=\"error\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <DeleteModal\n                    deleteModal={deleteModal}\n                    handleDelete={handleDelete}\n                    id={data._id}\n                    setDeleteModal={setDeleteModal}\n                  />\n\n                  <Button\n                    size=\"small\"\n                    onClick={(e) => handleSubmitNotify(e, data._id)}\n                    disabled={data.notified === true}\n                    variant=\"contained\">\n                    {data.notified === true ? \"Notified\" : \"Notify\"}\n                  </Button>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {/* ==== add/edit exam schedules ======== */}\n      <AddOrUpdateExamSchedule\n        open={open}\n        handleClose={handleClose}\n        selectedSetting={selectedSetting}\n      />\n    </>\n  );\n}\n","export const resultTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Max marks\",\n    key: \"maxMarks\",\n  },\n  {\n    name: \"Passing marks \",\n    key: \"passingMarks\",\n  },\n  {\n    name: \"Obtained marks\",\n    key: \"obtainedMarks\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { resultTableKeys } from \"../../data/tableKeys/result\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { Box, ButtonGroup, styled } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\n\nconst MuiBUtton = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nexport default function Result() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [classes, setClasses] = useState([]);\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Result\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <MuiBUtton>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          <Button variant=\"contained\">Pending:56</Button>\n          <Button>Approved: 100</Button>\n\n          <Button>Rejected:0</Button>\n        </ButtonGroup>\n      </MuiBUtton>\n\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={resultTableKeys}\n        bodyDataModal=\"result\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","export const academicClassTableKeys = [\n  {\n    name: \"Class\",\n    key: \"name\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Is-Public\",\n    key: \"isPublic\",\n  },\n];\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport { academicClassTableKeys } from \"../../data/tableKeys/academicClassData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Class() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getEmployees();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.class.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.class.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      classTeachers: dataToEdit?.classTeachers?.map((c) => c._id) || [],\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      numericName: dataToEdit?.numericName || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.class.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Classes\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicClassTableKeys}\n        bodyDataModal=\"class\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Class\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class\" : \"Add Class\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}\n      >\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Class Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"classTeachers\"\n              label={`Class Teachers - (${entryFormik.values.classTeachers.length})`}\n              required={false}\n              showSearch={true}\n              multiple={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is-Public\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"numericName\"\n              label=\"Numeric Name\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const academicSectionTableKeys = [\n  { name: \"Section Name\", key: \"name\" },\n  // {\n  //   name: \"Class\",\n  //   path: \"class\",\n  //   key: \"name\",\n  // },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Is-Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  ListSubheader,\n  TextField,\n  InputAdornment,\n} from \"@mui/material\";\nimport React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ThemeModeContext from \"../context/ThemeModeContext\";\n\nconst containsText = (text, searchText) =>\n  text?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1;\n\nfunction CustomSelect({\n  value,\n  name = \"\",\n  label = \"\",\n  options = [],\n  onChange = () => {},\n  disabled = false,\n  required = false,\n  multiple = false,\n  isSearch = true,\n}) {\n  const [blurred, setBlurred] = useState(false);\n\n  var inputRef = useRef(undefined);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const displayedOptions = useMemo(\n    () => options.filter((option) => containsText(option.label, searchText)),\n    [searchText, options, blurred]\n  );\n\n  useEffect(() => {\n    setSearchText(\"\");\n  }, [blurred]);\n\n  const labelColor =\n    disabled && !isDarkMode\n      ? \"gray\"\n      : !disabled && isDarkMode\n      ? \"white\"\n      : !disabled && !isDarkMode\n      ? \"black\"\n      : disabled && isDarkMode\n      ? \"gray\"\n      : \"inherit\";\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n      sx={{ top: \"4px\" }}>\n      <InputLabel sx={{ color: labelColor }} shrink={true} id={label}>\n        {label}\n      </InputLabel>\n      <Select\n        disabled={disabled}\n        notched\n        name={name}\n        multiple={multiple}\n        labelId={label}\n        value={value || \"\"}\n        label={label}\n        onChange={onChange}\n        onAnimationEnd={() => inputRef?.current?.focus()}\n        MenuProps={{ autoFocus: false }}\n        onBlur={() => setBlurred(!blurred)}>\n        {isSearch && (\n          <ListSubheader>\n            <TextField\n              onBlur={() => setBlurred(!blurred)}\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={(e) => setSearchText(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n\n        {displayedOptions.map((s, i) => (\n          <MenuItem key={i} value={s.value}>\n            {s.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default memo(CustomSelect);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSectionTableKeys } from \"../../data/tableKeys/academicSectionData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Section() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n      if (!payload.sectionTeacher) {\n        delete payload.sectionTeacher;\n      }\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.section.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.section.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      sectionTeacher: dataToEdit?.sectionTeacher?._id || \"\",\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (selectedClass) {\n      getData();\n    }\n  }, [selectedClass, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.section.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Section\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicSectionTableKeys}\n        bodyDataModal=\"section\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Section\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit sections ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Section\" : \"Add Section\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}\n      >\n        <Grid rowSpacing={1} columnSpacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Section Name\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"sectionTeacher\"\n              label=\"Section Teacher\"\n              options={employees}\n              showSearch={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is-Public\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const academicSubjectTableKeys = [\n  { name: \"Subject Name\", key: \"name\" },\n  {\n    name: \"Subject Code\",\n    key: \"code\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSubjectTableKeys } from \"../../data/tableKeys/academicSubjectData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Subject_Type = [\n  { label: \"Mandatory\", value: \"mandatory\" },\n  { label: \"Optional\", value: \"optional\" },\n];\n\nconst Subject_Group = [\n  { label: \"Scholastic\", value: \"scholastic\" },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function Subject() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting, selectedSetting._id]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.subject.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.subject.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      code: dataToEdit?.code || \"\",\n      subjectType: dataToEdit?.subjectType || \"\",\n      subjectGroup: dataToEdit?.subjectGroup || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      subjectTeachers: dataToEdit?.subjectTeachers?.map((t) => t._id) || [],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    console.log(selectedClass, \"000000\");\n    if (selectedClass) {\n      setData([]);\n      getData();\n    } else {\n      setData([]);\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.subject.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicSubjectTableKeys}\n        bodyDataModal=\"subject\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Subject\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit Subjects ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update\" : \"Add Subject\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Subject Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"code\"\n              label=\"Subject Code\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectType\"\n              label=\"Subject Type\"\n              options={Subject_Type}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectGroup\"\n              label=\"Group\"\n              options={Subject_Group}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              showSearch={true}\n              multiple={true}\n              formik={entryFormik}\n              name=\"subjectTeachers\"\n              label={`Subject Teachers-(${entryFormik.values.subjectTeachers.length})`}\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentAttendanceReportTableKeys = [\n  {\n    name: \"Student\",\n    key: \"student\",\n  },\n  {\n    name: \"Working Days\",\n    key: \"workingDays\",\n  },\n  {\n    name: \"Present Days\",\n    key: \"presentDays\",\n  },\n\n  {\n    name: \"Percentage\",\n    key: \"percentagePresent\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\n\nimport NoTableData from \"../../components/Tables/NoTableData\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function StudentAttendanceTable({\n  bodyData = [],\n  date = new Date(Date.now()),\n  setBodyData = () => {},\n  bodyDataModal = \"Attendance data\",\n  isDataReady = true,\n  classId,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateAttendance = (empId, status) => {\n    setBodyData(\n      bodyData.map((d) =>\n        d.student._id == empId ? { ...d, attendanceStatus: status } : d\n      )\n    );\n  };\n\n  const handleUpdateAll = (status) => {\n    setBodyData(\n      bodyData.map((d) => ({\n        ...d,\n        attendanceStatus: status,\n      }))\n    );\n  };\n\n  const handleUpdateAttendance = async () => {\n    try {\n      setUpdating(true);\n      const { data } = await put(PRIVATE_URLS.studentAttendance.update, {\n        attendanceData: bodyData.map((d) => ({\n          ...d,\n          student: d.student._id,\n        })),\n        date,\n        schoolId: selectedSetting._id,\n        classId,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setUpdating(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Roll Number\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Present All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"absent\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"present\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Absent All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"absent\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length\n              ? bodyData.map((data, index) => (\n                  <TableRow key={data._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {data.student?.basicInfo?.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {data.student?.academicInfo?.rollNumber}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"present\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.student?._id, \"present\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"absent\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.student?._id, \"absent\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        {!bodyData.length ? null : (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px 10px\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={updating}\n              onClick={handleUpdateAttendance}\n              size=\"small\">\n              Update\n            </LoadingButton>\n          </Box>\n        )}\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport { toast } from \"react-toastify\";\nimport { saveAs } from \"file-saver\";\n\nexport function downloadFile(\n  contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  data,\n  filename\n) {\n  // Convert the buffer data to a Blob\n  const blob = new Blob([data], {\n    type: contentType,\n  });\n\n  // Save the Blob as a file using FileSaver.js\n  saveAs(blob, filename);\n}\n\nexport function hasAllValues(obj, exceptions = [], showToast = true) {\n  let allValuesPresent = true;\n  for (const key in obj) {\n    if (!exceptions.includes(key) && !obj[key]) {\n      allValuesPresent = false;\n      if (showToast) {\n        toast.error(`Value for \"${key}\" is missing!`);\n      }\n    }\n  }\n  return allValuesPresent;\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { studentAttendanceReportTableKeys } from \"../../data/tableKeys/studentAttendanceReportData\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport StudentAttendanceTable from \"./StudentAttendanceTable\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function StudentAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [reportData, setReportData] = useState([]);\n  const [overViewData, setOverViewData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [fetchingAttendanceData, setFetchingAttendanceData] = useState(false);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [downloadingAbsent, setDownloadingAbsent] = useState(false);\n  const [fetchingreport, setFetchingReport] = useState(false);\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const downloadAbsentStudentsReport = async (values) => {\n    try {\n      setDownloadingAbsent(true);\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.donwloadAbsentReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            date: dayjs(attendanceFormik.values.date).format(\"YYYY-MM-DD\"),\n            classId: values.sectionInfo.class,\n            sectionId: values.section,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", data, \"student-absent-list\");\n      setDownloadingAbsent(false);\n    } catch (error) {\n      setDownloadingAbsent(false);\n    }\n  };\n\n  const handleFindClick = async (values) => {\n    try {\n      setFetchingAttendanceData(true);\n      const { data } = await get(PRIVATE_URLS.studentAttendance.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          date: dayjs(values.date).format(\"YYYY-MM-DD\"),\n        },\n      });\n\n      setAttendanceData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceData(false);\n  };\n\n  const attendanceFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      date: dayjs(new Date()).format(\"YYYY/MM/DD\"),\n    },\n    onSubmit: handleFindClick,\n  });\n\n  useEffect(() => {\n    setAttendanceData([]);\n  }, [attendanceFormik.values]);\n\n  const getStudentAttendanceOverview = async (values) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.getAttendanceOverview,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n            classId: values.class,\n          },\n        }\n      );\n      setOverViewData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const overviewFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      date: dayjs(new Date()).format(\"YYYY/MM/DD\"),\n    },\n    onSubmit: getStudentAttendanceOverview,\n  });\n\n  // useEffect(() => {\n  //   if (overviewFormik.values.class && overviewFormik.values.date) {\n  //     overviewFormik.handleSubmit();\n  //   }\n  // }, [overviewFormik.values.class, overviewFormik.values.date]);\n\n  useEffect(() => {\n    if (overviewFormik.values.class && overviewFormik.values.date) {\n      getStudentAttendanceOverview(overviewFormik.values);\n    }\n  }, [overviewFormik.values.class, overviewFormik.values.date]);\n\n  const getAttendanceReport = async (values) => {\n    try {\n      setFetchingReport(true);\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.getAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            classId: values.class,\n            sectionId: values.section,\n            month: dayjs(new Date(values.month)).get(\"month\") + 1,\n            year: dayjs(new Date(values.month)).get(\"year\"),\n          },\n        }\n      );\n      setReportData(data.result);\n      setFetchingReport(false);\n    } catch (error) {\n      console.log(error);\n      setFetchingReport(false);\n    }\n  };\n\n  const reportFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      month: null,\n    },\n    onSubmit: getAttendanceReport,\n    enableReinitialize: true,\n  });\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      reportFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      overviewFormik.setFieldValue(\"class\", data.result[0]?._id);\n      attendanceFormik.setFieldValue(\"class\", data.result[0]?._id);\n      reportFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class:\n              overviewFormik.values.class ||\n              attendanceFormik.values.class ||\n              reportFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n\n      attendanceFormik.setFieldValue(\"section\", data.result[0]?._id);\n      reportFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      overviewFormik.values.class ||\n      attendanceFormik.values.class ||\n      reportFormik.values.class\n    ) {\n      getSections();\n    }\n  }, [\n    overviewFormik.values.class,\n    attendanceFormik.values.class,\n    reportFormik.values.class,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    attendanceFormik.resetForm();\n    reportFormik.resetForm();\n    overviewFormik.resetForm();\n  }, [value]);\n\n  return (\n    <>\n      <PageHeader title=\"Student Attedance\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Attedance\", \"Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={overviewFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={overviewFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\">Section</TableCell>\n                <TableCell align=\"center\">Present</TableCell>\n                <TableCell align=\"center\">Absent</TableCell>\n                <TableCell align=\"center\">Percentage</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {overViewData.length > 0 &&\n                overViewData.map((attendanceStudent, index) => (\n                  <TableRow key={attendanceStudent._id}>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.sectionInfo.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.totalPresent}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.totalAbsent}\n                      <LoadingButton\n                        size=\"small\"\n                        loading={downloadingAbsent}\n                        variant=\"contained\"\n                        sx={{ ml: 1 }}\n                        onClick={() =>\n                          downloadAbsentStudentsReport(attendanceStudent)\n                        }>\n                        Download\n                      </LoadingButton>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.percentage}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          {!overViewData.length && (\n            <Typography\n              variant=\"h6\"\n              sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n              No data found\n            </Typography>\n          )}\n        </TableContainer>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={attendanceFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={attendanceFormik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={attendanceFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n            <Grid xs={12} md={3} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <LoadingButton\n                loading={fetchingAttendanceData}\n                onClick={attendanceFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <StudentAttendanceTable\n          date={attendanceFormik.values.date}\n          bodyData={attendanceData}\n          setBodyData={setAttendanceData}\n          classId={attendanceFormik.values.class}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={reportFormik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={reportFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={reportFormik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"Month\"\n                name=\"month\"\n                openTo=\"month\"\n                inputFormat=\"MM\"\n                views={[\"month\"]}\n                required={true}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              display={\"flex\"}\n              gap={1}\n              justifyContent={\"flex-end\"}>\n              <LoadingButton\n                loading={fetchingreport}\n                onClick={reportFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"reports\"\n          bodyData={reportData}\n          tableKeys={studentAttendanceReportTableKeys}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeAttendanceReportTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"employee\",\n  },\n  {\n    name: \"Working Days\",\n    key: \"workingDays\",\n  },\n  {\n    name: \"Present Days\",\n    key: \"presentDays\",\n  },\n\n  {\n    name: \"Percentage\",\n    key: \"percentagePresent\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\n\nimport NoTableData from \"../../components/Tables/NoTableData\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function EmployeeAttendanceTable({\n  bodyData = [],\n  date = new Date(Date.now()),\n  setBodyData = () => {},\n  bodyDataModal = \"Attendance data\",\n  isDataReady = true,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateAttendance = (empId, status) => {\n    setBodyData(\n      bodyData.map((d) =>\n        d.employee._id == empId ? { ...d, attendanceStatus: status } : d\n      )\n    );\n  };\n\n  const handleUpdateAll = (status) => {\n    setBodyData(\n      bodyData.map((d) => ({\n        ...d,\n        attendanceStatus: status,\n      }))\n    );\n  };\n\n  const handleUpdateAttendance = async () => {\n    try {\n      setUpdating(true);\n      const { data } = await put(PRIVATE_URLS.employeeAttendance.update, {\n        attendanceData: bodyData.map((d) => ({\n          ...d,\n          employee: d.employee._id,\n        })),\n        date,\n        schoolId: selectedSetting._id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setUpdating(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Employee Id\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Present All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"absent\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"present\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Absent All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"absent\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Late All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"absent\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"late\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length\n              ? bodyData.map((data, index) => (\n                  <TableRow key={data._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {data.employee?.basicInfo?.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {data.employee?.basicInfo?.empId}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"present\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"present\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"absent\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"absent\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"late\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"late\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        {!bodyData.length ? null : (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px 10px\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={updating}\n              onClick={handleUpdateAttendance}\n              size=\"small\">\n              Update\n            </LoadingButton>\n          </Box>\n        )}\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { employeeAttendanceReportTableKeys } from \"../../data/tableKeys/employeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport EmployeeAttendanceTable from \"./EmployeeAttendanceTable\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [roles, setRoles] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [fetchingAttendanceData, setFetchingAttendanceData] = useState(false);\n  const [fetchingAttendanceReport, setFetchingAttendanceReport] =\n    useState(false);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleFindClick = async (values) => {\n    try {\n      setFetchingAttendanceData(true);\n      const { data } = await get(PRIVATE_URLS.employeeAttendance.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          roleId: values.role,\n          date: values.date,\n        },\n      });\n      setAttendanceData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceData(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      role: \"\",\n      date: dayjs(new Date()),\n    },\n    onSubmit: handleFindClick,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.date && entryFormik.values.role) {\n      setAttendanceData([]);\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleGetReport = async (values) => {\n    try {\n      setFetchingAttendanceReport(true);\n      const { data } = await get(\n        PRIVATE_URLS.employeeAttendance.getAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            roleId: values.role,\n            fromDate: values.fromDate,\n            toDate: values.toDate,\n          },\n        }\n      );\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceReport(false);\n  };\n\n  const reportFormik = useFormik({\n    initialValues: {\n      role: \"\",\n      date: dayjs(new Date()),\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    if (\n      reportFormik.values.fromDate &&\n      reportFormik.values.role &&\n      reportFormik.values.toDate\n    ) {\n      setData([]);\n      reportFormik.handleSubmit();\n    }\n  }, [reportFormik.values, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Attedance\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Attedance\", \"Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"role\"\n                formik={entryFormik}\n                label=\"Select Roles\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={fetchingAttendanceData}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <EmployeeAttendanceTable\n          date={entryFormik.values.date}\n          bodyData={attendanceData}\n          setBodyData={setAttendanceData}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"role\"\n                formik={reportFormik}\n                label=\"Select Roles\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"To Date\"\n                name=\"toDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                onClick={reportFormik.handleSubmit}\n                loading={fetchingAttendanceReport}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"reports\"\n          bodyData={data}\n          tableKeys={employeeAttendanceReportTableKeys}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport { Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../forms/AddForm\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport FormInput from \"../forms/FormInput\";\nimport FormModal from \"../forms/FormModal\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function ClassRoutine() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      teacher: \"\",\n      roomNo: \"\",\n      startTime: \"\",\n      endTime: \"\",\n    },\n    onSubmit: console.log(\"nnnnnnn\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      class: \"\",\n    },\n    onSubmit: console.log(\"nnnnnnn\"),\n  });\n\n  const AddClassRoutine = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getSubject();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    getClasses();\n\n    getEmployees();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Class Routine\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Typography component=\"h1\" sx={{ fontWeight: \"bold\", mt: 1 }}>\n        Sections\n      </Typography>\n\n      <AddForm title=\"Add Class Routine\" onAddClick={AddClassRoutine} />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class Routine\" : \"Add Routine\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"class\"\n              label=\"Class\"\n              required={true}\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"section\"\n              label=\"Section\"\n              required={true}\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"subject\"\n              label=\"Subject\"\n              required={true}\n              options={subjects}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"teacher\"\n              label=\"Teacher\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"roomNo\" label=\"Room Number\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"startTime\"\n              label=\"Start Time\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"endTime\" label=\"End Time\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import { Box, Stack, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst TitleContainer = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  borderRadius: \"5px\",\n  padding: \"2px 5px\",\n  width: \"60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nconst ValueContainer = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nexport default function StudentCount({\n  title = \"\",\n  count = 0,\n  showTitle = false,\n}) {\n  return (\n    <Stack direction=\"row\" columnGap={showTitle ? 1 : 0}>\n      {showTitle ? (\n        <TitleContainer>\n          <Typography\n            sx={{ fontSize: \"14px\", color: \"white\", fontWeight: \"bold\" }}\n          >\n            {title}\n          </Typography>\n        </TitleContainer>\n      ) : null}\n      <ValueContainer>\n        <Typography sx={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\n          {count}\n        </Typography>\n      </ValueContainer>\n    </Stack>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  styled,\n} from \"@mui/material\";\nimport StudentCount from \"../../components/Student/StudentCount\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst TableHeader = styled(TableCell)(({ theme }) => ({\n  borderRight: \"1px solid grey\",\n}));\nconst TableDivider = styled(Divider)(({ theme }) => ({\n  borderBottomColor: \"grey\",\n  width: \"100%\",\n}));\n\nconst DataContiner = styled(Box)(({ theme }) => ({\n  marginTop: \"52px\",\n  display: \"flex\",\n  rowGap: \"2px\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  paddingBottom: \"10px\",\n}));\n\nexport default function Overview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectAcademicYear, setSelectAcademicYear] = useState(\"\");\n  const [overviewDetails, setOverviewDetails] = useState([]);\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [totalMaleStudents, setTotalMaleStudents] = useState(0);\n  const [totalFemaleStudents, setTotalFemaleStudents] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setSelectAcademicYear(data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    const academicYearChanged = async () => {\n      try {\n        if (selectAcademicYear) {\n          const { data } = await get(PRIVATE_URLS.student.overView, {\n            params: {\n              schoolId: selectedSetting._id,\n              academicYear: selectAcademicYear,\n            },\n          });\n\n          setOverviewDetails(data?.result);\n\n          setTotalStudents(data.result.totalStudentsCount);\n          setTotalMaleStudents(data.result.totalMaleStudentsCount);\n          setTotalFemaleStudents(data.result.totalFemaleStudentsCount);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    academicYearChanged();\n  }, [selectAcademicYear, selectedSetting]);\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(\n        PRIVATE_URLS.student.downloadAllStudentsExcel,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: selectAcademicYear,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Overview\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"academicYear\"\n              value={selectAcademicYear}\n              onChange={(e) => setSelectAcademicYear(e.target.value)}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\", mt: 2 }}>\n            <Tooltip title=\"Download\">\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleGetDownloadExcel}>\n                Download Students\n              </LoadingButton>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Box sx={{ fontSize: { md: \"15px\", sm: \"12px\" }, padding: \"1.2rem\" }}>\n        <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n          <Box>Total Students:{totalStudents}</Box>\n          <Box>Total Male Students:{totalMaleStudents}</Box>\n          <Box>Total Female Students:{totalFemaleStudents}</Box>\n        </Box>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableHeader align=\"center\">Class</TableHeader>\n\n              <TableHeader align=\"center\">Students</TableHeader>\n\n              <TableHeader align=\"center\">Sections</TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {overviewDetails?.data?.map((overview, i) => (\n              <TableRow key={overview.className}>\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\" }}\n                  align=\"center\">\n                  {overview.name}\n                </TableCell>\n\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\", padding: 0 }}\n                  align=\"center\">\n                  <DataContiner>\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Male\"\n                      count={overview.maleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Female\"\n                      count={overview.femaleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Total\"\n                      count={overview.totalStudents}\n                    />\n                  </DataContiner>\n                </TableCell>\n\n                <TableCell align=\"left\">\n                  <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                      <TableHead\n                        sx={{\n                          backgroundColor: (theme) =>\n                            theme.palette.mode === \"dark\"\n                              ? theme.palette.primary.dark\n                              : theme.palette.primary.light,\n                        }}>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\">\n                              {overview.section}\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\" key={index}>\n                              <Box\n                                sx={{\n                                  display: \"flex\",\n                                  rowGap: \"2px\",\n                                  flexDirection: \"column\",\n                                }}>\n                                <StudentCount\n                                  title=\"Male\"\n                                  count={overview.maleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Female\"\n                                  count={overview.femaleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Total\"\n                                  count={overview.count}\n                                />\n                              </Box>\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nexport const admitStudentTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"section\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Admission No\",\n    key: \"admissionNumber\",\n    path: \"academicInfo\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PrintSharp } from \"@mui/icons-material\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { admitStudentTableKeys } from \"../../data/tableKeys/admitStudentData\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst Status_Options = [\n  { label: \"Active\", value: true },\n  { label: \"In-Active\", value: false },\n];\n\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function AdmitStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigation = useNavigate();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n\n  const [loader, setLoader] = useState(false);\n\n  const [file, setFile] = useState([]);\n  const [fileAdmit, setFileAdmit] = useState([]);\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"admitFile\") {\n        setFileAdmit(fileList);\n      } else if (type === \"updateFile\") {\n        setFile(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleCloseUpdateModal = () => {\n    setOpenModal(false);\n    setFile([]);\n  };\n\n  const handleCloseAdmitModal = () => {\n    setOpenModalAdmit(false);\n    setFileAdmit([]);\n  };\n\n  const handelAddStudent = (e) => {\n    navigation(\"/sch/student/add-student\");\n  };\n\n  const handleEditClick = (data) => {\n    navigation(`/sch/student/edit-student/${data._id}`);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              active: values.active,\n            },\n          },\n        });\n\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n              active: values.active,\n            },\n          },\n        });\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"all\",\n      active: true,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSectionData(sectionAllOption);\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.delete + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(PRIVATE_URLS.student.downloadStudentsExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n          active: entryFormik.values.active,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"students.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetDownloadPdf = async () => {\n    try {\n      setLoader(true);\n      const getStudentPdf = await get(\n        PRIVATE_URLS.student.downloadStudentsPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            active: entryFormik.values.active,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getStudentPdf.data, \"student-list.pdf\");\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n    }\n  };\n\n  const handleSubmitBulkUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n\n      file.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(PRIVATE_URLS.student.bulkUpdate, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetUpdateSheet = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.student.bulkUpdateSheet, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetAdmitSheet = async () => {\n    try {\n      const getExcel = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"studentAdmit_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleAdmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"schoolId\", selectedSetting._id);\n      fileAdmit.forEach((f) => formData.append(\"file\", f));\n\n      await post(PRIVATE_URLS.student.bulkStudentAdmit, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNavigate = () => {\n    navigation(\"/sch/student/bulk-photo\");\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Students\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Status\"\n                options={Status_Options}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n            }}>\n            {entryFormik.values.academicYear &&\n              entryFormik.values.class &&\n              entryFormik.values.section !== \"all\" && (\n                <Stack\n                  gap={1}\n                  direction={{ xs: \"column\", sm: \"row\", md: \"row\" }}>\n                  <Tooltip title=\"Bulk Admit\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModalAdmit(true)}>\n                      BULK ADMIT\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Bulk Update\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModal(true)}>\n                      BULK UPDATE\n                    </Button>\n                  </Tooltip>\n                </Stack>\n              )}\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 1,\n            }}>\n            <Stack direction=\"row\">\n              <Tooltip title=\"Download\">\n                <LoadingButton\n                  loading={loading}\n                  onClick={handleGetDownloadExcel}>\n                  <DownloadForOfflineSharpIcon color=\"primary\" />\n                </LoadingButton>\n              </Tooltip>\n              <Tooltip title=\"Print\">\n                <LoadingButton loading={loader} onClick={handleGetDownloadPdf}>\n                  <PrintSharp color=\"primary\" />\n                </LoadingButton>\n              </Tooltip>\n\n              <Button size=\"small\" variant=\"contained\" onClick={handleNavigate}>\n                Bulk Photo\n              </Button>\n            </Stack>\n          </Box>\n        </Box>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={admitStudentTableKeys}\n        bodyDataModal=\"students\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* add student */}\n      <AddForm title=\"Add Students\" onAddClick={handelAddStudent} />\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleAdmit}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Admit\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  endIcon={<DownloadIcon />}\n                  onClick={handleGetAdmitSheet}>\n                  Sample\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select  File\"\n                  onChange={(e) => handleChangeFiles(e, \"admitFile\")}\n                  customOnChange={true}\n                  selectedFiles={fileAdmit}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseAdmitModal}>\n                  Cancel\n                </Button>\n                <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleSubmitBulkUpdate}>\n            {\" \"}\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Update\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={handleGetUpdateSheet}\n                  endIcon={<DownloadIcon />}>\n                  Download\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select File\"\n                  onChange={(e) => handleChangeFiles(e, \"updateFile\")}\n                  customOnChange={true}\n                  selectedFiles={file}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseUpdateModal}>\n                  Cancel\n                </Button>\n                <Button variant=\"contained\" size=\"small\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nconst StickyBar = ({ children, content }) => {\n  const [isBottom, setIsBottom] = useState(true);\n\n  useEffect(() => {\n    // Remove the event listener since we want the bar to be fixed at the bottom\n    return () => {};\n  }, []);\n\n  return (\n    <>\n      {/* Additional items at the bottom */}\n      {isBottom && content && (\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n            right: 0,\n            width: \"100%\",\n            background: \"whitesmoke\",\n            padding: \"15px\",\n            zIndex: 1000,\n          }}\n        >\n          {content}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default StickyBar;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { Checkbox } from \"@mui/material\";\nimport { hasAllValues } from \"../../utils\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useTheme } from \"@emotion/react\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function Reshuffle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n  const [file, setFile] = useState([]);\n  const [studentReshuffle, setStudentReshuffle] = useState([]);\n  const [checkBox, setCheckBox] = useState([]);\n  const [reshuffle, setReshuffle] = useState(false);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = studentReshuffle.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleReshffleCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudentReshuffle(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      newSection: \"\",\n    },\n    onSubmit: getList,\n  });\n\n  useEffect(() => {\n    setStudentReshuffle([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleReshuffle = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        sectionId: entryFormik.values.newSection,\n        classId: entryFormik.values.class,\n        currentSectionId: entryFormik.values.section,\n        studentIds: checkBox,\n      };\n\n      setReshuffle(true);\n\n      const { data } = await put(PRIVATE_URLS.student.resuffle, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setReshuffle(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Reshuffle\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Current Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"newSection\"\n                formik={entryFormik}\n                label=\"Change To\"\n                options={sectionData.filter(\n                  (section) => section.value !== entryFormik.values.section\n                )}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap=\"10px\">\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={() => setOpenModalAdmit(true)}>\n                Bulk Reshuffle\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Father Name</TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  onChange={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentReshuffle.map((row, index) => (\n              <TableRow key={row._id}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  {row.academicInfo.rollNumber}\n                </TableCell>\n                <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  <Checkbox\n                    checked={checkBox.includes(row._id)}\n                    onChange={(e) => handleReshffleCheckBox(row._id, e)}\n                    {...label}\n                    sx={{\n                      color: \"#1b3779\",\n                      \"&.Mui-checked\": {\n                        color: \"#1b3779\",\n                      },\n                    }}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          {!studentReshuffle.length && (\n            <Typography\n              variant=\"h6\"\n              sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n              No data found\n            </Typography>\n          )}\n        </Table>\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={studentReshuffle.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {studentReshuffle.length > 0 && (\n        <StickyBar\n          content={\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={reshuffle}\n                varient=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handleReshuffle}\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                  color: \"#fff\",\n                }}>\n                Reshuffle\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Admit\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <Button variant=\"contained\" endIcon={<DownloadIcon />}>\n                Get Sample\n              </Button>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <FileSelect\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={file}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button variant=\"contained\" type=\"submit\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","export const promotionTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Father Name\",\n    key: \"fatherName\",\n  },\n];\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { promotionTableKeys } from \"../../data/tableKeys/promotionData\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { hasAllValues } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Promotion() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [activeAcademicYear, setActiveAcademicYear] = useState({});\n  const [checkBox, setCheckBox] = useState([]);\n  const [promoting, setPromoting] = useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setActiveAcademicYear(data.result.find((a) => a.active));\n      entryFormik.setFieldValue(\"promoteAcademicYearId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudentList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          search: {\n            academicYear: activeAcademicYear._id,\n            \"academicInfo.section\": values.currentSectionId,\n            \"academicInfo.class\": values.currentClassId,\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      promoteAcademicYearId: \"\",\n      currentClassId: \"\",\n      currentSectionId: \"\",\n      promoteClassId: \"\",\n      promoteSectionId: \"\",\n    },\n    onSubmit: getStudentList,\n  });\n\n  useEffect(() => {\n    setData([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setSectionData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentSectionId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentClassId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n    getSection();\n  }, [selectedSetting._id]);\n\n  const handlePromotionCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = data.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n\n  const handlePromotion = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        ...entryFormik.values,\n        studentIds: checkBox,\n      };\n      setPromoting(true);\n      const { data } = await put(PRIVATE_URLS.student.promote, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setPromoting(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Promotion\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Box sx={{ fontSize: 16, fontWeight: \"bold\" }}>\n          <Typography component=\"span\" color=\"forestgreen\" fontWeight=\"bold\">\n            Running Session:{\" \"}\n          </Typography>\n          <Typography component=\"span\" fontWeight=\"bold\">\n            {activeAcademicYear?.from}-{activeAcademicYear?.to}\n          </Typography>\n        </Box>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteAcademicYearId\"\n              formik={entryFormik}\n              label=\"Promote To Session\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentClassId\"\n              formik={entryFormik}\n              label=\"Current Class\"\n              options={classData}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentSectionId\"\n              formik={entryFormik}\n              label=\"Current Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.currentClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteClassId\"\n              formik={entryFormik}\n              label=\"Promote Class\"\n              options={classData\n                .filter((s) => s._id !== entryFormik.values.currentClassId)\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteSectionId\"\n              formik={entryFormik}\n              label=\"Promote Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.promoteClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={2}\n            display=\"flex\"\n            alignItems=\"center\"\n            // justifyContent=\"flex-end\"\n          >\n            <Button\n              disabled={!hasAllValues(entryFormik.values, [], false)}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}\n          >\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Father Name</TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  onClick={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.academicInfo.rollNumber}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox\n                      size=\"small\"\n                      checked={checkBox.includes(row._id)}\n                      onChange={(e) => handlePromotionCheckBox(row._id, e)}\n                      {...label}\n                      sx={{\n                        color: \"#1b3779\",\n                        \"&.Mui-checked\": {\n                          color: \"#1b3779\",\n                        },\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}\n          >\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {data.length > 0 && (\n        <StickyBar\n          content={\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={promoting}\n                varient=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handlePromotion}\n              >\n                Promote\n              </LoadingButton>\n            </Box>\n          }\n        />\n      )}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst MuiTypography = styled(Typography)(({ theme }) => ({\n  fontSize: \"16px\",\n}));\n\nexport default function BulkAdmission() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [file, setFile] = useState(null);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  const downloadBulkAdmissionSheet = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        { responseType: \"blob\", params: { schoolId: selectedSetting._id } }\n      );\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"Bulk Admission Sheet\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadSheet = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.student.bulkStudentAdmit,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Admission\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            xs={12}\n            md={6}\n            lg={3}\n            item>\n            <Button size=\"large\" component=\"label\">\n              <input\n                visibility=\"hidden\"\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />\n            </Button>\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <LoadingButton\n              onClick={downloadBulkAdmissionSheet}\n              endIcon={<DownloadIcon />}\n              size=\"small\"\n              variant=\"contained\">\n              Get Sample\n            </LoadingButton>\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <MuiTypography component=\"ul\">\n              <MuiTypography component=\"li\">\n                School role type configured with\n                <span style={{ color: \"red\" }}> manual</span>, please mention\n                role number in column.\n              </MuiTypography>\n              <MuiTypography component=\"li\">\n                School admission_no configured with auto{\" \"}\n                <span style={{ color: \"red\" }}> auto _ascending_no, </span>\n                admission_no column will be ignored.\n              </MuiTypography>\n            </MuiTypography>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              onClick={uploadSheet}\n              size=\"small\"\n              variant=\"contained\">\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Box\n        sx={{\n          padding: \"20px\",\n          borderRadius: \"5px\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\" ? \"rgba(32,33,32,1)\" : \"#FFF9C4\",\n        }}>\n        <Typography sx={{ fontSize: \"22px\" }} fontWeight=\"bold\">\n          Instruction:\n        </Typography>\n        <MuiTypography component=\"ol\">\n          <MuiTypography component=\"li\">\n            At first select the (School), Class and Section\n          </MuiTypography>\n          <MuiTypography component=\"li\">Generate CSV file.</MuiTypography>\n          <MuiTypography component=\"li\">\n            Open the downloaded CSV file and enter student information with\n            unique username.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Save the edited CSV file.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Upload again CSV file you just edited and submit.\n          </MuiTypography>\n        </MuiTypography>\n      </Box>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentCrendentialsTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"User Name\",\n    key: \"username\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Father Name\",\n    key: \"fatherName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentCrendentialsTableKeys } from \"../../data/tableKeys/studentCredentials\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Credential() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // search student\n  const handleStudentSearchSubmit = async (e) => {\n    setLoader(true);\n\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setData(\n        data.result.map((student) => ({\n          username: student.username,\n          fatherName: student.fatherInfo.name,\n          name: student.basicInfo.name,\n          rollNumber: student.academicInfo,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n    setLoader(false);\n  };\n\n  // console.log(data, \"datata==========\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleStudentSearchSubmit,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n            <LoadingButton\n              loading={loader}\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentCrendentialsTableKeys}\n        bodyDataModal=\"credentials\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst STATUS_OPTIONS = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function QuickAdmit() {\n  const { selectedSetting, setSettings, setSelectedSetting } =\n    useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreate = async (values) => {\n    console.log(values.caste, \"check error\");\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          caste: values.caste,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        contactNumber: values.contactNumber,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting?._id,\n        active: values.active || true,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n\n      setLoading(true);\n      const { data } = await post(PRIVATE_URLS.student.create, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      name: \"\",\n      admissionNumber: \"\",\n      admissionDate: null,\n      dob: null,\n      gender: \"\",\n      caste: \"\",\n      contactNumber: \"\",\n      fatherName: \"\",\n      fatherContactNumber: \"\",\n      motherName: \"\",\n      motherContactNumber: \"\",\n      class: \"\",\n      section: \"\",\n      rollNumber: \"\",\n      active: \"\",\n    },\n    onSubmit: handleCreate,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting?._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Quick Admit\" />\n      <Box onSubmit={entryFormik.handleSubmit} component=\"form\">\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Basic Information\n              </Typography>\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={selectedSetting?.admissionNo === \"manual\"}\n                name=\"admissionNumber\"\n                formik={entryFormik}\n                label=\"Admission No.\"\n                disabled={selectedSetting?.admissionNo != \"manual\"}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"admissionDate\"\n                formik={entryFormik}\n                label=\"Admission Date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"dob\"\n                formik={entryFormik}\n                label=\"DOB\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"gender\"\n                formik={entryFormik}\n                label=\"Select Gender\"\n                options={Gender_Options}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput name=\"caste\" formik={entryFormik} label=\"Caste\" />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"contactNumber\"\n                formik={entryFormik}\n                label=\"Contact Number\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Parent Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"fatherName\"\n                formik={entryFormik}\n                label=\"Father Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"fatherContactNumber\"\n                formik={entryFormik}\n                label=\"Father Phone Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"motherName\"\n                formik={entryFormik}\n                label=\"Mother Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"motherContactNumber\"\n                formik={entryFormik}\n                label=\"Mother Phone Number\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Academic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"rollNumber\"\n                formik={entryFormik}\n                label=\"Roll No\"\n                disabled={selectedSetting?.rollNumberType !== \"manual\"}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Active Status\"\n                options={STATUS_OPTIONS}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}>\n          <LoadingButton\n            loading={loading}\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\">\n            Submit\n          </LoadingButton>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","export const studentActivityTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentActivityTableKeys } from \"../../data/tableKeys/studentActivity\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function StudentActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setDate] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [formData, setFormData] = useState({\n    class: \"\",\n    section: \"\",\n    academicYear: \"\",\n    student: \"\",\n  });\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get activity list\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            student: values.student,\n            academicYear: values.academicYear,\n          },\n        },\n      });\n      setDate(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      Formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      Formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: Formik.values.class,\n          },\n        },\n      });\n      Formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: Formik.values.academicYear,\n            \"academicInfo.class\": Formik.values.class,\n            \"academicInfo.section\": Formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      Formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    Formik.handleSubmit();\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        student: values.student,\n        description: values.description,\n        name: values.name,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.studentActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.studentActivity.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      student: Formik.values.student || \"\",\n      academicYear: Formik.values.academicYear || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      Formik.values.academicYear &&\n      Formik.values.class &&\n      Formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    Formik.values.academicYear,\n    Formik.values.class,\n    Formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (Formik.values.academicYear) {\n      getData();\n    }\n  }, [Formik.values.academicYear]);\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(\n        PRIVATE_URLS.studentActivity.delete + \"/\" + id\n      );\n      Formik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Activity\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"div\"\n          onSubmit={Formik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={Formik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={Formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={Formik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={Formik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\"\n              disabled={!Formik.values.student}\n              onClick={Formik.handleSubmit}>\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={studentActivityTableKeys}\n        bodyDataModal=\"student activity\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        title=\"Student Activity\"\n        onAddClick={AddDepartmentHandel}\n        disabled={!Formik.values.student}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Activity\" : \"Add Student Activity\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"academicYear\"\n              label=\"Academic Year\"\n              required={true}\n              options={academicYearList}\n            />\n          </Grid> */}\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Select Student\"\n              required={true}\n              showSearch={true}\n              options={students}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={12} item>\n            <FormInput formik={entryFormik} name=\"name\" label=\"Activity Name\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const assignmentTableKeys = [\n  {\n    name: \"Assignment Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Class\",\n    key: \"className\",\n  },\n  {\n    name: \"Subject\",\n    key: \"subjectName\",\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Deadline\",\n    key: \"deadline\",\n    isDate: true,\n  },\n  // {\n  //   name: \"Get Assignment\",\n  //   key: \"assignment\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport FormInput from \"../forms/FormInput\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nexport default function AddEditAssignment({\n  dataToEdit = \"\",\n  handleClose = () => {},\n  onUpdateFormik = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      console.log(data, \"section\");\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get subject\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    formData.append(\"title\", values.title);\n    formData.append(\"class\", values.class);\n    formData.append(\"section\", values.section);\n    formData.append(\"subject\", values.subject);\n    formData.append(\"assignmentType\", values.assignmentType);\n\n    formData.append(\"deadline\", dayjs(values.deadline).format(\"YYYY-MM-DD\"));\n    formData.append(\"attachmentType\", values.attachmentType);\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"note\", values.note);\n    formData.append(\"link\", values.link);\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.assignment.update + \"/\" + dataToEdit.id,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.assignment.create, formData, {\n          headers: { \"Content-type\": \"multipart/form-data\" },\n        });\n      }\n      onUpdateFormik.handleSubmit();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      class: dataToEdit?.class || \"\",\n      section: dataToEdit?.section || \"\",\n      subject: dataToEdit?.subject || \"\",\n      assignmentType: dataToEdit?.assignmentType || \"\",\n\n      deadline: dataToEdit?.deadline\n        ? dayjs(dataToEdit.deadline).format(\"YYYY/MM/DD\")\n        : null,\n\n      attachmentType: dataToEdit?.attachmentType || \"\",\n      isPublish: dataToEdit?.isPublish || false,\n      note: dataToEdit?.note || \"\",\n      link: dataToEdit?.link || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  console.log(dataToEdit, \"dataToEdit\");\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              required={true}\n              name=\"title\"\n              formik={entryFormik}\n              label=\"Assignment Title\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"assignmentType\"\n              formik={entryFormik}\n              label=\"Select Assignment Type\"\n              options={[\n                { label: \"Class\", value: \"class\" },\n                { label: \"Assignment\", value: \"assignment\" },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"deadline\"\n              label=\"Deadline\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"attachmentType\"\n              formik={entryFormik}\n              label=\"Select Attachment Type\"\n              options={[\n                { label: \"File\", value: \"File\" },\n                { label: \"Link\", value: \"Link\" },\n              ]}\n            />\n          </Grid>\n          {entryFormik.values?.attachmentType === \"File\" && (\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                name={`file`}\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectFile}\n              />\n            </Grid>\n          )}\n          {entryFormik.values?.attachmentType === \"Link\" && (\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"link\"\n                label=\"Link\"\n                required={true}\n                formik={entryFormik}\n              />\n            </Grid>\n          )}\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              name=\"isPublish\"\n              formik={entryFormik}\n              label=\"Publish To Web\"\n              options={[\n                { label: \"Yes\", value: true },\n                { label: \"No\", value: false },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item>\n            <FormInput name=\"note\" formik={entryFormik} label=\"Note\" />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ ml: 2 }}\n              loading={loading}>\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../components/PageHeader\";\nimport { assignmentTableKeys } from \"../data/tableKeys/assignmentData\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport TabPanel from \"../components/Tabs/TabPanel\";\nimport TabList from \"../components/Tabs/Tablist\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FormInput from \"../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { del, get, post, put } from \"../services/apiMethods\";\nimport SettingContext from \"../context/SettingsContext\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddEditAssignment from \"./AddEditAssignment\";\n\nexport default function Assignment() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [value, setSelectValue] = useState(0);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const Section_Options = [{ label: \"All\", value: \"all\" }, ...sections];\n\n  const [loading, setLoading] = useState(false);\n\n  // get assignment\n  const getData = async (values) => {\n    try {\n      setLoading(true);\n      if (values?.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.assignment.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: values.class,\n            },\n          },\n        });\n        // console.log(data.responseCode, \"all\");\n\n        if (data.responseCode === \"OK\") {\n          setData(\n            data.result.map((assignment) => ({\n              ...assignment,\n              className: assignment.class.name,\n              subjectName: assignment.subject.name,\n              id: assignment._id,\n            }))\n          );\n        }\n      } else {\n        const { data } = await get(PRIVATE_URLS.assignment.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: values.class,\n              section: values.section,\n            },\n          },\n        });\n\n        if (data.responseCode === \"OK\") {\n          setData(\n            data.result.map((assignment) => ({\n              ...assignment,\n              className: assignment.class.name,\n              subjectName: assignment.subject.name,\n              id: assignment._id,\n            }))\n          );\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getData();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit({\n      ...data,\n      class: data.class._id,\n      subject: data.subject._id,\n    });\n    setSelectValue(1);\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"pppppp\");\n    try {\n      if (data.file) {\n        window.open(data.file, \"_blank\");\n      } else {\n        window.open(data.link, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"No file or link found in the data\");\n    }\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.assignment.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Assignment\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Assignment\",\n          dataToEdit && value != 0 ? \"Edit Assignment\" : \"Add Assignment\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={Section_Options}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ ml: 2 }}>\n                Search\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          bodyDataModal=\"Assignment\"\n          bodyData={data}\n          tableKeys={assignmentTableKeys}\n          onEditClick={handleEditClick}\n          onViewClick={handleClickOpenView}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <AddEditAssignment\n          dataToEdit={dataToEdit}\n          handleClose={handleClose}\n          onUpdateFormik={entryFormik}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const noticeTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { noticeTableKeys } from \"../../data/tableKeys/noticeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Grid } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { post, put, get, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Notice() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [rolesData, setRolesData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result.map((r) => ({\n        label: r.name,\n        value: r._id,\n      }));\n\n      const rolesAllOption = [{ label: \"All\", value: \"all\" }, ...roles];\n      setRolesData(rolesAllOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddNotice = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.notice.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.notice.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit ? dataToEdit.title : \"\",\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n      noticeFor: dataToEdit ? dataToEdit.noticeFor : \"\",\n      notice: dataToEdit ? dataToEdit.notice : \"\",\n      isPublic: dataToEdit ? dataToEdit.isPublic : false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.notice.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Notice\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Notice\"\n        bodyData={data}\n        tableKeys={noticeTableKeys}\n        adding={loading}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm title=\"Add Notice\" onAddClick={AddNotice} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Notice\" : \"Add Notice\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"noticeFor\"\n              type=\"text\"\n              formik={entryFormik}\n              label=\"Notice For\"\n              options={rolesData}\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"notice\"\n              label=\"Notice\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const newsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { newsTableKeys } from \"../../data/tableKeys/newsData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useEffect } from \"react\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function News() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.news.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddNews = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", values.title);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n      formData.append(\"news\", values.news);\n      formData.append(\"shortNews\", values.shortNews);\n      formData.append(\"isPublic\", values.isPublic);\n      selectImg.forEach((file) => formData.append(\"file\", file));\n\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.news.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.news.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n\n      date: dataToEdit?.date || null,\n\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n      news: dataToEdit?.news || \"\",\n      shortNews: dataToEdit?.shortNews || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.news.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"News\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"News\"\n        bodyData={data}\n        tableKeys={newsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add News\" onAddClick={AddNews} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update News\" : \"Add News\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              multi={false}\n              name=\"image\"\n              label=\"Select Image\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <FormInput\n              name=\"shortNews\"\n              formik={entryFormik}\n              label=\"Short News\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"news\"\n              label=\"News\"\n              required={true}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            sm={12}\n            md={12}\n            item\n            display=\"flex\"\n            justifyContent=\"center\">\n            {dataToEdit && dataToEdit.image && (\n              <>\n                <img\n                  src={dataToEdit.image}\n                  alt=\"image\"\n                  style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n                />\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const holidayTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"From Date\",\n    key: \"fromDate\",\n    isDate: true,\n  },\n  {\n    name: \"To Date\",\n    key: \"toDate\",\n    isDate: true,\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { holidayTableKeys } from \"../../data/tableKeys/holidayData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { Checkbox, FormControlLabel, Grid, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { post, put, get, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Holiday() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [classes, setClasses] = useState([]);\n\n  // get holiday\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getClasses();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  // open holiday model\n  const AddHoliday = () => {\n    setOpen(true);\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create/update holiday\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n        toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.holiday.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const data = await post(PRIVATE_URLS.holiday.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      fromDate: dataToEdit?.fromDate\n        ? dayjs(dataToEdit.fromDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      toDate: dataToEdit?.toDate\n        ? dayjs(dataToEdit.toDate).format(\"YYYY/MM/DD\")\n        : null,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || \"\",\n      class: dataToEdit?.class || \"\",\n      section: dataToEdit?.section || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.holiday.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handelCheckedBox = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Holiday\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Holiday\"\n        bodyData={data}\n        tableKeys={holidayTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Holiday\" onAddClick={AddHoliday} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Holiday\" : \"Add Holiday\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"fromDate\"\n              formik={entryFormik}\n              label=\"From Date\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"toDate\"\n              formik={entryFormik}\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item mt={1}>\n            <FormControlLabel\n              control={\n                <Checkbox checked={checked} onChange={handelCheckedBox} />\n              }\n              label=\"Update All student attendance as holiday\"\n            />\n          </Grid>\n          {checked && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const awardAchievementTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Location\",\n    key: \"location\",\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { awardAchievementTableKeys } from \"../../data/tableKeys/awardAchievementsData\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put, del } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function AwardsAndAchievements() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.awards.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddAwardsAchievement = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n    formData.append(\"location\", values.location);\n    formData.append(\"hostedBy\", values.hostedBy);\n    formData.append(\"headlines\", values.headlines);\n    formData.append(\"note\", values.note);\n    formData.append(\"isPublic\", values.isPublic);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.awards.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.awards.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n\n      location: dataToEdit?.location || \"\",\n      hostedBy: dataToEdit?.hostedBy || \"\",\n      headlines: dataToEdit?.headlines || \"\",\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    // console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.awards.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // console.log(dataToEdit, \"dataToEdittttt\");\n  return (\n    <>\n      <PageHeader title=\"Award And Achievements\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Award and Achievements\"\n        bodyData={data}\n        tableKeys={awardAchievementTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm\n        title=\"Add Awards & Achievement\"\n        onAddClick={AddAwardsAchievement}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Awards & Achievement\"\n            : \"Add Awards & Achievement\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"location\"\n              label=\"Location\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"hostedBy\"\n              label=\"Hosted By\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"headlines\"\n              label=\"Headlines\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              multi={false}\n              name=\"image\"\n              label=\"Select Image\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          <Grid\n            xs={12}\n            sm={12}\n            md={12}\n            item\n            display=\"flex\"\n            justifyContent=\"center\">\n            {dataToEdit && dataToEdit.image && (\n              <>\n                <img\n                  src={dataToEdit.image}\n                  alt=\"image\"\n                  style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n                />\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const horizontalSplashNewsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Text\",\n    key: \"text\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useState } from \"react\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { horizontalSplashNewsTableKeys } from \"../../data/tableKeys/horizontalSplashNewsData\";\n\nexport default function AddHorizontalSplash() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.splashNews.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const horizontalvalues = data.result.filter(\n        (newitem) => newitem.type !== \"Popup\"\n      );\n      setData(horizontalvalues);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddHorizontalSplashNews = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      setLoading(true);\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      getData();\n\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.splashNews.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.splashNews.create, payload);\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      text: dataToEdit?.text || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.splashNews.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggle = async (data) => {\n    try {\n      const res = await put(PRIVATE_URLS.splashNews.toggle + \"/\" + data._id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"switch\"]}\n        bodyDataModal=\"Horizontal Splash News\"\n        bodyData={data}\n        tableKeys={horizontalSplashNewsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onToggleSwitch={handleToggle}\n        toggleStatus=\"enabled\"\n      />\n\n      <AddForm\n        title=\"Add Horizontal Splash News\"\n        onAddClick={AddHorizontalSplashNews}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Horizontal Splash News\"\n            : \"Add Horizontal Splash News\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"title\" label=\"Title\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"text\" label=\"Text\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const popupSplashNewsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { popupSplashNewsTableKeys } from \"../../data/tableKeys/popupSplashNewsData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst Content_Type_Options = [\n  { label: \"Link\", value: \"Link\" },\n  { label: \"Text\", value: \"Text\" },\n  { label: \"Image\", value: \"Image\" },\n  { label: \"Document\", value: \"Document\" },\n];\n\nexport default function AddPopup() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [selectDocument, setSelectdocument] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.splashNews.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const popupvalues = data.result.filter(\n        (newitem) => newitem.type === \"Popup\"\n      );\n\n      setData(popupvalues);\n\n      console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddHorizontalSplashNews = () => {\n    setOpen(true);\n  };\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"link\", values.link);\n    formData.append(\"text\", values.text);\n    formData.append(\"type\", \"Popup\");\n    formData.append(\"contentType\", values.contentType);\n    formData.append(\"schoolId\", selectedSetting._id);\n    selectImg.forEach((file) => formData.append(\"image\", file));\n    selectDocument.forEach((file) => formData.append(\"document\", file));\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.splashNews.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.splashNews.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentType: dataToEdit?.contentType || \"\",\n      text: dataToEdit?.text || \"\",\n      link: dataToEdit?.link || \"\",\n      document: dataToEdit?.document || \"\",\n      image: dataToEdit?.image || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.splashNews.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggle = async (data) => {\n    try {\n      const res = await put(PRIVATE_URLS.splashNews.toggle + \"/\" + data._id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n    setSelectdocument(selectDocument.filter((doc) => doc.name != fileName));\n  };\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"image\") {\n        setSelectImg(fileList);\n      } else {\n        setSelectdocument(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  return (\n    <>\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"switch\"]}\n        bodyDataModal=\"Popup Splash News\"\n        bodyData={data}\n        tableKeys={popupSplashNewsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onToggleSwitch={handleToggle}\n        toggleStatus=\"enabled\"\n      />\n      <AddForm\n        title=\"Add Vertical Splash News\"\n        onAddClick={AddHorizontalSplashNews}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Vertical Splash News\"\n            : \"Add Vertical Splash News\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"title\" label=\"Title\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"contentType\"\n              label=\"Content Type\"\n              required={true}\n              options={Content_Type_Options}\n            />\n          </Grid>\n          {entryFormik.values.contentType === \"Link\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"link\"\n                label=\"Link\"\n                required={true}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Text\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"text\"\n                label=\"Text\"\n                required={true}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Image\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                name=\"image\"\n                multi={false}\n                label=\"Select Photo\"\n                onChange={(e) => handleChangeFiles(e, \"image\")}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Document\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                multi={false}\n                name=\"document\"\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e, \"document\")}\n                customOnChange={true}\n                selectedFiles={selectDocument}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n          )}\n        </Grid>\n        <Grid xs={12} sm={12} md={12} item>\n          {dataToEdit && dataToEdit.image && (\n            <>\n              <img\n                src={dataToEdit.image}\n                alt=\"image\"\n                style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n              />\n            </>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\n\nimport AddHorizontalSplash from \"./AddHorizontalSplash\";\nimport AddPopup from \"./AddPopup\";\n\nexport default function SplashNews() {\n  const [value, setValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Splash News\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Horizontal\", \"Popup\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <AddHorizontalSplash />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <AddPopup />\n      </TabPanel>\n    </>\n  );\n}\n","export const galleryListTableKeys = [\n  {\n    name: \"Gallery Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Is view on web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, IconButton, Paper } from \"@mui/material\";\nimport { galleryListTableKeys } from \"../data/tableKeys/galleryListData\";\nimport PageHeader from \"../components/PageHeader\";\nimport TabList from \"../components/Tabs/Tablist\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FormSelect from \"../forms/FormSelect\";\nimport TabPanel from \"../components/Tabs/TabPanel\";\nimport FormInput from \"../forms/FormInput\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function Gallery() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [date, setDate] = useState(dataToEdit ? dayjs(dataToEdit.date) : null);\n\n  console.log(dataToEdit, \"gall dataToEdit\");\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.gallery.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(data, \"gallery list\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    // console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.gallery.removeFile + \"/\" + dataToEdit._id,\n        { file: img }\n      );\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"note\", values.note);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.gallery.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.gallery.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n    setDataToEdit(null);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    setSelectImg([]);\n    getData();\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      entryFormik.resetForm();\n    }\n  }, [value]);\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.gallery.delete + \"/\" + _id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Gallery\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Gallery List\",\n          `${dataToEdit && value != 0 ? \"Edit Gallery\" : \"Add Gallery\"}`,\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"Gallery\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          tableKeys={galleryListTableKeys}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Gallery Title\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={entryFormik} label=\"Date\" name=\"date\" />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"isPublic\"\n                formik={entryFormik}\n                label=\"Is Public Web\"\n                options={[\n                  { label: \"Yes\", value: true },\n                  { label: \"No\", value: false },\n                ]}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                name={`images`}\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                label=\"Select Image\"\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput name=\"note\" formik={entryFormik} label=\"Note\" />\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.images?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"100px\",\n                        height: \"100px\",\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                        objectFit: \"center\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <Close color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ ml: 2 }}>\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const notificationsTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Message\",\n    key: \"message\",\n  },\n  {\n    name: \"Total SMS\",\n    key: \"totalSMS\",\n  },\n  {\n    name: \"Time/Date\",\n    key: \"female\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { notificationsTableKeys } from \"../data/tableKeys/notificationsData\";\n\nexport default function Notifications() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Notifications\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Notifications\"\n        bodyData={data}\n        tableKeys={notificationsTableKeys}\n      />\n    </>\n  );\n}\n","export const eventTableKeys = [\n  {\n    name: \"Event Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Location\",\n    key: \"location\",\n  },\n  {\n    name: \"From Date\",\n    key: \"fromDate\",\n    isDate: true,\n  },\n  {\n    name: \"To Date\",\n    key: \"toDate\",\n    isDate: true,\n  },\n  {\n    name: \"Hosted By\",\n    key: \"hostedBy\",\n  },\n];\n","/** @format */\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { eventTableKeys } from \"../data/tableKeys/eventData\";\nimport AddForm from \"../forms/AddForm\";\nimport FormModal from \"../forms/FormModal\";\nimport FormInput from \"../forms/FormInput\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport FileSelect from \"../forms/FileSelect\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function Event() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.event.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"event\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRole = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      // console.log(data, \"rol\");\n      setRoles(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // open add model\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleChangeFiles = (e) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files?.length > 0) {\n      for (let i = 0; i < files?.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"eventFor\", values.eventFor);\n    formData.append(\"location\", values.location);\n\n    formData.append(\"fromDate\", dayjs(values.fromDate).format(\"YYYY-MM-DD\"));\n\n    formData.append(\"toDate\", dayjs(values.toDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"video\", values.video);\n    formData.append(\"shortEvent\", values.shortEvent);\n    formData.append(\"note\", values.note);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.event.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.event.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      eventFor: dataToEdit?.eventFor || \"\",\n      location: dataToEdit?.location || \"\",\n      fromDate: dataToEdit?.fromDate\n        ? dayjs(dataToEdit.fromDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      toDate: dataToEdit?.toDate\n        ? dayjs(dataToEdit.toDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      isPublic: dataToEdit?.isPublic || false,\n      video: dataToEdit?.video || null,\n      shortEvent: dataToEdit?.shortEvent || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  useEffect(() => {\n    getRole();\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.event.delete + \"/\" + _id);\n\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Events\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"events\"\n        bodyData={data}\n        tableKeys={eventTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Events\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Events\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Event Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"eventFor\"\n              label=\"Select Event For\"\n              required={true}\n              options={roles}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"location\"\n              label=\"Location\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"hostedBy\" label=\"Hosted By\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"video\" label=\"Video Link\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            {/* <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"file\"\n              name=\"image\"\n              label=\"Select Image\"\n              inputProps={{\n                accept: \"image/*\",\n              }}\n            /> */}\n            <FileSelect\n              name={`image`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              label=\"Select Photo\"\n              selectedFiles={selectImg}\n              // onRemove={(fileName) => handleRemoveFile(fileName)}\n              multi={false}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is Web View\"\n              options={[\n                { label: \"Yes\", value: true },\n                { label: \"No\", value: false },\n              ]}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              name=\"shortEvent\"\n              label=\"Short event\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examGradeTableKeys = [\n  {\n    name: \"Exam Grade\",\n    key: \"grade\",\n  },\n  {\n    name: \"Group\",\n    key: \"group\",\n  },\n  {\n    name: \"Grade Point\",\n    key: \"gradePoint\",\n  },\n  {\n    name: \"Percentage From\",\n    key: \"markFrom\",\n  },\n  {\n    name: \"Percentage To\",\n    key: \"markTo\",\n  },\n  { name: \"Note\", key: \"note\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { examGradeTableKeys } from \"../../data/tableKeys/examGradeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nconst Grade_Options = [\n  {\n    label: \"Scholastic\",\n    value: \"scholastic\",\n  },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function ExamGrade() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const [loading, setloading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddExamGrade = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    const payload = {\n      ...values,\n      schoolId: selectedSetting._id,\n    };\n\n    setloading(true);\n\n    try {\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examGrade.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examGrade.create, payload);\n\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setloading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      grade: dataToEdit?.grade || \"\",\n      group: dataToEdit?.group || \"\",\n      gradePoint: dataToEdit?.gradePoint || \"\",\n      markFrom: dataToEdit?.markFrom || \"\",\n      markTo: dataToEdit?.markTo || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examGrade.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"Exam Grade\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={examGradeTableKeys}\n        bodyDataModal=\"exam grades\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Exam Grade\" onAddClick={AddExamGrade} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Grade\" : \"Add Exam Grade\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"grade\"\n              label=\"Exam Grade\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"group\"\n              label=\"Group\"\n              required={true}\n              options={Grade_Options}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"gradePoint\"\n              label=\"Grade Point\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              required={true}\n              name=\"markFrom\"\n              label=\"Mark From\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              required={true}\n              name=\"markTo\"\n              label=\"Mark To\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examTermTableKeys = [\n  {\n    name: \"Exam Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"examType\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { examTermTableKeys } from \"../../data/tableKeys/examTermData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Is_Assignment_Allowed = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Exam_Types = [\n  {\n    label: \"General\",\n    value: \"general\",\n  },\n  { label: \"Competitive\", value: \"competitive\" },\n];\n\nexport default function ExamTerm() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handelExamTerm = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examTerm.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examTerm.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      examType: dataToEdit?.examType || \"\",\n      marksAssignmentAllowed: dataToEdit?.marksAssignmentAllowed || false,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examTerm.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Term\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"exam terms\"\n        bodyData={data}\n        tableKeys={examTermTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm title=\"Add Exam Term\" onAddClick={handelExamTerm} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Term\" : \"Add Exam Term\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"examType\"\n              label=\"Exam Type\"\n              required={true}\n              options={Exam_Types}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"marksAssignmentAllowed\"\n              label=\"Marks Assignment Allowed\"\n              options={Is_Assignment_Allowed}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is Public\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examListTableKeys = [\n  {\n    name: \"Exam Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"examType\",\n  },\n];\n","/** @format */\n\nexport const scheduleListTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"name\",\n    path: \"subject\",\n  },\n  {\n    name: \"Date\",\n    key: \"examDate\",\n    isDate: true,\n  },\n  {\n    name: \"Time\",\n    key: \"startTime\",\n  },\n  {\n    name: \"Max Marks\",\n    key: \"maximumMarks\",\n  },\n  {\n    name: \"Min Marks\",\n    key: \"minimumMarks\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { examListTableKeys } from \"../../data/tableKeys/examListData\";\nimport { scheduleListTableKeys } from \"../../data/tableKeys/ScheduleListData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\n\nconst ShowIn_HallTick = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst ShowIn_Exam_Results = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Pratical_Marks = [\n  { label: \"Active\", value: \"active\" },\n  { label: \"In active\", value: \"inactive\" },\n];\n\nexport default function ExamSchedule() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [examtitle, setExamTitle] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [classes, setClasses] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examSchedule.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: values.class,\n            examTerm: values.examTerm,\n          },\n        },\n      });\n      setData(data.result.map((s) => ({ ...s, subject: s.subject })));\n      // console.log(data.result, \"resullttttt\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handelExamSchedule = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const getExamTerm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setExamTitle(\n        data.result.map((c) => ({ ...c, label: c.title, value: c._id }))\n      );\n      formik.setFieldValue(\"examTerm\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"examTerm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: formik.values.class },\n        },\n      });\n      setSubject(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      examTerm: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        examDate: dayjs(values.examDate).format(\"YYYY/MM/DD\"),\n        marksFreezDate: dayjs(values.marksFreezDate).format(\"YYYY/MM/DD\"),\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examSchedule.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.examSchedule.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      examTerm: dataToEdit?.examTerm._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      examDate: dataToEdit?.examDate\n        ? dayjs(dataToEdit.examDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      startTime: dataToEdit?.startTime || \"\",\n      endTime: dataToEdit?.endTime || \"\",\n      marksFreezDate: dataToEdit?.marksFreezDate\n        ? dayjs(dataToEdit?.marksFreezDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      maximumMarks: dataToEdit?.maximumMarks || \"\",\n\n      pratical: dataToEdit?.pratical || \"\",\n      minimumMarks: dataToEdit?.minimumMarks || \"\",\n      praticalMarks: dataToEdit?.praticalMarks || \"\",\n      showInHallTick: dataToEdit?.showInHallTick || \"\",\n      showInExamResults: dataToEdit?.showInExamResults || \"\",\n      orderSequence: dataToEdit?.orderSequence || \"\",\n      praticalMarks: dataToEdit?.praticalMarks || \"\",\n      showInHallTick: dataToEdit?.showInHallTick || true,\n      showInExamResults: dataToEdit?.showInExamResults || true,\n      obtainedMarks: dataToEdit?.obtainedMarks || 0,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getExamTerm();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSubject();\n    }\n  }, [selectedSetting, formik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.examTerm) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values.class, entryFormik.values.examTerm, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examSchedule.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Schedule\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Exam List\", \"Schedule List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                // options={\"\"}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"exam list\"\n          bodyData={examtitle}\n          tableKeys={examListTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                name=\"examTerm\"\n                formik={entryFormik}\n                label=\"Select Exam\"\n                options={examtitle}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <AddForm title=\"Add Exam Schedule\" onAddClick={handelExamSchedule} />\n\n        <FormModal\n          open={open}\n          formik={formik}\n          formTitle={dataToEdit ? \"Update Exam Schedule\" : \"Add Exam Schedule\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"examTerm\"\n                label=\"Exam\"\n                required={true}\n                options={examtitle}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"class\"\n                label=\"Class\"\n                required={true}\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"subject\"\n                label=\"Subject\"\n                required={true}\n                options={subject}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormDatePicker\n                required={true}\n                name=\"examDate\"\n                formik={formik}\n                label=\"Exam Date\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"startTime\"\n                type=\"time\"\n                formik={formik}\n                label=\"Start Time\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"endTime\"\n                type=\"time\"\n                formik={formik}\n                label=\"End Time\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={6} item>\n              <FormDatePicker\n                required={true}\n                label=\"Marks Freez Date\"\n                formik={formik}\n                name=\"marksFreezDate\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"pratical\"\n                formik={formik}\n                label=\"Pratical\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"maximumMarks\"\n                formik={formik}\n                label=\"Maximum Marks\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"minimumMarks\"\n                formik={formik}\n                label=\"MinMarks\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={formik}\n                name=\"orderSequence\"\n                label=\"Order Sequence\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"showInHallTick\"\n                label=\"ShowIn HallTick\"\n                options={ShowIn_HallTick}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"showInExamResults\"\n                label=\"Show In Exam Results\"\n                options={ShowIn_Exam_Results}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"praticalMarks\"\n                label=\"Pratical Marks\"\n                options={Pratical_Marks}\n              />\n            </Grid>\n          </Grid>\n        </FormModal>\n\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"schedule list\"\n          bodyData={data}\n          tableKeys={scheduleListTableKeys}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ExamHallTicket() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [examtitle, setExamTitle] = useState([]);\n\n  const getExamTerm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setExamTitle(\n        data.result.map((d) => ({ ...d, label: d.title, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"exam\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      exam: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n    getExamTerm();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Exam Hall Ticket\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={examtitle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Generate\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function DivisionWiseReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Division Wise Report\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function SubjectWiseReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n            section: entryFormik.values.section,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      exam: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject Wise Report\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","export const consolidateMarksTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, IconButton, Paper } from \"@mui/material\";\nimport { consolidateMarksTableKeys } from \"../../data/tableKeys/consolidateMarksCardData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ConsolidatedMarkSheet() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [consolidated, setConsolidated] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleRemoveSubject = (examIndex, subjectIndex) => {\n    setConsolidated(\n      consolidated.map((con, i) => {\n        if (i === examIndex) {\n          return {\n            ...con,\n            subjects: con.subjects.filter(\n              (subject, index) => index !== subjectIndex\n            ),\n          };\n        } else {\n          return con;\n        }\n      })\n    );\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Consolidate Marks Sheet\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Add exams\n            </Button>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item display=\"flex\" gap={2}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"compress\"\n                formik={entryFormik}\n                label=\"Compress\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"exam\"\n                formik={entryFormik}\n                label=\"Select Exam\"\n                // options={\"\"}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item display=\"flex\" alignItems=\"center\">\n              <IconButton color=\"error\">\n                {/* <Button onClick={() => handleRemoveSubject(index, subjectIndex)}> */}\n                <Close />\n              </IconButton>\n              <Button>Add Subject</Button>\n            </Grid>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item display=\"flex\" gap={2}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"compress\"\n                formik={entryFormik}\n                label=\"Compress\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"subject\"\n                formik={entryFormik}\n                label=\"Select Subject\"\n                // options={\"\"}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item display=\"flex\" alignItems=\"center\">\n              <IconButton color=\"error\">\n                {/* <Button onClick={() => handleRemoveSubject(index, subjectIndex)}> */}\n                <Close />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Consolidate marks card\"\n        bodyData={data}\n        tableKeys={consolidateMarksTableKeys}\n      />\n    </>\n  );\n}\n","export const marksCardTableKeys = [\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Published to web\",\n    key: \"webPublish\",\n  },\n  {\n    name: \"Published to app\",\n    key: \"appPublish\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { marksCardTableKeys } from \"../../data/tableKeys/marksCardData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Markscard() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Marks Card\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          {/* <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid> */}\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"marks card\"\n        bodyData={data}\n        tableKeys={marksCardTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const examResultTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNumber\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n  {\n    name: \"Exam Mark\",\n    key: \"totalMarks\",\n  },\n  {\n    name: \"Obtained Mark\",\n    key: \"obtainedMarks\",\n  },\n  {\n    name: \"Percentage\",\n    key: \"percentage\",\n  },\n  {\n    name: \"Grade\",\n    key: \"overallGrade\",\n  },\n  {\n    name: \"action\",\n    key: \"true\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ExamResultViewModel({\n  title = \"\",\n  open = false,\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table>\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\">S.No</TableCell>\n                <TableCell align=\"center\">Subject</TableCell>\n                <TableCell align=\"center\">Total Marks</TableCell>\n                <TableCell align=\"center\">Obtained Marks</TableCell>\n                <TableCell align=\"center\">Grade</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableData?.subjects?.map((d, i) => (\n                <TableRow>\n                  <TableCell align=\"center\">{i + 1}</TableCell>\n                  <TableCell align=\"center\">{d?.subject?.name}</TableCell>\n                  <TableCell align=\"center\">{d?.totalMarks}</TableCell>\n                  <TableCell align=\"center\">{d?.obtainedMarks}</TableCell>\n                  <TableCell align=\"center\">{d?.grade}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <Box mt={1}>\n            <Typography variant=\"subtitle1\">\n              <b>Total Subject:</b> {tableData.subjects?.length}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Max Marks:</b> {tableData.totalMarks}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Obtained Marks:</b> {tableData.obtainedMarks}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Percentage: </b>\n              {tableData.percentage ? tableData.percentage.toFixed(2) : \"0.00\"}%\n            </Typography>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Paper,\n} from \"@mui/material\";\nimport { examResultTableKeys } from \"../../data/tableKeys/examResultData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ExamResultViewModel from \"./ExamResultViewModel\";\n\nexport default function ExamResult() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [uploadLoader, setUploadLoader] = useState(false);\n  const [downloadLoader, setDownloadLoader] = useState(false);\n  const [allDownloadLoading, setAllDownloadLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [openBulk, setOpenBulk] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getResult = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentMarks.getExamResult, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          examId: values.exam,\n        },\n      });\n      setData(\n        data.result.map((d) => ({\n          ...d,\n          name: d.student.basicInfo?.name,\n          roleNumber: d.student.academicInfo?.rollNumber,\n          image: d.student?.photo,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // console.log(data, \"bbb\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n    },\n    onSubmit: getResult,\n  });\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  console.log(data, \"bvd\");\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  const onClose = () => {\n    setOpenBulk(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Result\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n            <LoadingButton\n              onClick={() => setOpenBulk(true)}\n              size=\"small\"\n              variant=\"contained\"\n              sx={{ ml: 1 }}>\n              Bulk Upload\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"view\", \"download\"]}\n        bodyDataModal=\"exam result\"\n        bodyData={data}\n        tableKeys={examResultTableKeys}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* view exam result ============= */}\n      <ExamResultViewModel\n        title=\"Exam Result Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData || []}\n        onClose={onCloseViewModel}\n      />\n\n      {/* Bulk upload model ============= */}\n      {/* <Dialog\n        open={openBulk}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n          component: \"form\",\n        }}>\n        <DialogTitle sx={{ fontWeight: 600 }}>Bulk Upload</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <LoadingButton\n            size=\"small\"\n            loading={uploadLoader}\n            variant=\"contained\"\n            type=\"submit\">\n            Upload\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={downloadLoader}\n            variant=\"contained\"\n            type=\"submit\">\n            Download\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={allDownloadLoading}\n            variant=\"contained\"\n            type=\"submit\">\n            Download All Student\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            Submit\n          </LoadingButton>\n        </DialogContent>\n      </Dialog> */}\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport { TextField, useTheme } from \"@mui/material\";\n\nexport default function CustomInput({\n  name,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  style = {},\n  ...rest\n}) {\n  const theme = useTheme();\n\n  return (\n    <TextField\n      required={required}\n      id={name}\n      name={name}\n      label={label}\n      placeholder={`Enter ${label}`}\n      fullWidth\n      value={value || \"\"}\n      onChange={onChange}\n      sx={{\n        mt: 2,\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        ...style,\n      }}\n      variant=\"outlined\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      InputProps={{\n        multiple: true,\n        style: {\n          borderWidth: 1,\n          height: \"40px\",\n          borderRadius: theme.shape.borderRadius,\n        },\n      }}\n      {...rest}\n    />\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { manageMarkTableKeys } from \"../../data/tableKeys/manageMarkData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport StickyBar from \"../../components/StickyBar\";\n\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { downloadFile } from \"../../utils\";\n\nconst modalStyle = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function ManageMark() {\n  const [data, setData] = useState([]);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [studentMarks, setStudentMarks] = useState([]);\n  const [updatingMarks, setUpdatingMarks] = useState(false);\n  const [fetchingMarks, setFetchingMarks] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [fileChoosen, setFileChoosen] = useState([]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileChoosen(file);\n    } else {\n      setFileChoosen(null);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFileChoosen(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setFileChoosen(fileChoosen.filter((img) => img.name != fileName));\n  };\n\n  // get class list\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section list\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get subject list\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetMarks = async (values) => {\n    try {\n      setFetchingMarks(true);\n      const { data } = await get(PRIVATE_URLS.studentMarks.listStudentMarks, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          subjectId: values.subject,\n          examId: values.exam,\n        },\n      });\n      setFetchingMarks(false);\n\n      let previousValues = data.result.map((s) => ({\n        rollNumber: s.academicInfo.rollNumber,\n        name: s.basicInfo.name,\n        studentId: s._id,\n        obtainedMarks: s.studentMarks?.obtainedWrittenMarks || 0,\n        comment: s.studentMarks?.comment || \"\",\n        grade: s.studentMarks?.grade?.grade || \"NA\",\n      }));\n\n      setStudentMarks(previousValues);\n    } catch (error) {\n      setFetchingMarks(false);\n\n      console.log(error);\n    }\n  };\n\n  const updateStudentMarks = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        classId: entryFormik.values.class,\n        sectionId: entryFormik.values.section,\n        subjectId: entryFormik.values.subject,\n        examId: entryFormik.values.exam,\n        studentMarks: studentMarks,\n      };\n      setUpdatingMarks(true);\n      const { data } = await put(\n        PRIVATE_URLS.studentMarks.updateStudentsMarks,\n        payload\n      );\n\n      setStudentMarks(\n        data.result.map((m) => ({\n          studentId: m.student._id,\n          rollNumber: m.student.academicInfo.rollNumber,\n          name: m.student.basicInfo.name,\n          obtainedMarks: m.obtainedWrittenMarks || 0,\n          comment: m.comment,\n          grade: m?.grade?.grade || \"NA\",\n        }))\n      );\n      setUpdatingMarks(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingMarks(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      exam: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n    },\n    onSubmit: handleGetMarks,\n  });\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  useEffect(() => {\n    setStudentMarks([]);\n  }, [entryFormik.values]);\n\n  const handleCustomInputChange = (e, index) => {\n    let updatedMarks = [...studentMarks];\n    updatedMarks[index][e.target.name] = e.target.value;\n    setStudentMarks(updatedMarks);\n  };\n\n  const getbulkUpdateStudentMarksExcel = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.studentMarks.getbulkUpdateStudentMarks,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            classId: entryFormik.values.class,\n            sectionId: entryFormik.values.section,\n            subjectId: entryFormik.values.subject,\n            examTermId: entryFormik.values.exam,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"studentMarks\"\n      );\n    } catch (error) {}\n  };\n\n  const updateThroughScheet = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"subjectId\", entryFormik.values.subject);\n      formData.append(\"examTermId\", entryFormik.values.exam);\n\n      fileChoosen.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(\n        PRIVATE_URLS.studentMarks.bulkUpdateStudentMarks,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Manage Marks\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Stack direction=\"row\" spacing={2}>\n              <LoadingButton\n                loading={fetchingMarks}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n              <Button\n                onClick={() => setOpenModal(true)}\n                size=\"small\"\n                variant=\"contained\">\n                Bulk Update\n              </Button>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Roll Number\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Obtained Marks\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Grade\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Comment\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentMarks.map((data, index) => (\n              <TableRow key={data.studentId}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">{data.name}</TableCell>\n\n                <TableCell align=\"center\">{data.rollNumber}</TableCell>\n\n                <TableCell align=\"center\">\n                  <CustomInput\n                    type=\"number\"\n                    style={{ maxWidth: \"150px\" }}\n                    name=\"obtainedMarks\"\n                    value={data.obtainedMarks}\n                    label=\"Obtained Marks\"\n                    onChange={(e) => handleCustomInputChange(e, index)}\n                  />\n                </TableCell>\n\n                <TableCell align=\"center\">{data.grade}</TableCell>\n\n                <TableCell align=\"center\">\n                  <CustomInput\n                    style={{ maxWidth: \"200px\" }}\n                    name=\"comment\"\n                    value={data.comment}\n                    label=\"Comment\"\n                    onChange={(e) => handleCustomInputChange(e, index)}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {studentMarks.length > 0 && (\n        <StickyBar\n          content={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}>\n              <LoadingButton\n                loading={updatingMarks}\n                size=\"small\"\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                onClick={updateStudentMarks}\n                variant=\"contained\">\n                Update\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 350 },\n            },\n          },\n        }}>\n        <Box component={\"form\"} onSubmit={updateThroughScheet} sx={modalStyle}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Upload\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LoadingButton\n                // loading={downloadLoader}\n                variant=\"contained\"\n                sx={{\n                  width: \"100%\",\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                  color: \"#fff\",\n                }}\n                endIcon={<DownloadIcon />}\n                onClick={getbulkUpdateStudentMarksExcel}>\n                Download\n              </LoadingButton>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LoadingButton\n                // loading={downloadLoaderAll}\n                variant=\"contained\"\n                style={{\n                  width: \"100%\",\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                }}\n                endIcon={<DownloadIcon />}\n                // onClick={handleGetAllUploadSheet}\n              >\n                Download All Students\n              </LoadingButton>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <FileSelect\n                name=\"student_marks\"\n                label=\"Select updated File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={fileChoosen}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <LoadingButton\n                // loading={sheetLoader}s\n                variant=\"contained\"\n                sx={{\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                }}\n                type=\"submit\">\n                Update Marks\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","export const examAttendanceTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNumber\",\n  },\n  {\n    name: \"Attend All\",\n    key: \"true\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { examAttendanceTableKeys } from \"../../data/tableKeys/examAttendanceData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ExamAttendance() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n      subject: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n            section: entryFormik.values.section,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Exam Attendance\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"exam attendance\"\n        bodyData={data}\n        tableKeys={examAttendanceTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TablePagination,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport Download from \"@mui/icons-material/Download\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst Data = styled(TableCell)(() => ({\n  textAlign: \"center\",\n}));\n\nconst Heading = styled(TableCell)(() => ({\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  color: \"#ffff\",\n}));\n\nconst DownloadBox = styled(Box)(() => ({\n  background: `rgb(133 140 223 / 19%)`,\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  borderRadius: \"10px\",\n  color: \"black\",\n}));\n\nexport default function Courses() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState([]);\n  const [courseId, setCourseId] = useState(\"\");\n  const [materialURL, setMaterialURL] = useState();\n  const [open, setOpen] = React.useState(false);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n\n  const [material, setMaterial] = useState(null);\n  const [file, setFile] = useState(null);\n  const [uploadLoad, setUploadLoad] = useState(false);\n  const navigate = useNavigate();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  const getCourse = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.course.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { classIds: selectedClass },\n        },\n      });\n\n      setData(data.result);\n\n      // console.log(data.result, \"mmmmmmbbbbbbnnnnnn\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedClass) {\n      getCourse();\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleSubmit = () => {\n    navigate(\"/sch/lms/add-courses\");\n  };\n\n  const handleChange = (event) => {\n    setSelectedClass(event.target.value);\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/lms/edit-courses/${data._id}`, {\n      state: { courseData: data },\n    });\n  };\n\n  const handleNavigateCourse = (id) => {\n    const selectedCourse = data.find((course) => course._id === id);\n    if (selectedCourse) {\n      const selectedCourseTitle = selectedCourse.title;\n      navigate(\"/sch/lms/course-content\", {\n        state: {\n          selectedCourseIds: id,\n          selectedCourseTitle: selectedCourseTitle,\n        },\n      });\n    }\n  };\n\n  const handleClickOpen = (id, material) => {\n    setOpen(true);\n    setCourseId(id);\n    if (material) {\n      const materialURLs = new URL(material);\n      const fileName = decodeURIComponent(\n        materialURLs.pathname.split(\"/\").pop()\n      );\n      setMaterial(fileName);\n    }\n    setMaterialURL(material);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setMaterial(null);\n  };\n\n  const handleDeleteMaterial = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await del(\n        PRIVATE_URLS.course.deleteMaterial + \"/\" + courseId\n      );\n      getCourse();\n      setMaterial(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    setUploadLoad(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.course.uploadCourseMaterial + \"/\" + courseId,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      setUploadLoad(false);\n      getCourse();\n      handleClose();\n    } catch (error) {\n      console.error(error);\n      setUploadLoad(false);\n    }\n    setUploadLoad(false);\n  };\n\n  const handleDownload = () => {\n    try {\n      window.open(materialURL, \"_blank\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.course.delete + \"/\" + id);\n      getCourse();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Courses\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\">\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"class\"\n              multiple={true}\n              value={selectedClass}\n              onChange={handleChange}\n              label=\"Select Class\"\n              options={classData}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <Heading>S.No</Heading>\n              <Heading>Class</Heading>\n              <Heading>Course Name</Heading>\n              <Heading>Subject </Heading>\n              <Heading>Duration</Heading>\n              <Heading>Content</Heading>\n              <Heading>Material</Heading>\n              <Heading>Action</Heading>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((course, index) => (\n                <TableRow key={course._id}>\n                  <Data>{index + 1}</Data>\n                  <Data>{course.class.map((c) => c.name).join(\" | \")}</Data>\n                  <Data>{course.title}</Data>\n                  <Data>\n                    {course.class.length > 1\n                      ? \"Universal\"\n                      : course.subject.name}\n                  </Data>\n                  <Data>{course.courseHours}</Data>\n                  <Data>\n                    <Button onClick={() => handleNavigateCourse(course._id)}>\n                      Upload\n                    </Button>\n                  </Data>\n\n                  <Data>\n                    <Tooltip title=\"Upload Material\">\n                      <Button\n                        onClick={() =>\n                          handleClickOpen(course._id, course.material)\n                        }>\n                        <FileUploadIcon />\n                      </Button>\n                    </Tooltip>\n                  </Data>\n\n                  <Data>\n                    <Tooltip title=\"Edit\">\n                      <Button onClick={() => handeleClickEdit(course)}>\n                        <EditIcon color=\"primary\" fontSize=\"small\" />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => setDeleteModal(course._id)}>\n                        <Delete color=\"error\" fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n\n                    <DeleteModal\n                      deleteModal={deleteModal}\n                      handleDelete={handleDelete}\n                      id={course._id}\n                      setDeleteModal={setDeleteModal}\n                    />\n                  </Data>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\">\n        <DialogTitle\n          id=\"responsive-dialog-title\"\n          sx={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n          {\"Upload Your Material\"} {data.material}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <input type=\"file\" onChange={handleFileChange} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogContent>\n          {material ? (\n            <DownloadBox px={2} py={1}>\n              <Typography>{material}</Typography>\n              <Stack direction={\"row\"}>\n                {material ? (\n                  <Button size=\"small\" onClick={handleDownload} color=\"error\">\n                    <Download fontSize=\"small\" color=\"primary\" />\n                  </Button>\n                ) : null}\n\n                <Button\n                  size=\"small\"\n                  onClick={handleDeleteMaterial}\n                  color=\"error\">\n                  <ClearIcon fontSize=\"small\" />\n                </Button>\n              </Stack>\n            </DownloadBox>\n          ) : (\n            \"\"\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            size=\"small\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            variant=\"contained\"\n            loading={uploadLoad}\n            onClick={handleUpload}\n            autoFocus>\n            Upload\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n\n      <AddForm onAddClick={handleSubmit} />\n    </>\n  );\n}\n","/** @format */\n\nimport { createContext } from \"react\";\n\nconst ContentContext = createContext(null);\n\nexport default ContentContext;\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport {\n  Box,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\n// icons\nimport QuizIcon from \"@mui/icons-material/Quiz\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\nimport ViewAgendaIcon from \"@mui/icons-material/ViewAgenda\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport ContentContext from \"../../context/ContentContext\";\nimport CourseContext from \"../../context/CourseContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { put } from \"../../services/apiMethods\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst MuiTableCell = styled(TableCell)(() => ({\n  width: \"150px\",\n  fontSize: \"15px\",\n  fontWeight: \"bold\",\n  color: \"black\",\n}));\n\nexport default function CourseContentTable({\n  // chapter,\n  // courseId,\n  onEditClick = () => {},\n  handelOpenDelModel = () => {},\n  // handleDeleteChapter = () => {},\n}) {\n  const { chapter } = useContext(ContentContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const [openDeleteModel, setOpenDeleteModel] = useState(false);\n  const [dataToDelete, setDataToDelete] = useState(\"\");\n\n  const handleOpenModel = (id) => {\n    setDataToDelete(id);\n    setOpenDeleteModel(true);\n  };\n\n  const handleDeleteContent = async () => {\n    let payload = {\n      chapterId: chapter._id,\n      contentId: dataToDelete,\n    };\n\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.courseContent.deleteContent + \"/\" + courseId,\n        payload\n      );\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <MuiTableCell align=\"center\">S.No</MuiTableCell>\n              <MuiTableCell align=\"center\">Content Type</MuiTableCell>\n              <MuiTableCell align=\"center\">Content Title</MuiTableCell>\n              <MuiTableCell align=\"center\">Action</MuiTableCell>\n              <MuiTableCell align=\"center\">Sort</MuiTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {chapter.contents?.map((item, index) => (\n              <TableRow>\n                <TableCell align=\"center\">\n                  <Typography sx={{ pr: \"10px\" }}>{index + 1}</Typography>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      columnGap: \"5px\",\n                    }}>\n                    {item.type === \"Video\" ? (\n                      <YouTubeIcon fontSize=\"small\" color=\"error\" />\n                    ) : null}\n                    {item.type === \"Quiz\" ? (\n                      <QuizIcon fontSize=\"small\" color=\"success\" />\n                    ) : null}\n                    {item.type === \"FlashCard\" ? (\n                      <ViewAgendaIcon fontSize=\"small\" color=\"warning\" />\n                    ) : null}\n                    {item.type === \"Material\" ? (\n                      <InsertDriveFileIcon fontSize=\"small\" color=\"info\" />\n                    ) : null}\n                    {item.type === \"CodePractice\" ? (\n                      <QuestionAnswerIcon\n                        fontSize=\"small\"\n                        sx={{ color: \"#1b3779\" }}\n                      />\n                    ) : null}\n                  </Box>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}>\n                    <Typography variant=\"inherit\">\n                      {item.title?.substring(0, 80)}\n                    </Typography>\n                  </Box>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <IconButton onClick={() => onEditClick(item)}>\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton\n                    color=\"error\"\n                    onClick={() => handleOpenModel(item._id)}>\n                    <DeleteIcon color=\"error\" fontSize=\"small\" />\n                  </IconButton>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  {index === chapter.contents.length - 1 ? null : (\n                    <IconButton>\n                      {/*<IconButton onClick={() => sortContent(item._id, \"down\")}> */}\n                      <ArrowDownward />\n                    </IconButton>\n                  )}\n                  {index === 0 ? null : (\n                    <IconButton>\n                      {/* <IconButton onClick={() => sortContent(item._id, \"up\")}> */}\n                      <ArrowUpward />\n                    </IconButton>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* delete model ======== */}\n      <DeleteModal\n        deleteModal={openDeleteModel}\n        handleDelete={handleDeleteContent}\n        // id={chapter?._id}\n        setDeleteModal={setOpenDeleteModel}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { toast } from \"react-toastify\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport ContentContext from \"../../../context/ContentContext\";\nimport CourseContext from \"../../../context/CourseContext\";\n\nexport default function VideoDialog({\n  open,\n  title,\n  // courseId,\n  // chapter,\n  dataToEdit,\n  setDataToEdit = () => {},\n  setOpenVideo = () => {},\n  // onUpdate = () => {},\n  Formik,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const { chapter } = useContext(ContentContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"Video\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      title: values.title,\n      description: values.description,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n    if (dataToEdit) {\n      material[\"contentId\"] = dataToEdit?._id;\n    }\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((video) => formData.append(\"file\", video));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n        // console.log(data, \"video post\");\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n      video: dataToEdit?.video || \"\",\n      description: dataToEdit?.description || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpenVideo(false);\n    setDataToEdit(null);\n    Formik.resetForm();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid spacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Video Name 0/80*\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item>\n            <FileSelect\n              name={`file`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Video\"\n              multi={false}\n              accept=\"video/*\"\n            />\n          </Grid>\n          {selectFile.length\n            ? selectFile?.map((v) => (\n                <video\n                  src={URL.createObjectURL(v)}\n                  style={{\n                    backgroundColor: \"black\",\n                    margin: \"20px 20px\",\n                    borderRadius: \"10px\",\n                    overflow: \"hidden\",\n                    textAlign: \"center\",\n                  }}\n                  controls\n                  type=\"video/mp4\"\n                />\n              ))\n            : \"\"}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  TextField,\n  styled,\n} from \"@mui/material\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport { useFormik } from \"formik\";\n\nconst InputLabels = styled(InputLabel)(() => ({\n  fontSize: \"12px\",\n  fontWeight: 580,\n  color: \"#616161\",\n  paddingLeft: \"10px\",\n}));\n\nconst Boxes = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n}));\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function QuizDialog({ title, open, Formik, setOpenQuiz }) {\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [quizData, setQuizData] = useState([\n    {\n      question: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: \"\",\n    },\n  ]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: \"\",\n      contentHours: \"\",\n      description: \"\",\n      question: \"\",\n      option: \"\",\n    },\n    onSubmit: console.log(\"q\"),\n  });\n\n  const handleClose = () => {\n    setOpenQuiz(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title 0/80*\"\n              type=\"text\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          {quizData?.map((quiz, i) => (\n            <Grid\n              container\n              rowSpacing={2}\n              key={i}\n              sx={{\n                margin: \"20px\",\n                backgroundColor: \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"0 15px 20px 15px\",\n                border: \"1px solid lightgrey\",\n              }}>\n              <Grid item xs={12} md={12}>\n                <InputLabels>\n                  {i + 1}.\n                  {quiz.question\n                    ? \"Update Your Question!\"\n                    : \"Write your question\"}\n                </InputLabels>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  name=\"question\"\n                  value={quiz.question}\n                  placeholder=\"Type here...\"\n                  //   onChange={(e) => handleQuestionChange(e, i)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        {i > 0 ? (\n                          <IconButton\n                            color=\"error\"\n                            size=\"small\"\n                            // onClick={() => removeQuiz(i)}\n                          >\n                            {/* <DeleteIcon fontSize=\"small\" color=\"error\" /> */}\n                          </IconButton>\n                        ) : null}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Grid container rowGap={2} columnSpacing={2}>\n                  {quiz.options.map((o, i) => (\n                    <Grid key={i} item xs={12} md={6}>\n                      <Boxes>\n                        <Radio\n                          size=\"small\"\n                          {...label}\n                          color=\"default\"\n                          checked={\n                            quiz.correctOption && quiz.correctOption === o\n                          }\n                          //   onChange={(e) => handleSetCorrectOption(o, i)}\n                          value={o}\n                          type=\"radio\"\n                        />\n                        <InputLabels>Option {i + 1}</InputLabels>\n                      </Boxes>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        name={`option${i + 1}`}\n                        value={o}\n                        // onChange={(e) => handleOptionChange(e, i, i)}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../../forms/FormSelect\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { toast } from \"react-toastify\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport CourseContext from \"../../../context/CourseContext\";\nimport ContentContext from \"../../../context/ContentContext\";\n\nexport default function FlashcardDialog({\n  // chapter,\n  title,\n  open,\n  setOpenFlashcard,\n  // courseId,\n  Formik,\n  // onUpdate = () => {},\n  setDataToEdit = () => {},\n  dataToEdit,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const { chapter } = useContext(ContentContext);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"FlashCard\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      flashCard: {\n        cardType: values.cardType,\n        text: \"Text\",\n      },\n      title: values.title,\n      description: values.description,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n\n    if (dataToEdit) {\n      material[\"contentId\"] = dataToEdit?._id;\n    }\n\n    if (values.cardType === \"Image\" && !selectFile.length)\n      return toast.error(\"Please select an Image file for Flash Card!\");\n\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      if (dataToEdit) {\n        setLoading(true);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n      description: dataToEdit?.description || \"\",\n      cardType: dataToEdit?.cardType || \"\",\n      text: dataToEdit?.text || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenFlashcard(false);\n    setDataToEdit(null);\n    Formik.resetForm();\n  };\n\n  // console.log(entryFormik.values.cardType, \"ggggggggg\");\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title 0/80*\"\n              type=\"text\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              required={true}\n              name=\"cardType\"\n              label=\"Select Card Type\"\n              options={[\n                { label: \"Flashcard Text\", value: \"Text\" },\n                { label: \"Flashcard Image\", value: \"Image\" },\n              ]}\n            />\n          </Grid>\n          {entryFormik.values.cardType === \"Text\" ? (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"text\"\n                label=\"Flashcard Text\"\n                required={entryFormik.values.cardType === \"Text\" ? true : false}\n              />\n            </Grid>\n          ) : (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                name={`file`}\n                required={\n                  entryFormik.values.cardType === \"Image\" ? true : false\n                }\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectFile}\n                label=\"Upload Flashcard Image\"\n                // multi={false}\n                accept=\"image/*\"\n              />\n            </Grid>\n          )}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { toast } from \"react-toastify\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport CourseContext from \"../../../context/CourseContext\";\nimport ContentContext from \"../../../context/ContentContext\";\n\nexport default function MaterialsDialog({\n  // chapter,\n  // courseId,\n  title,\n  open,\n  setOpenMaterial,\n  // onUpdate = () => {},\n  setDataToEdit = () => {},\n  dataToEdit,\n  Formik,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const { chapter } = useContext(ContentContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectFile, setSelectFile] = useState([]);\n  console.log(dataToEdit, \"dataToEdit\");\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"Material\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      title: values.title,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n\n    if (dataToEdit) {\n      material[\"contentId\"] = dataToEdit?._id;\n    }\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      if (dataToEdit) {\n        setLoading(true);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n        console.log(data, \"post\");\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenMaterial(false);\n    setDataToEdit(null);\n    Formik.resetForm();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Material Name\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`file`}\n              required={true}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Flashcard Image\"\n              // multi={false}\n              accept=\"image/*\"\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"image\"\n              label=\"Upload Material\"\n              type=\"file\"\n            />\n          </Grid> */}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport Grid from \"@mui/material/Grid\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { toast } from \"react-toastify\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport CourseContent from \"../CourseContent\";\nimport CourseContext from \"../../../context/CourseContext\";\n\nexport default function AddChapterDialog({\n  title,\n  open,\n  setOpenChaper = () => {},\n  setChapterData = () => {},\n  // onUpdate = () => {},\n  // courseId,\n  chapterData,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n  console.log(chapterData, \"gaua\");\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      if (chapterData) {\n        const formData = new FormData();\n\n        selectFile.forEach((file) => formData.append(\"file\", file));\n        formData.append(\"schoolId\", selectedSetting._id);\n        formData.append(\"chapterId\", chapterData?._id);\n        formData.append(\"title\", values.title);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateChapterDetails + \"/\" + courseId,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const formData = new FormData();\n        const body = { title: values.title };\n        formData.append(\"body\", JSON.stringify(body));\n        selectFile.forEach((file) => formData.append(\"file\", file));\n        formData.append(\"schoolId\", selectedSetting._id);\n        console.log(courseId, \"courseId\");\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.create + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      // entryFormik.handleSubmit();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: chapterData?.title || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenChaper(false);\n    setChapterData(null);\n    entryFormik.resetForm();\n    onUpdate();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={chapterData ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={chapterData ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Chapter Name\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`file`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Material\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\n//Icons\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport CourseContentTable from \"./CourseContentTable\";\nimport VideoDialog from \"./CourseDialogs/VideoDialog\";\nimport QuizDialog from \"./CourseDialogs/QuizDialog\";\nimport FlashcardDialog from \"./CourseDialogs/FlashcardDialog\";\nimport MaterialsDialog from \"./CourseDialogs/MaterialsDialog\";\nimport CodePracticeDialog from \"./CourseDialogs/CodePracticeDialog\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddChapterDialog from \"./CourseDialogs/AddChapterDialog\";\nimport DeleteModal from \"../../forms/DeleteModal\";\nimport ContentContext from \"../../context/ContentContext\";\nimport CourseContext from \"../../context/CourseContext\";\n\nconst Contents = [\n  {\n    id: 1,\n    label: \"Video\",\n    value: \"video\",\n  },\n  {\n    id: 2,\n    label: \"Quiz\",\n    value: \"quiz\",\n  },\n  {\n    id: 3,\n    label: \"FlashCard\",\n    value: \"flashcard\",\n  },\n  {\n    id: 4,\n    label: \"Material\",\n    value: \"material\",\n  },\n  // {\n  //   id: 5,\n  //   label: \"Code Practice\",\n  //   value: \"codepractice\",\n  // },\n];\n\nexport default function ShowCourseContent({\n  // chapter,\n  // course,\n  // courseId,\n  // onUpdate = () => {},\n  handleEditChapter = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { chapter } = useContext(ContentContext);\n  const { courseId, onUpdate, course } = useContext(CourseContext);\n\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [openVideo, setOpenVideo] = useState(false);\n  const [openQuiz, setOpenQuiz] = useState(false);\n  const [openFlashcard, setOpenFlashcard] = useState(false);\n  const [openMaterial, setOpenMaterial] = useState(false);\n  const [openCodepractice, setOpenCodepractice] = useState(false);\n  const [openDeleteModel, setOpenDeleteModel] = useState(false);\n\n  // console.log(openDeleteModel, \"openDeleteModel\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      contents: \"\",\n    },\n    onSubmit: console.log(\"jj\"),\n  });\n\n  console.log(entryFormik.values, \"entryFormik\");\n\n  useEffect(() => {\n    if (entryFormik.values.contents === \"video\") {\n      setOpenVideo(entryFormik.values.contents === \"video\");\n    } else if (entryFormik.values.contents === \"quiz\") {\n      setOpenQuiz(entryFormik.values.contents === \"quiz\");\n    } else if (entryFormik.values.contents === \"flashcard\") {\n      setOpenFlashcard(entryFormik.values.contents === \"flashcard\");\n    } else if (entryFormik.values.contents === \"material\") {\n      setOpenMaterial(entryFormik.values.contents === \"material\");\n    } else {\n      setOpenCodepractice(entryFormik.values.contents === \"codepractice\");\n    }\n  }, [entryFormik.values.contents, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"upd\");\n    let type = Contents.find((c) => c.label === data?.type);\n    // console.log(type, \"oooo\");\n    entryFormik.setFieldValue(\"contents\", type?.value);\n    setDataToEdit(data);\n  };\n\n  const handelOpenDelModel = () => {\n    setOpenDeleteModel(true);\n  };\n\n  const handleDeleteChapter = async (_id) => {\n    let payload = {\n      ..._id,\n      chapterId: _id,\n    };\n\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.courseContent.deleteChapter + \"/\" + courseId,\n        payload\n      );\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const handleSubmit = () => {\n  //   onDeleteClick(selectedItem._id);\n  //   setOpen(false);\n  // };\n\n  return (\n    <>\n      <Box\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"5px\",\n          px: 1,\n          mb: 3,\n          backgroundColor: \"aliceblue\",\n        }}>\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={6}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              p: 2,\n            }}>\n            <Typography\n              width=\"100%\"\n              variant=\"h6\"\n              component=\"div\"\n              fontWeight={600}\n              fontSize={16}\n              display=\"flex\"\n              alignItems=\"center\">\n              <Tooltip title=\"Delete Chapter\">\n                <IconButton size=\"small\" color=\"error\">\n                  <DeleteIcon\n                    fontSize=\"small\"\n                    color=\"error\"\n                    onClick={handelOpenDelModel}\n                  />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                title=\"Update Chapter\"\n                style={{\n                  color: \"#1b3779\",\n                }}>\n                <IconButton size=\"small\">\n                  <EditIcon fontSize=\"small\" onClick={handleEditChapter} />\n                </IconButton>\n              </Tooltip>\n              Chapter: {chapter?.title}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} sm={6} md={2}>\n            <FormSelect\n              required={true}\n              name=\"contents\"\n              formik={entryFormik}\n              label=\"Add Content\"\n              options={Contents}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <CourseContentTable\n              // chapter={chapter}\n              // courseId={courseId}\n              onEditClick={handleEditClick}\n              handelOpenDelModel={handelOpenDelModel}\n              // handleDeleteChapter={handleDeleteChapter}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* delete model ======== */}\n      <DeleteModal\n        deleteModal={openDeleteModel}\n        handleDelete={handleDeleteChapter}\n        // id={chapter?._id}\n        setDeleteModal={setOpenDeleteModel}\n      />\n\n      {/* open video model ============= */}\n      <VideoDialog\n        title=\"Video for Course\"\n        open={openVideo}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenVideo={setOpenVideo}\n        chapter={chapter}\n        onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open quiz model ============== */}\n      <QuizDialog\n        title=\"Quiz\"\n        open={openQuiz}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenQuiz={setOpenQuiz}\n        chapter={chapter}\n        onUpdate={onUpdate}\n      />\n\n      {/* open flashcard model ========== */}\n      <FlashcardDialog\n        title=\"Flashcard\"\n        open={openFlashcard}\n        // chapter={chapter}\n        // courseId={courseId}\n        Formik={entryFormik}\n        setOpenFlashcard={setOpenFlashcard}\n        // onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open material model =========== */}\n      <MaterialsDialog\n        title=\"Material\"\n        open={openMaterial}\n        Formik={entryFormik}\n        // chapter={chapter}\n        // courseId={courseId}\n        setOpenMaterial={setOpenMaterial}\n        // onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open CodePractice model =========== */}\n      {/* <CodePracticeDialog\n        title=\"Code Practice\"\n        open={openCodepractice}\n        Formik={entryFormik}\n        chapter={chapter}\n        courseId={courseId}\n        setOpenCodepractice={setOpenCodepractice}\n      /> */}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Button, Divider, Grid, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\n// icons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport ShowCourseContent from \"./ShowCourseContent\";\nimport AddChapterDialog from \"./CourseDialogs/AddChapterDialog\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CourseContext from \"../../context/CourseContext\";\nimport ContentContext from \"../../context/ContentContext\";\n\nconst Label = styled(\"label\")(() => ({\n  fontWeight: 650,\n  fontSize: \"15px\",\n  color: \"#424242\",\n}));\n\nconst OuterGrid = styled(Grid)(() => ({\n  padding: 1,\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n}));\n\nexport default function CourseContent() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [courses, setCourses] = useState([]);\n  const [openChapter, setOpenChaper] = useState(false);\n  const [courseDetails, setCourseDetails] = useState({ chapters: [] });\n  const [chapterData, setChapterData] = useState(null);\n\n  // console.log(chapterData, \"chapterData\");\n  // console.log(courseDetails, \"courseDetails\");\n  // get course list\n  const getCourse = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.course.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setCourses(\n        data.result.map((c) => ({ ...c, label: c.title, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"courseId\", data?.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get content details\n  const getDetails = async (values) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.courseContent.getDetailsTeachers + \"/\" + values.courseId,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n      setCourseDetails(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      courseId: \"\",\n    },\n    onSubmit: getDetails,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getCourse();\n  }, []);\n\n  useEffect(() => {\n    if (courses.length) {\n      entryFormik.handleSubmit();\n    }\n  }, [courses, entryFormik.values.courseId]);\n\n  const handelOpenChapter = (data) => {\n    setOpenChaper(true);\n  };\n\n  const handleEditChapter = (data) => {\n    // console.log(data, \"upd\");\n    setOpenChaper(true);\n    setChapterData(data);\n  };\n\n  return (\n    <>\n      <CourseContext.Provider\n        value={{\n          courses,\n          courseId: entryFormik.values.courseId,\n          onUpdate: entryFormik.handleSubmit,\n        }}>\n        <PageHeader title=\"Course Content\" />\n\n        <OuterGrid container>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            my={2}\n            gap={2}\n            display=\"flex\"\n            alignItems=\"center\">\n            <Box sx={{ width: 260 }}>\n              <FormSelect\n                required={true}\n                name=\"courseId\"\n                formik={entryFormik}\n                label=\"Select Course To Add Content\"\n                options={courses}\n              />\n            </Box>\n\n            <Button\n              variant=\"contained\"\n              size=\"medium\"\n              disabled={!courses.length}\n              startIcon={<AddIcon />}\n              sx={{ mt: 1 }}\n              multi={false}\n              onClick={handelOpenChapter}>\n              Chapter\n            </Button>\n          </Grid>\n        </OuterGrid>\n        <Divider />\n\n        {/* show all models components == */}\n        {courseDetails.chapters?.map((chapter, i) => (\n          <ContentContext.Provider value={{ chapter: chapter }}>\n            <ShowCourseContent\n              key={i}\n              // chapter={chapter}\n              // courseId={entryFormik.values.courseId}\n              // course={courseDetails}\n              // submitDetails={() => entryFormik.handleSubmit()}\n              handleEditChapter={() => handleEditChapter(chapter)}\n            />\n          </ContentContext.Provider>\n        ))}\n\n        {/* open chapter model ========== */}\n        <AddChapterDialog\n          title=\"Chapter for Course\"\n          open={openChapter}\n          setOpenChaper={setOpenChaper}\n          courseId={entryFormik.values.courseId}\n          chapterData={chapterData}\n          setChapterData={setChapterData}\n          onUpdate={() => entryFormik.handleSubmit()}\n        />\n      </CourseContext.Provider>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport moment from \"moment\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FormInput from \"../../forms/FormInput\";\nimport { Delete, Search } from \"@mui/icons-material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport dayjs from \"dayjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst TableData = styled(TableCell)(() => ({\n  textAlign: \"center\",\n  color: \"#ffff\",\n  fontWeight: 600,\n}));\n\nconst TableBodydata = styled(TableCell)(() => ({\n  textAlign: \"center\",\n}));\nconst Label = styled(\"label\")(() => ({\n  fontWeight: 650,\n  fontSize: \"15px\",\n  color: \"#424242\",\n  paddingLeft: \"10px\",\n}));\n\nconst FilterBox = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  gap: \"10px\",\n  marginBottom: 1,\n}));\nconst getDateWithTime = (dateTimeString = \"27/09/2024 14:30\") => {\n  const dateTimeComponents = dateTimeString.split(\" \");\n\n  // Extract date components\n  const dateComponents = dateTimeComponents[0].split(\"/\");\n  const yearExtracted = parseInt(dateComponents[2], 10);\n  const monthExtracted = parseInt(dateComponents[1], 10) - 1; // Months are zero-based\n  const dayExtracted = parseInt(dateComponents[0], 10);\n\n  // Extract time components\n  const timeComponents = dateTimeComponents[1].split(\":\");\n  const hoursExtracted = parseInt(timeComponents[0], 10);\n  const minutesExtracted = parseInt(timeComponents[1], 10);\n\n  // Create a new Date object using the extracted components\n  return new Date(\n    yearExtracted,\n    monthExtracted,\n    dayExtracted,\n    hoursExtracted,\n    minutesExtracted\n  );\n};\n\nconst getStatus = (startDate, startTime, expiryDate, expiryTime) => {\n  let currentDate = Date.now();\n  let startDataTimestring = `${moment(startDate).format(\n    \"DD/MM/YYYY\"\n  )} ${startTime}}`;\n  let expiryDateTimeString = `${moment(expiryDate).format(\n    \"DD/MM/YYYY\"\n  )} ${expiryTime}`;\n  let currentDateTimeString = `${moment(currentDate).format(\n    \"DD/MM/YYYY\"\n  )} ${moment(currentDate).format(\"LT\")}`;\n\n  let meetingDate = getDateWithTime(startDataTimestring);\n  let meetingExpiryDate = getDateWithTime(expiryDateTimeString);\n  let currentDateAndTime = getDateWithTime(currentDateTimeString);\n\n  if (meetingDate > currentDateAndTime) {\n    return \"Upcoming\";\n  } else if (\n    meetingDate < currentDateAndTime &&\n    meetingExpiryDate > currentDateAndTime\n  ) {\n    return \"Available\";\n  } else {\n    return \"Expired\";\n  }\n};\n\nconst User_Type = [\n  { label: \"Student\", value: \"student\" },\n  { label: \"Employee\", value: \"employee\" },\n];\n\nconst Participant_Type = [\n  { label: \"Single\", value: \"Single\" },\n  { label: \"Class Students\", value: \"Class Students\" },\n  { label: \"Selected\", value: \"Selected\" },\n];\n\nconst Meeting_Type = [\n  { label: \"One-On-One Call\", value: \"OneONoneCall\" },\n  { label: \"Group Call\", value: \"GroupCall\" },\n  { label: \"Live Streaming\", value: \"LiveStreaming\" },\n];\n\nexport default function Live() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [filterMeeting, setFilterMeeting] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [classes, setClasses] = useState([]);\n  const [selectClasses, setSelectClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const navigate = useNavigate();\n  const [employee, setEmployee] = useState([]);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n  const [selectedPartcipatType, setSelectedParticipatType] = useState(\"All\");\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.meeting.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n      setFilterMeeting(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddMeeting = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      setSelectClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.classId,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.classId,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: { $in: entryFormik.values.roles },\n          },\n        },\n      });\n\n      console.log(data, \"jjjjjjjjjjjjj\");\n\n      setEmployee(\n        data.result.map((s) => ({\n          ...s,\n          label: s.basicInfo.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(data.result.map((s) => ({ ...s, label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getDateWithTime();\n  }, []);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n\n        startDate: dayjs(values.startDate).format(\"YYYY/MM/DD\"),\n        expiryDate: dayjs(values.expiryDate).format(\"YYYY/MM/DD\"),\n\n        participants:\n          entryFormik.values.participantType === \"Single\"\n            ? [entryFormik.values.participants]\n            : entryFormik.values.participants,\n\n        employeeParticipants: employee.filter(\n          (e) =>\n            entryFormik.values.roles.includes(e.role) &&\n            entryFormik.values.employeeParticipants.includes(e._id)\n        ),\n        studentParticipants: students.filter(\n          (s) =>\n            entryFormik.values.classId.includes(s?.academicInfo?.class?._id) &&\n            entryFormik.values.section.includes(\n              s?.academicInfo?.section?._id\n            ) &&\n            entryFormik.values.studentParticipants.includes(s?._id)\n        ),\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.meeting.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n        handleClose();\n      } else {\n        const { data } = await post(PRIVATE_URLS.meeting.create, payload);\n        getData();\n        handleClose();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      classId: dataToEdit?.classId || [],\n\n      expiryDate: dataToEdit?.expiryDate\n        ? dayjs(dataToEdit.expiryDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      expiryTime: dataToEdit?.expiryTime || \"\",\n      startDate: dataToEdit?.startDate\n        ? dayjs(dataToEdit?.startDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      startTime: dataToEdit?.startTime || \"\",\n      createdBy: dataToEdit?.createdBy || \"\",\n      meetingType: dataToEdit?.meetingType || \"\",\n      participantType: dataToEdit?.participantType || \"\",\n      userTypes: dataToEdit?.userTypes || [],\n      participants: [],\n      roles: [],\n      section: [],\n      employeeParticipants: [],\n      studentParticipants: [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.roles) {\n      getEmployee();\n    }\n  }, [entryFormik.values.roles, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.classId) {\n      getSections();\n    }\n  }, [entryFormik.values.classId, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.classId && entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.classId, entryFormik.values.section, selectedSetting]);\n\n  const handleUpdateModelOpen = (id) => {\n    console.log(id, \"idddddd\");\n    setDataToEdit(id);\n    let meetingData = data.filter((m) => m._id == id)[0];\n    if (meetingData.userTypes.includes(\"employee\")) {\n      let roles = [];\n      for (let emp of meetingData.employeeParticipants) {\n        if (roles.filter((r) => r == emp.role).length < 1) {\n          roles.push(emp.role);\n        }\n      }\n\n      entryFormik.setFieldValue(\"roles\", roles);\n      entryFormik.setFieldValue(\n        \"employeeParticipants\",\n        meetingData.employeeParticipants.map((p) => p._id)\n      );\n    }\n\n    if (meetingData.userTypes.includes(\"student\")) {\n      let classes = [];\n      let sections = [];\n      for (let stupar of meetingData.studentParticipants) {\n        if (sections.filter((s) => s == stupar.academicInfo.class).length < 1) {\n          sections.push(stupar.academicInfo.section);\n        }\n        if (classes.filter((c) => c == stupar.academicInfo.class).length < 1) {\n          classes.push(stupar.academicInfo.class);\n        }\n      }\n\n      entryFormik.setFieldValue(\"classId\", classes);\n      entryFormik.setFieldValue(\"section\", sections);\n      entryFormik.setFieldValue(\n        \"studentParticipants\",\n        meetingData.studentParticipants.map((p) => p._id)\n      );\n    }\n\n    if (meetingData.participantType === \"Class Students\") {\n      entryFormik.setFieldValue(\n        \"classId\",\n        meetingData.classId.map((c) => c._id)\n      );\n    }\n\n    entryFormik.setFieldValue(\"meetingType\", meetingData.meetingType);\n    entryFormik.setFieldValue(\"expiryDate\", meetingData.expiryDate);\n    entryFormik.setFieldValue(\"startTime\", meetingData.startTime);\n    entryFormik.setFieldValue(\"expiryTime\", meetingData.expiryTime);\n    entryFormik.setFieldValue(\"participantType\", meetingData.participantType);\n    entryFormik.setFieldValue(\"userTypes\", meetingData.userTypes);\n\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (selectedPartcipatType) {\n      if (selectedPartcipatType === \"All\") {\n        setFilterMeeting(data);\n      } else {\n        setFilterMeeting(\n          data.filter((c) => c.meetingType === selectedPartcipatType)\n        );\n      }\n    }\n  }, [selectedPartcipatType, selectedSetting]);\n  const handleFilter = (e) => {\n    setSelectedParticipatType(e.target.value);\n  };\n\n  const handleJoinClick = (id) => {\n    const getMeetingId = data.find((item) => item._id === id);\n    console.log(getMeetingId);\n    if (getMeetingId) {\n      const meetingType = getMeetingId.meetingType;\n      navigate(`/sch/lms/room/${getMeetingId.roomId}`, {\n        state: { meetingType: meetingType },\n      });\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.meeting.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Live\" />\n\n      <FilterBox>\n        <FormControl size=\"small\" sx={{ m: 1, minWidth: 250 }}>\n          <Label id=\"demo-simple-select-label\">\n            <FilterListIcon fontSize=\"small\" /> Filter Meeting\n          </Label>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            placeholder=\"Select Course\"\n            value={selectedPartcipatType}\n            onChange={handleFilter}>\n            <MenuItem value=\"All\"> All </MenuItem>\n            <MenuItem value=\"OneONoneCall\">One-On-One Call </MenuItem>\n            <MenuItem value=\"GroupCall\">Group Call </MenuItem>\n            <MenuItem value=\"LiveStreaming\">Live Streaming</MenuItem>\n          </Select>\n        </FormControl>\n      </FilterBox>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableData>S.No</TableData>\n              <TableData>Meeting Date</TableData>\n              <TableData>Meeting Type</TableData>\n              <TableData>Status</TableData>\n              <TableData>Start Meeting</TableData>\n              <TableData>Action</TableData>\n            </TableRow>\n          </TableHead>{\" \"}\n          <TableBody>\n            {(filterMeeting ? filterMeeting : data).map((listData, i) => (\n              <TableRow>\n                <TableBodydata>{i + 1}</TableBodydata>\n\n                <TableBodydata>\n                  {dayjs(listData.startDate).format(\"DD-MM-YYYY\")}, Time:{\" \"}\n                  {listData.startTime}\n                </TableBodydata>\n                <TableBodydata>{listData.meetingType}</TableBodydata>\n                <TableBodydata>\n                  <Box\n                    sx={{\n                      py: 1,\n                      objectFit: \"contain\",\n                      borderRadius: \"5px\",\n                      background:\n                        getStatus(\n                          listData.startDate,\n                          listData.startTime,\n                          listData.expiryDate,\n                          listData.expiryTime\n                        ) === \"Expired\"\n                          ? \"#85848430\"\n                          : \"#8281e74d\",\n                    }}>\n                    {getStatus(\n                      listData.startDate,\n                      listData.startTime,\n                      listData.expiryDate,\n                      listData.expiryTime\n                    )}\n                  </Box>\n                </TableBodydata>\n                <TableBodydata>\n                  <Button\n                    disabled={\n                      getStatus(\n                        listData.startDate,\n                        listData.startTime,\n                        listData.expiryDate,\n                        listData.expiryTime\n                      ) === \"Expired\"\n                    }\n                    onClick={() => handleJoinClick(listData._id)}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Join\n                  </Button>\n                </TableBodydata>\n\n                <TableBodydata>\n                  <Tooltip title=\"Edit\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleUpdateModelOpen(listData._id)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => setDeleteModal(listData._id)}>\n                      <Delete fontSize=\"small\" color=\"error\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <DeleteModal\n                    deleteModal={deleteModal}\n                    handleDelete={handleDelete}\n                    id={listData._id}\n                    setDeleteModal={setDeleteModal}\n                  />\n                </TableBodydata>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Box align=\"center\" colSpan={12} py={2}>\n            <Typography variant=\"h6\" align=\"center\">\n              Live sessions Not found!\n            </Typography>\n          </Box>\n        )}\n        {!filterMeeting.length === 0 && (\n          <Box align=\"center\" colSpan={12} py={2}>\n            <Typography variant=\"h6\" align=\"center\">\n              Live sessions Not found!\n            </Typography>\n          </Box>\n        )}\n      </TableContainer>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Meeting\" : \"Add Meeting\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"meetingType\"\n              label=\"Meeting Type\"\n              options={Meeting_Type}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"participantType\"\n              label=\"Participant Type\"\n              options={Participant_Type}\n            />\n          </Grid>\n\n          {(entryFormik.values.participantType === \"Single\" ||\n            entryFormik.values.participantType === \"Selected\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  multiple={true}\n                  formik={entryFormik}\n                  name=\"userTypes\"\n                  label=\"User Type\"\n                  options={User_Type}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.userTypes.includes(\"student\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"classId\"\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"section\"\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"studentParticipants\"\n                  multiple={\n                    entryFormik.values.participantType !== \"Single\"\n                      ? true\n                      : false\n                  }\n                  label=\"Select Student\"\n                  options={students}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.userTypes.includes(\"employee\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"roles\"\n                  label=\"Select Role\"\n                  options={roles}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"employeeParticipants\"\n                  label=\"Select Employee\"\n                  options={employee}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.participantType === \"Class Students\" && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"classId\"\n                  multiple={\n                    entryFormik.values.participantType === \"Class Students\"\n                      ? true\n                      : false\n                  }\n                  label=\"Select Class\"\n                  options={selectClasses}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Enter Start Date\"\n              name=\"startDate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              label=\"Enter Start Time\"\n              type=\"time\"\n              name=\"startTime\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Enter Expiry Date\"\n              name=\"expiryDate\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              label=\"Enter Expiry Time\"\n              type=\"time\"\n              name=\"expiryTime\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      <AddForm title=\"Add Meeting\" onAddClick={AddMeeting} />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst StorageText = styled(Typography)(() => ({\n  border: \"1px solid lightGrey\",\n  fontWeight: \"600\",\n  padding: 10,\n  borderRadius: 5,\n  textAlign: \"center\",\n}));\nconst StorageContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst Storage = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [storageDetails, setStorageDetails] = useState({\n    totalStorage: 0,\n    usedStorage: 0,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.storage.details, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setStorageDetails(data.result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Storage\" />\n      <StorageContainer>\n        <Paper\n          sx={{\n            padding: 4,\n            width: { xs: \"100%\", sm: \"70%\", md: \"50%\", lg: \"40%\" },\n          }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <StorageText>\n                Total Storage:{\" \"}\n                <Typography component=\"span\" fontWeight=\"bold\" color=\"#607d8b\">\n                  {storageDetails.totalStorage}\n                </Typography>\n              </StorageText>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <StorageText>\n                Used Storage:{\" \"}\n                <Typography component=\"span\" fontWeight=\"bold\" color=\"#607d8b\">\n                  {storageDetails.usedStorage}\n                </Typography>\n              </StorageText>\n            </Grid>\n          </Grid>\n        </Paper>\n      </StorageContainer>\n    </>\n  );\n};\n\nexport default Storage;\n","/** @format */\n\nexport const libraryBookTableKeys = [\n  {\n    name: \"Book Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Author\",\n    key: \"author\",\n  },\n  {\n    name: \"Book Cover\",\n    key: \"bookCover\",\n    type: \"image\",\n  },\n  {\n    name: \"Price\",\n    key: \"price\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n  {\n    name: \"Issue\",\n    key: \"issueNumber\",\n  },\n  {\n    name: \"Available\",\n    key: \"available\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport dayjs from \"dayjs\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function BookViewModal({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Book Title\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.title}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Book ID\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.id}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Author\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.author}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Language\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.language}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.quantity}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Price\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.price}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Almira No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.almiraNo}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {dayjs(tableData?.createdAt).format(\"DD-MM-YYYY\")}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { libraryBookTableKeys } from \"../../data/tableKeys/libraryBooksData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\n\nimport FormModal from \"../../forms/FormModal\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddForm from \"../../forms/AddForm\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport BookViewModal from \"./BookViewModal\";\n\nexport default function Books() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    schoolName: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.book.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"llllllllll\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddBooks = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"schoolId\", selectedSetting._id);\n    formData.append(\"title\", values.title);\n    formData.append(\"id\", values.id);\n    formData.append(\"department\", values.department);\n    formData.append(\"cellNumber\", values.cellNumber);\n    formData.append(\"isbnNo\", values.isbnNo);\n    formData.append(\"edison\", values.edison);\n    formData.append(\"author\", values.author);\n    formData.append(\"language\", values.language);\n    formData.append(\"price\", values.price);\n    formData.append(\"quantity\", values.quantity);\n    formData.append(\"almiraNo\", values.almiraNo);\n    selectImg.forEach((file) => formData.append(\"bookCover\", file));\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.book.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.book.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        getData();\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      id: dataToEdit?.id || \"\",\n      department: dataToEdit?.department || \"\",\n      cellNumber: dataToEdit?.cellNumber || \"\",\n      isbnNo: dataToEdit?.isbnNo || \"\",\n      edison: dataToEdit?.edison || \"\",\n      author: dataToEdit?.author || \"\",\n      language: dataToEdit?.language || \"\",\n      price: dataToEdit?.price || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      almiraNo: dataToEdit?.almiraNo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.book.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Library\" />\n\n      <Paper sx={{ padding: 2, mb: 1 }}>\n        <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n          <Button size=\"small\" variant=\"contained\">\n            Download\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Count By title\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Stock Verification\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Bulk Upload\n          </Button>\n        </Stack>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={libraryBookTableKeys}\n        bodyDataModal=\"book\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onViewClick={handleClickOpenView}\n      />\n\n      <AddForm title=\"Add Books\" onAddClick={AddBooks} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Books\" : \"Add Books\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"id\"\n              label=\"Book Id\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"department\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"cellNumber\"\n              label=\"Cell Number\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"isbnNo\" label=\"ISBN No\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"edison\" label=\"Edison\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"author\" label=\"Author\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"language\" label=\"Language\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"price\" label=\"Price\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"quantity\"\n              required={true}\n              label=\"Quantity\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"almiraNo\" label=\"Almira No\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FileSelect\n              name=\"bookCover\"\n              label=\"Select Book\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      <BookViewModal\n        title=\"Book Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const periodicalTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Issue Number\",\n    key: \"issueNumber\",\n  },\n  {\n    name: \"Volume Number\",\n    key: \"volumeNumber\",\n  },\n  {\n    name: \"Book Cover\",\n    key: \"bookCover\",\n    type: \"image\",\n  },\n  {\n    name: \"Price\",\n    key: \"price\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n\n  {\n    name: \"Journal Entry Date\",\n    key: \"entryDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { periodicalTableKeys } from \"../../data/tableKeys/periodicalData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\n\nexport default function Periodical() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectImg, setSelectImg] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [downloadLoader, setDownloadLoader] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.periodical.list);\n      console.log(data, \"perr\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"type\", values.type);\n    formData.append(\"department\", values.department);\n    formData.append(\"issueNumber\", values.issueNumber);\n    formData.append(\"volumeNumber\", values.volumeNumber);\n    formData.append(\"quantity\", values.quantity);\n    formData.append(\"price\", values.price);\n    formData.append(\"entryDate\", dayjs(values.entryDate).format(\"YYYY-MM-DD\"));\n    selectImg.forEach((file) => formData.append(\"bookCover\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.periodical.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.periodical.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  // open add model\n  const AddFormHandel = () => {\n    setOpen(true);\n  };\n\n  const handleChangeFiles = (e) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      type: dataToEdit?.type || \"\",\n      department: dataToEdit?.department || \"\",\n      issueNumber: dataToEdit?.issueNumber || \"\",\n      volumeNumber: dataToEdit?.volumeNumber || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      price: dataToEdit?.price || \"\",\n      entryDate: dataToEdit?.entryDate || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setOpen(true);\n    getData();\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.periodical.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadSheet = () => {\n    console.log(\"ggg\");\n  };\n\n  // const handleGetDownloadSheet = async (e) => {\n  //   setDownloadLoader(true);\n  //   e.preventDefault();\n  //   try {\n  //     // const response = await get(\n  //     //   `/${selectedSetting._id}/periodical/downloadexcel`,\n  //     //   {\n  //     //     responseType: \"blob\",\n  //     //   }\n  //     // );\n\n  //     const downloadUrl = URL.createObjectURL(new Blob([response.data]));\n  //     const link = document.createElement(\"a\");\n  //     link.href = downloadUrl;\n  //     link.setAttribute(\"download\", `periodical-stock.xlsx`);\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setDownloadLoader(false);\n  // };\n\n  return (\n    <>\n      <PageHeader title=\"Periodical List\" />\n      <Paper sx={{ padding: 2, mb: 1 }}>\n        <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleGetDownloadSheet}>\n            Download\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Count By title\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Bulk Upload\n          </Button>\n        </Stack>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={periodicalTableKeys}\n        bodyDataModal=\"periodical list\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Periodical List\" onAddClick={AddFormHandel} />\n\n      {/* ==== Add/Update Periodical List ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Periodical List\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Periodical Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Select Type\"\n              options={[\n                { label: \"Journal\", value: \"journal\" },\n                { label: \"Magazine\", value: \"magazine\" },\n                { label: \"Newspaper\", value: \"newspaper\" },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"department\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"issueNumber\"\n              label=\"Issue Number\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"volumeNumber\"\n              label=\"Volume Number\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              name=\"quantity\"\n              label=\"Quantity\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"price\"\n              label=\"price\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"entryDate\"\n              label=\"Select Entry Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`bookCover`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              label=\"Select Book Cover\"\n              // onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/*\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n];\n","/** @format */\n\nexport const studentNonMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { studentMemberTableKeys } from \"../../data/tableKeys/studentMember\";\nimport { studentNonMemberTableKeys } from \"../../data/tableKeys/studentNonMember\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport { Add, Remove as RemoveIcon } from \"@mui/icons-material\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\n\nconst StudentMemberAction = ({\n  onUpdate = () => {},\n  data = {},\n  actionType,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      if (actionType === \"add\") {\n        await put(PRIVATE_URLS.student.updateLibraryMember + \"/\" + data._id);\n      } else {\n        await del(PRIVATE_URLS.student.removeLibraryMember + \"/\" + data._id);\n      }\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  const actionTitle = actionType === \"add\" ? \"Add Member\" : \"Remove Member\";\n  const actionDescription =\n    actionType === \"add\"\n      ? \"Do you want to add this student to the library member list?\"\n      : \"Do you want to remove this student from the library member list?\";\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={actionType === \"add\" ? <Add /> : <RemoveIcon />}\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={actionTitle}\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>{actionDescription}</Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function StudentLibraryMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [students, setStudents] = useState([]);\n  const [nonMember, setNonMember] = useState([]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          studentName: d.basicInfo,\n          className: d.academicInfo.class,\n          sectionName: d.academicInfo.section,\n          rollNo: d.academicInfo,\n        }));\n\n      const filteredNonMemberData = data.result\n        .filter((d) => !d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          studentName: d.basicInfo,\n          className: d.academicInfo.class,\n          sectionName: d.academicInfo.section,\n          rollNo: d.academicInfo,\n        }));\n\n      setStudents(filteredData);\n\n      setNonMember(filteredNonMemberData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Student Library Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Student Member List\", \"Student Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentMemberTableKeys}\n          bodyData={students}\n          bodyDataModal=\"student\"\n          CustomAction={(props) => (\n            <StudentMemberAction {...props} actionType=\"remove\" />\n          )}\n          onUpdate={getStudents}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentNonMemberTableKeys}\n          bodyData={nonMember}\n          bodyDataModal=\"student\"\n          CustomAction={(props) => (\n            <StudentMemberAction {...props} actionType=\"add\" />\n          )}\n          onUpdate={getStudents}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentLibraryDueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nexport const studentLibraryHistoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nexport const studentLibraryIssueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { studentLibraryDueTableKeys } from \"../../data/tableKeys/studentLibraryDueData\";\nimport { studentLibraryHistoryTableKeys } from \"../../data/tableKeys/studentLibraryHistoryData\";\nimport { studentLibraryIssueTableKeys } from \"../../data/tableKeys/studentlibraryIssueData\";\nimport { Button, Grid, Paper, Stack, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport dayjs from \"dayjs\";\n\nconst BookDetailed = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n}));\n\nconst Issued_To_Type_Option = [\n  { label: \"Student\", value: \"student\" },\n  { label: \"Employee\", value: \"employee\" },\n];\n\nconst CustomAction = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.bookIssue.submit + \"/\" + data._id);\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button size=\"small\" variant=\"contained\" onClick={handleClickOpen}>\n          Return\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Return Book\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>\n              Are you sure you want to change the issue status to return?\n            </Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function StudentIssueReturn() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [employee, setEmployee] = useState([]);\n  const [book, setBook] = useState([]);\n  const [dueList, setDueList] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.bookIssue.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const filteredIssueData = data.result\n        .filter((s) => s.submissionDate == null)\n        .map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }));\n\n      const currentDate = new Date();\n      const filtereDueData = data.result\n        .filter(\n          (s) =>\n            s.dueDate &&\n            new Date(s.dueDate) < currentDate &&\n            s.submissionDate == null\n        )\n        .map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }));\n\n      setData(filteredIssueData);\n      setDueList(filtereDueData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const getBooks = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.book.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setBook(data.result.map((s) => ({ ...s, label: s.title, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }));\n      setStudents(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }));\n      setEmployee(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getBooks();\n    getStudents();\n    getEmployee();\n  }, [selectedSetting]);\n\n  const getList = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.bookIssue.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      console.log(data.result, \"issues\");\n      setHistory(\n        data.result.map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }))\n      );\n\n      console.log(data.result, \"histttttttttt\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getList,\n  });\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getIssuePdf = await get(PRIVATE_URLS.bookIssue.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: formik.values.fromDate,\n          toDate: formik.values.toDate,\n        },\n      });\n\n      downloadFile(\"application/pdf\", getIssuePdf.data, \"Issue_Details.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.bookIssue.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: formik.values.fromDate,\n          toDate: formik.values.toDate,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"Issue_Details.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        issueDate: dayjs(values.issueDate).format(\"YYYY/MM/DD\"),\n        dueDate: dayjs(values.dueDate).format(\"YYYY/MM/DD\"),\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      const { data } = await post(PRIVATE_URLS.bookIssue.create, payload);\n      getData();\n      resetForm();\n      handleClose();\n      getBooks();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      issueDate: null,\n      book: \"\",\n      quantity: 0,\n      dueDate: null,\n      issuedToType: \"\",\n      issuedTo: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    formik.handleSubmit();\n  }, [selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Issue & Return\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Issue List\", \"Due List\", \"History List\"]}\n      />\n\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        sx={{ mt: 1, mb: 2 }}>\n        Issue Book\n      </Button>\n      <TabPanel index={0} value={value}>\n        <BookDetailed sx={{ padding: 1 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Total Books:{\" \"}\n            {book.reduce((total, current) => total + current.leftInStock, 0)}\n          </Typography>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Issued: {data.length}\n          </Typography>\n          <Typography variant=\"h6\" fontSize={16} fontWeight=\"bold\">\n            Due: {dueList.length}\n          </Typography>\n        </BookDetailed>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentLibraryIssueTableKeys}\n          bodyData={data}\n          bodyDataModal=\"issue list\"\n          CustomAction={CustomAction}\n          onUpdate={getData}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentLibraryDueTableKeys}\n          bodyData={dueList}\n          bodyDataModal=\"due list\"\n          CustomAction={CustomAction}\n          onUpdate={getData}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                sx={{ alignSelf: \"center\", mt: 1 }}\n                item>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n              <Grid xs={12} md={12} lg={12} item>\n                <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n                  <Button\n                    size=\"small\"\n                    onClick={handleGetPrintPdf}\n                    variant=\"contained\">\n                    Download\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    onClick={handleGetDownloadExcel}\n                    variant=\"contained\">\n                    Print\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyData={history}\n          bodyDataModal=\"list\"\n          tableKeys={studentLibraryHistoryTableKeys}\n        />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Issue\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"book\"\n              label=\"Book\"\n              required={true}\n              options={book}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"issueDate\"\n              label=\"Issue Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"quantity\"\n              label=\"Quantity\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"dueDate\"\n              label=\"Due Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"issuedToType\"\n              label=\"Issued To Type\"\n              required={true}\n              options={Issued_To_Type_Option}\n            />\n          </Grid>\n          {entryFormik.values.issuedToType === \"student\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={entryFormik}\n                name=\"issuedTo\"\n                label=\"Issued To\"\n                required={true}\n                options={students}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.issuedToType === \"employee\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={entryFormik}\n                name=\"issuedTo\"\n                label=\"Issued To\"\n                required={true}\n                options={employee}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeLibraryMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"empName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n\n  {\n    name: \"Library Id\",\n    key: \"libraryId\",\n  },\n];\n","/** @format */\n\nexport const employeeLibraryNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"empName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n\n  {\n    name: \"Library Id\",\n    key: \"libraryId\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLibraryMemberTableKeys } from \"../../data/tableKeys/employeeLibraryNonMemberData\";\nimport { employeeLibraryNonMemberTableKeys } from \"../../data/tableKeys/employeeLibraryMemberData\";\n\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\n\nconst EmployeeMemberAction = ({\n  onUpdate = () => {},\n  data = {},\n  actionType,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      if (actionType === \"add\") {\n        await put(PRIVATE_URLS.employee.updateLibraryMember + \"/\" + data._id);\n      } else {\n        await del(PRIVATE_URLS.employee.removeLibraryMember + \"/\" + data._id);\n      }\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  const actionTitle = actionType === \"add\" ? \"Add Member\" : \"Remove Member\";\n  const actionDescription =\n    actionType === \"add\"\n      ? \"Do you want to add this employee to the library member list?\"\n      : \"Do you want to remove this employee from the library member list?\";\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={actionType === \"add\" ? <Add /> : <RemoveIcon />}\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={actionTitle}\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>{actionDescription}</Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function EmployeeLibraryMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [employee, setEmployee] = useState([]);\n  const [nonMember, setNonMember] = useState([]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          empName: d.basicInfo,\n        }));\n\n      const filteredNonMemberData = data.result\n        .filter((d) => !d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          empName: d.basicInfo,\n        }));\n\n      setEmployee(filteredData);\n      setNonMember(filteredNonMemberData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployee();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Library Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Employee Member List\", \"Employee Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLibraryMemberTableKeys}\n          bodyData={employee}\n          bodyDataModal=\"employee\"\n          CustomAction={(props) => (\n            <EmployeeMemberAction {...props} actionType=\"remove\" />\n          )}\n          onUpdate={getEmployee}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLibraryNonMemberTableKeys}\n          bodyData={nonMember}\n          bodyDataModal=\"employee\"\n          CustomAction={(props) => (\n            <EmployeeMemberAction {...props} actionType=\"add\" />\n          )}\n          onUpdate={getEmployee}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const employeeLibraryHistoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","export const employeeLibraryDueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","export const employeeLibraryIssueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","import React, { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLibraryHistoryTableKeys } from \"../../data/tableKeys/employeeLibraryHistroyData\";\nimport { employeeLibraryDueTableKeys } from \"../../data/tableKeys/employeeLibraryDueData\";\nimport { employeeLibraryIssueTableKeys } from \"../../data/tableKeys/employeeLibraryIssueData\";\nimport { Button, Grid, Paper, Stack, Typography, styled } from \"@mui/material\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\n\nconst BookDetailed = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n}));\nexport default function EmployeeIssueReturn() {\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  return (\n    <>\n      <PageHeader title=\"Employee Issue & Return\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Issue List\", \"Due List\", \"History List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <BookDetailed sx={{ padding: 1 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Total Books: 1\n          </Typography>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Issued: 1\n          </Typography>\n          <Typography variant=\"h6\" fontSize={16} fontWeight=\"bold\">\n            Due: 1\n          </Typography>\n        </BookDetailed>\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLibraryIssueTableKeys}\n          bodyData={data}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLibraryDueTableKeys}\n          bodyData={data}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"To Date\"\n                name=\"toDate\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              sx={{ alignSelf: \"center\", mt: 1 }}\n              item\n            >\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n                <Button size=\"small\" variant=\"contained\">\n                  Download\n                </Button>\n                <Button size=\"small\" variant=\"contained\">\n                  Print\n                </Button>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable actions={[]} tableKeys={employeeLibraryHistoryTableKeys} />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const leaveTypeTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Leave Category\",\n    key: \"leaveTypeFor\",\n  },\n  {\n    name: \"Department\",\n    key: \"departmentName\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport { leaveTypeTableKeys } from \"../../data/tableKeys/leaveTypeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\n// icons\nimport { CloseRounded } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst ListContainer = styled(Box)(() => ({\n  flexWrap: \"nowrap\",\n  overflowY: \"hidden\",\n  overflowX: \"auto\",\n  flexDirection: \"column\",\n  display: \"flex\",\n  margin: \"10px 10px\",\n}));\n\nconst ListItem = styled(Typography)(() => ({\n  fontSize: \"14px\",\n  paddingRight: \"5px\",\n  paddingLeft: \"5px\",\n}));\n\nconst ListItemContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  backgroundColor: \"#f9f9f9\",\n  marginRight: \"10px\",\n  alignItems: \"center\",\n  borderRadius: \"10@s\",\n  minWidth: \"150px\",\n}));\n\nexport default function LeaveType({}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [selectDepartments, setSelectDepartments] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [multipleDepartments, setMultipleDepartments] = useState([]);\n  const [state, setState] = useState({\n    name: \"\",\n    leaveTypeFor: \"\",\n    departments: \"\",\n    autoEarned: false,\n    total: 0,\n    isSpecial: false,\n    canResetCarryForward: false,\n    carryForwardCount: 0,\n    autoEarnCount: 0,\n  });\n\n  let {\n    name,\n    leaveTypeFor,\n    departments,\n    autoEarned,\n    total,\n    isSpecial,\n    canResetCarryForward,\n    carryForwardCount,\n    autoEarnCount,\n  } = state;\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((s) => ({\n          ...s,\n          departmentName: s?.departments.map((d) => d.name).join(\", \"),\n        }))\n      );\n\n      console.log(data.result, \"bbbnvghfhfd\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // console.log(multipleDepartments, \"multipleDepartments\");\n\n  const getDepartments = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setSelectDepartments(\n        data.result.map((d) => ({ label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, [selectedSetting]);\n\n  const AddLeaveType = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let payload = {\n      name,\n      leaveTypeFor,\n      departments: multipleDepartments,\n      autoEarned,\n      total,\n      isSpecial,\n      canResetCarryForward,\n      carryForwardCount,\n      autoEarnCount,\n      schoolId: selectedSetting._id,\n    };\n    // console.log(payload, \"payload\");\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.leaveType.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.leaveType.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setState({\n      name: \"\",\n      leaveTypeFor: \"\",\n      departments: \"\",\n      autoEarned: false,\n      total: 0,\n      isSpecial: false,\n      canResetCarryForward: false,\n      carryForwardCount: 0,\n      autoEarnCount: 0,\n    });\n    setMultipleDepartments([]);\n\n    setOpen(false);\n    setLoading(false);\n  };\n\n  let handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"departments\") {\n      setMultipleDepartments(value);\n    } else {\n      setState({ ...state, [name]: value });\n    }\n  };\n\n  const handleRemoveDepartments = (data) => {\n    let newList = multipleDepartments.filter((t) => t != data);\n    setMultipleDepartments(newList);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setState({\n      name: data.name,\n      leaveTypeFor: data.leaveTypeFor,\n      departments: data.departments.map((d) => d._id),\n      autoEarned: data.autoEarned,\n      total: data.total,\n      isSpecial: data.isSpecial,\n      canResetCarryForward: data.canResetCarryForward,\n      carryForwardCount: data.carryForwardCount,\n      autoEarnCount: data.autoEarnCount,\n    });\n    setMultipleDepartments(data.departments.map((d) => d._id));\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.leaveType.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Leave Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={leaveTypeTableKeys}\n        bodyDataModal=\"leave type\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Leave Type\" onAddClick={AddLeaveType} />\n\n      {/* ==== add/edit leave type ======== */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n        }}>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle sx={{ fontWeight: 600 }}>\n            {dataToEdit ? \"Update  Leave Type\" : \"Add  Leave Type\"}\n          </DialogTitle>\n          <Divider />\n          <DialogContent p={2}>\n            <Grid rowSpacing={0} columnSpacing={2} container>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormControl fullWidth>\n                  <TextField\n                    required\n                    id=\"basic-standard\"\n                    name=\"name\"\n                    size=\"small\"\n                    value={name}\n                    onChange={handleChange}\n                    label=\"Name\"\n                    sx={{ label: { fontSize: 12 } }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel size=\"small\" required>\n                    Select Leave Type\n                  </InputLabel>\n                  <Select\n                    required={true}\n                    label=\"Select Leave Types\"\n                    labelId=\"demo-simpless-select-filled-label\"\n                    id=\"demo-simple-select-filled-l\"\n                    name=\"leaveTypeFor\"\n                    value={leaveTypeFor}\n                    onChange={handleChange}>\n                    <MenuItem value={\"Student\"}>Student</MenuItem>\n                    <MenuItem value={\"Employee\"}>Employee</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              {state?.leaveTypeFor === \"Employee\" && (\n                <>\n                  <Grid item xs={12} md={12} mt={2}>\n                    <FormControl fullWidth size=\"small\">\n                      <InputLabel size=\"small\" required>\n                        Select Department\n                      </InputLabel>\n                      <Select\n                        label=\"Select Departments\"\n                        labelId=\"demo-simpless-select-filled-label\"\n                        id=\"demo-simple-select-filled-l\"\n                        name=\"departments\"\n                        value={multipleDepartments || \"\"}\n                        onChange={handleChange}\n                        multiple>\n                        {selectDepartments.map((d) => (\n                          <MenuItem key={d.value} value={d.value}>\n                            {d.label}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n\n                    <ListContainer>\n                      {multipleDepartments.map((m) => (\n                        <ListItemContainer key={m}>\n                          <ListItem component=\"span\">\n                            {\n                              selectDepartments.filter((d) => d.value == m)[0]\n                                ?.label\n                            }\n                          </ListItem>\n                          <IconButton\n                            color=\"error\"\n                            onClick={() => handleRemoveDepartments(m)}>\n                            <CloseRounded fontSize=\"small\" />\n                          </IconButton>\n                        </ListItemContainer>\n                      ))}\n                    </ListContainer>\n                  </Grid>\n\n                  <Grid item xs={12} sm={12} md={12}>\n                    <FormControl required fullWidth size=\"small\">\n                      <RadioGroup\n                        size=\"small\"\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"isSpecial\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={isSpecial}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Special Type:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            value={true}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            value={false}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"total\"\n                        value={total}\n                        onChange={handleChange}\n                        label=\"Total\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} mt={2}>\n                    <FormControl fullWidth size=\"small\">\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"autoEarned\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={autoEarned}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Leave Auto Earned:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            value={true}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            size=\"small\"\n                            value={false}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"autoEarnCount\"\n                        value={autoEarnCount}\n                        onChange={handleChange}\n                        label=\"Enter Auto Earn Count\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} mt={2}>\n                    <FormControl fullWidth>\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"canResetCarryForward\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={canResetCarryForward}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Carryforward Reset:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            size=\"small\"\n                            value={true}\n                            sx={{ fontSize: 15 }}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            size=\"small\"\n                            value={false}\n                            sx={{ fontSize: 15 }}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"carryForwardCount\"\n                        value={carryForwardCount}\n                        onChange={handleChange}\n                        label=\"Enter Carryforward Count\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Close\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              loading={loading}\n              variant=\"contained\"\n              type=\"submit\">\n              {dataToEdit ? \"Update\" : \"Submit\"}\n            </LoadingButton>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","export const studentLeaveTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveType\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"numberOfDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n  },\n  {\n    name: \"Status\",\n    key: \"status\",\n  },\n];\n","import React, { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { studentLeaveTableKeys } from \"../../data/tableKeys/studentLeaveData\";\n\nexport default function StudentsLeave() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Student Leave\" />\n\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentLeaveTableKeys}\n        bodyDataModal=\"student leave\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeLeaveManageTableKeys = [\n  {\n    name: \"Name\",\n    key: \"applierRoleName\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveTypeName\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"totalDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n    isDate: true,\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n    isDate: true,\n  },\n  {\n    name: \"Status\",\n    key: \"leaveStatus\",\n  },\n];\n","/** @format */\n\nexport const employeeLeaveTableKeys = [\n  {\n    name: \"Name\",\n    key: \"applierRoleName\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveTypeName\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"totalDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n    isDate: true,\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n    isDate: true,\n  },\n  {\n    name: \"Status\",\n    key: \"leaveStatus\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLeaveManageTableKeys } from \"../../data/tableKeys/employeeLeaveManageData\";\nimport { employeeLeaveTableKeys } from \"../../data/tableKeys/employeeLeaveListData\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddForm from \"../../forms/AddForm\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useContext } from \"react\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nconst LeaveData = styled(Paper)(({ theme }) => ({\n  height: \"80px\",\n  padding: \"20px\",\n  textAlign: \"center\",\n}));\n\nconst DataContainer = styled(Grid)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"10px\",\n}));\n\nconst Leave_Options = [\n  { label: \"FullDay\", value: \"fullday\" },\n  { label: \"First half\", value: \"firstHalf\" },\n  { label: \"Second half\", value: \"secondHalf\" },\n];\n\nconst CustomAction = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [loadingApprove, setLoadingApprove] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateApproveStatus = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n      };\n      setLoadingApprove(true);\n      await put(\n        PRIVATE_URLS.leaveApplication.approveLeave + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      setLoadingApprove(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingApprove(false);\n    }\n  };\n\n  const updateRejectStatus = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.leaveApplication.rejectLeave + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        {data.leaveStatus === \"pending\" || data.leaveStatus === \"rejected\" ? (\n          <LoadingButton\n            loading={loadingApprove}\n            size=\"small\"\n            onClick={updateApproveStatus}\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        ) : null}\n        {data.leaveStatus === \"pending\" || data.leaveStatus === \"approved\" ? (\n          <LoadingButton\n            loading={loading}\n            size=\"small\"\n            onClick={updateRejectStatus}\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        ) : null}\n      </Stack>\n    </>\n  );\n};\n\nexport default function EmployeeLeave() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [totalDays, setotalDays] = useState(0);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [leaveApplication, setLeaveApplication] = useState([]);\n  const [leaveEmployeeApplication, setLeaveEmployeeApplications] = useState([]);\n  const [range, setRange] = useState([]);\n  const [eployeeLeaveCredits, setEployeeLeaveCredits] = useState([]);\n\n  const AddLeave = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getLeaveApplication = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveApplication.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveApplication(\n        data.result.map((s) => ({ ...s, leaveTypeName: s.leaveType.name }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const geteEployeeLeaveCredits = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.leaveApplication.employeeLeaveCredits,\n        {\n          params: { schoolId: selectedSetting._id },\n        }\n      );\n      setEployeeLeaveCredits(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveEmployeeApplications = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.leaveApplication.listEmployeeApplications,\n        {\n          params: { schoolId: selectedSetting._id },\n        }\n      );\n      setLeaveEmployeeApplications(\n        data.result.map((s) => ({ ...s, leaveTypeName: s.leaveType.name }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveType = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveTypes(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getLeaveType();\n    getLeaveApplication();\n    geteEployeeLeaveCredits();\n    getLeaveEmployeeApplications();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"schoolId\", selectedSetting._id);\n    formData.append(\"leaveTypeId\", values.leaveType);\n    formData.append(\"startDate\", dayjs(values.startDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"endDate\", dayjs(values.endDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"subject\", values.subject);\n    formData.append(\"description\", values.description);\n    formData.append(\"totalDays\", totalDays);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n\n    try {\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.leaveApplication.create,\n        formData\n      );\n      getLeaveEmployeeApplications();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      leaveType: \"\",\n      startDate: null,\n      endDate: null,\n      subject: \"\",\n      description: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  let handleNumberOfDay = (e, v) => {\n    const { name, value } = e.target;\n\n    const indexOfV = range.indexOf(v);\n    let updatedList = range.map((item, index) =>\n      index == indexOfV ? { ...item, value: value } : item\n    );\n    setRange(updatedList);\n  };\n\n  useEffect(() => {\n    let number = 0;\n    for (let item of range) {\n      if (item.value) {\n        if (item.value === \"fullday\") {\n          number += 1;\n        } else {\n          number += 0.5;\n        }\n      }\n    }\n    setotalDays(number);\n  }, [range]);\n\n  useEffect(() => {\n    if (entryFormik.values.endDate && entryFormik.values.startDate) {\n      const start = new Date(entryFormik.values.startDate);\n      const end = new Date(entryFormik.values.endDate);\n      if (start <= end) {\n        const currentDate = new Date(start);\n        let list = [];\n        while (currentDate <= end) {\n          let newItem = {\n            value: \"\",\n            date: new Date(currentDate).toLocaleDateString(),\n          };\n          list.push(newItem);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n        setRange(list);\n      }\n    }\n  }, [entryFormik.values.endDate, entryFormik.values.startDate]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Leave\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Leave List\", \"Leave Manage\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <DataContainer container spacing={2}>\n          <Grid item xs={4} md={4} lg={2}>\n            <LeaveData>\n              <Typography fontSize=\"15px\" color=\"#196838\">\n                Total taken :89\n              </Typography>\n            </LeaveData>\n          </Grid>\n          {eployeeLeaveCredits.map((data) => (\n            <Grid item xs={4} md={4} lg={2}>\n              <LeaveData>\n                <Typography fontSize=\"15px\">\n                  {data.name}:{data.total}\n                </Typography>\n                <Typography fontSize=\"15px\">\n                  {\" \"}\n                  Total taken :{data.totalTaken ? data.totalTaken : 0}\n                </Typography>\n              </LeaveData>\n            </Grid>\n          ))}\n        </DataContainer>\n\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLeaveTableKeys}\n          bodyData={leaveEmployeeApplication}\n          bodyDataModal=\"leave\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLeaveManageTableKeys}\n          bodyData={leaveApplication}\n          bodyDataModal=\"leave\"\n          CustomAction={CustomAction}\n          onUpdate={getLeaveApplication}\n        />\n      </TabPanel>\n\n      <AddForm title=\"Add Employee Leave\" onAddClick={AddLeave} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Employee Leave\" : \"Add Employee Leave\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"leaveType\"\n              label=\"Leave Type\"\n              required={true}\n              options={leaveTypes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"startDate\"\n              label=\"Start Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"endDate\"\n              label=\"End Date\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"subject\" label=\"Subject\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FileSelect\n              name=\"image\"\n              label=\"Select File\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n            sx={{\n              margin: \"15px 0px\",\n            }}>\n            <Typography>Number of days : {totalDays}</Typography>\n          </Grid>\n          {!entryFormik.values.endDate ? (\n            <></>\n          ) : (\n            <Grid item xs={12} md={12} lg={12}>\n              <Typography required>Information :</Typography>\n              {!entryFormik.values.endDate ? (\n                <></>\n              ) : (\n                <Box\n                  style={{\n                    height: \"100px\",\n                    overflow: \"scroll\",\n                  }}>\n                  {range.map((date, index) => (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        gap: \"10px\",\n                      }}\n                      key={index}>\n                      <Typography>{date.date}</Typography>\n\n                      <CustomSelect\n                        name=\"totalDays\"\n                        value={date.value}\n                        onChange={(e) => handleNumberOfDay(e, date)}\n                        options={Leave_Options}\n                      />\n                    </Box>\n                  ))}\n                </Box>\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nconst Type_Options = [\n  {\n    label: \"Student\",\n    value: \"student\",\n  },\n  {\n    label: \"Employee\",\n    value: \"employee\",\n  },\n];\n\nexport default function LeaveReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loadingPdf, setLoadingPdf] = useState(false);\n  const [loadingExcel, setLoadingExcel] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear:\n              entryFormik.values.academicYear || formik.values.academicYear,\n            \"academicInfo.class\":\n              entryFormik.values.class || formik.values.class,\n            \"academicInfo.section\":\n              entryFormik.values.section || formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n      formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveType = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveTypes(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(\n        data.result.map((r) => ({\n          ...r,\n          label: r.name,\n          value: r._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"role\", data.result[0]?._id);\n      formik.setFieldValue(\"role\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role || formik.values.role,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"employee\", data.result[0]?._id);\n      formik.setFieldValue(\"employee\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleGetPrintPdf = async (values) => {\n    try {\n      setLoadingPdf(true);\n      const getPdf = await get(PRIVATE_URLS.leaveApplication.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          userType: values.userType,\n          academicYearId: values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"leave_details.pdf\");\n\n      setLoadingPdf(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingPdf(false);\n    }\n  };\n\n  const handleGetDownloadExcel = async (values) => {\n    try {\n      setLoadingExcel(true);\n      const getExcel = await get(PRIVATE_URLS.leaveApplication.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          userType: values.userType,\n          academicYearId: values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"leave_details.xlsx\"\n      );\n      setLoadingExcel(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingExcel(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      type: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetDownloadExcel,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n      type: \"\",\n      userType: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetPrintPdf,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n    getRoles();\n    getLeaveType();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      (entryFormik.values.academicYear &&\n        entryFormik.values.class &&\n        entryFormik.values.section) ||\n      (formik.values.academicYear &&\n        formik.values.class &&\n        formik.values.section)\n    ) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n    entryFormik.values.section,\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (entryFormik.values.role || formik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role, formik.values.role]);\n\n  return (\n    <>\n      <PageHeader title=\"Leave Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Summary\", \"Leave Planner\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Select Type\"\n                options={Type_Options}\n              />\n            </Grid>\n            {entryFormik.values.type === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={entryFormik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n            {entryFormik.values.type === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={entryFormik}\n                    label=\"Select Employee\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loadingExcel}\n                onClick={handleGetDownloadExcel}\n                size=\"small\"\n                variant=\"contained\">\n                Download\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={formik}\n                label=\"Select Type\"\n                options={leaveTypes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={formik}\n                label=\"Select User Type\"\n                options={Type_Options}\n              />\n            </Grid>\n            {formik.values.userType === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={formik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={formik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={formik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n            {formik.values.userType === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={formik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={formik}\n                    label=\"Select Employee\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loadingPdf}\n                onClick={handleGetPrintPdf}\n                size=\"small\"\n                variant=\"contained\">\n                Print\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const itemTableKeys = [\n  {\n    name: \"Item Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Department\",\n    key: \"departmentName\",\n  },\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Brand\",\n    key: \"brand\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { itemTableKeys } from \"../../data/tableKeys/itemData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Item() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [departments, setDepartments] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [PdfLoading, setPdfLoading] = useState(false);\n  const [excelLoading, setExcelLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // console.log(data.result, \"firm\");\n      setData(\n        data.result.map((data) => ({\n          ...data,\n          departmentName: data?.department?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartments = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartments(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"department\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.item.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.item.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      department: dataToEdit?.department || \"\",\n      brand: dataToEdit?.brand || \"\",\n      itemId: dataToEdit?.itemId || \"\",\n      description: dataToEdit?.description || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit({ ...data, department: data.department._id });\n    setValue(1);\n  };\n\n  // pfd download\n  const handlePdfDownload = async (e) => {\n    setPdfLoading(true);\n\n    try {\n      const response = await get(PRIVATE_URLS.item.downloadPdf, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(response, \"response\");\n      const uri = URL.createObjectURL(response.data);\n      window.open(uri, \"_blank\");\n    } catch (error) {\n      console.log(error);\n    }\n    setPdfLoading(false);\n  };\n\n  // excel download\n  const handleExcelDownload = async (e) => {\n    setExcelLoading(true);\n    console.log(\"usha\");\n\n    try {\n      const response = await get(PRIVATE_URLS.item.downloadExcel, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // Create a blob from the response data\n      const blob = new Blob([response.data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      // Create a download URL\n      const url = URL.createObjectURL(blob);\n\n      // Create a link element\n      const link = document.createElement(\"a\");\n      link.href = url;\n      const fileName = `InventoryItem.xlsx`;\n      link.setAttribute(\"download\", fileName);\n\n      // Append the link to the document body\n      document.body.appendChild(link);\n\n      // Simulate a click to trigger the download\n      link.click();\n\n      // Remove the link from the document\n      document.body.removeChild(link);\n\n      // Revoke the object URL to free up memory\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(\"Error downloading the Excel file:\", error);\n      alert(\"Failed to download the file. Please try again.\");\n    }\n    setExcelLoading(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Item\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Item List\",\n          dataToEdit && value != 0 ? \"Edit Item\" : \"Add Item\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <LoadingButton\n          type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ my: 2 }}\n          loading={PdfLoading}\n          onClick={handlePdfDownload}>\n          PDF\n        </LoadingButton>\n        <LoadingButton\n          type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ ml: 2, my: 2 }}\n          loading={excelLoading}\n          onClick={handleExcelDownload}>\n          Excel\n        </LoadingButton>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Items\"\n          bodyData={data}\n          tableKeys={itemTableKeys}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Item name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"department\"\n                formik={entryFormik}\n                label=\"Select Department\"\n                options={departments}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"brand\"\n                formik={entryFormik}\n                label=\"Brand\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"itemId\"\n                formik={entryFormik}\n                label=\"item Id\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={false}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Description\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Item name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"department\"\n                formik={entryFormik}\n                label=\"Select Department\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"brand\"\n                formik={entryFormik}\n                label=\"brand\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"id\"\n                formik={entryFormik}\n                label=\"Item Id\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={false}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Description\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const VendorTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { VendorTableKeys } from \"../../data/tableKeys/vendorData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nexport default function Vendor() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      setData(\n        data.result.map((data) => ({\n          ...data,\n          name: data?.addedBy?.basicInfo?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/Update action\n  const handleCreateOrUpdate = async (values) => {\n    console.log(values, \"values\");\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          category: values.category,\n          phone: values.phone,\n          email: values.email,\n          gstNumber: values.gstNumber,\n          dealerName: values.dealerName,\n          dealerPhoneNumber: values.dealerPhoneNumber,\n          website: values.website,\n        },\n        addressInfo: {\n          address: values.address,\n          state: values.state,\n          city: values.city,\n          zipCode: values.zipCode,\n        },\n        bankInfo: {\n          bankName: values.bankName,\n          accountNumber: values.accountNumber,\n          ifscCode: values.ifscCode,\n          branchName: values.branchName,\n        },\n        photo: values.photo,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      logo.forEach((file) => formData.append(\"photo\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vendor.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vendor.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      category: dataToEdit?.basicInfo?.category || \"\",\n      name: dataToEdit?.basicInfo?.name || \"\",\n      phone: dataToEdit?.basicInfo?.phone || \"\",\n      email: dataToEdit?.basicInfo?.email || \"\",\n      gstNumber: dataToEdit?.basicInfo?.gstNumber || \"\",\n      dealerName: dataToEdit?.basicInfo?.dealerName || \"\",\n      dealerPhoneNumber: dataToEdit?.basicInfo?.dealerPhoneNumber || \"\",\n      website: dataToEdit?.basicInfo?.website || \"\",\n      address: dataToEdit?.addressInfo?.address || \"\",\n      state: dataToEdit?.addressInfo?.state || \"\",\n      city: dataToEdit?.addressInfo?.city || \"\",\n      zipCode: dataToEdit?.addressInfo?.zipCode || \"\",\n      bankName: dataToEdit?.bankInfo?.bankName || \"\",\n      accountNumber: dataToEdit?.bankInfo?.accountNumber || \"\",\n      ifscCode: dataToEdit?.bankInfo?.ifscCode || \"\",\n      branchName: dataToEdit?.bankInfo?.branchName || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  // console.log(dataToEdit, \"dataToEdit\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"photo\") {\n        setLogo(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vendor\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Vendor List\",\n          dataToEdit && value != 0 ? \"Edit Vendor\" : \"Add Vendor\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Vendor\"\n          bodyData={data}\n          tableKeys={VendorTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Logo:\n              </Typography>\n              <FileSelect\n                name=\"photo\"\n                multi={false}\n                label=\"Select Logo\"\n                onChange={(e) => handleChangePhoto(e, \"photo\")}\n                customOnChange={true}\n                selectedFiles={logo}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Basic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"category\"\n                formik={entryFormik}\n                label=\"Category\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"phone\"\n                formik={entryFormik}\n                label=\"Phone no.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"email\"\n                formik={entryFormik}\n                label=\"Email\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"gstNumber\"\n                formik={entryFormik}\n                label=\"GST Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"dealerName\"\n                formik={entryFormik}\n                label=\"Dealer Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"dealerPhoneNumber\"\n                formik={entryFormik}\n                label=\"Dealer Phone No.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"website\"\n                formik={entryFormik}\n                label=\"Vendor Website\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Address Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"address\"\n                formik={entryFormik}\n                label=\"Address\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"city\"\n                formik={entryFormik}\n                label=\"City\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"state\"\n                formik={entryFormik}\n                label=\"State\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"zipCode\"\n                formik={entryFormik}\n                label=\"Zip Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Bank Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"bankName\"\n                formik={entryFormik}\n                label=\"Bank Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"accountNumber\"\n                formik={entryFormik}\n                label=\"Account No\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"ifscCode\"\n                formik={entryFormik}\n                label=\"IFSC Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"branchName\"\n                formik={entryFormik}\n                label=\"Branch Name\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 2, fontWeight: \"bold\" }}>\n                Logo:\n              </Typography>\n              <FormInput\n                required={true}\n                name=\"logo\"\n                formik={entryFormik}\n                label=\"logo\"\n                type=\"file\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Basic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"category\"\n                formik={entryFormik}\n                label=\"Category\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"contactNumber\"\n                formik={entryFormik}\n                label=\"Phone no.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"email\"\n                formik={entryFormik}\n                label=\"Email\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"gst\"\n                formik={entryFormik}\n                label=\"GST Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"dealerName\"\n                formik={entryFormik}\n                label=\"Dealer Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"dealerContact\"\n                formik={entryFormik}\n                label=\"Dealer Phone No.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"vendorWebsite\"\n                formik={entryFormik}\n                label=\"Vendor Website\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Address Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"address\"\n                formik={entryFormik}\n                label=\"Address\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"city\"\n                formik={entryFormik}\n                label=\"City\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"state\"\n                formik={entryFormik}\n                label=\"State\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"zipCode\"\n                formik={entryFormik}\n                label=\"Zip Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Bank Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"bankName\"\n                formik={entryFormik}\n                label=\"Bank Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"accountNo\"\n                formik={entryFormik}\n                label=\"Account No\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"ifsc\"\n                formik={entryFormik}\n                label=\"IFSC Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"branchName\"\n                formik={entryFormik}\n                label=\"Branch Name\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const TransactionTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  { name: \"Date\", key: \"date\" },\n  { name: \"Status\", key: \"status\" },\n];\n","/** @format */\n\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { TransactionTableKeys } from \"../../data/tableKeys/transactionData\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst paymenyModes = [\n  { label: \"Cash\", value: \"Cash\" },\n  { label: \"Upi\", value: \"Upi\" },\n  { label: \"Netbanking\", value: \"Netbanking\" },\n  { label: \"Cheque\", value: \"Cheque\" },\n  { label: \"Card\", value: \"Card\" },\n  { label: \"Others\", value: \"Others\" },\n  { label: \"Null\", value: \"Null\" },\n];\n\nconst types = [\n  { label: \"In\", value: \"In\" },\n  { label: \"Out\", value: \"Out\" },\n];\n\nconst purposes = [\n  { label: \"Inhouse\", value: \"Inhouse\" },\n  { label: \"Damage\", value: \"Damage\" },\n  { label: \"Purchase\", value: \"Purchase\" },\n  { label: \"Sell\", value: \"Sell\" },\n  { label: \"Return\", value: \"Return\" },\n  { label: \"InventoryUpdate\", value: \"InventoryUpdate\" },\n];\n\nconst fromTypes = [\n  { label: \"Vendor\", value: \"Vendor\" },\n  { label: \"School\", value: \"School\" },\n];\n\nconst status = [\n  { label: \"Pending\", value: \"Pending\" },\n  { label: \"Completed\", value: \"Completed\" },\n  { label: \"Cancelled\", value: \"Cancelled\" },\n];\n\nconst toTypes = [\n  { label: \"School\", value: \"School\" },\n  { label: \"Vendor\", value: \"Vendor\" },\n  { label: \"Student\", value: \"Student\" },\n  { label: \"Employee\", value: \"Employee\" },\n];\n\nexport default function InOutTransaction() {\n  const { settings, selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectInvoice, setSelectInvoice] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [selectSchool, setSelectSchool] = useState(\n    settings.map((s) => ({ label: s.name, value: s._id }))\n  );\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      // setData(\n      //   data.result.map((data) => ({\n      //     ...data,\n      //     departmentName: data?.department?.name,\n      //   }))\n      // );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get items\n  const getItems = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list);\n      // console.log(data, \"haha\");\n      setItems(\n        data.result.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"studentName\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get vendors\n  const getVendors = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(data, \"vendors\");\n      setVendors(\n        data.result.map((d) => ({\n          label: d.addedBy?.basicInfo?.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"vendor\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get roles\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"role\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get employee\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role,\n          },\n        },\n      });\n      setEmployees(\n        data.result.map((emp) => ({\n          label: emp?.basicInfo?.name,\n          value: emp._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"employee\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/Update action\n  const handleCreateOrUpdate = async (values) => {\n    console.log(values, \"values\");\n    try {\n      const payload = {\n        ...values,\n        from: values.fromType === \"vendor\" ? values.vendor : values.school,\n        // toType: values.toType===\"vendor\" ? values.\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectInvoice.forEach((file) => formData.append(\"invoice\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vendor.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vendor.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: dataToEdit?.item || \"\",\n      pricePerItem: dataToEdit?.pricePerItem || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      trasactionMode: dataToEdit?.trasactionMode || \"\",\n      type: dataToEdit?.type || \"\",\n      purpose: dataToEdit?.purpose || \"\",\n      fromType: dataToEdit?.fromType || \"\",\n      status: dataToEdit?.status || \"\",\n      toType: dataToEdit?.toType || \"\",\n      vendor: dataToEdit?.vendor || \"\",\n      section: dataToEdit?.section || \"\",\n      class: dataToEdit?.class || \"\",\n      employee: dataToEdit?.employee || \"\",\n      role: dataToEdit?.role || \"\",\n      studentName: dataToEdit?.studentName || \"\",\n      school: dataToEdit?.school || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getData();\n    getItems();\n    getVendors();\n    getClasses();\n    getRoles();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.section, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role]);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"invoice\") {\n        setSelectInvoice(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectInvoice(selectInvoice.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Transaction\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Transaction List\", \"Make Transaction\", \"Edit Transaction\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Transaction\"\n          bodyData={data}\n          tableKeys={TransactionTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mb: 1, fontWeight: \"bold\" }}>\n                Item Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Item\"\n                options={items}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"pricePerItem\"\n                formik={entryFormik}\n                label=\"Price Per Item\"\n                type=\"number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"trasactionMode\"\n                formik={entryFormik}\n                label=\"Mode of Payment\"\n                options={paymenyModes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Type\"\n                options={types}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"purpose\"\n                formik={entryFormik}\n                label=\"Purpose\"\n                options={purposes}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Between\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"From Type\"\n                options={fromTypes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"To Type\"\n                options={toTypes}\n              />\n            </Grid>\n            {/* <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Transaction Status\"\n                options={status}\n              />\n            </Grid> */}\n            {(entryFormik.values.fromType === \"Vendor\" ||\n              entryFormik.values.toType === \"Vendor\") && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"vendor\"\n                  formik={entryFormik}\n                  label=\"Vendors\"\n                  options={vendors}\n                />\n              </Grid>\n            )}\n            {entryFormik.values.toType === \"Student\" && (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"studentName\"\n                    formik={entryFormik}\n                    label=\"Select Student Name\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {(entryFormik.values.fromType === \"School\" ||\n              entryFormik.values.toType === \"School\") && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"school\"\n                  formik={entryFormik}\n                  label=\"Select School\"\n                  options={selectSchool}\n                />\n              </Grid>\n            )}\n            {entryFormik.values.toType === \"Employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={entryFormik}\n                    label=\"Select Employees\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FileSelect\n                name=\"invoice\"\n                label=\"Select Invoice\"\n                onChange={(e) => handleChangeFiles(e, \"invoice\")}\n                customOnChange={true}\n                selectedFiles={selectInvoice}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mb: 1, fontWeight: \"bold\" }}>\n                Item Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Item\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"price\"\n                formik={entryFormik}\n                label=\"Price per Item\"\n                type=\"number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"mode\"\n                formik={entryFormik}\n                label=\"Mode of Payment\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"purpose\"\n                formik={entryFormik}\n                label=\"Purpose\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Between\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Transaction Status\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"vender\"\n                formik={entryFormik}\n                label=\"Venders\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"section\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"studentName\"\n                formik={entryFormik}\n                label=\"Student Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={12} item>\n              <Button size=\"small\" variant=\"outlined\" sx={{ my: 2 }}>\n                Upload Invoice\n              </Button>\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const stockListTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n  {\n    name: \"Total Stock\",\n    key: \"totalStock\",\n  },\n];\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function OverviewTable() {\n  return (\n    <>\n      <TableContainer\n        sx={{\n          display: \"grid\",\n          justifyContent: \"center\",\n          my: 2,\n        }}\n      >\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h6\"\n          component=\"div\"\n          textAlign=\"start\"\n          sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}\n        >\n          Overview\n        </Typography>\n        {/* ========= Desktop view =============== */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"none\",\n              md: \"inline-block\",\n              lg: \"inline-block\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0} Qty\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n\n        {/* ======== Tablet view table ============ */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"inline-block\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0}\n                Qty\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n\n        {/* ======== Mobile view table ============ */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"inline-block\",\n              sm: \"none\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0}\n                {\"  \"}Qty\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { stockListTableKeys } from \"../../data/tableKeys/stockListData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport OverviewTable from \"./OverviewTable\";\n\nexport default function StockList() {\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Item Stock\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} style={{ alignSelf: \"center\" }} item>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Sell\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Issue\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Add Item\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Add Vendor\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      {/* overview table component ======= */}\n      <Grid xs={12} md={12} lg={12} style={{ alignSelf: \"center\" }} item>\n        <Button size=\"small\" variant=\"contained\" sx={{ mr: 2, mt: 1 }}>\n          Excel\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ mr: 2, mt: 1 }}>\n          PDF\n        </Button>\n      </Grid>\n      <OverviewTable />\n      {/* ================================ */}\n      <Typography\n        id=\"modal-modal-title\"\n        variant=\"h6\"\n        component=\"div\"\n        textAlign=\"start\"\n        sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}\n      >\n        List of Stocks\n      </Typography>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Item stock\"\n        bodyData={data}\n        tableKeys={stockListTableKeys}\n      />\n    </>\n  );\n}\n","export const issueDetailTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"itemName\",\n  },\n  {\n    name: \"Issuer Name\",\n    key: \"issueName\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { issueDetailTableKeys } from \"../../data/tableKeys/issueDetailData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst status = [\n  { label: \"Returned\", value: \"Returned\" },\n  { label: \"Pending\", value: \"Pending\" },\n  { label: \"Issued\", value: \"Issued\" },\n  { label: \"Deleted\", value: \"Deleted\" },\n];\n\nexport default function Issue() {\n  const { settings, selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [selectSchool, setSelectSchool] = useState(\n    settings.map((s) => ({ label: s.name, value: s._id }))\n  );\n  console.log(selectSchool, \"selectSchool\");\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  // get items\n  const getItems = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list);\n      // console.log(data, \"haha\");\n      setItems(\n        data.result.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: \"\",\n      quantity: \"\",\n      issueStatus: \"\",\n      fromType: \"\",\n      school: \"\",\n      toType: \"\",\n      employeeName: \"\",\n      note: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getItems();\n  }, [selectedSetting._id]);\n\n  const handleClose = () => {\n    setValue(0);\n    getItems();\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Issue Details\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"List of Issue\", \"Issue\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Issue\"\n          bodyData={data}\n          tableKeys={issueDetailTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Select Item\"\n                options={items}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Select Issue Status\"\n                options={status}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"Select From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"Select School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"Select To Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"employeeName\"\n                formik={entryFormik}\n                label=\"Select Employee Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Issue\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const sellDetailTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"itemName\",\n  },\n  {\n    name: \"Sellar Name\",\n    key: \"issueName\",\n  },\n  {\n    name: \"Total Quantity\",\n    key: \"quantity\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { sellDetailTableKeys } from \"../../data/tableKeys/sellDetailData\";\n\nexport default function Sell() {\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: \"\",\n      quantity: \"\",\n      SellStatus: \"\",\n      fromType: \"\",\n      school: \"\",\n      toType: \"\",\n      employeeName: \"\",\n      note: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Sell Details\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Sold List\", \"Sell\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Sell\"\n          bodyData={data}\n          tableKeys={sellDetailTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Select Item\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Select Quantity\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"sellStatus\"\n                formik={entryFormik}\n                label=\"Select Sell Status\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"Select From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"Select School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"Select To Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"employeeName\"\n                formik={entryFormik}\n                label=\"Select Employee Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item\n            >\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Sell\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\n\nconst Heading = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  marginTop: \"40px\",\n  textDecoration: \"underline\",\n}));\n\nconst Content = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  padding: \"0 5px\",\n  display: \"inline\",\n  fontWeight: \"bold\",\n  textDecoration: \"underline\",\n  fontFamily: \"Roboto ,sans-serif\",\n}));\n\nconst Container = styled(Box)(({ theme }) => ({\n  width: \"100%\",\n  marginTop: \"10px\",\n  border: \"1px solid black\",\n  padding: \"20px\",\n}));\n\nconst MuiBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: \"10px\",\n  marginTop: \"20px\",\n}));\n\nconst DateContaner = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  padding: \"20px\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n}));\n\nconst TextOuterContent = styled(Box)(({ theme }) => ({\n  padding: \"20px\",\n  display: \"flex\",\n  textIndent: \"50px\",\n}));\n\nexport default function StudyCertificate() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [openBulkIssue, setOpenBulkIssue] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingDownload, setLoadingDownload] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [fromDate, setFromDate] = useState(dayjs(Date.now()));\n  const [toDate, setToDate] = useState(dayjs(Date.now()));\n  const [sections, setSections] = useState([]);\n\n  // console.log(selectedData, \"selectedData\");\n  // console.log(students, \"students\");\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d,\n          id: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitCertificate = async (values) => {\n    console.log(values, \"bfyy\");\n    setLoading(true);\n\n    try {\n      setSelectedData({\n        ...selectedData,\n        fatherName: values?.student?.fatherInfo?.name,\n        academicYearFrom: values?.student?.academicYear?.from,\n        academicYearTo: values?.student?.academicYear?.to,\n        academicId: values?.academicYear,\n        studentName: values?.student?.basicInfo.name,\n        studentId: values?.student?._id,\n        currentClass: values?.student?.academicInfo.class.name,\n        dob: values?.student?.basicInfo.dob,\n        grNo: values?.student?.basicInfo.grNo,\n        studentPhoto: values?.student?.photo,\n        schoolName: values?.student?.school?.name,\n        schoolAddress: values?.student?.school?.address,\n        schoolLogo: values?.student?.school?.logo,\n        category: values?.student?.basicInfo.category,\n        address: values?.student?.contactInfo.presentAddress,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleSubmitCertificate,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleSubmitCertificate,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getStudents();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSubmitCertificateDownload = async (e) => {\n    setLoadingDownload(true);\n\n    try {\n      const response = await get(PRIVATE_URLS.certificate.getStudyCertificate, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: selectedData?.academicId,\n          studentId: selectedData?.studentId,\n        },\n      });\n\n      // Create a Blob from the data\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n\n      // Create a link element\n      const link = document.createElement(\"a\");\n      const uri = URL.createObjectURL(blob);\n\n      link.href = uri;\n      link.setAttribute(\"download\", \"studyCertificate.pdf\");\n\n      document.body.appendChild(link);\n\n      link.click();\n\n      // Remove the link from the document\n      document.body.removeChild(link);\n\n      // Revoke the object URL to free up memory\n      URL.revokeObjectURL(uri);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoadingDownload(false);\n  };\n\n  const handleClose = () => {\n    setOpenBulkIssue(false);\n  };\n\n  const handleBulkIssueOpen = () => {\n    setOpenBulkIssue(true);\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Study Certificate\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            gap={1}\n            item>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleBulkIssueOpen}>\n              Bulk Issue\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={entryFormik.handleSubmit}\n              loading={loading}>\n              Issue\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      {entryFormik.values.student != \"\" && (\n        <>\n          <Container>\n            <Grid\n              container\n              spacing={2}\n              display=\"flex\"\n              justifyContent=\"space-between\">\n              <Grid item xs={6} md={6} lg={3} textAlign=\"start\">\n                <img\n                  src={selectedData.schoolLogo || \"/world-wide-web.png\"}\n                  alt=\"loading...\"\n                  height={100}\n                  width={95}\n                  style={{ objectFit: \"contain\" }}\n                />\n              </Grid>\n\n              <Grid item xs={6} md={6} lg={6} textAlign=\"center\" mt={2}>\n                <Typography textAlign=\"center\" fontSize=\"20px\">\n                  {selectedData.schoolName || \"St Pauls High School\"}\n                </Typography>\n                <Typography textAlign=\"center\" fontSize=\"16px\">\n                  {selectedData.schoolAddress || \"ABC NAGAR\"}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6} lg={3} textAlign=\"end\">\n                <img\n                  src={selectedData.studentPhoto || \"/studingimg.jpg\"}\n                  alt=\"photo\"\n                  height={120}\n                  width={100}\n                  style={{ objectFit: \"contain\" }}\n                />\n              </Grid>\n            </Grid>\n            <Heading>STUDY CERTIFICATE</Heading>\n            <TextOuterContent>\n              <Typography\n                component=\"span\"\n                sx={{\n                  fontSize: \"25px\",\n                  fontFamily: \"sans-serif\",\n                }}>\n                This is to certify that Sri./Kum.\n                <Content component={\"span\"}>\n                  {selectedData.fatherName || \"NA\"}\n                </Content>\n                son/daughter of Mr.\n                <Content component={\"span\"}>\n                  {selectedData.studentName || \"NA\"}\n                </Content>\n                studying in\n                <Content component={\"span\"}>\n                  {selectedData.currentClass || \"NA\"}\n                </Content>\n                in our school for the academic year\n                <Content component={\"span\"}>\n                  {`${selectedData.academicYearFrom} - ${selectedData.academicYearTo}` ||\n                    \"NA\"}\n                </Content>\n                .The residential address is as follows:\n                <Content component={\"span\"}>\n                  {selectedData.address || \"NA\"}\n                </Content>\n                . According to our school records his/her date of birth is\n                <Content component={\"span\"}>\n                  {dayjs(selectedData.dob).format(\"DD-MM-YYYY\")}\n                </Content>\n                . and category is as per our school record G R No is{\" \"}\n                <Content component={\"span\"}>\n                  {selectedData.grNo || \"NA\"}\n                </Content>\n                .\n              </Typography>\n            </TextOuterContent>\n            <DateContaner>\n              <Box>\n                <Typography gutterBottom fontSize=\"20px\">\n                  {dayjs().format(\"DD-MM-YYYY\")}\n                </Typography>\n                <Typography component=\"span\" fontSize=\"20px\">\n                  Place:{\" \"}\n                </Typography>\n                <Typography component=\"span\" fontSize=\"20px\">\n                  {selectedData.schoolAddress}\n                </Typography>\n              </Box>\n\n              <Typography fontSize=\"20px\">Sign Of Head Master</Typography>\n            </DateContaner>\n          </Container>\n\n          <MuiBox>\n            <LoadingButton\n              variant=\"contained\"\n              size=\"small\"\n              type=\"submit\"\n              loading={loadingDownload}\n              onClick={handleSubmitCertificateDownload}>\n              Download\n            </LoadingButton>\n            <Button variant=\"contained\" size=\"small\" aria-label=\"search\">\n              Print\n            </Button>\n          </MuiBox>\n        </>\n      )}\n      {/* ======= bulk issue form model ========= */}\n      <Dialog\n        open={openBulkIssue}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\",\n            p: 2,\n          }}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              fontWeight=\"bold\">\n              Bulk Issue\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"academic\"\n              formik={formik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={6}>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={formik}\n              label=\"Select Student\"\n              options={classes}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={formik}\n              label=\"Select Student\"\n              options={sections}\n            />\n          </Grid>\n          {/* \n          <Grid item xs={12} md={6} lg={6}>\n            <FormControl fullWidth size=\"small\" required>\n              <InputLabel>Student Names</InputLabel>\n              <Select\n                required\n                label=\"Student Names\"\n                id=\"demo-simple-select-filled\"\n                name=\"name\"\n                multiple\n                // value={selectedItems}\n                onChange={handleOnChange}\n                renderValue={(selected) => (\n                  <div style={{ display: \"flex\", overflowX: \"auto\" }}>\n                    {selectedData.map((studentId) => (\n                      <Chip\n                        key={studentId}\n                        label={\n                          students.find((student) => student._id === studentId)\n                            ?.basicInfo.name\n                        }\n                        style={{ marginRight: 5 }} // Adjust spacing between chips\n                      />\n                    ))}\n                  </div>\n                )}>\n                {students.map((s) => (\n                  <MenuItem key={s.id} value={s.id}>\n                    {s.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid> */}\n\n          <Grid item xs={12} md={12} lg={12}>\n            <Box\n              display=\"flex\"\n              gap={2}\n              justifyContent={{\n                xs: \"center\",\n                sm: \"center\",\n                md: \"flex-end\",\n                lg: \"flex-end\",\n              }}>\n              <LoadingButton\n                // loading={downloadLoading}\n                sx={{\n                  color: \"#fff\",\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                // onClick={handleBulkCertificateDownload}\n                disabled={loadingDownload}>\n                Download\n              </LoadingButton>\n\n              <LoadingButton\n                // loading={printerLoader}\n                // onClick={handleBulkPrint}\n                type=\"button\"\n                sx={{\n                  color: \"#fff\",\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                aria-label=\"search\">\n                Print\n              </LoadingButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst Header = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"25px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"21px\",\n  },\n}));\n\nconst DataContainer = styled(Grid)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  [theme.breakpoints.down(\"lg\")]: {\n    flexDirection: \"row\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n}));\n\nconst Container = styled(Box)(({ theme }) => ({\n  marginTop: \"20px\",\n  padding: \"40px\",\n  [theme.breakpoints.down(\"lg\")]: {\n    width: \"80%\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    width: \"100%\",\n  },\n}));\n\nconst Signature = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"13px\",\n  },\n}));\n\nconst ListItem = styled(Typography)(({ theme }) => ({\n  fontSize: \"18px\",\n  width: \"48%\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"14px\",\n    width: \"100%\",\n  },\n}));\n\nconst Content = styled(Typography)(({ theme }) => ({\n  fontSize: \"20px\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"14px\",\n  },\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: 500,\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"25px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"18px\",\n  },\n}));\nexport default function TransferCertificate() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getAcademicYear();\n    getStudents();\n  }, [selectedSetting._id]);\n  return (\n    <>\n      <PageHeader title=\"Study Certificate\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            display=\"flex\"\n            alignSelf=\"center\"\n            justifyContent=\"flex-end\"\n            gap={1}\n            item>\n            <Button size=\"small\" variant=\"contained\">\n              Issue\n            </Button>\n            <Button size=\"small\" variant=\"contained\">\n              Bulk Issue\n            </Button>\n            <Button size=\"small\" variant=\"contained\">\n              Print\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n          <Typography\n            sx={{\n              fontSize: { xs: \"25px\", sm: \"25px\", md: \"30px\", lg: \"30px\" },\n              fontWeight: \"bold\",\n            }}>\n            Kayaka school\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={12}\n          style={{ textAlign: \"center\" }}>\n          <Title>ENGLISH MEDIUM PRIMARY AND HIGH SCHOOL</Title>\n          <Title>Kayaka school</Title>\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n          <Header>TRANSFER CERTIFICATE</Header>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={12}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          width={\"100%\"}>\n          <Container>\n            <Grid container spacing={2}>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>1] Name of the School:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"schoolName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>2] Name of the Pupil in full:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"studentName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>3] G. R. No:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"grNo\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>4] Place of Birth:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"birthPlace\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem> 5] Date of Birth(in figures and words):</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"dobWords\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>6] Sex:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"sex\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>7] Nationality:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"nationality\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>8] Religion:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"religion\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>9] Caste:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"caste\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  10] Whether the candidate belongs to SC and ST:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"belongs\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>11] Aadhar No.:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"aadhar\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>12] Name of the father:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"fatherName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>13] Name of the mother:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"motherName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem> 14] Date of Admission in the Scchool:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"admissionDate\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>15] School Previously Attended:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"prevSchool\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  16] Standard in which admission is granted:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"admissionGrant\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  17] Standard in which the pupil was studying at the time of\n                  leaving the school(in words):\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"currentClass\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>18] Medium of instruction:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"instructions\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  19] Whether the pupil has paid all the free due of the school:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"fees\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>20] Promoted to/ Detained in:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"proDet\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  21] Whether medically examinated or not ? :\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"medical\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  22] Date of pupil's last attendance at the school:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"lastAttend\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  23] Date of which the application for the Transfer Certificate\n                  was received:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"transferRecivied\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  24] Date of issue of the Transfer Certificate:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"dateIssue\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>25] Attendance:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"attendance\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>26] Character & Conduct:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"character\"\n                />\n              </DataContainer>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Header>CERTIFICATE</Header>\n              </Grid>\n              <Grid item xs={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n                <Content>\n                  Certified that the entries made in this Transfer Certificate\n                  are taken from the entries made as per the general egister\n                  maintained in the institution. The entries with the original\n                  records persented by the parents\n                </Content>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Signature>Prepared By</Signature>\n                <Signature>Checked By</Signature>\n                <Signature>Head Master</Signature>\n              </Grid>\n            </Grid>\n          </Container>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/** @format */\n\nexport const receiptBookTableKeys = [\n  {\n    name: \"Receipt Name\",\n    key: \"name\",\n  },\n];\n","export const feeMapTableKeys = [\n  {\n    name: \"Details\",\n    key: \"detail\",\n  },\n  { name: \"Fee\", key: \"fee\" },\n  { name: \"Installments\", key: \"installment\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Divider,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst LABEL = {\n  class: \"Class - (Academic department)\",\n  route: \"Route - (Transport department)\",\n  pickType: \"Pick-Type - (Transport department)\",\n  stop: \"Stop - (Transport department)\",\n  room: \"Room - (Hostel department)\",\n  roomType: \"Room Type - (Hostel department)\",\n  hostel: \"Hostel - (Hostel department)\",\n  addedAfter: \"Added After - (Student admission date)\",\n  addedBefore: \"Added Before - (Student admission date)\",\n  academicYear: \"Academic Year - (Student academic year)\",\n  libraryMember: \"Library Member - (Human Resource department)\",\n};\n\nconst installmentsType = [\n  { label: \"Monthly\", id: 1 },\n  { label: \"Quaterly\", id: 2 },\n  { label: \"Half-Yearly\", id: 3 },\n  { label: \"Yearly\", id: 4 },\n  { label: \"Others\", id: 5 },\n];\n\nfunction removeElementFromArray(array, elementToRemove) {\n  const index = array.indexOf(elementToRemove);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n  return array;\n}\n\nexport default function AddUpdateFeeMap({\n  selectedReceipt = \"\",\n  open = true,\n  setOpen = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [dataToEdit, setDataToEdit] = useState(\"\");\n  const [classes, setClasses] = useState([]);\n  const [academicYears, setAcademicYears] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [stops, setStops] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dependencies, setDependencies] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [installments, setInstallments] = useState([]);\n  const [addedAfter, setAddedAfter] = useState(null);\n  const [addedBefore, setAddedBefore] = useState(null);\n  // get academic year\n  const getAcademicYears = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setAcademicYears(\n        data.result.map((academicData) => ({\n          ...academicData,\n          label: `${academicData.from} - ${academicData.to}`,\n          value: academicData._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get route and stops\n  const getRoutes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRoutes(\n        data.result.map((r) => ({\n          ...r,\n          label: `${r.vehicle?.number} ${r.title} (${r.routeStart} To ${r.routeEnd})`,\n          value: r._id,\n        }))\n      );\n\n      setStops(\n        data.result.map((route) => ({\n          label: route.stops[0]?.name,\n          value: route.stops[0]?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Hostels\n  const getHostels = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setHostels(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Room type\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setRoomTypes(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Rooms\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRooms(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYears();\n    getClasses();\n    getRoutes();\n    getHostels();\n    getRoomTypes();\n    getRoom();\n  }, []);\n\n  const handleAddSubmit = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n\n    if (!addForm.pickType) {\n      removeElementFromArray(dependencies, \"pickType\");\n    }\n\n    try {\n      let payload = {\n        receiptTitleId: selectedReceipt,\n        collectedFrom: \"student\",\n        dependencies: dependencies,\n        classId: addForm.class,\n        routeId: addForm.route,\n        pickType: addForm.pickType,\n        roomId: addForm.room,\n        roomTypeId: addForm.roomType,\n        hostelId: addForm.hostel,\n        addedAfter: new Date(addedAfter),\n        addedBefore: new Date(addedBefore),\n        stopId: addForm.stop,\n        academicYearId: addForm.academicYear,\n        fee: addForm.fee,\n        installments: installments,\n        schoolId: selectedSetting._id,\n        libraryMember: \"\",\n      };\n      // console.log(payload, \"payload\");\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMap.update + \"/\" + dataToEdit?._id,\n          payload\n        );\n\n        // // setSearch({});\n        // if (data > 199 && data < 299) {\n        //   await getFeeMaps();\n        //   resetForm();\n        //   // handleCloseAddDialog();\n        // }\n      } else {\n        const { data } = await post(PRIVATE_URLS.feeMap.create, payload);\n        // console.log(data, \"ippp\");\n        // setSearch({});\n        // if (status > 199 && status < 299) {\n        //   await getFeeMaps();\n        //   resetForm();\n        //   handleCloseAddDialog();\n        // }\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    setOpen(false);\n  };\n\n  const resetForm = () => {\n    setAddForm({});\n    setDataToEdit(null);\n    setInstallments([]);\n    setDependencies([]);\n  };\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDependencies(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  const handleAddForm = (e) => {\n    const { name, value } = e.target;\n    if (name == \"fee\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: parseInt(value),\n      }));\n    } else if (name == \"others\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: Math.ceil(value),\n      }));\n    } else {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleDelete = (chipToDelete) => {\n    setDependencies((chips) => chips.filter((chip) => chip !== chipToDelete));\n    if (chipToDelete == \"class\") {\n      setAddForm((prev) => ({ ...prev, class: \"\" }));\n    }\n    if (chipToDelete === \"hostel\") {\n      setAddForm((prev) => ({ ...prev, hostel: \"\", room: \"\" }));\n    }\n    if (chipToDelete === \"route\") {\n      setAddForm((prev) => ({ ...prev, stop: \"\", route: \"\" }));\n    }\n    if (chipToDelete === \"room\") {\n      setAddForm((prev) => ({ ...prev, room: \"\" }));\n    }\n    if (chipToDelete === \"pickType\") {\n      setAddForm((prev) => ({ ...prev, pickType: \"\" }));\n    }\n    if (chipToDelete === \"roomType\") {\n      setAddForm((prev) => ({ ...prev, roomType: \"\" }));\n    }\n    if (chipToDelete === \"academicYear\") {\n      setAddForm((prev) => ({ ...prev, academicYearId: \"\" }));\n    }\n    if (chipToDelete === \"addedAfter\") {\n      setAddedAfter(null);\n    }\n    if (chipToDelete === \"addedBefore\") {\n      setAddedBefore(null);\n    }\n    if (chipToDelete === \"stop\") {\n      setAddForm((prev) => ({ ...prev, stop: \"\" }));\n    }\n  };\n\n  // useEffect(() => {\n  //   if (filteredFeeMaps.length) {\n  //     let deps = [];\n  //     for (let feeMap of filteredFeeMaps) {\n  //       deps = [...deps, ...feeMap.extendedDependencies];\n  //     }\n\n  //     let uniqueDeps = new Set(deps);\n  //     setAllDependencies([...uniqueDeps]);\n  //   }\n  // }, [filteredFeeMaps]);\n\n  const handleAddInstallments = () => {\n    if (!addForm.installmentsType || !addForm.fee) return;\n    let installmentsData = [];\n\n    if (addForm.installmentsType === \"Monthly\") {\n      const monthlyAmount = Math.floor(addForm.fee / 12);\n      const missing = addForm.fee - monthlyAmount * 12;\n\n      // console.log(missing, \"missing\");\n      installmentsData = Array.from({ length: 12 }).map((v, i) => ({\n        id: i + 1,\n        amount: monthlyAmount,\n        missing: missing,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Quaterly\") {\n      const quarterlyAmount = Math.floor(addForm.fee / 4);\n      const missing = addForm.fee - quarterlyAmount * 4;\n\n      installmentsData = Array.from({ length: 4 }).map((v, i) => ({\n        id: i + 1,\n        amount: quarterlyAmount,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Half-Yearly\") {\n      const halfYearlyAmount = Math.floor(addForm.fee / 2);\n      const missing = addForm.fee - halfYearlyAmount * 2;\n\n      installmentsData = Array.from({ length: 2 }).map((v, i) => ({\n        id: i + 1,\n        amount: halfYearlyAmount,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Yearly\") {\n      installmentsData = Array.from({ length: 1 }).map((v, i) => ({\n        id: i,\n        amount: addForm.fee,\n        dueDate: dayjs(),\n      }));\n    } else if (addForm.installmentsType === \"Others\") {\n      const othersAmount = Math.floor(addForm.fee / addForm.others);\n      const missing = addForm.fee - othersAmount * addForm.others;\n\n      installmentsData = Array.from({ length: addForm.others }).map((v, i) => ({\n        id: i + 1,\n        amount: othersAmount,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else {\n      setInstallments([]);\n      return;\n    }\n    setInstallments(installmentsData);\n  };\n\n  useEffect(() => {\n    handleAddInstallments();\n  }, [addForm.installmentsType, addForm.others, addForm.fee]);\n\n  const handleInstallmentChange = (val, key, changeIndex) => {\n    setInstallments((prev) =>\n      prev.map((installment, index) => {\n        if (index === changeIndex) {\n          return key === \"amount\"\n            ? { ...installment, [key]: parseInt(val) }\n            : key === \"dueDate\"\n            ? { ...installment, [key]: val }\n            : installment;\n        } else if (index > changeIndex) {\n          let diffInMonths = index - changeIndex;\n          if (addForm.installmentsType === \"Quaterly\") {\n            diffInMonths = diffInMonths * 3;\n          } else if (addForm.installmentsType === \"Half-Yearly\") {\n            diffInMonths = diffInMonths * 6;\n          } else if (addForm.installmentsType === \"Others\") {\n            diffInMonths = diffInMonths * 1;\n          }\n          const updatedDueDate = dayjs(val)\n            .add(diffInMonths, \"month\")\n            .format(\"YYYY-MM-DD\");\n          return { ...installment, dueDate: updatedDueDate };\n        } else {\n          return installment;\n        }\n      })\n    );\n  };\n\n  // console.log(addForm);\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onSubmit={handleAddSubmit}\n        component=\"form\">\n        <DialogTitle sx={{ fontWeight: 600 }}>\n          {dataToEdit ? \"Update Fee Map\" : \"Add Fee Map\"}\n        </DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={12} md={12} item>\n              <Typography variant=\"body\">\n                Choose the dependencies that will serve as the basis for the fee\n                calculation.\n              </Typography>\n              <Grid xs={12} sm={6} md={8} item>\n                <FormControl size=\"small\" sx={{ mt: 2, width: 400 }}>\n                  <InputLabel id=\"demo-multiple-chip-label\">\n                    Choose the dependencies\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-multiple-chip-label\"\n                    id=\"demo-multiple-chip\"\n                    size=\"small\"\n                    multiple\n                    label=\"Choose the dependencies\"\n                    value={dependencies}\n                    onChange={handleChange}>\n                    {Object.keys(LABEL).map((name) => (\n                      <MenuItem key={name} value={name}>\n                        {LABEL[name]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              {dependencies && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    gap: 0.5,\n                    marginLeft: \"20px\",\n                  }}>\n                  {dependencies.map((value, i) => (\n                    <Chip\n                      sx={{ mt: 2 }}\n                      key={value}\n                      label={LABEL[value]}\n                      onDelete={() => handleDelete(value)}\n                    />\n                  ))}\n                </Box>\n              )}\n            </Grid>\n\n            {dependencies.includes(\"academicYear\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Academic Year</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"academicYear\"\n                    required\n                    value={addForm.academicYear || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Academic Year\">\n                    {academicYears.map((a) => (\n                      <MenuItem key={a._id} value={a._id}>\n                        {a.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {dependencies.includes(\"class\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Class</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"class\"\n                    required\n                    value={addForm.class || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Class\">\n                    {classes.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"route\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Route</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"route\"\n                    required\n                    value={addForm.route || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Route\">\n                    {routes.map((route) => (\n                      <MenuItem key={route._id} value={route._id}>\n                        {route?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"stop\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Stop</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"stop\"\n                    required\n                    value={addForm.stop || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select stop\">\n                    {stops\n                      ?.filter((s) =>\n                        addForm.route ? s.route?._id == addForm.route : s._id\n                      )\n                      .map((stop) => (\n                        <MenuItem key={stop._id} value={stop._id}>\n                          {stop?.label}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {(dependencies.includes(\"route\") ||\n              dependencies.includes(\"pickType\")) && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Pick Type</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"pickType\"\n                    value={addForm.pickType || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Pick Type\">\n                    {[\"Drop\", \"Pick\", \"Both\"].map((picktype) => (\n                      <MenuItem key={picktype} value={picktype}>\n                        {picktype}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"hostel\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Hostel</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"hostel\"\n                    required\n                    value={addForm.hostel || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Hostel\">\n                    {hostels.map((hostel) => (\n                      <MenuItem key={hostel._id} value={hostel._id}>\n                        {hostel?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"roomType\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Room Type</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"roomType\"\n                    required\n                    value={addForm.roomType || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Room Type\">\n                    {roomTypes.map((roomType) => (\n                      <MenuItem key={roomType._id} value={roomType._id}>\n                        {roomType?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"room\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Room</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"room\"\n                    required\n                    value={addForm.room || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Room\">\n                    {rooms\n                      .filter((r) => {\n                        if (addForm.hostel && addForm.roomType) {\n                          return (\n                            r.hostel?._id == addForm.hostel &&\n                            r.type?._id == addForm.roomType\n                          );\n                        } else if (addForm.hostel && !addForm.roomType) {\n                          return r.hostel?._id == addForm.hostel;\n                        } else if (!addForm.hostel && addForm.roomType) {\n                          return r.type?._id == addForm.roomType;\n                        } else {\n                          return r._id;\n                        }\n                      })\n                      .map((room) => (\n                        <MenuItem key={room._id} value={room._id}>\n                          {room.hostel?.name} - {room.type?.name}{\" \"}\n                          {`(${room.totalBeds}-Beds)`}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"addedAfter\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    label=\"Added After\"\n                    inputFormat=\"DD-MM-YYYY\"\n                    value={addedAfter}\n                    onChange={(newValue) => setAddedAfter(newValue)}\n                    renderInput={(params) => (\n                      <TextField {...params} size=\"small\" fullWidth />\n                    )}\n                  />\n                </LocalizationProvider>\n              </Grid>\n            )}\n            {dependencies.includes(\"addedBefore\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    label=\"Added Before\"\n                    inputFormat=\"DD-MM-YYYY\"\n                    value={addedBefore}\n                    onChange={(newValue) => setAddedBefore(newValue)}\n                    renderInput={(params) => (\n                      <TextField {...params} size=\"small\" fullWidth />\n                    )}\n                  />\n                </LocalizationProvider>\n              </Grid>\n            )}\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                label=\"Fee\"\n                type=\"number\"\n                required\n                name=\"fee\"\n                value={addForm.fee || \"\"}\n                onChange={handleAddForm}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Installment Type</InputLabel>\n                <Select\n                  size=\"small\"\n                  name=\"installmentsType\"\n                  value={addForm.installmentsType || \"\"}\n                  onChange={handleAddForm}\n                  label=\"Select Installment Type\">\n                  {installmentsType.map((installments) => (\n                    <MenuItem key={installments.id} value={installments.label}>\n                      {installments.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            {addForm.installmentsType == \"Others\" && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <TextField\n                  // sx={{ marginTop: 1 }}\n                  fullWidth\n                  label=\"Number of installments\"\n                  size=\"small\"\n                  name=\"others\"\n                  type=\"number\"\n                  value={addForm.others || \"\"}\n                  onChange={handleAddForm}\n                />\n              </Grid>\n            )}\n\n            {installments.map((installment, index) => (\n              <React.Fragment key={index}>\n                <Grid item xs={12} sm={6} md={6} mt={2}>\n                  <TextField\n                    fullWidth\n                    type=\"number\"\n                    label={`installment ${index + 1}`}\n                    value={installment.amount}\n                    size=\"small\"\n                    // enabled={dataToEdit}\n                    onChange={(e) =>\n                      handleInstallmentChange(e.target.value, \"amount\", index)\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6} md={6} mt={2}>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DatePicker\n                      inputFormat=\"DD-MM-YYYY\"\n                      enabled={dataToEdit}\n                      label=\"Due Date\"\n                      form\n                      value={installment.dueDate}\n                      onChange={(newValue) =>\n                        handleInstallmentChange(newValue, \"dueDate\", index)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          fullWidth\n                          enabled={dataToEdit}\n                          {...params}\n                          size=\"small\"\n                        />\n                      )}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            {dataToEdit ? \"Update\" : \"Submit\"}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { receiptBookTableKeys } from \"../../data/tableKeys/receiptBookData\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Add, Search } from \"@mui/icons-material\";\nimport { feeMapTableKeys } from \"../../data/tableKeys/feeMapData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddUpdateFeeMap from \"./AddUpdateFeeMap\";\n\nconst showInfo = (data) => {\n  let result = [];\n  // console.log(data, \"fsusg\");\n  for (let dep of data.dependencies) {\n    if (dep === \"academicYear\") {\n      result.push(\n        `[${data.academicYearId.from}-${data.academicYearId.to}]-Academic Year`\n      );\n    } else if (dep === \"class\") {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if (dep === \"hostel\") {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if (dep === \"roomType\") {\n      result.push(`[${data.roomType.name}]-Room_Type`);\n    } else if (dep === \"room\") {\n      let newItem = `[${data.room?.hostel.name}]+[${data.room?.totalBeds} Beds]+[${data.room?.type?.name}]-Room`;\n      result.push(newItem);\n    } else if (dep == \"route\") {\n      let newItem = `[${data.route.vehicle.number}]+[${data.route.title}]-Route`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if (dep === \"stop\") {\n      let newItem = `[${data.stop.name}]-Stop`;\n      result.push(newItem);\n    } else if (dep === \"addedBefore\") {\n      // let newItem = `[${moment(data.addedBefore).format(\"DD/MM/YYYY\")}]-Stop`;\n      // result.push(newItem);\n    } else if (dep === \"addedAfter\") {\n      // let newItem = `[${moment(data.addedAfter).format(\"DD/MM/YYYY\")}]-Stop`;\n      // result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nconst CustomActionFee = ({\n  onUpdate = () => {},\n  data = {},\n  onEditClick = () => {},\n  onNavigateFeeMap = () => {},\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(`${PRIVATE_URLS.receiptTitle.toggleActiveStatus}/${data._id}`);\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          onClick={() => onEditClick(data)}>\n          Edit\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          onClick={() => onNavigateFeeMap(data._id)}>\n          Fee Map\n        </Button>\n        <LoadingButton\n          loading={loading}\n          size=\"small\"\n          onClick={updateStatus}\n          color={data.active ? \"success\" : \"error\"}\n          variant=\"contained\">\n          {data.active ? \"Activate\" : \"DeActivate\"}\n        </LoadingButton>\n      </Stack>\n    </>\n  );\n};\n\nexport default function ReceiptBook() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [receipts, setReceipts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openFeeMap, setOpenFeeMap] = useState(false);\n  const [selectedReceiptId, setSelectedReceiptId] = useState(\"\");\n  const [selectReceipt, setSelectReceipt] = useState(selectedReceiptId || \"\");\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          Search: { receiptTitle: selectReceipt },\n        },\n      });\n      setFeeMaps(data.result.map((f) => ({ ...f, detail: showInfo(f) })));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data, status } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setReceipts(data.result);\n      if (data.result.length > 0) {\n        setSelectReceipt(selectReceipt ? selectReceipt : data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectReceipt) {\n      getFeeMaps();\n    }\n  }, [selectReceipt]);\n\n  useEffect(() => {\n    getData();\n    getReceipts();\n  }, [selectedSetting]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.receiptTitle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.receiptTitle.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleFeeMapEdit = (id, data) => {\n    // console.log(data, \"hgafs\");\n    setDataToEdit({ ...data });\n    // setAddForm({\n    //   ...data,\n    //   schoolClass: data.class?._id,\n    //   route: data.route?._id,\n    //   room: data.room?._id,\n    //   others: data.installments.length,\n    //   installmentType: calculateInstallmentType(data.installments.length),\n    // });\n  };\n\n  const handleOpenFeeMap = () => {\n    setOpenFeeMap(true);\n  };\n\n  const handleFeeMap = (id) => {\n    // console.log(id, \"id usha\");\n    setSelectedReceiptId(id);\n    setSelectValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Receipt Book\" />\n\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Receipt Book\", \"Fee Map\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button\n          variant=\"contained\"\n          onClick={handleClickOpen}\n          startIcon={<Add />}\n          sx={{ mt: 1, mb: 2 }}>\n          Add Receipt\n        </Button>\n\n        <CustomTable\n          actions={[\"custom\"]}\n          bodyDataModal=\"Receipt Book\"\n          bodyData={data}\n          tableKeys={receiptBookTableKeys}\n          feeMapTableKeys\n          onEditClick={handleEditClick}\n          onNavigateFeeMap={handleFeeMap}\n          CustomAction={CustomActionFee}\n          onUpdate={getData}\n        />\n        {/* Add/Update Receipt book ========= */}\n        <FormModal\n          open={open}\n          formik={entryFormik}\n          formTitle={dataToEdit ? \"Update Receipt Book\" : \"Add Receipt Book\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={12} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"name\"\n                label=\"Receipt Name\"\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </FormModal>\n      </TabPanel>\n\n      <TabPanel index={1} value={value}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Select Receipt</InputLabel>\n              <Select\n                required={true}\n                fullWidth\n                value={selectReceipt || \"\"}\n                onChange={(e) => setSelectReceipt(e.target.value)}\n                label=\"Select Receipt\">\n                {receipts.map((receipt) => (\n                  <MenuItem value={receipt._id} key={receipt._id || \"\"}>\n                    {receipt.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <Button\n              variant=\"contained\"\n              startIcon={<Add />}\n              onClick={handleOpenFeeMap}>\n              Add Fee Map\n            </Button>\n          </Grid>\n        </Grid>\n\n        <CustomTable\n          actions={[\"edit\", \"switch\"]}\n          bodyDataModal=\"Fee Map\"\n          bodyData={feeMaps}\n          tableKeys={feeMapTableKeys}\n          CustomAction={CustomActionFee}\n          onEditClick={handleFeeMapEdit}\n        />\n\n        {/* Add/Update Fee Map ========= */}\n        <AddUpdateFeeMap\n          open={openFeeMap}\n          Formik={entryFormik}\n          dataToEdit={dataToEdit}\n          setOpen={setOpenFeeMap}\n          loading={loading}\n          selectedReceipt={selectReceipt}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const feeMapCategoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  { name: \"Description\", key: \"description\" },\n  { name: \"Amount\t\", key: \"amount\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid } from \"@mui/material\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { feeMapCategoryTableKeys } from \"../../data/tableKeys/feeMapCategoryData\";\nimport { Add } from \"@mui/icons-material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nexport default function FeeMapCategory() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      Formik.setFieldValue(\"name\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get feemap list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: { schoolId: selectedSetting._id, search: { active: true } },\n      });\n      // console.log(data, \"cat\");\n      setFeeMaps(data.result.map((f) => ({ label: f.name, value: f._id })));\n      Formik.setFieldValue(\"feeMap\", data.result[0]._id);\n    } catch (error) {}\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      name: \"\",\n      feeMap: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMapCategory.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.feeMapCategory.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      amount: dataToEdit?.amount || \"\",\n      feeMapId: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getReceipts();\n    getFeeMaps();\n  }, []);\n\n  useEffect(() => {\n    if (Formik.values.name) {\n      getFeeMaps();\n    }\n  }, [Formik.values.name]);\n\n  const handleClose = () => {\n    // getData();\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Fee Map Category\" />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"name\"\n            formik={Formik}\n            label=\"Select Receipt Name\"\n            options={receipts}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"feeMap\"\n            formik={Formik}\n            label=\"Select Fee Maps\"\n            // options={\"\"}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setOpen(true)}>\n            Add Fee Category\n          </Button>\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Fee Map Category\"\n        bodyData={data}\n        tableKeys={feeMapCategoryTableKeys}\n        feeMapTableKeys\n      />\n\n      {/* Add/Update Fee map Category ========= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Fee Map Category\" : \"Add Fee Map Category\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if (dep === \"class\") {\n      let newItem = `[${data.class?.className}]-Class`;\n      result.push(newItem);\n    } else if (dep === \"room\") {\n      let newItem = `[${data.room?.hostel.name}]+[${data.room?.totalSeats} Beds]+[${data.room?.type?.name}]-Room`;\n      result.push(newItem);\n    } else if (dep == \"route\") {\n      let newItem = `[${data.route.vehicleNumber.vehicleNumber}]+[${data.route.transportRouteTitle}]+[${data.route.routeStart}-${data.route.routeEnd}]`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nexport default function CollectFees() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [receiptTitles, setReceiptTitles] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectStudent, setSelectStudent] = useState([]);\n  const [feeDetails, setFeeDetails] = useState(null);\n  const [paymentData, setPaymentData] = useState({});\n  const [totalAmountToBePaid, setTotalAmountToBePaid] = useState(0);\n  const [selectedPastDueIds, setSelectedPastDueIds] = useState([]);\n  const [downloadingReceipt, setDownloadingReceipt] = useState(false);\n  const [itemDetails, setItemDetails] = useState([]);\n  const [fetchingStudents, setFetchingStudents] = useState(false);\n\n  // get student fee Details\n  const handleSubmitFind = async (values) => {\n    setFetchingStudents(true);\n\n    try {\n      const { data: feeReceipt, status } = await get(\n        PRIVATE_URLS.receipt.getFeeDetails,\n        {\n          params: {\n            feeMapId: entryFormik.values.feeMap,\n            studentId: selectStudent._id,\n            receiptTitleId: entryFormik.values.receiptName,\n            installmentId:\n              entryFormik.values.installmentId ||\n              feeMaps.filter((f) => f._id == entryFormik.values.feeMap)[0]\n                ?.installments[0]._id,\n          },\n        }\n      );\n      setFeeDetails(feeReceipt.result);\n      setItemDetails(\n        feeReceipt.result.feeMapCategories.map((d) => ({\n          name: d.name,\n          amount: Number(d.amount),\n          description: d.description,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingStudents(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      installmentId: \"\",\n    },\n    onSubmit: handleSubmitFind,\n    enableReinitialize: true,\n  });\n\n  const getAllReceiptTitles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: {\n          search: { active: true },\n        },\n      });\n      setReceiptTitles(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\n        \"receiptName\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllReceiptTitles();\n  }, [selectedSetting._id]);\n\n  const getAllFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: { search: { active: true }, schoolId: selectedSetting._id },\n      });\n      setFeeMaps(\n        data.result.map((d) => ({ ...d, name: showInfo(d), value: d._id }))\n      );\n      entryFormik.setFieldValue(\n        \"feeMap\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.receiptName) {\n      getAllFeeMaps();\n    }\n  }, [entryFormik.values.receiptName, selectedSetting._id]);\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      if (entryFormik.values.feeMap) {\n        let feeMap = feeMaps.filter(\n          (f) => f._id == entryFormik.values.feeMap\n        )[0];\n        if (feeMap.dependencies.includes(\"class\")) {\n          return entryFormik.setFieldValue(\"class\", feeMap.class?._id);\n        }\n      }\n      entryFormik.setFieldValue(\n        \"class\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get all classes\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id, entryFormik.values.feeMap]);\n\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: { search: { class: entryFormik.values.class } },\n      });\n      setSections(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\n        \"section\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  // get all students\n  const getAllStudents = async () => {\n    try {\n      let feeMap = feeMaps.filter((f) => f._id == entryFormik.values.feeMap)[0];\n      let dependencies = feeMap.dependencies;\n      let filter = {};\n      if (dependencies.includes(\"class\")) {\n        filter[\"academicInfo.class\"] = entryFormik.values.class;\n      }\n      if (dependencies.includes(\"room\")) {\n        filter[\"hostelInfo.room\"] = feeMap.room._id;\n      }\n      if (dependencies.includes(\"route\")) {\n        filter[\"transportInfo.route\"] = feeMap.route._id;\n      }\n      if (dependencies.includes(\"pickType\")) {\n        filter[\"transportInfo.pickType\"] = feeMap.pickType;\n      }\n      if (entryFormik.values.section) {\n        filter[\"academicInfo.section\"] = entryFormik.values.section;\n      }\n\n      const { data: students } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          search: filter,\n        },\n        schoolId: selectedSetting._id,\n      });\n      setSelectStudent(null);\n      setStudents(\n        students.result.map((s) => ({\n          ...s,\n          label: s.basicInfo.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      entryFormik.values.feeMap &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      getAllStudents();\n    } else {\n      setStudents([]);\n      setSelectStudent(null);\n    }\n  }, [entryFormik.values.section, entryFormik.values.feeMap]);\n\n  const handleStudentSelect = (e, val) => {\n    setSelectStudent(val);\n    setItemDetails([]);\n    setFeeDetails(null);\n    setPaymentData({});\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.installmentId) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values.installmentId]);\n\n  return (\n    <>\n      <PageHeader title=\"Collect Fees\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receiptTitles}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Students\"\n              // options={}\n            />\n          </Grid>\n\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <LoadingButton\n              loading={fetchingStudents}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","export const balanceFeeReportTableKeys = [\n  {\n    name: \"Receipt\",\n    key: \"receipt\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNo\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Father\",\n    key: \"father\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Concession\",\n    key: \"concession\",\n  },\n  {\n    name: \"Fine\",\n    key: \"fine\",\n  },\n  {\n    name: \"Paid\",\n    key: \"paid\",\n  },\n  {\n    name: \"Balance\",\n    key: \"balance\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { balanceFeeReportTableKeys } from \"../../data/tableKeys/balanceFeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function BalanceFeeReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  return (\n    <>\n      <PageHeader title=\"Balance Fee Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receipts}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              // options={}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Balance Fee Report\"\n        bodyData={data}\n        tableKeys={balanceFeeReportTableKeys}\n      />\n    </>\n  );\n}\n","export const feeOverviewPaymentTableKeys = [\n  {\n    name: \"Payment\",\n    key: \"payment\",\n  },\n  { name: \"Total\", key: \"total\" },\n  { name: \"Cash\", key: \"cash\" },\n  { name: \"Cheque\", key: \"cheque\" },\n  { name: \"DD\", key: \"dd\" },\n  { name: \"Chalan\", key: \"chalan\" },\n  { name: \"NetBanking\", key: \"netBanking\" },\n  { name: \"Online\", key: \"online\" },\n];\n","export const feeOverviewReceiptTableKeys = [\n  {\n    name: \"Receipt No\",\n    key: \"receiptNo\",\n  },\n  { name: \"Paid Date\", key: \"paidDate\" },\n  { name: \"Amount\", key: \"amount\" },\n  { name: \"Payment Mode\", key: \"paymentMode\" },\n  { name: \"Name\", key: \"name\" },\n  { name: \"Class\", key: \"class\" },\n  { name: \"Section\", key: \"section\" },\n  { name: \"Admission No\", key: \"admissionNo\" },\n  { name: \"View\", key: \"view\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { feeOverviewPaymentTableKeys } from \"../../data/tableKeys/feeOverviewPaymentData\";\nimport { feeOverviewReceiptTableKeys } from \"../../data/tableKeys/feeOverviewReceiptData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function FeeOverview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      collected: \"\",\n      feeReceipt: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n  return (\n    <>\n      <PageHeader title=\"Fee Overview\" />\n      <Paper sx={{ padding: 2, marginBottom: 3 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"collected\"\n              formik={entryFormik}\n              label=\"Select Collected By\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeReceipt\"\n              formik={entryFormik}\n              label=\"Select Fee Receipt\"\n              options={receipts}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <Button variant=\"contained\">Find</Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"data\"\n        bodyData={data}\n        tableKeys={feeOverviewPaymentTableKeys}\n      />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", my: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"addmisionNo\"\n            formik={entryFormik}\n            label=\"Select Addmision No\"\n            // options={\"\"}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormInput formik={entryFormik} name=\"search\" label=\"Search...\" />\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"data\"\n        bodyData={data}\n        tableKeys={feeOverviewReceiptTableKeys}\n      />\n    </>\n  );\n}\n","export const reconciliationTableKeys = [\n  {\n    name: \"Receipt Number\",\n    key: \"receipt\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNo\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Bank Name\",\n    key: \"bankName\",\n  },\n  {\n    name: \"Bank Branch\",\n    key: \"branch\",\n  },\n\n  {\n    name: \"Cheque Number\",\n    key: \"chequeNo\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { reconciliationTableKeys } from \"../../data/tableKeys/reconciliationData\";\n\nexport default function Reconciliation() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Fee Reconciliation\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Fee Reconciliation\"\n        bodyData={data}\n        tableKeys={reconciliationTableKeys}\n      />\n    </>\n  );\n}\n","export const manageHostelTableKeys = [\n  {\n    name: \"Hostel Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Hostel Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Address\",\n    key: \"address\",\n  },\n];\n","/** @format */\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function HostelViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.name}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Type{\" \"}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.type}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Address\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.address}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelTableKeys } from \"../../data/tableKeys/manageHostelData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport HostelViewDialog from \"./HostelViewDialog\";\n\nconst hostelType = [\n  { label: \"Boys\", value: \"Boys\" },\n  { label: \"Girls\", value: \"Girls\" },\n  { label: \"Combined\", value: \"Combined\" },\n];\n\nexport default function ManageHostel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getWarden = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const employeeData = data.result.filter((e) => e.role.name === \"WARDEN\");\n      setEmployees(\n        employeeData.map((e) => ({\n          ...e,\n          label: e.basicInfo.name,\n          value: e._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getWarden();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.hostel.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.hostel.create, values);\n      }\n      setDataToEdit(null);\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      type: dataToEdit?.type || \"\",\n      warden: dataToEdit?.warden?._id || \"\",\n      address: dataToEdit?.address || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const handleEdit = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const deleteHostel = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.hostel.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={manageHostelTableKeys}\n        bodyDataModal=\"hostel\"\n        bodyData={data}\n        onDeleteClick={deleteHostel}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Hostel\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Hostel\" : \"Add Hostel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Hostel Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Phone No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Hostel Type\"\n              required={true}\n              options={hostelType}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"warden\"\n              label=\"Select Warden\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"address\"\n              label=\"Address\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <HostelViewDialog\n        title=\"Hostel Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","export const manageHostelRoomTableKeys = [\n  {\n    name: \"Room Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Specification\",\n    key: \"specification\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomTableKeys } from \"../../data/tableKeys/manageHostelRoom\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ManageRoomType() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomTypes();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.roomType.update + \"/\" + dataToEdit._id,\n          values\n        );\n\n        // setDataToEdit(null);\n      } else {\n        const { data } = await post(PRIVATE_URLS.roomType.create, values);\n      }\n      setLoading(false);\n      getRoomTypes();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      specification: dataToEdit?.specification || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const deleteRoomType = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.roomType.delete + \"/\" + id);\n      getRoomTypes();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"iiii\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Room Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={manageHostelRoomTableKeys}\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoomType}\n        onEditClick={handleEdit}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Room Type\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Room Type\" : \"Add Room Type\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"specification\"\n              label=\"Specification\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const manageHostelRoomBedTableKeys = [\n  {\n    name: \"Room no\",\n    key: \"number\",\n  },\n  {\n    name: \"Room Type\",\n    key: \"roomType\",\n  },\n  {\n    name: \"Total Seat\",\n    key: \"totalBeds\",\n  },\n  {\n    name: \"Hostel Name\",\n    key: \"hostelName\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RoomAndBedViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  console.log(tableData, \"tableData\");\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Room No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.number}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Seat Total\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.totalBeds}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Bed\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.beds?.map((s) => (\n                  <Box\n                    sx={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      my: 1,\n                    }}\n                    key={s.name}>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Position\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.position || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: 600, width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Allocated\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.allocated ? \"Yes\" : \"No\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </Box>\n                ))}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomBedTableKeys } from \"../../data/tableKeys/manageHostelRoomBedData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\n// iocons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RoomAndBedViewDialog from \"./RoomAndBedViewDialog\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ManageRoomAndBed() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [roomType, setRoomType] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [updatingBed, setUpdatingBed] = useState(false);\n  const [deletingBed, setDeletingBed] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rooms\n  const getRoomList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list);\n      setData(\n        data.result.map((h) => ({\n          ...h,\n          hostelName: h?.hostel?.name,\n          roomType: h.type?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get room type list\n  const getRoomTypeList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setRoomType(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get hostel list\n  const getHostelList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setHostels(data.result.map((h) => ({ label: h.name, value: h._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomList();\n    getRoomTypeList();\n    getHostelList();\n  }, [selectedSetting]);\n\n  // Add/Update event handle\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        delete values.beds;\n        const { data } = await put(\n          PRIVATE_URLS.room.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        let payload = { ...values, totalBeds: values.beds.length };\n\n        const { data } = await post(PRIVATE_URLS.room.create, payload);\n      }\n      handleClose();\n      getRoomList();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      type: dataToEdit?.type?._id || \"\",\n      totalBeds: dataToEdit?.totalBeds || 0,\n      hostel: dataToEdit?.hostel?._id || \"\",\n      note: dataToEdit?.note || \"\",\n      beds: dataToEdit?.beds || [\n        {\n          id: 1,\n          name: \"\",\n          position: \"\",\n          allocated: false,\n        },\n      ],\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const onAddBedsHandle = () => {\n    let initialBedsData = [...formik.values.beds];\n    let newBedData = {\n      id: initialBedsData.length + 1,\n      name: \"\",\n      position: \"\",\n      allocated: false,\n    };\n    formik.setFieldValue(\"beds\", [...initialBedsData, newBedData]);\n  };\n\n  const removeBed = (index) => {\n    let initialBedsData = [...formik.values.beds];\n    initialBedsData.splice(index, 1);\n    formik.setFieldValue(\"beds\", initialBedsData);\n  };\n\n  const updateBed = async (bedId) => {\n    let bedData = formik.values.beds.find((bed) => bed._id === bedId);\n    try {\n      setUpdatingBed(true);\n      const { data } = await put(\n        PRIVATE_URLS.room.update + \"/\" + bedId,\n        bedData\n      );\n      setUpdatingBed(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingBed(false);\n    }\n  };\n\n  const deleteBed = async (bedId) => {\n    try {\n      setDeletingBed(true);\n      const { data } = await put(PRIVATE_URLS.room.deleteBed + \"/\" + bedId);\n      setDeletingBed(false);\n    } catch (error) {\n      console.log(error);\n      setDeletingBed(false);\n    }\n  };\n\n  const deleteRoom = async (roomId) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.room.delete + \"/\" + roomId);\n      getRoomList();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    // console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    formik.resetForm();\n  };\n\n  const handleCustomInputChange = (event, bed) => {\n    formik.setFieldValue(\n      \"beds\",\n      formik.values.beds.map((b) =>\n        b.id === bed.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getRoomList();\n  };\n\n  const onCloseModal = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel Room & Beds\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={manageHostelRoomBedTableKeys}\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoom}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Room & Bed\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle={dataToEdit ? \"Update Room & Bed\" : \"Add Room & Bed\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"number\"\n              label=\"Room No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"type\"\n              label=\"Room Type\"\n              required={true}\n              options={roomType}\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"totalBeds\"\n              label=\"Total Beds\"\n              required={true}\n              disabled={true}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"hostel\"\n              label=\"Hostel Name\"\n              required={true}\n              options={hostels}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <Box\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                padding: \"10px\",\n                alignItems: \"center\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n              }}>\n              <Typography>Bed Name</Typography>\n              <Typography>Bed Position</Typography>\n              <Typography>Is Alloted</Typography>\n            </Box>\n\n            {/* <AddBedsTable onAddBedsHandle={onAddBedsHandle} formik={formik} /> */}\n            {formik.values.beds.map((b, i) => (\n              <Grid\n                container\n                key={i}\n                gap={1}\n                sx={{\n                  backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                  borderRadius: \"5px\",\n                  padding: \"20px 15px 30px 15px\",\n                  border: \"1px solid lightgrey\",\n                  my: 2,\n                }}>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.name}\n                    name=\"name\"\n                    label=\"Bed Name\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.position}\n                    name=\"position\"\n                    label=\"Bed Position\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid\n                  xs={12}\n                  sm={3}\n                  md={3}\n                  item\n                  sx={{\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}>\n                  <Button onClick={() => onAddBedsHandle(b, i)}>\n                    <AddIcon />\n                  </Button>\n                  <Button color=\"error\" onClick={() => removeBed(i)}>\n                    <RemoveIcon color=\"error\" />\n                  </Button>\n                  {/* <Typography> */}\n                  {/* <Typography color={allocated ? \"green\" : \"red\"}> */}\n                  {/* Not Allotted */}\n                  {/* {allocated ? \"Allotted\" : \"Not Allotted\"} */}\n                  {/* </Typography> */}\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={formik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <RoomAndBedViewDialog\n        title=\"Room Information\"\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n        onClose={onCloseModal}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const hostelMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n  {\n    name: \"Room\",\n    key: \"number\",\n  },\n];\n","/** @format */\n\nexport const hostelNNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { hostelMemberTableKeys } from \"../../data/tableKeys/hostelMemberData\";\nimport { hostelNNonMemberTableKeys } from \"../../data/tableKeys/hostelNonMember\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [hostel, setHostel] = useState([]);\n  const [room, setRoom] = useState([]);\n\n  const getHostel = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n\n      setHostel(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            hostel: entryFormik.values.hostel,\n          },\n        },\n      });\n\n      setRoom(\n        data.result.map((s) => ({\n          ...s,\n          label: String(s.number),\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getHostel();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        hostel: values.hostel,\n        room: values.room,\n        bed: values.bed,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateHostelMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      hostel: \"\",\n      room: \"\",\n      bed: \"\",\n    },\n    onSubmit: addMember,\n  });\n  useEffect(() => {\n    if (entryFormik.values.hostel) {\n      getRoom();\n    }\n  }, [entryFormik.values.hostel, selectedSetting]);\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"hostel\"\n              label=\"Hostel\"\n              required={true}\n              options={hostel}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"room\"\n              label=\"Room No\"\n              required={true}\n              options={room}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"bed\"\n              label=\"Beds\"\n              required={true}\n              options={\n                room\n                  .find((r) => r._id === entryFormik.values.room)\n                  ?.beds.map((bed) => ({\n                    label: bed.name,\n                    value: bed._id,\n                  })) || []\n              }\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function HostelMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [hostelMember, setHostelMember] = useState([]);\n  const [nonHostelMember, setNonHostelMember] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class || entryFormik.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      entryFormik.setFieldValue(\"section\", \"all\");\n      formik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        console.log(data.result, \"=================\");\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class, selectedSetting]);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.removeHostelMember + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"delete\"]}\n          onDeleteClick={handleDelete}\n          tableKeys={hostelMemberTableKeys}\n          bodyData={hostelMember}\n          bodyDataModal=\"hostel member\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={\"custom\"}\n          tableKeys={hostelNNonMemberTableKeys}\n          bodyData={nonHostelMember}\n          bodyDataModal=\"hostel member\"\n          CustomAction={CustomActionAdd}\n          onUpdate={formik.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleTableKeys = [\n  {\n    name: \"Vehicle Number\",\n    key: \"number\",\n  },\n  {\n    name: \"Driver\",\n    key: \"driverName\",\n  },\n  {\n    name: \"Contact\",\n    key: \"driverContactNumber\",\n  },\n  {\n    name: \"Total Passengers\",\n    key: \"totalSeats\",\n  },\n\n  {\n    name: \"Tracking Id\",\n    key: \"trackingId\",\n  },\n  {\n    name: \"Vehicle Model\",\n    key: \"model\",\n  },\n\n  {\n    name: \"Insurance Name\",\n    key: \"insuranceName\",\n  },\n  // {\n  //   name: \"Renewal Date\",\n  //   key: \"renewalDate\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function VehicleViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n  return (\n    <ViewModel title={title} onClose={onClose} open={open}>\n      <Table aria-label=\"customized table\">\n        <TableBody>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              School Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {schoolName}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle Number\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.number}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle Model\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.model}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Driver\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.driverName}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle License\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.licenseNumber}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Driver Contact Number\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.driverContactNumber}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Note\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.note}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Created\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.createdAt}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </ViewModel>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { vehicleTableKeys } from \"../../data/tableKeys/vehicleData\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { Grid } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { get, post, put, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport VehicleViewDialog from \"./VehicleViewDialog\";\n\nexport default function Vehicle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    schoolName: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((v) => ({\n          ...v,\n          driverName: v?.driver?.basicInfo?.name,\n          id: v._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddVehicle = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Driver`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getData();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vehicle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vehicle.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      model: dataToEdit?.model || \"\",\n      driver: dataToEdit?.driver?._id || \"\",\n      licenseNumber: dataToEdit?.licenseNumber || \"\",\n      driverContactNumber: dataToEdit?.driverContactNumber || \"\",\n      trackingId: dataToEdit?.trackingId || \"\",\n      insuranceName: dataToEdit?.insuranceName || \"\",\n      insuranceId: dataToEdit?.insuranceId || \"\",\n      totalSeats: dataToEdit?.totalSeats || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.vehicle.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vehicle\" />\n\n      <CustomTable\n        actions={[\"view\", \"edit\", \"delete\"]}\n        tableKeys={vehicleTableKeys}\n        bodyDataModal=\"vehicle\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* add icon vehicle ==== */}\n      <AddForm title=\"Add Vehicle\" onAddClick={AddVehicle} />\n\n      {/* Add/Update vehicle ==== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Vehicle\" : \"Add Vehicle\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"number\"\n              label=\"Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"driver\"\n              label=\"Driver\"\n              options={employees}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"model\" label=\"Model\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"licenseNumber\"\n              label=\"License Number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"driverContactNumber\"\n              label=\"Driver Contact Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"trackingId\"\n              label=\"Tracking Id\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"insuranceName\"\n              label=\"Insurance Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"insuranceId\"\n              label=\"Insurance Id\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"totalSeats\"\n              label=\"Total Seats\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* view vehicle ========== */}\n      <VehicleViewDialog\n        title=\"Vehicle Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const manageRouteTableKeys = [\n  {\n    name: \"Route Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Route Start\",\n    key: \"routeStart\",\n  },\n  {\n    name: \"Route End\",\n    key: \"routeEnd\",\n  },\n  {\n    name: \"Vehicle For Route\",\n    key: \"vehicleForRoute\",\n  },\n\n  {\n    name: \"Stop Name\",\n    key: \"stopName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RouteAndTripViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <ViewModel title={title} onClose={onClose} open={open}>\n      <Table aria-label=\"customized table\">\n        <TableBody>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              School Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {schoolName || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route Title\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.title || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route Start\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.routeStart || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route End\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.routeEnd || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle For Route{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.vehicle?.number || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Stops\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData.stops?.map((s, index) => (\n                <Table key={index} aria-label=\"stop details\">\n                  <TableBody>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Stop Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Stop KM\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.stopKM || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Pick Start Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.pickTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Pick End Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.pickEndTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Drop Start Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.dropTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Drop End Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.dropEndTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n              ))}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Note\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.note || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </ViewModel>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageRouteTableKeys } from \"../../data/tableKeys/manageRouteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Box, Button, Grid, IconButton, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RouteAndTripViewDialog from \"./RouteAndTripViewDialog\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n  position: \"relative\",\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nexport default function ManageRouteAndTrips() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [updatingStop, setUpdatingStop] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rout\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"herere\");\n      setData(\n        data.result.map((v) => ({\n          ...v,\n          stopName: v.stops?.map((s) => s.name),\n          vehicleForRoute: v.vehicle?.number,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get vehicle\n  const getVehicles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list);\n      setVehicles(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddRouteTrips = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.route.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.route.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      routeStart: dataToEdit?.routeStart || \"\",\n      routeEnd: dataToEdit?.routeEnd || \"\",\n      pickStart: dataToEdit?.pickStart || \"\",\n      pickEnd: dataToEdit?.pickEnd || \"\",\n      dropStart: dataToEdit?.dropStart || \"\",\n      dropEnd: dataToEdit?.dropEnd || \"\",\n      stops: dataToEdit?.stops || [\n        {\n          id: 1,\n          name: \"\",\n          stopKM: \"\",\n          pickTime: \"\",\n          pickEndTime: \"\",\n          dropTime: \"\",\n          dropEndTime: \"\",\n        },\n      ],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const addStop = () => {\n    let initialStopsData = [...entryFormik.values.stops];\n    entryFormik.setFieldValue(\"stops\", [\n      ...entryFormik.values.stops,\n      {\n        id: initialStopsData.length + 1,\n        name: \"\",\n        stopKM: \"\",\n        pickTime: \"\",\n        pickEndTime: \"\",\n        dropTime: \"\",\n        dropEndTime: \"\",\n      },\n    ]);\n  };\n\n  const updateStop = async (stopId) => {\n    console.log(stopId, \"stopId\");\n    let stopData = entryFormik.values.stops.find((stop) => stop._id === stopId);\n    console.log(stopData, \"stopData\");\n\n    try {\n      setUpdatingStop(true);\n      const { data } = await put(\n        PRIVATE_URLS.route.updateStop + \"/\" + stopId,\n        stopData\n      );\n      setUpdatingStop(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingStop(false);\n    }\n  };\n\n  const removeStop = (index) => {\n    let initialBedsData = [...entryFormik.values.stops];\n    initialBedsData.splice(index, 1);\n    entryFormik.setFieldValue(\"stops\", initialBedsData);\n  };\n\n  const deleteRoute = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.route.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  useEffect(() => {\n    getVehicles();\n    getData();\n  }, [selectedSetting]);\n\n  const handleCustomInputChange = (event, stop) => {\n    entryFormik.setFieldValue(\n      \"stops\",\n      entryFormik.values.stops.map((b) =>\n        b.id === stop.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getData();\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Manage Route & Trips\" />\n\n      {/* show data table ============== */}\n      <CustomTable\n        actions={[\"edit\", \"view\", \"delete\"]}\n        tableKeys={manageRouteTableKeys}\n        bodyDataModal=\"route\"\n        bodyData={data}\n        onViewClick={handleClickOpenView}\n        onEditClick={handleEdit}\n        onDeleteClick={deleteRoute}\n      />\n\n      {/* Add icon ============= */}\n      <AddForm title=\"Add Route & Trips\" onAddClick={AddRouteTrips} />\n\n      {/* Add/Update dialog ============= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Route & Trips\" : \"Add Route & Trips\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicles}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"routeStart\"\n              label=\"Route Start\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"routeEnd\"\n              label=\"Route End\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"pickStart\"\n              required={true}\n              label=\"Pick Start\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"pickEnd\"\n              required={true}\n              label=\"Pick End\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"dropStart\"\n              required={true}\n              label=\"Drop Start\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"dropEnd\"\n              required={true}\n              label=\"Drop End\"\n            />\n          </Grid>\n        </Grid>\n        {entryFormik.values.stops.map(\n          (stop, index) => (\n            console.log(stop, \"gg\"),\n            (\n              <FormBox key={index}>\n                <IconButton\n                  color=\"error\"\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\n                  onClick={() => removeStop(index)}>\n                  <CloseIcon />\n                </IconButton>\n                <Grid container spacing={2}>\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.name}\n                      name=\"name\"\n                      label=\"Name\"\n                      required={true}\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.stopKM}\n                      name=\"stopKM\"\n                      label=\"Stop KM\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.pickTime}\n                      name=\"pickTime\"\n                      type=\"time\"\n                      label=\"Pick Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.pickEndTime}\n                      type=\"time\"\n                      name=\"pickEndTime\"\n                      label=\"Pick End Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.dropTime}\n                      type=\"time\"\n                      name=\"dropTime\"\n                      label=\"Drop Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.dropEndTime}\n                      type=\"time\"\n                      name=\"dropEndTime\"\n                      label=\"Drop End Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n                  <Grid xs={12} sm={12} md={6} item>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => updateStop(stop._id)}>\n                      Update\n                    </Button>\n                  </Grid>\n                </Grid>\n              </FormBox>\n            )\n          )\n        )}\n\n        <Button variant=\"contained\" size=\"small\" onClick={addStop}>\n          Add\n        </Button>\n\n        <Grid container spacing={2}>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Route and trip view ============= */}\n      <RouteAndTripViewDialog\n        title=\"Trasport Route Information\"\n        onClose={onClose}\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const transportAddMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n];\n","/** @format */\n\nexport const transportMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Stop Name\",\n    key: \"name\",\n    path: \"stopName\",\n  },\n  {\n    name: \"Pick Type\",\n    key: \"pickType\",\n    path: \"pickType\",\n  },\n\n  {\n    name: \"Route Start\",\n    key: \"routeStart\",\n    path: \"routeStart\",\n  },\n  {\n    name: \"Route End\",\n    key: \"routeEnd\",\n    path: \"routeEnd\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { transportAddMemberTableKeys } from \"../../data/tableKeys/transportAddMemberData\";\nimport { transportMemberTableKeys } from \"../../data/tableKeys/transportMemberData\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, SettingsSharp } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nconst Pick_Type = [\n  { label: \"Pick\", value: \"Pick\" },\n  { label: \"Drop\", value: \"Drop\" },\n  { label: \"Both\", value: \"Both\" },\n];\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [route, setRoute] = useState([]);\n\n  const getRoute = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list);\n\n      setRoute(\n        data.result.map((s) => ({ ...s, label: s.title, value: s._id }))\n      );\n\n      console.log(data.result, \"vvbvbbbbv vbfv vhvbfvvc\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(route, \"mmmmmmmmmmm\");\n  useEffect(() => {\n    getRoute();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        routeId: values.route,\n        stopId: values.stop,\n        pickType: values.type,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateTransportMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      route: \"\",\n      stop: \"\",\n      type: \"\",\n    },\n    onSubmit: addMember,\n  });\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"route\"\n              label=\"Route\"\n              required={true}\n              options={route}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"stop\"\n              label=\"Stop\"\n              required={true}\n              options={\n                route\n                  .find((r) => r._id === entryFormik.values.route)\n                  ?.stops.map((stop) => ({\n                    label: stop.name,\n                    value: stop._id,\n                  })) || []\n              }\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              name=\"type\"\n              formik={entryFormik}\n              label=\"Pick Type\"\n              options={Pick_Type}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function TransportMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [transportMember, setTransportMember] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const [transportMemberList, setTransportMemberList] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik1.setFieldValue(\"academicYear\", data.result[0]?._id);\n      formik2.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik1.setFieldValue(\"class\", data.result[0]?._id);\n      formik2.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik1.values.class || formik2.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      formik1.setFieldValue(\"section\", \"all\");\n      formik2.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            pickType: s.transportInfo,\n            routeStart: s?.transportInfo?.route,\n            routeEnd: s?.transportInfo?.route,\n            stopName: s?.transportInfo?.stop,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            className: s.academicInfo.class,\n            sectionName: s.academicInfo.section,\n          }));\n\n        setTransportMember(filteredDataMember);\n        setTransportMemberList(filteredDataNonMember);\n\n        console.log(filteredDataNonMember, \"kkkkk\");\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            pickType: s.transportInfo,\n            routeStart: s?.transportInfo?.route,\n            routeEnd: s?.transportInfo?.route,\n            stopName: s?.transportInfo?.stop,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            className: s.academicInfo.class,\n            sectionName: s.academicInfo.section,\n          }));\n\n        setTransportMember(filteredDataMember);\n        setTransportMemberList(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik1 = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik2 = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  useEffect(() => {\n    if (formik1.values.class || formik2.values.class) {\n      getSections();\n    }\n  }, [formik2.values.class, formik1.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(\n        PRIVATE_URLS.student.removeTransportMember + \"/\" + id\n      );\n      formik1.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"Transport Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Add Member\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <form onSubmit={formik1.handleSubmit}>\n          {\" \"}\n          <Paper sx={{ padding: 2, marginBottom: 2 }}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik1}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik1}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik1}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n        <CustomTable\n          actions={[\"delete\"]}\n          tableKeys={transportMemberTableKeys}\n          bodyData={transportMember}\n          bodyDataModal=\"transport member\"\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={formik2.handleSubmit}>\n          <Paper sx={{ padding: 2, marginBottom: 2 }}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik2}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik2}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik2}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n        <CustomTable\n          actions={\"custom\"}\n          tableKeys={transportAddMemberTableKeys}\n          bodyData={transportMemberList}\n          bodyDataModal=\"transport member\"\n          CustomAction={CustomActionAdd}\n          onUpdate={formik2.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const routesTableKeys = [\n  {\n    name: \"Vehicle\",\n    key: \"vehicle\",\n  },\n  {\n    name: \"Route\",\n    key: \"route\",\n  },\n  {\n    name: \"Pick Start\",\n    key: \"pickStart\",\n  },\n  {\n    name: \"Pick End\",\n    key: \"pickEnd\",\n  },\n\n  {\n    name: \"Drop Start\",\n    key: \"dropStart\",\n  },\n  {\n    name: \"Drop End\",\n    key: \"dropEnd\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { routesTableKeys } from \"../../data/tableKeys/routesData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Card, Typography } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Routes() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [sumOfSeat, setSumOfSeat] = useState(0);\n\n  // get rout\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      console.log(data, \"herere\");\n      setData(\n        data.result.map((r) => ({\n          ...r,\n          route: `${r.routeStart} - ${r.routeEnd}`,\n          vehicle: r.vehicle?.number,\n          totalSeats: r.vehicle?.totalSeats,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      const totalSeat = data.map((s) => parseInt(s.totalSeats));\n\n      let sum = 0;\n      for (let i = 0; i < totalSeat.length; i++) {\n        sum += totalSeat[i];\n      }\n      setSumOfSeat(sum);\n    }\n  }, [data, selectedSetting]);\n\n  console.log(sumOfSeat, \"sumOfSeat\");\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Trips\" />\n      <Card\n        style={{\n          padding: 10,\n          paddingLeft: \"1rem\",\n          display: \"flex\",\n          gap: \"20px\",\n          borderRadius: 0,\n        }}>\n        <Typography>Vehicle: {data.length}</Typography>\n        <Typography>Total Seats: {sumOfSeat}</Typography>\n      </Card>\n      <CustomTable\n        actions={[]}\n        tableKeys={routesTableKeys}\n        bodyDataModal=\"trips\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleLogTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Departure Time\",\n    key: \"departureTime\",\n  },\n  {\n    name: \"Reading At Departure\",\n    key: \"reading\",\n    path: \"readingAtDepartureReading\",\n  },\n  {\n    name: \"Arrival Time\",\n    key: \"arrivalTime\",\n  },\n  {\n    name: \"Reading At Arrival\",\n    key: \"reading\",\n    path: \"readingAtArrival\",\n  },\n  {\n    name: \"Total KM Run\",\n    key: \"totalDistanceTravelled\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { vehicleLogTableKeys } from \"../../data/tableKeys/vehicleLogData\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, styled } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { downloadFile } from \"../../utils\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nconst Trip_Completed = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function VehicleLog() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [departure, setDeparture] = useState([]);\n  const [arrival, setArrival] = useState([]);\n  const [vehicle, setVehicle] = useState([]);\n  const [route, setRoute] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicleLog.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            route: values.route,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      setData(\n        data.result.map((s) => ({\n          ...s,\n          readingAtDepartureReading: s?.readingAtDeparture,\n          readingAtArrival: s?.readingAtArrival,\n        }))\n      );\n\n      console.log(data.result, \"kkkkkkk\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, [selectedSetting]);\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getLogPdf = await get(PRIVATE_URLS.vehicleLog.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: formik.values.vehicle,\n            route: formik.values.route,\n\n            fromDate: dayjs(formik.values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(formik.values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      downloadFile(\"application/pdf\", getLogPdf.data, \"vehiclelog.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoute = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: formik.values.vehicle || entryFormik.values.vehicle,\n          },\n        },\n      });\n      setRoute(\n        data.result.map((v) => ({\n          ...v,\n          label: v.title,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"route\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n\n      const formDataDeparture = new FormData();\n      const formDataArrival = new FormData();\n\n      formDataDeparture.append(\"schoolId\", selectedSetting._id);\n      formDataDeparture.append(\"route\", values.route);\n      formDataDeparture.append(\"vehicle\", values.vehicle);\n      formDataDeparture.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n\n      formDataDeparture.append(\"departureTime\", values.departureTime);\n      formDataDeparture.append(\"readingAtDeparture\", values.readingAtDeparture);\n      formDataDeparture.append(\n        \"totalDistanceTravelled\",\n        values.totalDistanceTravelled\n      );\n\n      departure.forEach((file) =>\n        formDataDeparture.append(\"departureImage\", file)\n      );\n\n      formDataArrival.append(\"arrivalTime\", values.arrivalTime);\n      formDataArrival.append(\"readingAtArrival\", values.readingAtArrival);\n      formDataArrival.append(\n        \"spareUse\",\n        JSON.stringify({ distance: values.distance, reason: values.reason })\n      );\n      arrival.forEach((file) => formDataArrival.append(\"arrivalImage\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vehicleLog.update + \"/\" + dataToEdit._id,\n          formDataArrival,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.vehicleLog.create,\n          formDataDeparture,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      route: dataToEdit?.route._id || \"\",\n      vehicle: dataToEdit?.vehicle._id || \"\",\n\n      departureTime: dataToEdit?.departureTime || \"\",\n      readingAtDeparture: dataToEdit?.readingAtDeparture?.reading || \"\",\n      arrivalTime: dataToEdit?.arrivalTime || \"\",\n      readingAtArrival: dataToEdit?.readingAtArrival?.reading || \"\",\n      distance: dataToEdit?.spareUse?.distance || \"\",\n      date: dataToEdit?.date || null,\n      reason: dataToEdit?.spareUse?.reason || \"\",\n      totalDistanceTravelled: dataToEdit?.totalDistanceTravelled || 0,\n\n      tripCompleted: dataToEdit?.tripCompleted || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      route: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"departureImage\") {\n        setDeparture(fileList);\n      } else {\n        setArrival(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setDeparture(departure.filter((img) => img.name != fileName));\n    setArrival(arrival.filter((img) => img.name != fileName));\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle || entryFormik.values.vehicle) {\n      getRoute();\n    }\n  }, [formik.values.vehicle, entryFormik.values.vehicle, selectedSetting]);\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.route) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.route, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.vehicleLog.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDownloadDeparture = () => {\n    const downloadUrl = dataToEdit?.readingAtDeparture?.image;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadArrival = async () => {\n    const downloadUrl = dataToEdit?.readingAtArrival?.image;\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vehicle Log\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"route\"\n                formik={formik}\n                label=\"Select Route\"\n                options={route}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n\n              <Button\n                size=\"small\"\n                onClick={handleGetPrintPdf}\n                variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <AddForm title=\"Add Vehicle Log\" onAddClick={AddDepartmentHandel} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Vehicle Log\" : \"Add Vehicle log\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"route\"\n              label=\"Route\"\n              required={true}\n              options={route}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker formik={entryFormik} name=\"date\" label=\"Date\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"departureTime\"\n              label=\"Departure Time\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"totalDistanceTravelled\"\n              label=\"Total Distance Travelled\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"tripCompleted\"\n              label=\"Trip Completed\"\n              options={Trip_Completed}\n            />\n          </Grid>\n        </Grid>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} sm={12} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"readingAtDeparture\"\n                label=\"Reading At Departure\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={6} item>\n              <FileSelect\n                name=\"departureImage\"\n                label=\"Select File\"\n                onChange={(e) => handleChangePhoto(e, \"departureImage\")}\n                customOnChange={true}\n                selectedFiles={departure}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n            {dataToEdit?.readingAtDeparture &&\n            dataToEdit.readingAtDeparture?.image ? (\n              <Grid xs={12} md={6} lg={6} item>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleDownloadDeparture}>\n                  Download File\n                </Button>\n              </Grid>\n            ) : null}\n          </Grid>\n        </FormBox>\n        {dataToEdit ? (\n          <>\n            <Grid container spacing={2}>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  type=\"time\"\n                  name=\"arrivalTime\"\n                  label=\"Arrival Time\"\n                />\n              </Grid>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  name=\"distance\"\n                  label=\"Distance\"\n                />\n              </Grid>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput formik={entryFormik} name=\"reason\" label=\"Reason\" />\n              </Grid>\n            </Grid>\n\n            <FormBox>\n              <Grid container spacing={2}>\n                <Grid xs={12} sm={12} md={6} item>\n                  <FormInput\n                    formik={entryFormik}\n                    name=\"readingAtArrival\"\n                    label=\"Reading At Arrivale\"\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={6} item>\n                  <FileSelect\n                    name=\"arrivalImage\"\n                    label=\"Select File\"\n                    onChange={(e) => handleChangePhoto(e, \"arrivalImage\")}\n                    customOnChange={true}\n                    selectedFiles={arrival}\n                    onRemove={(fileName) => handleRemoveFile(fileName)}\n                    accept=\"image/*,.pdf\"\n                  />\n                </Grid>\n                {dataToEdit?.readingAtArrival &&\n                dataToEdit.readingAtArrival?.image ? (\n                  <Grid xs={12} md={6} lg={6} item>\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={handleDownloadArrival}>\n                      Download File\n                    </Button>\n                  </Grid>\n                ) : null}\n              </Grid>\n            </FormBox>\n          </>\n        ) : null}\n      </FormModal>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={vehicleLogTableKeys}\n        bodyDataModal=\"vehicle log\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n    </>\n  );\n}\n","export const vehicleFirmTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone Number\",\n    key: \"contactNumber\",\n  },\n  {\n    name: \"Email\",\n    key: \"email\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { vehicleFirmTableKeys } from \"../../data/tableKeys/vehcleFirmData\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { Button, Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport { Add } from \"@mui/icons-material\";\n\nexport default function Firm() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.firm.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.firm.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      email: dataToEdit?.email || \"\",\n      GSTNumber: dataToEdit?.GSTNumber || \"\",\n      website: dataToEdit?.website || \"\",\n      address: dataToEdit?.address || \"\",\n      city: dataToEdit?.city || \"\",\n      state: dataToEdit?.state || \"\",\n      zipCode: dataToEdit?.zipCode || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.firm.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        tableKeys={vehicleFirmTableKeys}\n        bodyData={data}\n        bodyDataModal=\"firm\"\n        actions={[\"edit\", \"delete\"]}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Firm\" : \"Add Firm\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Contact Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"email\" label=\"Email\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"GSTNumber\"\n              label=\"GST Number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"website\" label=\"Website\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"address\" label=\"Address\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"city\" label=\"City\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"state\" label=\"State\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"zipCode\" label=\"Zip Code\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleFuelTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Firm\",\n    key: \"name\",\n    path: \"firmName\",\n  },\n  {\n    name: \"Bill No\",\n    key: \"billNo\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Km\",\n    key: \"kiloMeter\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleFuelTableKeys } from \"../../data/tableKeys/vehicleFuelData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nexport default function Fuel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectReceipt, setSelectReceipt] = useState([]);\n  const [vehicle, setVehicle] = useState([]);\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceFuel.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      setData(data.result.map((s) => ({ ...s, firmName: s.firm })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"vehicle\", values.vehicle);\n      formData.append(\"firm\", values.firm);\n      formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n      formData.append(\"billNo\", values.billNo);\n      formData.append(\"fuelQuantity\", values.fuelQuantity);\n      formData.append(\"rate\", values.rate);\n      formData.append(\"amount\", values.amount);\n      formData.append(\"kiloMeter\", values.kiloMeter);\n\n      selectReceipt.forEach((file) => formData.append(\"file\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceFuel.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceFuel.create,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      date: dataToEdit?.date || \"\",\n      billNo: dataToEdit?.billNo || \"\",\n      fuelQuantity: dataToEdit?.fuelQuantity || \"\",\n      rate: dataToEdit?.rate || \"\",\n      amount: dataToEdit?.amount || \"\",\n      kiloMeter: dataToEdit?.kiloMeter || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectReceipt(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectReceipt(selectReceipt.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceFuel.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n\n  const handleDownload = () => {\n    const downloadUrl = dataToEdit?.receipt;\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        tableKeys={vehicleFuelTableKeys}\n        bodyData={data}\n        bodyDataModal=\"fuel\"\n        actions={[\"edit\", \"delete\"]}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Fuel\" : \"Add Fuel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"firm\"\n              label=\"Firm\"\n              required={true}\n              options={firm}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"billNo\"\n              label=\"Bill No\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"fuelQuantity\"\n              label=\"Fuel Quantity\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"rate\"\n              label=\"Rate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kiloMeter\"\n              label=\"Kilo Meter\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FileSelect\n              name=\"receipt\"\n              label=\"Select File\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectReceipt}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          {dataToEdit && dataToEdit?.receipt ? (\n            <Grid xs={12} md={6} lg={6} item>\n              <Button size=\"small\" variant=\"contained\" onClick={handleDownload}>\n                Download File\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleRepairTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Particulars\",\n    key: \"particulars\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleRepairTableKeys } from \"../../data/tableKeys/vehicleRepairData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function Repair() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [vehicle, setVehicle] = useState([]);\n\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceRepair.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n\n      console.log(payload, \"kkkkkk\");\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceRepair.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceRepair.create,\n          payload\n        );\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      date: dataToEdit?.date || \"\",\n      particulars: dataToEdit?.particulars,\n      amount: dataToEdit?.amount,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceRepair.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyData={data}\n        tableKeys={vehicleRepairTableKeys}\n        bodyDataModal=\"Repair Maintenance\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Repair Maintenance\" : \"Add Repair Maintenance\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"vehicle\"\n              formik={entryFormik}\n              label=\"Select Vehicle\"\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"firm\"\n              formik={entryFormik}\n              label=\"Select Firm\"\n              options={firm}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"particulars\"\n              label=\"Particulars\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleTireTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Firm\",\n    key: \"name\",\n    path: \"firmName\",\n  },\n  {\n    name: \"Km Reading\",\n    key: \"kmReading\",\n  },\n  {\n    name: \"Km Run\",\n    key: \"kmRun\",\n  },\n  {\n    name: \"Tyre\",\n    key: \"tyre\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleTireTableKeys } from \"../../data/tableKeys/vehicleTireData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function VehicleTire() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [vehicle, setVehicle] = useState([]);\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceTyre.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result.map((s) => ({ ...s, firmName: s.firm })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceTyre.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceTyre.create,\n          payload\n        );\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      kmReading: dataToEdit?.kmReading || \"\",\n      kmRun: dataToEdit?.kmRun || \"\",\n      tyre: dataToEdit?.tyre || \"\",\n      date: dataToEdit?.date || null,\n      amount: dataToEdit?.amount || \"\",\n      rate: dataToEdit?.rate || \"\",\n      tyreNo: dataToEdit?.tyreNo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceTyre.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={vehicleTireTableKeys}\n        bodyData={data}\n        bodyDataModal=\"tyre/resole\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Vehicle Tyre/Resole\" : \"Add  Vehicle Tyre/Resole\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"vehicle\"\n              formik={entryFormik}\n              label=\"Select Vehicle\"\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"firm\"\n              formik={entryFormik}\n              label=\"Select Firm\"\n              options={firm}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kmReading\"\n              label=\"Km Reading\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kmRun\"\n              label=\"Km Run\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"tyre\"\n              label=\"Tyre\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"rate\"\n              label=\"Rate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"tyreNo\"\n              label=\"Tyre No\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleGreecingTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleGreecingTableKeys } from \"../../data/tableKeys/vehicleGreecingData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function Greecing() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [vehicle, setVehicle] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceGreecing.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"kkkkkkk\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceGreecing.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceGreecing.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      date: dataToEdit?.date || null,\n\n      amount: dataToEdit?.amount,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceGreecing.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyData={data}\n        tableKeys={vehicleGreecingTableKeys}\n        bodyDataModal=\"greecing\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Greecing\" : \"Add Greecing\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport Firm from \"../../components/Transport/Firm\";\nimport Fuel from \"../../components/Transport/Fuel\";\nimport Repair from \"../../components/Transport/Repair\";\nimport VehicleTire from \"../../components/Transport/VehicleTire\";\nimport Greecing from \"../../components/Transport/Greecing\";\n\nexport default function VehicleMaintenance() {\n  const [value, setSelectValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  return (\n    <>\n      <PageHeader title=\"Vehicle Maintenance:\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Firm\",\n          \"Vehicle Fuel\",\n          \"Repair Maintenance\",\n          \"New Tyre/Resole\",\n          \"Greecing\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Firm />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Fuel />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Repair />\n      </TabPanel>\n      <TabPanel index={3} value={value}>\n        <VehicleTire />\n      </TabPanel>\n      <TabPanel index={4} value={value}>\n        <Greecing />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const salaryGradeTableKeys = [\n  {\n    name: \"Grade Id\",\n    key: \"gradeCode\",\n  },\n  {\n    name: \"Grade\",\n    key: \"grade\",\n  },\n  {\n    name: \"From\",\n    key: \"from\",\n  },\n  {\n    name: \"To\",\n    key: \"to\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { salaryGradeTableKeys } from \"../../data/tableKeys/salaryGradeData\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useFormik } from \"formik\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nexport default function SalaryGrade() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddSalaryGrade = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.salaryGrade.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.salaryGrade.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      grade: dataToEdit?.grade || \"\",\n      active: dataToEdit?.active || true,\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      breakups: dataToEdit?.breakups || [\n        {\n          id: 1,\n          name: \"\",\n          percentage: \"\",\n        },\n      ],\n      deduction: dataToEdit?.deduction || [\n        {\n          id: 1,\n          name: \"\",\n          percentage: \"\",\n        },\n      ],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleInputChange = (event, item, type) => {\n    entryFormik.setFieldValue(\n      type,\n      entryFormik.values[type].map((i) =>\n        i.id === item.id ? { ...i, [event.target.name]: event.target.value } : i\n      )\n    );\n  };\n\n  const addItem = (type) => {\n    const initialData = [...entryFormik.values[type]];\n    const newItem = {\n      id: initialData.length + 1,\n      name: \"\",\n      percentage: \"\",\n    };\n    entryFormik.setFieldValue(type, [...initialData, newItem]);\n  };\n\n  const removeItem = (index, type) => {\n    const initialData = [...entryFormik.values[type]];\n    initialData.splice(index, 1);\n    entryFormik.setFieldValue(type, initialData);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.salaryGrade.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Salary Grade\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={salaryGradeTableKeys}\n        bodyDataModal=\"salary grade\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Salary grade\" onAddClick={AddSalaryGrade} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Salary Grade\" : \"Add Salary Grade\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"grade\"\n              label=\"Grade\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"from\" label=\"From\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"to\" label=\"To\" />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"active\"\n              formik={entryFormik}\n              label=\"Status\"\n              options={Active}\n            />\n          </Grid>\n        </Grid>\n\n        {entryFormik.values.breakups.map((b, i) => (\n          <>\n            <Typography fontWeight={\"bold\"} mt={1}>\n              Breakups:\n            </Typography>\n            <Grid\n              container\n              key={i}\n              gap={1}\n              sx={{\n                backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"20px 15px 30px 15px\",\n                border: \"1px solid lightgrey\",\n                my: 1.5,\n              }}>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={b?.name}\n                  name=\"name\"\n                  label=\"Name\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, b, \"breakups\")}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={b?.percentage}\n                  name=\"percentage\"\n                  label=\"Percentage\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, b, \"breakups\")}\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                sm={3}\n                md={3}\n                item\n                sx={{\n                  fontSize: 16,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}>\n                <Button onClick={() => addItem(\"breakups\")}>\n                  <AddIcon />\n                </Button>\n                <Button color=\"error\" onClick={() => removeItem(i, \"breakups\")}>\n                  <RemoveIcon color=\"error\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </>\n        ))}\n\n        {entryFormik.values.deduction.map((d, i) => (\n          <>\n            <Typography fontWeight={\"bold\"} mt={1}>\n              Deduction:\n            </Typography>\n            <Grid\n              container\n              key={i}\n              gap={1}\n              sx={{\n                backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"20px 15px 30px 15px\",\n                border: \"1px solid lightgrey\",\n                my: 1.5,\n              }}>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={d?.name}\n                  name=\"name\"\n                  label=\"Name\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, d, \"deduction\")}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={d?.percentage}\n                  name=\"percentage\"\n                  label=\"Percentage\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, d, \"deduction\")}\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                sm={3}\n                md={3}\n                item\n                sx={{\n                  fontSize: 16,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}>\n                <Button onClick={() => addItem(\"deduction\")}>\n                  <AddIcon />\n                </Button>\n                <Button\n                  color=\"error\"\n                  onClick={() => removeItem(i, \"deduction\")}>\n                  <RemoveIcon color=\"error\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </>\n        ))}\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const paymentHistoryTableKeys = [\n  {\n    name: \"Month\",\n    key: \"month\",\n  },\n  {\n    name: \"Year\",\n    key: \"year\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport { paymentHistoryTableKeys } from \"../../data/tableKeys/paymentHistoryData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function MakePayment() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [processingPayment, setProcessingPayment] = useState(false);\n  const [downloadingDeductions, setDownloadingDeductions] = useState(false);\n  const [deductions, setDeductions] = useState([]);\n\n  const getDeductions = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      let deductionList = [];\n      for (let sg of data.result) {\n        let deductions = sg.deduction.map((d) => ({\n          ...d,\n          label: d.name,\n          value: d.name,\n        }));\n        deductionList = [...deductionList, ...deductions];\n      }\n\n      setDeductions(deductionList);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDeductions();\n  }, [selectedSetting]);\n\n  const handleProcessPayment = async (values) => {\n    setProcessingPayment(true);\n    try {\n      const selectedMonth = dayjs(values.month).format(\"MMMM\");\n\n      const { data } = await get(PRIVATE_URLS.paymentHistory.downloadPdf, {\n        params: {\n          month: selectedMonth,\n          year: values.year,\n          schoolId: selectedSetting._id,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", data, `Salary_Slip_${selectedMonth}`);\n\n      getPaymentHistory();\n    } catch (error) {\n      console.log(error);\n    }\n    setProcessingPayment(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      month: new Date(),\n      year: new Date(),\n    },\n    onSubmit: handleProcessPayment,\n  });\n\n  const handleDownloadDeductions = async (values) => {\n    const month = values.date;\n    const deduction = values.type;\n\n    setDownloadingDeductions(true);\n    try {\n      const selectedMonth = dayjs(values.month).format(\"MMMM\");\n      const { data } = await get(\n        PRIVATE_URLS.paymentHistory.downloadDeductionPdf,\n        {\n          params: {\n            month: selectedMonth,\n            deduction,\n            schoolId: selectedSetting._id,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", data, `Deductions-${selectedMonth}`);\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingDeductions(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      type: new Date(),\n      date: new Date(),\n    },\n    onSubmit: handleDownloadDeductions,\n  });\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getPaymentHistory = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.paymentHistory.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setPaymentHistory(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (value === 1) {\n      getPaymentHistory();\n    }\n  }, [value]);\n\n  const handleDownloadPaymentHistory = (data) => {\n    window.open(data.data);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Salary Sheet\", \"History\", \"Salary Deduction\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Month\"\n                name=\"month\"\n                openTo=\"month\"\n                inputFormat=\"MM\"\n                views={[\"month\"]}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Year\"\n                name=\"year\"\n                openTo=\"year\"\n                inputFormat=\"YYYY\"\n                views={[\"year\"]}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }}>\n              <LoadingButton\n                loading={processingPayment}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Process\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"download\"]}\n          tableKeys={paymentHistoryTableKeys}\n          bodyData={paymentHistory}\n          bodyDataModal=\"history\"\n          onDownloadClick={handleDownloadPaymentHistory}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={formik}\n                label=\"Select Deduction Type\"\n                options={deductions}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"Date\"\n                openTo=\"month\"\n                inputFormat=\"MM/yyyy\"\n                views={[\"month\", \"year\"]}\n                name=\"date\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                onClick={formik.handleSubmit}\n                loading={downloadingDeductions}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const libraryReportTableKeys = [\n  {\n    name: \"Group By Data\",\n    key: \"groupByData\",\n    isDate: true,\n  },\n  {\n    name: \"Issue Total\",\n    key: \"totalIssues\",\n  },\n  {\n    name: \"Return Total\",\n    key: \"totalReturns\",\n  },\n\n  // {\n  //   name: \"Remain Total\",\n  //   key: \"remainTotal\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { libraryReportTableKeys } from \"../../data/tableKeys/libraryTabularData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport dayjs from \"dayjs\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nimport { PieChart, Pie, Tooltip, Cell, Legend } from \"recharts\";\nimport themeData from \"../../data/themeData\";\nimport { downloadFile } from \"../../utils\";\n\nconst graphData = [\n  { name: \"Issue\", value: 400 },\n  { name: \"Return\", value: 300 },\n  { name: \"Remain\", value: 300 },\n];\n\nconst colors = [\"#FFBB28\", \"#00C49F\", \"#32CD32\"];\n\nconst GroupBYData_Options = [\n  {\n    label: \"Daily\",\n    value: \"daily\",\n  },\n  {\n    label: \"Weekly\",\n    value: \"weekly\",\n  },\n  {\n    label: \"Monthly\",\n    value: \"monthly\",\n  },\n  {\n    label: \"Class\",\n    value: \"class\",\n  },\n];\n\nconst HeadingContainer = styled(Grid)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\nconst DataContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"10px\",\n}));\nexport default function LibraryReport() {\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [academicYearGraph, setAcademicYearGraph] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      setAcademicYearGraph(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetDataByGroup = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.report.groupedLibraryData, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupByData: values.groupByData,\n          fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n        },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"data999999999999999999=======\");\n    } catch (error) {}\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleGetDataByGroup,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(PRIVATE_URLS.report.downloadGroupedLibraryData, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYear: entryFormik.values.academicYear,\n\n          groupByData: entryFormik.values.groupByData,\n          fromDate: dayjs(entryFormik.values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(entryFormik.values.toDate).format(\"YYYY/MM/DD\"),\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"libraryReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Library Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Tabular Report\", \"Grapical Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={entryFormik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"To Date\"\n                  name=\"toDate\"\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                alignSelf=\"center\"\n                gap={1}\n                item>\n                <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                  Find\n                </Button>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleGetPrintPdf}>\n                  Print\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          tableKeys={libraryReportTableKeys}\n          bodyData={data}\n          bodyDataModal=\"library report\"\n          actions={[]}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, mb: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearGraph}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              display=\"flex\"\n              alignSelf=\"center\"\n              gap={1}\n              item>\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <HeadingContainer container>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper sx={{ padding: 2, mt: 2 }}>\n              <img\n                src={selectedSetting.logo}\n                height={60}\n                width={60}\n                style={{\n                  display: \"block\",\n                  margin: \"auto\",\n                }}\n              />\n\n              <Typography fontSize={18} textAlign=\"center\">\n                {selectedSetting.name}\n              </Typography>\n              <Typography gutterBottom fontSize={12} textAlign=\"center\">\n                {selectedSetting.address}\n              </Typography>\n\n              <DataContainer>\n                {\" \"}\n                <AssessmentIcon\n                  sx={{ color: themeData.darkPalette.primary.main }}\n                />\n                <Typography textAlign=\"center\" color=\"error\">\n                  Libary Report\n                </Typography>\n              </DataContainer>\n            </Paper>\n          </Grid>\n        </HeadingContainer>\n\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\n          <PieChart width={1000} height={380}>\n            <Legend\n              wrapperStyle={{ textAlign: \"center\" }}\n              formatter={(value) => value}\n            />\n            <Pie\n              dataKey=\"value\"\n              isAnimationActive={false}\n              data={graphData}\n              outerRadius={150}\n              label>\n              {graphData.map((entry, index) => (\n                <Cell key={index} fill={colors[index % colors.length]} />\n              ))}\n            </Pie>\n\n            <Tooltip />\n          </PieChart>\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function StudentYearlyAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getStudentAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            studentId: values.student,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n\n      student: \"\",\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting,\n  ]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Yearly Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            item\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Month</TableCell>\n\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData &&\n            Object.keys(attendanceData).map((month) => (\n              <TableRow key={month}>\n                <TableCell align=\"center\">{month}</TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalWorkingDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalPresentDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalAbsentDays}\n                </TableCell>\n                {numbers.map((num) => (\n                  <TableCell key={num.key} align=\"center\">\n                    {getAttendanceForDay(\n                      attendanceData[month].attendance,\n                      month,\n                      num.key\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeYearlyAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"employee\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getEmployeeAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            employeeId: values.employee,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getEmployees();\n  }, [selectedSetting._id]);\n\n  // useEffect(() => {\n  //   if (entryFormik.values.academicYear && entryFormik.values.employee) {\n  //     handleGetReport(entryFormik.values);\n  //   }\n  // }, [entryFormik.values.academicYear, entryFormik.values.employee]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else if (status === \"late\") {\n      return \"L\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee Yearly Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"employee\"\n              formik={entryFormik}\n              label=\"Select Employee\"\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Month</TableCell>\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData &&\n            Object.keys(attendanceData).map((month) => (\n              <TableRow key={month}>\n                <TableCell align=\"center\">{month}</TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalWorkingDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalPresentDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalAbsentDays}\n                </TableCell>\n                {numbers.map((num) => (\n                  <TableCell key={num.key} align=\"center\">\n                    {getAttendanceForDay(\n                      attendanceData[month].attendance,\n                      month,\n                      num.key\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentActivityReportTableKeys = [\n  {\n    name: \"Student\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Section\",\n    key: \"sectionName\",\n  },\n\n  {\n    name: \"Activity\",\n    key: \"activityName\",\n  },\n  {\n    name: \"Activity Date\",\n    key: \"activityDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { studentActivityReportTableKeys } from \"../../data/tableKeys/studentActivityReportData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function StudentActivityReport() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentActivityReport = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.report.getStudentActivityReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: values.academicYear,\n          studentId: values.student,\n        },\n      });\n      setData(data.result);\n    } catch (error) {}\n  };\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(\n        PRIVATE_URLS.report.getStudentActivityReportPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            studentId: entryFormik.values.student,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getPdf.data, \"studentActivityReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudentActivityReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.academicYear && entryFormik.values.class) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n\n    selectedSetting,\n  ]);\n  return (\n    <>\n      <PageHeader title=\"Student Activity Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"student\"\n                formik={entryFormik}\n                label=\"Select Student\"\n                options={students}\n              />\n            </Grid>\n\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              item\n              display=\"flex\"\n              gap={1}\n              alignSelf=\"center\">\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleGetPrintPdf}>\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentActivityReportTableKeys}\n        bodyDataModal=\"student activity report\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function StudentAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState(\"\");\n\n  const [academicYear, setAcademicYear] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFetchReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getAllStudentsAttendanceReportForParticularMonth,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            month: new Date(entryFormik.values.month).getMonth() + 1,\n            year: new Date(entryFormik.values.month).getFullYear(),\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            sectionId: entryFormik.values.section,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setSelectedMonthYear(dayjs(entryFormik.values.month).format(\"YYYY-MM\"));\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n\n      month: dayjs(new Date()),\n    },\n    onSubmit: handleFetchReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Attendance Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              options={academicYear}\n              label=\"Select Academic Year\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Month\"\n              name=\"month\"\n              openTo=\"month\"\n              inputFormat=\"MM\"\n              views={[\"month\"]}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            item\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Student Name</TableCell>\n\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData.map((student) => (\n            <TableRow key={student.studentId}>\n              <TableCell align=\"center\">{student.studentName}</TableCell>\n              <TableCell align=\"center\">{student.totalWorkingDays}</TableCell>\n              <TableCell align=\"center\">{student.totalPresentDays}</TableCell>\n              <TableCell align=\"center\">{student.totalAbsentDays}</TableCell>\n              {numbers.map((num) => (\n                <TableCell key={num.key} align=\"center\">\n                  {getAttendanceForDay(\n                    student.attendance,\n                    selectedMonthYear,\n                    num.key\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState(\"\");\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFetchReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getAllEmployeesAttendanceReportForParticularMonth,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            month: new Date(entryFormik.values.month).getMonth() + 1,\n            year: new Date(entryFormik.values.month).getFullYear(),\n            academicYearId: entryFormik.values.academicYear,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setSelectedMonthYear(dayjs(entryFormik.values.month).format(\"YYYY-MM\"));\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      month: dayjs(new Date()),\n    },\n    onSubmit: handleFetchReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else if (status === \"late\") {\n      return \"L\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Month\"\n              name=\"month\"\n              openTo=\"month\"\n              inputFormat=\"MM\"\n              views={[\"month\"]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Employee Name</TableCell>\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData.map((employee) => (\n            <TableRow key={employee.employeeId}>\n              <TableCell align=\"center\">{employee.employeeName}</TableCell>\n              <TableCell align=\"center\">{employee.totalWorkingDays}</TableCell>\n              <TableCell align=\"center\">{employee.totalPresentDays}</TableCell>\n              <TableCell align=\"center\">{employee.totalAbsentDays}</TableCell>\n              {numbers.map((num) => (\n                <TableCell key={num.key} align=\"center\">\n                  {getAttendanceForDay(\n                    employee.attendance,\n                    selectedMonthYear,\n                    num.key\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nexport const visitorInfoTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"To Meet\",\n    key: \"toMeetUserName\",\n  },\n  {\n    name: \"ReasonToMeet\",\n    key: \"reasonToMeet\",\n  },\n  {\n    name: \"CheckIn\",\n    key: \"checkIn\",\n  },\n\n  {\n    name: \"Check Out\",\n    key: \"checkOut\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport themeData from \"../../data/themeData\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function VisitorInfoViewModel({\n  open = true,\n  title = \"\",\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table aria-label=\"customized table\">\n            <TableBody>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  School Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.school?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Phone\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.phone || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Coming From\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.comingForm || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  User Type\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.toMeetUserType?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  To Meet\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.toMeetUserName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Reason To Meet\n                </StyledTableCell>\n                <StyledTableCell\n                  align=\"left\"\n                  width={100}\n                  isDarkMode={isDarkMode}>\n                  {tableData?.reasonToMeet?.charAt(0).toUpperCase() +\n                    tableData?.reasonToMeet?.slice(1)}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Check In\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.checkIn || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Check Out\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.checkOut || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Note\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.note || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, TextField } from \"@mui/material\";\nimport { visitorInfoTableKeys } from \"../../data/tableKeys/visitorInfoData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport VisitorInfoViewModel from \"./VisitorInfoViewModel\";\nimport moment from \"moment\";\n\nconst Reason_To_Meet = [\n  { label: \"Vendor\", value: \"vendor\" },\n  { label: \"Relative\", value: \"relative\" },\n  { label: \"Friend\", value: \"friend\" },\n  { label: \"Guardian\", value: \"guardian\" },\n  { label: \"Family\", value: \"family\" },\n  { label: \"Interview\", value: \"interview\" },\n  { label: \"Meeting\", value: \"meeting\" },\n  { label: \"Other\", value: \"other\" },\n];\n\nexport default function VisitorInfo() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  // get Roles\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.visitorInfo.list);\n      // console.log(data, \"hhaha\");\n      setData(\n        data.result.map((r) => ({\n          ...r,\n          toMeetUserName: r.toMeetUser.basicInfo.name,\n          checkIn: new Date(r.checkIn).toLocaleString(),\n          checkOut: r.checkOut ? new Date(r.checkOut).toLocaleString() : \"\",\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Roles\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(\n        data.result.map((r) => ({\n          ...r,\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n    getData();\n  }, [selectedSetting]);\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      // entryFormik.setFieldValue(\"toMeetUser\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // get Employee\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.toMeetUserType,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/update\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.visitorInfo.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.visitorInfo.create, payload);\n      }\n      getData();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // Formik\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      phone: dataToEdit?.phone || \"\",\n      comingForm: dataToEdit?.comingForm || \"\",\n      toMeetUserType: dataToEdit?.toMeetUserType._id || \"\",\n      toMeetUser: dataToEdit?.toMeetUser?._id || \"\",\n      reasonToMeet: dataToEdit?.reasonToMeet || \"\",\n      note: dataToEdit?.note || \"\",\n\n      checkOut: dataToEdit?.checkOut\n        ? moment(dataToEdit.checkOut, \"DD/MM/YYYY, HH:mm:ss\").format(\n            \"YYYY-MM-DDTHH:mm\"\n          )\n        : \"\",\n\n      class: dataToEdit?.class?._id || \"\",\n      section: dataToEdit?.section?._id || \"\",\n      roleName: dataToEdit?.roleName || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    setOpen(false);\n    // getData();\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.toMeetUserType) {\n      let roleName = roles.find(\n        (r) => r._id === entryFormik.values.toMeetUserType\n      )?.name;\n      entryFormik.setFieldValue(\"roleName\", roleName);\n      getEmployees();\n    }\n  }, [entryFormik.values.toMeetUserType]);\n\n  useEffect(() => {\n    if (\n      (entryFormik.values.toMeetUserType,\n      entryFormik.values.class,\n      entryFormik.values.section)\n    ) {\n      let roleName = roles.find(\n        (r) => r._id === entryFormik.values.toMeetUserType\n      )?.name;\n      entryFormik.setFieldValue(\"roleName\", roleName);\n      getStudents();\n    }\n  }, [\n    entryFormik.values.toMeetUserType,\n    entryFormik.values.class,\n    entryFormik.values.section,\n  ]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  console.log(data, \"mmmmmm\");\n\n  return (\n    <>\n      <PageHeader title=\"Visitor Info\" />\n      <Grid container mb={1}>\n        <Grid\n          xs={12}\n          md={12}\n          lg={12}\n          item\n          display=\"flex\"\n          justifyContent=\"flex-start\"\n          gap={1}>\n          <Button size=\"small\" variant=\"contained\">\n            Excel\n          </Button>\n          <Button size=\"small\" variant=\"contained\">\n            Print\n          </Button>\n        </Grid>\n      </Grid>\n\n      <CustomTable\n        actions={[\"view\", \"edit\"]}\n        tableKeys={visitorInfoTableKeys}\n        bodyDataModal=\"visitor info\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* view visitor info ============= */}\n      <VisitorInfoViewModel\n        title=\"Visitor Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        onClose={onCloseViewModel}\n      />\n\n      {/* Add visitor info ============== */}\n      <AddForm title=\"Add visitor info\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Visitor Info\" : \"Add Visitor Info\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"phone\"\n              label=\"Phone\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"comingForm\"\n              label=\"Coming Form\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              required={true}\n              name=\"toMeetUserType\"\n              formik={entryFormik}\n              label=\"Select To Meet User Type\"\n              options={roles}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n\n          {entryFormik.values.roleName === \"STUDENT\" && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                  disabled={dataToEdit != null}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                  disabled={dataToEdit != null}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              required={true}\n              name=\"toMeetUser\"\n              formik={entryFormik}\n              label=\"Select To Meet User\"\n              options={\n                entryFormik.values.roleName === \"STUDENT\" ? students : employees\n              }\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"reasonToMeet\"\n              formik={entryFormik}\n              label=\"Select Reason To Meet\"\n              options={Reason_To_Meet}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          {dataToEdit != null && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <TextField\n                  value={dataToEdit?.checkIn.toLocaleString()}\n                  fullWidth\n                  label=\"Check In\"\n                  name=\"checkIn\"\n                  disabled={dataToEdit != null}\n                  sx={{\n                    mt: 2,\n                    borderWidth: 1,\n                    borderRadius: (theme) => theme.shape.borderRadius,\n                  }}\n                  InputProps={{\n                    style: {\n                      borderWidth: 1,\n                      height: \"42px\",\n                      borderRadius: (theme) => theme.shape.borderRadius,\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  label=\"Check Out\"\n                  name=\"checkOut\"\n                  type=\"datetime-local\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const studentCheckOutTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n\n  {\n    name: \"Check Out\",\n    key: \"checkOut\",\n  },\n  {\n    name: \"Parent Name\",\n    key: \"parentName\",\n  },\n  {\n    name: \"Relation\",\n    key: \"relation\",\n  },\n  { name: \"Visitor Contact Number\", key: \"visitorContactNumber\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentCheckOutTableKeys } from \"../../data/tableKeys/studentCheckoutData\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\n\nconst Relation_With_Student = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nexport default function StudentCheckout() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingPdf, setLoadingPdf] = useState(false);\n  const [loadingExcel, setLoadingExce] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentCheckout.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddStudentCheckoutHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: formik.values.academicYear,\n            \"academicInfo.class\": formik.values.class,\n            \"academicInfo.section\": formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n\n      formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    // onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.academicYear) {\n      getData();\n    }\n  }, [formik.values.academicYear]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        student: formik.values.student,\n      };\n\n      setLoading(true);\n\n      const { data } = await put(PRIVATE_URLS.studentCheckout.update, payload);\n      getData();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      student:\n        students.find((student) => student._id === formik.values.student)\n          ?.basicInfo.name || \"\",\n      relationship: \"\",\n      reason: \"\",\n      visitorName: \"\",\n      visitorContactNumber: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleGetPrintPdf = async () => {\n    try {\n      setLoadingPdf(true);\n      const getStudentCheckoutPdf = await get(\n        PRIVATE_URLS.studentCheckout.downloadPdf,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/pdf\",\n        getStudentCheckoutPdf.data,\n        \"student_checkout.pdf\"\n      );\n\n      setLoadingPdf(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingPdf(false);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.studentCheckout.donwloadExcel, {\n        params: { schoolId: selectedSetting._id },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_checkout.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Checkout\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"student\"\n                formik={formik}\n                label=\"Select Student\"\n                options={students}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap={1}>\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loadingPdf}\n                onClick={handleGetPrintPdf}\n                variant=\"contained\">\n                Print\n              </LoadingButton>\n\n              <Button\n                size=\"small\"\n                onClick={handleGetDownloadExcel}\n                variant=\"contained\">\n                Excel\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <AddForm\n        title=\"Student Checkout\"\n        onAddClick={AddStudentCheckoutHandel}\n        disabled={!formik.values.student}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Checkout\" : \"Add Student Checkout\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Student Name\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              name=\"relationship\"\n              formik={entryFormik}\n              label=\"Relation With Student\"\n              options={Relation_With_Student}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"reason\"\n              formik={entryFormik}\n              label=\"Enter Reason\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"visitorName\"\n              formik={entryFormik}\n              label=\"Enter Visitor Name\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"visitorContactNumber\"\n              formik={entryFormik}\n              label=\"Enter Visitor Phone\"\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 2,\n            }}>\n            <Button size=\"small\" variant=\"contained\" sx={{ color: \"#fff\" }}>\n              Send OTP\n            </Button>\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput name=\"otp\" formik={entryFormik} label=\"Enter Otp\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n      <CustomTable\n        actions={[\"view\"]}\n        tableKeys={studentCheckOutTableKeys}\n        bodyDataModal=\"student checkout\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","export const ticketTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  {\n    name: \"Status\",\n    key: \"status\",\n  },\n];\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { ticketTableKeys } from \"../data/tableKeys/ticketData\";\nimport AddForm from \"../forms/AddForm\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormModal from \"../forms/FormModal\";\nimport FormInput from \"../forms/FormInput\";\n\nexport default function HelpDesk() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [reportImg, setReportImg] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const handelExamTerm = () => {\n    setOpen(true);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      examType: dataToEdit?.examType || \"\",\n      marksAssignmentAllowed: dataToEdit?.marksAssignmentAllowed || false,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: console.log(\"lll\"),\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setReportImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setReportImg(reportImg.filter((img) => img.name != fileName));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Tickets\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Tickets\"\n        bodyData={data}\n        tableKeys={ticketTableKeys}\n      />\n\n      <AddForm title=\"Add Tickets\" onAddClick={handelExamTerm} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Report Problem\" : \"Add Report Problem\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Subject\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name=\"receipt\"\n              label=\"Select Files\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={reportImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              multi={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const guardianFeedbackTableKeys = [\n  {\n    name: \"Parent Name\",\n    key: \"parentName\",\n  },\n  {\n    name: \"Student Name\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Feedback\",\n    key: \"feedback\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport { guardianFeedbackTableKeys } from \"../data/tableKeys/guardianFeedbackData\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { get, put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ViewModel from \"../forms/ViewModel\";\nimport themeData from \"../data/themeData\";\n\nconst MuiBox = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nconst CustomActionComponent = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n\n  const updateStatus = async (status) => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.guardianFeedback.update + \"/\" + data._id, {\n        status,\n      });\n      setLoading(false);\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      <Stack direction=\"row\" spacing={2}>\n        {[\"pending\", \"approved\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"rejected\")}\n            disableElevation\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        )}\n        {[\"pending\", \"rejected\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"approved\")}\n            disableElevation\n            size=\"small\"\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default function GuardianFeedback() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState(\"pending\");\n\n  const [modalData, setModalData] = useState({\n    open: false,\n    contents: \"\",\n    action: () => {},\n  });\n\n  const getFeebacks = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.guardianFeedback.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n      setFilteredData(data.result.filter((f) => f.status === selectedStatus));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFeebacks();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    setFilteredData(data.filter((f) => f.status === selectedStatus));\n  }, [selectedStatus]);\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.guardianFeedback.delete + \"/\" + _id\n      );\n      getFeebacks();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      contents: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Guardian Feedback\" />\n      <MuiBox>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          {[\"pending\", \"approved\", \"rejected\"].map((status) => (\n            <Button\n              key={status}\n              variant=\"outlined\"\n              sx={{\n                background:\n                  selectedStatus === status\n                    ? themeData.lightPalette.primary.main\n                    : \"\",\n\n                \":hover\": {\n                  background:\n                    selectedStatus === status\n                      ? themeData.darkPalette.primary.main\n                      : \"\",\n                },\n                color:\n                  selectedStatus === status\n                    ? \"#fff\"\n                    : (theme) =>\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#18488\",\n              }}\n              onClick={() => {\n                setSelectedStatus(status);\n              }}>\n              {status}:{data.filter((f) => f.status === status).length}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </MuiBox>\n      <CustomTable\n        actions={[\"custom\", \"delete\", \"view\"]}\n        bodyDataModal=\"feedback\"\n        bodyData={filteredData}\n        tableKeys={guardianFeedbackTableKeys}\n        onDeleteClick={handleDelete}\n        CustomAction={CustomActionComponent}\n        onUpdate={getFeebacks}\n        onViewClick={handleClickOpenView}\n      />\n      {/* ==== view feedback ==== */}\n      <ViewModel\n        title=\"Guardian Feedback\"\n        open={modalData?.open}\n        tableData={modalData?.contents}\n        onClose={onCloseViewModel}>\n        <Box\n          sx={{\n            minWidth: 300,\n            p: 1,\n          }}>\n          <Typography\n            id=\"modal-modal-description\"\n            sx={{ wordBreak: \"break-word\" }}>\n            {modalData?.contents?.feedback}\n          </Typography>\n        </Box>\n      </ViewModel>\n    </>\n  );\n}\n","export const studentBulkPhotoTableKeys = [\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n\n  {\n    name: \"File\",\n    key: \"file\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentBulkPhotoTableKeys } from \"../../data/tableKeys/studentBulkPhotoData\";\n\nexport default function StudentBulkPhoto() {\n  const [data, setDate] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Student Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"sectiion\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentBulkPhotoTableKeys}\n        bodyDataModal=\"student bulk photo\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst HeadingContainer = styled(Grid)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst DataContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"10px\",\n}));\n\nconst GroupBYData_Options = [\n  {\n    label: \"Gender\",\n    value: \"gender\",\n  },\n  {\n    label: \"Vehicle\",\n    value: \"vehicle\",\n  },\n  {\n    label: \"Library\",\n    value: \"library\",\n  },\n  {\n    label: \"Hostel\",\n    value: \"hostel\",\n  },\n  {\n    label: \"Class\",\n    value: \"class\",\n  },\n];\n\nconst classCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.className,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst genderCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: \"gender\",\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst libraryCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: \"library\",\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst vehcileCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.vehicleNumber,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst hostelCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.hostelName,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\n\nexport default function StudentReport() {\n  const componentRef = useRef();\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classBar, setClassBar] = useState([]);\n  const [genderBar, setGenderBar] = useState([]);\n  const [libraryBar, setLibraryBar] = useState([]);\n  const [vehicleBar, setVehicleBar] = useState([]);\n  const [hostelBar, setHostelBar] = useState([]);\n  const [groupData, setGroupdata] = useState(\"\");\n  const [groupDataGraph, setGroupdataGraph] = useState(\"\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const classCombinedData = classCombineData(classBar);\n  const genderCombinedData = genderCombineData(genderBar);\n  const libraryCombinedData = libraryCombineData(libraryBar);\n  const vehicleCombinedData = vehcileCombineData(vehicleBar);\n  const hostelCombinedData = hostelCombineData(hostelBar);\n\n  const [loading, setLoading] = useState(false);\n\n  const [loadingGraph, setLoadingGraph] = useState(false);\n\n  let totalMaleStudents = 0;\n  let totalFemaleStudents = 0;\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.report.getStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: values.groupByData,\n          academicYearId: values.academicYear,\n        },\n      });\n      setData(data.result);\n      setGroupdata(values.groupByData);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetStudentReportByGraph = async (values) => {\n    try {\n      setLoadingGraph(true);\n      const { data } = await get(PRIVATE_URLS.report.getStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: values.groupByData,\n          academicYearId: values.academicYear,\n        },\n      });\n\n      setGroupdataGraph(values.groupByData);\n      if (values.groupByData === \"class\") {\n        setClassBar(data.result);\n      }\n      if (values.groupByData === \"gender\") {\n        setGenderBar(data.result);\n      }\n      if (values.groupByData === \"library\") {\n        setLibraryBar(data.result);\n      }\n      if (values.groupByData === \"vehicle\") {\n        setVehicleBar(data.result);\n      }\n      if (values.groupByData === \"hostel\") {\n        setHostelBar(data.result);\n      }\n      setLoadingGraph(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingGraph(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n    },\n    onSubmit: handleGetStudentReport,\n  });\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n    },\n    onSubmit: handleGetStudentReportByGraph,\n  });\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  return (\n    <>\n      <PageHeader title=\"Student Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Tabular Report\", \"Grapical Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={entryFormik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                alignSelf=\"center\"\n                display=\"flex\"\n                gap={1}\n                item>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Find\n                </LoadingButton>\n                <Button size=\"small\" variant=\"contained\">\n                  Print\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n        <TableContainer component={Paper}>\n          {groupData === \"class\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Class</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.className}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    align=\"start\"\n                    colSpan={2}\n                    sx={{ fontWeight: \"bold\" }}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"gender\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n\n                    <TableCell align=\"center\">{data.maleCount}</TableCell>\n                    <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                    <TableCell align=\"center\">{data.totalCount}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"vehicle\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Vehicle Number</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.vehicleNumber}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    sx={{ fontWeight: \"bold\" }}\n                    align=\"start\"\n                    colSpan={2}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"library\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\"> {index + 1}</TableCell>\n\n                    <TableCell align=\"center\">{data.maleCount}</TableCell>\n                    <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                    <TableCell align=\"center\">{data.totalCount}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"hostel\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Hostel Name</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.hostelName}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    align=\"start\"\n                    colSpan={2}\n                    sx={{ fontWeight: \"bold\" }}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={data ? (data.length ? data.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={formik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                alignSelf=\"center\"\n                display=\"flex\"\n                gap={1}\n                item>\n                <LoadingButton\n                  loading={loadingGraph}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Find\n                </LoadingButton>\n                <ReactToPrint\n                  trigger={() => (\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={handlePrint}>\n                      Print\n                    </Button>\n                  )}\n                  content={() => componentRef.current}\n                />\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <Box ref={componentRef}>\n          <HeadingContainer container>\n            <Grid item xs={12} sm={12} md={6} lg={4}>\n              <Paper sx={{ padding: 2, mt: 2 }}>\n                <img\n                  src={selectedSetting.logo}\n                  height={60}\n                  width={60}\n                  style={{\n                    display: \"block\",\n                    margin: \"auto\",\n                  }}\n                />\n\n                <Typography fontSize={18} textAlign=\"center\">\n                  {selectedSetting.name}\n                </Typography>\n                <Typography gutterBottom fontSize={12} textAlign=\"center\">\n                  {selectedSetting.address}\n                </Typography>\n\n                <DataContainer>\n                  {\" \"}\n                  <AssessmentIcon\n                    sx={{ color: themeData.darkPalette.primary.main }}\n                  />\n                  <Typography textAlign=\"center\" color=\"error\">\n                    Student Report\n                  </Typography>\n                </DataContainer>\n              </Paper>\n            </Grid>\n          </HeadingContainer>\n          {groupDataGraph === \"class\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={classCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"gender\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={genderCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"vehicle\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={vehicleCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"hostel\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={hostelCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"library\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={libraryCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Library_Member = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function AddEmployee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [selectedPhoto, setSelectedPhoto] = useState([]);\n  const [resume, setResume] = useState([]);\n\n  const [salaryGrade, setSalaryGrade] = useState([]);\n\n  const getEmployeeDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.getEmpById + \"/\" + id);\n\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getEmployeeDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSalaryGrade = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setSalaryGrade(\n        data.result.map((s) => ({\n          label: s.grade,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n    getSalaryGrade();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: values.dob,\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n          responsibility: values.responsibility,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: values.joiningDate,\n          resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public || false,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        photo: values.photo,\n        libraryMember: values.libraryMember,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedPhoto.forEach((file) => formData.append(\"employeePhoto\", file));\n      resume.forEach((file) => formData.append(\"resume\", file));\n\n      console.log(formData, \"mmmmmmm\");\n\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.employee.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        console.log(formData, \"mmmmmmm111\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.employee.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      navigate(\"/sch/human-resource/employee\");\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.basicInfo.name || \"\",\n      empId: dataToEdit?.basicInfo.empId || \"\",\n      responsibility: dataToEdit?.basicInfo.responsibility || \"\",\n      designation: dataToEdit?.basicInfo.designation._id || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      secMobileNo: dataToEdit?.basicInfo.secMobileNo || \"\",\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      presentAddress: dataToEdit?.basicInfo.presentAddress || \"\",\n      permanentAddress: dataToEdit?.basicInfo.permanentAddress || \"\",\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      fatherName: dataToEdit?.basicInfo.fatherName || \"\",\n      spouseName: dataToEdit?.basicInfo.spouseName || \"\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      fatherOccupation: dataToEdit?.basicInfo.fatherOccupation || \"\",\n      spouseOccupation: dataToEdit?.basicInfo.spouseOccupation || \"\",\n      qualification: dataToEdit?.academicInfo.qualification || \"\",\n      workExperience: dataToEdit?.academicInfo.workExperience || \"\",\n      salaryGrade: dataToEdit?.academicInfo.salaryGrade || \"\",\n      email: dataToEdit?.academicInfo.email || \"\",\n      salaryType: dataToEdit?.academicInfo.salaryType || \"\",\n      role: dataToEdit?.role._id || \"\",\n      department: dataToEdit?.academicInfo.department._id || \"\",\n      joiningDate: dataToEdit?.academicInfo?.joiningDate\n        ? dayjs(dataToEdit.academicInfo.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      libraryMember: dataToEdit?.libraryMember || false,\n      username: dataToEdit?.username || \"\",\n      password: dataToEdit?.otherInfo.password || \"\",\n      public: dataToEdit?.otherInfo.public || false,\n      showDetailsForWeb: dataToEdit?.otherInfo.showDetailsForWeb || false,\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"resume\") {\n        setResume(fileList);\n      } else {\n        setSelectedPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedPhoto(selectedPhoto.filter((img) => img.name != fileName));\n    setResume(resume.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={\n              selectedPhoto.length > 0\n                ? URL.createObjectURL(selectedPhoto[0])\n                : dataToEdit?.photo\n                ? dataToEdit?.photo\n                : avatar\n            }\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"photo\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FileSelect\n              name=\"employeePhoto\"\n              multi={false}\n              label=\"Select Photo\"\n              onChange={(e) => handleChangePhoto(e, \"employeePhoto\")}\n              customOnChange={true}\n              selectedFiles={selectedPhoto}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/jpeg, image/png\"\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  options={salaryGrade}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"resume\"\n                  label=\"Select File\"\n                  onChange={(e) => handleChangePhoto(e, \"resume\")}\n                  customOnChange={true}\n                  selectedFiles={resume}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n\n              {!dataToEdit && (\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormInput\n                    required={true}\n                    name=\"password\"\n                    formik={entryFormik}\n                    label=\"Password\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"Is public\"\n                  options={Is_Public}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Library Member\"\n                  options={Library_Member}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","export const manageInstituteTableKeys = [\n  {\n    name: \"School Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Logo\",\n    type: \"image\",\n    key: \"logo\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageInstituteTableKeys } from \"../../data/tableKeys/manageInstituteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function ManageInstitute() {\n  const [data, setData] = useState();\n  const navigate = useNavigate();\n  const handleAddClick = (e) => {\n    navigate(\"/sch/manage-institute/add-institute\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleToggleSwitch = async (school) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.toggleActiveStatus + \"/\" + school._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    navigate(`/sch/manage-institute/edit-institute/${data._id}`);\n  };\n  return (\n    <>\n      <PageHeader title=\"Manage Institute\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        bodyDataModal=\"manage institute\"\n        bodyData={data}\n        tableKeys={manageInstituteTableKeys}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleSwitch}\n        onEditClick={handleEdit}\n      />\n      <AddForm title=\"Add Institute\" onAddClick={handleAddClick} />\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { Close } from \"@mui/icons-material\";\nimport { put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\n\nexport default function AddOrUpdateFiles({\n  dataToEdit,\n  title,\n  onUpdate = () => {},\n  styles = {},\n}) {\n  const [open, setOpen] = useState(false);\n  const [updatingFiles, setUpdatingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClose = () => setOpen(false);\n  const handleOpenDialog = () => setOpen(true);\n\n  const handleSelectFile = (e) => {\n    const selectedFiles = e.target.files;\n\n    if (selectedFiles.length > 0) {\n      let fileList = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n\n        fileList.push(file);\n      }\n      setSelectedFiles([...fileList]);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  const handleRemoveFile = (i) => {\n    setSelectedFiles(selectedFiles.filter((f, index) => index !== i));\n  };\n\n  const handleUpdateItem = async (e) => {\n    e.preventDefault();\n\n    try {\n      setUpdatingFiles(true);\n      const formData = new FormData();\n      selectedFiles.forEach((f) => formData.append(\"bannerImages\", f));\n      console.log(selectedFiles, \"imageeeee\");\n      const { data } = await put(\n        PRIVATE_URLS.school.addFiles + \"/\" + dataToEdit._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      onUpdate(data.result);\n      handleClose();\n\n      setSelectedFiles([]);\n      setUpdatingFiles(false);\n    } catch (error) {\n      setUpdatingFiles(false);\n\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        fullWidth\n        onClick={handleOpenDialog}\n        size=\"small\"\n        variant=\"contained\"\n        sx={{ mt: 2 }}>\n        {title}\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n        }}>\n        <DialogTitle>Add/Update Banner images</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Box sx={{ margin: \"20px 0\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}>\n              <Typography sx={{ fontWeight: \"bold\" }}>Add Files</Typography>\n              <TextField\n                name=\"images\"\n                label=\"Select files\"\n                fullWidth\n                onChange={handleSelectFile}\n                sx={{\n                  borderWidth: 1,\n                  borderRadius: theme.shape.borderRadius,\n                  maxWidth: \"300px\",\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{ type: \"file\", multiple: true }}\n                InputProps={{\n                  style: {\n                    borderWidth: 1,\n                    height: \"40px\",\n                    borderRadius: theme.shape.borderRadius,\n                  },\n                }}\n              />\n            </Box>\n            {selectedFiles.map((f, i) => (\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: \"10px\",\n\n                  background: \"#5fa5f661\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n                key={f.name + i.toString()}>\n                <Typography>{f.name}</Typography>\n                <IconButton onClick={(e) => handleRemoveFile(i)}>\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            disabled={!selectedFiles.length}\n            size=\"small\"\n            loading={updatingFiles}\n            variant=\"contained\"\n            onClick={handleUpdateItem}>\n            Add\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TimezoneSelect from \"react-timezone-select\";\nimport currencyCodes from \"currency-codes\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport AddOrUpdateFiles from \"../../forms/AddOrUpdateFiles\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport currencyToSymbolMap from \"currency-symbol-map/map\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst RollNumber_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto ascending name\",\n    value: \"autoAscendingName\",\n  },\n  {\n    label: \"Auto ascending name female\",\n    value: \"autoAscendingNameFemale\",\n  },\n];\nconst Attendence_Type = [\n  {\n    label: \"Class wise\",\n    value: \"classWise\",\n  },\n  {\n    label: \"Subject wise\",\n    value: \"subjectWise\",\n  },\n  {\n    label: \"Session wise\",\n    value: \"sessionWise\",\n  },\n];\nconst Admission_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto Ascending No.\",\n    value: \"autoAscendingNo\",\n  },\n];\nexport default function AddInstitute({ initialValue = null }) {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const symbol = Object.keys(currencyToSymbolMap);\n  const [dataToEdit, setDataToEdit] = useState(initialValue);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n  const [bannerImages, setBannerImages] = useState([]);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const getSchoolDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.details + \"/\" + id);\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getSchoolDetails();\n    }\n  }, [id]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"logo\") {\n        setLogo(fileList);\n      } else if (type === \"bannerImages\") {\n        setBannerImages(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n    setBannerImages(bannerImages.filter((img) => img.name != fileName));\n  };\n\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const currencies = currencyCodes.data.map((currency) => ({\n    label: `${currency.currency} - ${currency.code}`,\n    value: currency.code,\n  }));\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      logo.forEach((f) => formData.append(\"logo\", f));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.school.update + \"/\" + dataToEdit._id,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n\n        console.log(data.result, \"updateschool\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.school.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      entryFormik.resetForm();\n      setLogo([]);\n      navigate(-1);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      address: dataToEdit?.address || \"\",\n      phone: dataToEdit?.phone || \"\",\n\n      regDate: dataToEdit?.regDate\n        ? dayjs(dataToEdit.regDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      email: dataToEdit?.email || \"\",\n      fax: dataToEdit?.fax || \"\",\n      websiteFooter: dataToEdit?.websiteFooter || \"\",\n      description: dataToEdit?.description || \"\",\n      currency: dataToEdit?.currency || \"\",\n      currencySymbol: dataToEdit?.currencySymbol || \"\",\n      sessionStartMonth:\n        dataToEdit && dataToEdit.sessionStartMonth\n          ? dataToEdit.sessionStartMonth\n          : null,\n      sessionEndMonth:\n        dataToEdit && dataToEdit.sessionEndMonth\n          ? dataToEdit.sessionEndMonth\n          : null,\n      rollNumberType: dataToEdit?.rollNumberType || \"\",\n      studentAttendenceType: dataToEdit?.studentAttendenceType || \"\",\n      admissionNo: dataToEdit?.admissionNo || \"\",\n      latitude: dataToEdit?.latitude || \"\",\n      longitude: dataToEdit?.longitude || \"\",\n      defaultTimeZone: dataToEdit?.defaultTimeZone || \"\",\n      googleAnalyticsId: dataToEdit?.googleAnalyticsId || \"\",\n      teacherActivityFeedbackEnabled:\n        dataToEdit?.teacherActivityFeedbackEnabled || false,\n      facebookUrl: dataToEdit?.facebookUrl || \"\",\n      twitterUrl: dataToEdit?.twitterUrl || \"\",\n      linkedinUrl: dataToEdit?.linkedinUrl || \"\",\n      gplusUrl: dataToEdit?.gplusUrl || \"\",\n      youtubeUrl: dataToEdit?.youtubeUrl || \"\",\n      instagramUrl: dataToEdit?.instagramUrl || \"\",\n      pinterestUrl: dataToEdit?.pinterestUrl || \"\",\n      location: dataToEdit?.location || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.removeFile + \"/\" + dataToEdit._id,\n        {\n          file: img,\n        }\n      );\n      getSchoolDetails();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Institute\" showTextField={false} />\n\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          {/* <MuiBox>\n            <img\n              src={dataToEdit?.logo || avatar}\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"Preview\"\n            />\n          </MuiBox> */}\n          <MuiBox>\n            <img\n              src={\n                logo.length > 0\n                  ? URL.createObjectURL(logo[0])\n                  : dataToEdit?.logo\n                  ? dataToEdit?.logo\n                  : avatar\n              }\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"loogo\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"logo\"\n                label=\"Select Logo\"\n                onChange={(e) => handleChangePhoto(e, \"logo\")}\n                customOnChange={true}\n                selectedFiles={logo}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox style={{ position: \"relative\", zIndex: \"1\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"School Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"address\"\n                  formik={entryFormik}\n                  label=\"Address\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"phone\"\n                  formik={entryFormik}\n                  label=\"Phone number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Registration Date\"\n                  name=\"regDate\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"fax\" formik={entryFormik} label=\"Fax\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"location\"\n                  formik={entryFormik}\n                  label=\"Location\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"websiteFooter\"\n                  formik={entryFormik}\n                  label=\"Website Footer\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  name=\"description\"\n                  formik={entryFormik}\n                  label=\"Note\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Settings */}\n        <FormBox sx={{ overflow: \"visible\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Setting Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"currency\"\n                  formik={entryFormik}\n                  label=\"Currency\"\n                  options={currencies}\n                  onChange={(event) => {\n                    const selectedCurrency = event.target.value;\n                    entryFormik.setFieldValue(\"currency\", selectedCurrency);\n                    entryFormik.setFieldValue(\n                      \"currencySymbol\",\n                      currencyToSymbolMap[selectedCurrency]\n                    );\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"currencySymbol\"\n                  formik={entryFormik}\n                  label=\"Currency Symbol\"\n                  disabled\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session Start Month\"\n                  name=\"sessionStartMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session End Month\"\n                  name=\"sessionEndMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rollNumberType\"\n                  formik={entryFormik}\n                  label=\"Roll Number\"\n                  options={RollNumber_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"studentAttendenceType\"\n                  formik={entryFormik}\n                  label=\"Attendence Type \"\n                  options={Attendence_Type}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"admissionNo\"\n                  formik={entryFormik}\n                  label=\"Admission Number\"\n                  options={Admission_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"latitude\"\n                  formik={entryFormik}\n                  label=\"Latitude\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"longitude\"\n                  formik={entryFormik}\n                  label=\"Longitude\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item mt={2}>\n                <TimezoneSelect\n                  styles={{\n                    control: (baseStyle, state) => ({\n                      ...baseStyle,\n                      height: \"42px\",\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                    }),\n                    menu: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                    }),\n\n                    option: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                      color: isDarkMode ? \"white\" : \"black\",\n                      \"&:hover\": {\n                        backgroundColor: isDarkMode ? \"lightgray\" : \"white\",\n                        color: isDarkMode ? \"black\" : \"\",\n                      },\n                    }),\n                  }}\n                  placeholder=\"Default Timezone\"\n                  name=\"defaultTimeZone\"\n                  value={entryFormik.values.defaultTimeZone}\n                  onChange={(value) =>\n                    entryFormik.setFieldValue(\"defaultTimeZone\", value)\n                  }\n                  label=\"Time Zone\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"googleAnalyticsId\"\n                  formik={entryFormik}\n                  label=\"Google Analytics Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"teacherActivityFeedbackEnabled\"\n                  formik={entryFormik}\n                  label=\"Teacher Activity Feedack Enable\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox sx={{ marginBottom: !dataToEdit ? \"60px\" : \"20px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Social Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"TwitterURL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"gplusUrl\"\n                  formik={entryFormik}\n                  label=\"Google Plus Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Banner Images */}\n        {dataToEdit ? (\n          <FormBox sx={{ marginBottom: \"60px\" }}>\n            <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Banner Image\n            </Title>\n\n            <Grid container spacing={2}>\n              <Grid\n                container\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                justifyContent=\"flex-end\">\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginRight: \"10px\",\n                  }}>\n                  <AddOrUpdateFiles\n                    dataToEdit={dataToEdit}\n                    title={\"Upload Banner\"}\n                    onUpdate={getSchoolDetails}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.bannerImages?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"150px\",\n                        height: \"100px\",\n\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <CloseIcon color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n          </FormBox>\n        ) : null}\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport themeData from \"../../data/themeData\";\nimport { Padding } from \"@mui/icons-material\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"#44628561\",\n    // width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: 200,\n  padding: \"13px 5px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function FormTable({ employee }) {\n  const handleLinkClick = (url) => {\n    window.open(url, \"_blank\");\n  };\n\n  return (\n    <>\n      {employee?.photo ? (\n        <img\n          src={employee.photo}\n          height={75}\n          width={75}\n          style={{ borderRadius: \"50%\", alignSelf: \"center\" }}\n          alt=\"Employee Photo\"\n        />\n      ) : (\n        <Avatar sx={{ height: 75, width: 75 }} src=\"/broken-image.jpg\" />\n      )}\n\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: 660,\n          my: 2,\n          display: {\n            xs: \"none\",\n            sm: \"block\",\n            md: \"block\",\n            lg: \"block\",\n          },\n          borderRadius: \"5px\",\n        }}\n      >\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n\n      {/* ======== Mobile view table ============ */}\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: \"100%\",\n          mx: 2,\n          my: 2,\n          display: {\n            xs: \"visible\",\n            sm: \"none\",\n            md: \"none\",\n            lg: \"none\",\n          },\n        }}\n      >\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n      {/* )} */}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"50px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nexport default function ProfileUpdate({\n  handleCreateOrUpdate = () => {},\n  employee = \"\",\n  setSelectValue = 0,\n}) {\n  const navigate = useNavigate();\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const [designations, setDesignations] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getDesignation = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesignations(\n        data.result.map((m) => ({ label: m.name, value: m._id }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEmpPhoto = async (e) => {\n    const formData = new FormData();\n    console.log(e, \"hawa\");\n    formData.append(\"files\", e.target.files[0]);\n    try {\n      const res = await post(PRIVATE_URLS.fileUpload.create, formData);\n      console.log(res, \"fafa\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignation();\n  }, []);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: employee?.basicInfo?.name || \"\",\n      aadharNo: employee.basicInfo.aadharNo || \"\",\n      designation: employee.basicInfo?.designation?._id || \"\",\n      gender: employee?.basicInfo.gender || \"\",\n      bloodGroup: employee?.basicInfo.bloodGroup || \"\",\n      religion: employee?.basicInfo.religion || \"\",\n      dob: employee?.basicInfo.dob ? dayjs(employee.dob) : null,\n      presentAddress: employee?.basicInfo.presentAddress || \"\",\n      permanentAddress: employee?.basicInfo.permanentAddress || \"\",\n      email: employee?.academicInfo.email || \"\",\n      joiningDate: employee.academicInfo.joiningDate\n        ? dayjs(employee.academicInfo.joiningDate)\n        : null,\n      resume: employee?.academicInfo.resume || \"\",\n      facebookUrl: employee?.otherInfo.facebookUrl || \"\",\n      twitterUrl: employee?.otherInfo.twitterUrl || \"\",\n      linkedinUrl: employee?.otherInfo.linkedinUrl || \"\",\n      gplusUrl: employee?.otherInfo.gplusUrl || \"\",\n      youtubeUrl: employee?.otherInfo.youtubeUrl || \"\",\n      instagramUrl: employee?.otherInfo.instagramUrl || \"\",\n      pinterestUrl: employee?.otherInfo.pinterestUrl || \"\",\n      username: employee?.username || \"\",\n      contactNumber: employee?.contactNumber || \"\",\n      photo: employee?.photo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: false,\n  });\n\n  console.log(entryFormik.values, \"entryFormik\");\n\n  return (\n    <>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          <MuiBox>\n            <img\n              src={previewCreateUrl || avatar}\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"Preview\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                // required={true}\n                name=\"logo\"\n                formik={entryFormik}\n                label=\"Logo\"\n                type=\"file\"\n                onChange={(e) => handleEmpPhoto(e)}\n                inputProps={{\n                  accept: \"image/*\",\n                }}\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"National Id\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designations}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Phone No.\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Gender\"\n                  options={Gender}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Settings */}\n\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Joining\"\n                  name=\"joiningDate\"\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"resume\"\n                  formik={entryFormik}\n                  label=\"Upload Resume\"\n                  type=\"file\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"TwitterURL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"gplusUrl\"\n                  formik={entryFormik}\n                  label=\"Google Plus Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        <StyledBox>\n          <Stack spacing={2} direction=\"row\" justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setSelectValue(0)}\n            >\n              Cancel\n            </Button>\n            <LoadingButton\n              loading={loading}\n              type=\"submit\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Update\n            </LoadingButton>\n          </Stack>\n        </StyledBox>\n      </form>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport themeData from \"../../data/themeData\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormTable from \"./FormTable\";\nimport ProfileUpdate from \"./ProfileUpdate\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Profile() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  // const [dataToEdit, setDataToEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState(null);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  console.log(selectedSetting, \"selectedSetting\");\n  console.log(employee, \"employee\");\n\n  const getEmployees = async () => {\n    const user = window.localStorage.getItem(\"current_ecs_user\");\n    setEmployee(JSON.parse(user));\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        basicInfo: {\n          name: values.name,\n          designation: values.designation,\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          dob: values.dob,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          aadharNo: values.aadharNo,\n        },\n        academicInfo: {\n          email: values.email,\n          joiningDate: values.joiningDate,\n          resume: values.resume,\n        },\n        otherInfo: {\n          facebookUrl: values?.facebookUrl,\n          twitterUrl: values?.twitterUrl,\n          linkedinUrl: values?.linkedinUrl,\n          googlePlusUrl: values?.googlePlusUrl,\n          youtubeUrl: values?.youtubeUrl,\n          instagramUrl: values?.instagramUrl,\n          pinterestUrl: values?.pinterestUrl,\n        },\n        username: values.username,\n        photo: values.photo,\n        contactNumber: values.contactNumber,\n      };\n      setLoading(true);\n      if (employee) {\n        const { data } = await put(\n          PRIVATE_URLS.employee.update + \"/\" + employee._id,\n          payload\n        );\n        getEmployees();\n      } else {\n        const { data } = await post(PRIVATE_URLS.employee.create, payload);\n        console.log(data, \"gg\");\n        getEmployees();\n      }\n      // handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  if (!employee) {\n    return null;\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Profile\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Profile\", \"Update Profile\"]}\n      />\n      <TabPanel index={0} value={value}>\n        {/* {employee && ( */}\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            mt: 3,\n          }}\n        >\n          <FormTable employee={employee} />\n        </Box>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <ProfileUpdate\n          handleCreateOrUpdate={handleCreateOrUpdate}\n          employee={employee}\n          setSelectValue={setSelectValue}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function UpdateEmployee() {\n  const location = useLocation();\n  const empData = location.state && location.state.data;\n  const { selectedSetting } = useContext(SettingContext);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const navigate = useNavigate();\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n  }, []);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: dayjs(values.dob),\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: dayjs(values.joiningDate),\n          resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        schoolId: selectedSetting._id,\n      };\n\n      const { data } = await put(\n        PRIVATE_URLS.employee.update + \"/\" + empData._id,\n        payload\n      );\n\n      console.log(data, \"erttfyuygiu\");\n\n      navigate(\"/sch/human-resource/employee\");\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: empData ? empData.basicInfo.name : \"\",\n      empId: empData ? empData.basicInfo.empId : \"\",\n      responsibility: empData ? empData.basicInfo.responsibility : \"\",\n      designation: empData ? empData.basicInfo.designation._id : \"\",\n      contactNumber: empData ? empData.contactNumber : \"\",\n      secMobileNo: empData ? empData.basicInfo.secMobileNo : \"\",\n      gender: empData ? empData.basicInfo.gender : \"\",\n      bloodGroup: empData ? empData.basicInfo.bloodGroup : \"\",\n      religion: empData ? empData.basicInfo.religion : \"\",\n      presentAddress: empData ? empData.basicInfo.presentAddress : \"\",\n      permanentAddress: empData ? empData.basicInfo.permanentAddress : \"\",\n      dob: empData ? dayjs(empData.basicInfo.dob) : dayjs(new Date()),\n      fatherName: empData ? empData.basicInfo.fatherName : \"\",\n      spouseName: empData ? empData.basicInfo.spouseName : \"\",\n      aadharNo: empData ? empData.basicInfo.aadharNo : \"\",\n      fatherOccupation: empData ? empData.basicInfo.fatherOccupation : \"\",\n      spouseOccupation: empData ? empData.basicInfo.spouseOccupation : \"\",\n      qualification: empData ? empData.academicInfo.qualification : \"\",\n      workExperience: empData ? empData.academicInfoworkExperience : \"\",\n      salaryGrade: empData ? empData.academicInfosalaryGrade : \"\",\n      email: empData ? empData.academicInfo.email : \"\",\n      salaryType: empData ? empData.academicInfo.salaryType : \"\",\n      role: empData ? empData.role._id : \"\",\n      department: empData ? empData.academicInfo.department._id : \"\",\n      joiningDate: empData\n        ? dayjs(empData.academicInfo.joiningDate)\n        : dayjs(new Date()),\n      resume: empData ? empData.resume : \"\",\n      username: empData ? empData.username : \"\",\n      password: empData ? empData.password : \"\",\n      public: empData ? empData.public : \"\",\n      showDetailsForWeb: empData ? empData.showDetailsForWeb : false,\n      photo: empData ? empData.photo : \"\",\n      active: empData ? empData.active : \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreviewCreateUrl(imageUrl);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Update Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={previewCreateUrl || avatar}\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"Preview\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              // required={true}\n              name=\"photo\"\n              formik={entryFormik}\n              label=\"Photo\"\n              type=\"file\"\n              onChange={handleImageChange}\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  // options={\"\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"resume\"\n                  formik={entryFormik}\n                  label=\"Resume\"\n                  type=\"file\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"password\"\n                  formik={entryFormik}\n                  label=\"Password\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"Is public\"\n                  options={Is_Public}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"photo\"\n                  formik={entryFormik}\n                  label=\"Photo\"\n                  type=\"file\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}\n                >\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\"\n                >\n                  Update\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender_Options = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nconst Relation_With_Guardian = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nconst RTE_Options = [\n  { label: \"Yes\", value: \"yes\" },\n  { label: \"No\", value: \"no\" },\n];\n\nexport default function AddStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedStudentPhoto, setSelectedStuentPhoto] = useState([]);\n  const [selectedMotherPhoto, setSelectedMotherPhoto] = useState([]);\n  const [selectedFatherPhoto, setSelectedFatherPhoto] = useState([]);\n  const [transferCertificate, setTransperCertificate] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const { id } = useParams();\n  const getStudentDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.details + \"/\" + id);\n      console.log(data.result, \"==========\");\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getStudentDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          rte: values.rte || \"no\",\n          caste: values.caste,\n          motherTongue: values.motherTongue,\n          birthPlace: values.birthPlace,\n          aadharNo: values.aadharNo,\n          cicn: values.cicn,\n          satNo: values.satNo,\n          grNo: values.grNo,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n          education: values.motherEdu,\n          profession: values.motherProfession,\n          designation: values.motherDesignation,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n          education: values.fatherEdu,\n          profession: values.fatherProfession,\n          designation: values.fatherDesignation,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        otherInfo: {\n          email: values.email,\n          healthCondition: values.healthCondition,\n          hostelMember: values.hostelMember || false,\n          transportMember: values.transportMember || false,\n          libraryMember: values.libraryMember || false,\n          busStop: values.busStop,\n          extraInfo: values.extraInfo,\n        },\n        contactInfo: {\n          guardianName: values.guardianName,\n          guardianContactNumber: values.guardianContactNumber,\n          guardianContactNumberSecondary: values.guardianContactNumberSecondary,\n          guardianRelation: values.guardianRelation,\n          nationId: values.nationId,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n        },\n        prevSchInfo: {\n          name: values.prevSchName,\n          tcNo: values.tcNo,\n          prevClass: values.prevClass,\n        },\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n        contactNumber: values.contactNumber,\n        active: values.active || true,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedStudentPhoto.forEach((file) =>\n        formData.append(\"studentPhoto\", file)\n      );\n      selectedFatherPhoto.forEach((file) =>\n        formData.append(\"fatherPhoto\", file)\n      );\n      selectedMotherPhoto.forEach((file) =>\n        formData.append(\"motherPhoto\", file)\n      );\n      transferCertificate.forEach((file) =>\n        formData.append(\"transferCertificate\", file)\n      );\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.student.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        console.log(formData, \"kkkkkk\");\n        navigate(\"/sch/student/admit-student\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.student.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        navigate(\"/sch/student/admit-student\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      name: dataToEdit?.basicInfo.name || \"\",\n\n      admissionDate: dataToEdit?.basicInfo?.admissionDate\n        ? dayjs(dataToEdit.basicInfo.admissionDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      motherTongue: dataToEdit?.basicInfo.motherTongue || \"\",\n\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      cicn: dataToEdit?.basicInfo.cicn || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      caste: dataToEdit?.basicInfo.caste || \"\",\n      rte: dataToEdit?.basicInfo.rte || \"\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      satNo: dataToEdit?.basicInfo.satNo || \"\",\n      grNo: dataToEdit?.basicInfo.grNo || \"\",\n      birthPlace: dataToEdit?.basicInfo.birthPlace || \"\",\n\n      class: dataToEdit?.academicInfo?.class?._id || \"\",\n      section: dataToEdit?.academicInfo?.section?._id || \"\",\n      rollNumber: dataToEdit?.academicInfo?.rollNumber || \"\",\n      admissionNumber: dataToEdit?.academicInfo?.admissionNumber || \"\",\n\n      contactNumber: dataToEdit?.contactNumber || \"\",\n\n      guardianName: dataToEdit?.contactInfo?.guardianName || \"\",\n      guardianContactNumber:\n        dataToEdit?.contactInfo?.guardianContactNumber || \"\",\n      guardianContactNumberSecondary:\n        dataToEdit?.contactInfo?.guardianContactNumberSecondary || \"\",\n      guardianRelation: dataToEdit?.contactInfo?.guardianRelation || \"\",\n      nationId: dataToEdit?.contactInfo?.nationId || \"\",\n      presentAddress: dataToEdit?.contactInfo?.presentAddress || \"\",\n      permanentAddress: dataToEdit?.contactInfo?.permanentAddress || \"\",\n\n      prevSchName: dataToEdit?.prevSchInfo?.name || \"\",\n      tcNo: dataToEdit?.prevSchInfo?.tcNo || \"\",\n      prevClass: dataToEdit?.prevSchInfo?.prevClass || \"\",\n\n      email: dataToEdit?.otherInfo?.email || \"\",\n      healthCondition: dataToEdit?.otherInfo?.healthCondition || \"\",\n      transportMember: dataToEdit?.otherInfo?.transportMember || \"\",\n      hostelMember: dataToEdit?.otherInfo?.hostelMember || \"\",\n      libraryMember: dataToEdit?.otherInfo?.libraryMember || \"\",\n      busStop: dataToEdit?.otherInfo?.busStop || \"\",\n      extraInfo: dataToEdit?.otherInfo?.extraInfo || \"\",\n      active: dataToEdit?.active || true,\n\n      fatherName: dataToEdit?.fatherInfo.name || \"\",\n      fatherPhone: dataToEdit?.fatherInfo.contactNumber || \"\",\n      fatherEdu: dataToEdit?.fatherInfo.education || \"\",\n      fatherProfession: dataToEdit?.fatherInfo.profession || \"\",\n      fatherDesignation: dataToEdit?.fatherInfo.designation || \"\",\n\n      motherName: dataToEdit?.motherInfo.name || \"\",\n      motherPhone: dataToEdit?.motherInfo.contactNumber || \"\",\n      motherEdu: dataToEdit?.motherInfo.education || \"\",\n      motherProfession: dataToEdit?.motherInfo.profession || \"\",\n      motherDesignation: dataToEdit?.motherInfo.designation || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"fatherPhoto\") {\n        setSelectedFatherPhoto(fileList);\n      } else if (type === \"motherPhoto\") {\n        setSelectedMotherPhoto(fileList);\n      } else if (type === \"transferCertificate\") {\n        setTransperCertificate(fileList);\n      } else {\n        setSelectedStuentPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedStuentPhoto(\n      selectedStudentPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedFatherPhoto(\n      selectedFatherPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedMotherPhoto(\n      selectedMotherPhoto.filter((img) => img.name != fileName)\n    );\n\n    setTransperCertificate(\n      transferCertificate.filter((img) => img.name != fileName)\n    );\n  };\n\n  const handleDownloadFatherPhoto = () => {\n    const downloadUrl = dataToEdit?.fatherInfo?.photo;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadMotherPhoto = () => {\n    const downloadUrl = dataToEdit?.motherInfo?.photo;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadStudentPhoto = () => {\n    const downloadUrl = dataToEdit?.photo;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadTransferCertificate = () => {\n    const downloadUrl = dataToEdit?.prevSchInfo.transferCertificate;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  console.log(selectedSetting, \"sssssssssssss\");\n\n  return (\n    <>\n      <PageHeader title=\"Admit Student\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"admissionNumber\"\n                  formik={entryFormik}\n                  label=\"Admission No.\"\n                  disabled={selectedSetting?.admissionNo !== \"manual\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"admissionDate\"\n                  formik={entryFormik}\n                  label=\"Admission Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"dob\"\n                  formik={entryFormik}\n                  label=\"Date Of Birth\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rte\"\n                  formik={entryFormik}\n                  label=\"Select RTE\"\n                  options={RTE_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"caste\" formik={entryFormik} label=\"Cast\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"cicn\"\n                  formik={entryFormik}\n                  label=\"Cast Income Certificate No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherTongue\"\n                  formik={entryFormik}\n                  label=\"Mother Tongue\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"birthPlace\"\n                  formik={entryFormik}\n                  label=\"Birth Place\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"satNo\" formik={entryFormik} label=\"SAT No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"grNo\" formik={entryFormik} label=\"GR No.\" />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* contact Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Contact Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianName\"\n                  formik={entryFormik}\n                  label=\"Guardian Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumber\"\n                  formik={entryFormik}\n                  label=\"Guardian Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumberSecondary\"\n                  formik={entryFormik}\n                  label=\"Alternate Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"guardianRelation\"\n                  formik={entryFormik}\n                  label=\"Select Relation With Guardian\"\n                  options={Relation_With_Guardian}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"nationId\"\n                  formik={entryFormik}\n                  label=\"Select National Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Academic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classData}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sectionData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"rollNumber\"\n                  formik={entryFormik}\n                  label=\"Roll No\"\n                  disabled={selectedSetting?.rollNumberType !== \"manual\"}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Previous school Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Previous School Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevSchName\"\n                  formik={entryFormik}\n                  label=\"Previous School\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevClass\"\n                  formik={entryFormik}\n                  label=\"Previous Class\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"tcNo\" formik={entryFormik} label=\"TC No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"transferCertificate\"\n                  label=\"Select File\"\n                  onChange={(e) => handleChangePhoto(e, \"transferCertificate\")}\n                  customOnChange={true}\n                  selectedFiles={transferCertificate}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n\n              {dataToEdit?.prevSchInfo &&\n              dataToEdit.prevSchInfo?.transferCertificate ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadTransferCertificate}>\n                    Download File\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Father Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Father Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherPhone\"\n                  formik={entryFormik}\n                  label=\"Father Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherEdu\"\n                  formik={entryFormik}\n                  label=\"Father Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherProfession\"\n                  formik={entryFormik}\n                  label=\"Father Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherDesignation\"\n                  formik={entryFormik}\n                  label=\"Father Designation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"fatherPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"fatherPhoto\")}\n                  customOnChange={true}\n                  selectedFiles={selectedFatherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n              {dataToEdit?.fatherInfo && dataToEdit.fatherInfo?.photo ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadFatherPhoto}>\n                    Download Photo\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Mother Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Mother Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherName\"\n                  formik={entryFormik}\n                  label=\"Mother Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherPhone\"\n                  formik={entryFormik}\n                  label=\"Mother Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherEdu\"\n                  formik={entryFormik}\n                  label=\"Mother Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherProfession\"\n                  formik={entryFormik}\n                  label=\"Mother Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherDesignation\"\n                  formik={entryFormik}\n                  label=\"Mother Designation\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  label=\"Select Photo\"\n                  multi={false}\n                  name=\"motherPhoto\"\n                  onChange={(e) => handleChangePhoto(e, \"motherPhoto\")}\n                  customOnChange={true}\n                  selectedFiles={selectedMotherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n\n              {dataToEdit?.motherInfo && dataToEdit.motherInfo?.photo ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadMotherPhoto}>\n                    Download Photo\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Other Information*/}\n        <FormBox\n          sx={{\n            marginBottom: \"60px\",\n          }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"email\" formik={entryFormik} label=\"Email\" />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"healthCondition\"\n                  formik={entryFormik}\n                  label=\"Health Condition\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Select Status\"\n                  options={[\n                    { label: \"Inactive\", value: false },\n                    { label: \"Active\", value: true },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"hostelMember\"\n                  formik={entryFormik}\n                  label=\"Select Hostel Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"transportMember\"\n                  formik={entryFormik}\n                  label=\"Select Transport Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Select Library Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"busStop\"\n                  formik={entryFormik}\n                  label=\"Bus Stop\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"extraInfo\"\n                  formik={entryFormik}\n                  label=\"Other Info\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"studentPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"studentPhoto\")}\n                  customOnChange={true}\n                  selectedFiles={selectedStudentPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n\n              {dataToEdit && dataToEdit?.photo ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadStudentPhoto}>\n                    Download Photo\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  styled,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Tooltip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nexport default function AddCourse() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const [classData, setClassData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const navigate = useNavigate();\n\n  const [inputlist, setInputList] = useState(\n    dataToEdit?.benefits || [{ point: \"\" }]\n  );\n  const [inputlistBenifits, setInputListBenifits] = useState(\n    dataToEdit?.benefits || [{ point: \"\" }]\n  );\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        description: values.description,\n        classIds: values.class,\n        subject: values.subject,\n        title: values.title,\n        isTrending: values.isTrending,\n\n        courseDetails: {\n          overview: inputlist,\n          benefits: inputlistBenifits,\n        },\n      };\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      formData.append(\"schoolId\", selectedSetting._id);\n      selectImg.forEach((file) => formData.append(\"file\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.course.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.course.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        navigate(\"/sch/lms/courses\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: [],\n      subject: \"\",\n      title: \"\",\n      description: \"\",\n      isTrending: false,\n      overview: [],\n      benefits: [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleAddClick = () => {\n    setInputList([...inputlist, { point: \"\" }]);\n  };\n\n  const handleAddClickBenifites = () => {\n    setInputListBenifits([...inputlistBenifits, { point: \"\" }]);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { value } = e.target;\n    const overviewList = [...inputlist];\n\n    let newList = overviewList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputList(newList);\n  };\n\n  const handleInputChangeBenifits = (e, index) => {\n    const { value } = e.target;\n    const benifitsList = [...inputlistBenifits];\n    let newList = benifitsList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputListBenifits(newList);\n  };\n\n  const handleRemoveClick = (i) => {\n    const list = [...inputlist];\n    list.splice(i, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClickBenifits = (i) => {\n    const list = [...inputlistBenifits];\n    list.splice(i, 1);\n    setInputListBenifits(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Course\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                multiple={true}\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n            {entryFormik.values.class.length <= 1 && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select Subject\"\n                  options={subject}\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Enter Course Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"thumbnailImage\"\n                label=\"Select Thumbnail Image\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Enter  Description\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlist.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter Overview\"\n                    label=\"Enter Overview\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                      mb: \"5px\",\n                      mt: 1,\n                    }}\n                    value={data.point || \"\"}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    name=\"overview\"\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      onClick={() => handleRemoveClick(i)}\n                      color=\"error\"\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClick}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlistBenifits.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter What You Will Learn\"\n                    label=\"Enter What You Will Learn\"\n                    variant=\"outlined\"\n                    sx={{ mb: \"5px\", mt: 1 }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    name=\"benefits\"\n                    value={data.point || \"\"}\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChangeBenifits(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      sx={{ cursor: \"pointer\" }}\n                      fontSize=\"small\"\n                      color=\"error\"\n                      onClick={() => handleRemoveClickBenifits(i)}\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClickBenifites}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n\n        <Grid item xs={12} sm={12} md={12} sx={{ marginBottom: \"60px\" }}>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked={entryFormik.values.isTrending} />}\n              name=\"isTrending\"\n              onChange={(e) => {\n                entryFormik.setFieldValue(\"isTrending\", e.target.checked);\n              }}\n              label=\"This course is trending?\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <StickyBar\n          content={\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"5px\",\n              }}>\n              <Button\n                variant=\"contained\"\n                onClick={() => navigate(-1)}\n                color=\"error\"\n                size=\"small\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={entryFormik.handleSubmit}>\n                Submit\n              </Button>\n            </Grid>\n          }\n        />\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  styled,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Tooltip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n  backgroundColor: \"whitesmoke\",\n}));\n\nexport default function UpdateCourse() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classData, setClassData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const course = (location.state && location.state.courseData) || null;\n\n  console.log(course, \"mmmmmmmmm==============\");\n\n  const [inputlist, setInputList] = useState(\n    course?.courseDetails?.overview || [{ point: \"\" }]\n  );\n  const [inputlistBenifits, setInputListBenifits] = useState(\n    course?.courseDetails?.benefits || [{ point: \"\" }]\n  );\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        description: values.description,\n        classIds: values.class,\n        subject: values.subject,\n        title: values.title,\n        isTrending: values.isTrending,\n\n        courseDetails: {\n          overview: inputlist,\n          benefits: inputlistBenifits,\n        },\n      };\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      formData.append(\"schoolId\", selectedSetting._id);\n      selectImg.forEach((file) => formData.append(\"thumbnailImage\", file));\n\n      const { data } = await put(\n        PRIVATE_URLS.course.update + \"/\" + course._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n\n      navigate(\"/sch/lms/courses\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: course ? course.class?.map((s) => s._id) : [],\n      subject: \"\",\n      title: course ? course.title : \"\",\n      description: course ? course.description : \"\",\n      isTrending: course?.isTrending || false,\n      overview: course?.courseDetails.overview || [],\n      benefits: course?.courseDetails.benefits || [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleAddClick = () => {\n    setInputList([...inputlist, { point: \"\" }]);\n  };\n\n  const handleAddClickBenifites = () => {\n    setInputListBenifits([...inputlistBenifits, { point: \"\" }]);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { value } = e.target;\n    const overviewList = [...inputlist];\n\n    let newList = overviewList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputList(newList);\n  };\n\n  const handleInputChangeBenifits = (e, index) => {\n    const { value } = e.target;\n    const benifitsList = [...inputlistBenifits];\n    let newList = benifitsList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputListBenifits(newList);\n  };\n\n  const handleRemoveClick = (i) => {\n    const list = [...inputlist];\n    list.splice(i, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClickBenifits = (i) => {\n    const list = [...inputlistBenifits];\n    list.splice(i, 1);\n    setInputListBenifits(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Course\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                multiple={true}\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n            {entryFormik.values.class.length <= 1 && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select Subject\"\n                  options={subject}\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Enter Course Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"thumbnailImage\"\n                label=\"Select Thumbnail Image\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <img\n                src={course?.thumbnailImage}\n                style={{ maxHeight: \"100px\" }}\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Enter  Description\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlist.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter Overview\"\n                    label=\"Enter Overview\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                      mb: \"5px\",\n                      mt: 1,\n                    }}\n                    value={data.point || \"\"}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    name=\"overview\"\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      onClick={() => handleRemoveClick(i)}\n                      color=\"error\"\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClick}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlistBenifits.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter What You Will Learn\"\n                    label=\"Enter What You Will Learn\"\n                    variant=\"outlined\"\n                    sx={{ mb: \"5px\", mt: 1 }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    name=\"benefits\"\n                    value={data.point || \"\"}\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChangeBenifits(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      color=\"error\"\n                      onClick={() => handleRemoveClickBenifits(i)}\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClickBenifites}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n\n        <Grid item xs={12} sm={12} md={12} sx={{ marginBottom: \"60px\" }}>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked={entryFormik.values.isTrending} />}\n              name=\"isTrending\"\n              onChange={(e) => {\n                entryFormik.setFieldValue(\"isTrending\", e.target.checked);\n              }}\n              label=\"This course is trending?\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <StickyBar\n          content={\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"5px\",\n              }}>\n              <Button\n                variant=\"contained\"\n                onClick={() => navigate(-1)}\n                color=\"error\"\n                size=\"small\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={entryFormik.handleSubmit}>\n                Submit\n              </Button>\n            </Grid>\n          }\n        />\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function LoadingScreen({ message = \"Loading... Please wait!\" }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        height: \"90vh\",\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}>\n      <Typography sx={{ fontWeight: \"bold\", fontSize: \"14px\" }}>\n        {message}\n      </Typography>\n    </Box>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  styled,\n} from \"@mui/material\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nimport { useContext } from \"react\";\n\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport UserContext from \"../../context/UserContext\";\nimport LoadingScreen from \"../../components/LoaddingScreen\";\n\nconst Wrapper = styled(Container)(({ theme }) => ({\n  display: \"flex\",\n  height: \"90vh\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  width: \"100%\",\n  marginTop: \"10px\",\n}));\n\nconst VideoContainer = styled(Box)(() => ({\n  display: \"flex\",\n  flex: 1,\n  width: \"100%\",\n  height: \"100%\",\n}));\n\nconst TYPE = [\"OneONoneCall\", \"GroupCall\", \"LiveStreaming\"];\n\nconst CREDENTIAL = {\n  OneONoneCall: {\n    appId: 914808192,\n    serverSecret: \"6f4bc5c4a35f3979a591bf2c534f335a\",\n  },\n  GroupCall: {\n    appId: 914808192,\n    serverSecret: \"6f4bc5c4a35f3979a591bf2c534f335a\",\n  },\n  LiveStreaming: {\n    appId: 206971782,\n    serverSecret: \"212d4d9408c30ced21273b86754371f2\",\n  },\n};\n\nexport default function Room() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { roomID } = useParams();\n\n  console.log(roomID, \"rooooooommmmmmmmmmmid\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isReady, setIsReady] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [zpost, setZpost] = React.useState(null);\n  const { state } = location;\n\n  console.log(state, \"ssssssssssssssssssssssssssssssssssssssssssssssssss\");\n\n  const getRoomDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.meeting.join, {\n        params: {\n          schoolId: selectedSetting._id,\n          roomID: roomID,\n        },\n      });\n    } catch (error) {\n      setError(\"Invalid meeting link!\");\n      setOpen(true);\n    }\n    setIsReady(true);\n  };\n\n  React.useEffect(() => {\n    getRoomDetails();\n  }, [selectedSetting, roomID]);\n\n  let myMeeting = async (element) => {\n    // generate Kit Token\n\n    let meetingType = state ? state.meetingType : TYPE[0];\n\n    const appID = CREDENTIAL[meetingType]?.appId;\n    const serverSecret = CREDENTIAL[meetingType]?.serverSecret;\n\n    console.log(\n      appID,\n      serverSecret,\n      \"==============================================\"\n    );\n    let currentUserStringified =\n      window.localStorage.getItem(\"current_ecs_user\");\n\n    console.log(currentUserStringified);\n\n    let currentUser = JSON.parse(currentUserStringified);\n    console.log(currentUser);\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n      appID,\n      serverSecret,\n      roomID,\n      currentUser._id,\n      currentUser.basicInfo.name\n    );\n    try {\n      // Create instance object from Kit Token.\n      const zp = ZegoUIKitPrebuilt.create(kitToken);\n\n      // start the call\n\n      zp.joinRoom({\n        container: element,\n        autoHideFooter: true,\n        layout: \"Auto\",\n        enableUserSearch: true,\n        showMyMicrophoneToggleButton: true,\n        showRoomTimer: true,\n        showRemoveUserButton: true,\n        scenario: {\n          config: {\n            role: ZegoUIKitPrebuilt.Host,\n          },\n          mode: ZegoUIKitPrebuilt[meetingType], // To implement 1-on-1 calls, modify the parameter here to [ZegoUIKitPrebuilt.OneONoneCall].\n        },\n      });\n\n      setZpost(zp);\n    } catch (error) {\n      ZegoUIKitPrebuilt.ConsoleError();\n      console.log(error, \"Error while joining room\");\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (zpost) {\n        try {\n          zpost.destroy();\n        } catch (error) {\n          console.log(error, \"error while stopping zegocloud\");\n        }\n      }\n    };\n  }, [zpost]);\n\n  const handleBackPress = () => {\n    navigate(\"/live\", { replace: true });\n  };\n\n  if (!isReady)\n    return <LoadingScreen message=\"Getting room details..., Please wait!\" />;\n\n  return (\n    <>\n      <Wrapper maxWidth={\"xl\"}>\n        <VideoContainer component={\"div\"} ref={myMeeting}></VideoContainer>\n      </Wrapper>\n\n      <Dialog\n        open={open}\n        onClose={handleBackPress}\n        aria-labelledby=\"alert-live-session-error\"\n        aria-describedby=\"alert-live-session-error-dialog-description\">\n        <DialogTitle id=\"alert-live-session-error\">{error}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-live-session-error-dialog-description\">\n            The link you are trying to access either expired || does not exist\n            || you are not permitted to see the link\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"small\" onClick={handleBackPress} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  Box,\n  Card,\n  FormControl,\n  Grid,\n  InputLabel,\n  LinearProgress,\n  linearProgressClasses,\n  MenuItem,\n  Select,\n  styled,\n  TextareaAutosize,\n  TextField,\n  Switch,\n  Button,\n  Checkbox,\n  ListItemText,\n  Autocomplete,\n  InputBase,\n  Popper,\n  InputAdornment,\n  Typography,\n} from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useLocation } from \"react-router-dom\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 25,\n  borderRadius: 15,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 800 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 15,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#f42323\" : \"#308fe8\",\n  },\n}));\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n  borderBottom: `1px solid ${\n    theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n  }`,\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\n\nconst Compose = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { state } = useLocation();\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [receiverType, setReceiverType] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n\n  const [smsFrom, setSmsFrom] = useState({\n    sms: state\n      ? state.message\n      : `Dear {{VAR}}, We would like to inform you {{VAR1}},{{VAR2}},{{VAR3}},{{VAR4}},{{VAR5}} Regards EXCELLENT SCHOOL VIJAYAPURA.`,\n  });\n\n  const [contacts, setContacts] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [notifyChecked, setNotifyChecked] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n\n  const [balance, setBalance] = useState(\"\");\n\n  const handleEmployeeAuto = (event, val) => {\n    setEmployeeAutoSelect(val);\n    if (val.filter((v) => v._id == \"all\").length) {\n      setSelectEmployee(\"All\");\n      setSelectedEmployeeCount(employees.length);\n      return;\n    }\n    const selectedEmployees = val.filter((emp) => emp._id !== \"all\");\n\n    setSelectedEmployeeCount(selectedEmployees.length);\n\n    if (selectedEmployees.length === employees.length) {\n      setSelectEmployee(\"All\");\n    } else {\n      setSelectEmployee(\n        selectedEmployees.map((emp) => emp.basicInfo.name).join(\", \")\n      );\n    }\n\n    setEmployeeAutoSelect(val);\n  };\n\n  useEffect(() => {\n    setSectionAutoSelect([]);\n    setSelectSection(\"\");\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [classAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [sectionAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSelectRoleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setSmsFrom({ ...smsFrom, [name]: value });\n  };\n\n  const handleRoleChange = async (e) => {\n    try {\n      const {\n        target: { value },\n      } = e;\n      setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: value,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      const allStudentsContacts = students.map((student) => student._id);\n      setContacts(allStudentsContacts);\n      setSelectedStudentCount(students.length);\n      setSelectContacts(\"All\");\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n    }\n\n    setContactsAutoSelect(val);\n  };\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n      } else {\n        setSections([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNotifiy = (e) => {\n    setNotifyChecked(e.target.checked);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Compose\" />\n\n      <form>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box\n            sx={{\n              paddingLeft: \"1rem\",\n              display: \"flex\",\n              gap: \"5px\",\n            }}>\n            <Box>\n              Total SMS :{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                79875\n              </Typography>\n            </Box>\n            <Box>\n              Consumed SMS :{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {79875 - balance}\n              </Typography>\n            </Box>\n            <Box>\n              Balance SMS :{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {balance}\n              </Typography>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              padding: \"1rem\",\n            }}>\n            <BorderLinearProgress\n              variant=\"determinate\"\n              value={((79875 - balance) * 100) / 79875}\n            />\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box sx={{ flexFlow: 1 }}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <FormControl size=\"small\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-filrlccled-label\">\n                    Receiver Type\n                  </InputLabel>\n                  <Select\n                    label=\"Receiver Type\"\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"receiverType\"\n                    value={receiverType}\n                    onChange={(e) => setReceiverType(e.target.value)}>\n                    <MenuItem\n                      value={\"role\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Role\n                    </MenuItem>\n                    <MenuItem\n                      value={\"user\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      User\n                    </MenuItem>\n                    <MenuItem\n                      value={\"students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"All Students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      All Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"file\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      File\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              {receiverType === \"file\" && (\n                <>\n                  <Grid\n                    item\n                    xs={12}\n                    md={8}\n                    sx={{\n                      alignSelf: \"center\",\n                      display: \"flex\",\n                      justifyContent: \"flex-start\",\n                    }}>\n                    <Button size=\"small\" variant=\"contained\">\n                      Sample File\n                    </Button>\n\n                    <FileSelect\n                      name=\"file\"\n                      onChange={(e) => handleChangeFiles(e)}\n                      customOnChange={true}\n                      label=\"Select File\"\n                      selectedFiles={selectFile}\n                    />\n                  </Grid>\n                </>\n              )}\n              {receiverType === \"students\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Popper\n                      id={\"classPopper\"}\n                      open={!!classPopper}\n                      anchorEl={classPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          onBlur={() => setClassPopper(null)}\n                          open={true}\n                          value={classAutoSelect}\n                          multiple\n                          onChange={handleClassSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={classes}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => `${option.name}`}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option.name}`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Class\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Popper\n                      id={\"sectionPopper\"}\n                      open={!!sectionPopper}\n                      anchorEl={sectionPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setSectionPopper(null)}\n                          open={true}\n                          value={sectionAutoSelect}\n                          onChange={handleSectionSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={sections.sort((a, b) =>\n                            a.class.name.localeCompare(b.class.name)\n                          )}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option.name}(class:${option.class.name})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {`${option.name}(class:${option.class.name})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Section\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    <Popper\n                      id={\"contactsPopper\"}\n                      open={!!contactsPopper}\n                      anchorEl={contactsPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: \"All\",\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? \"All\"\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n\n                              {`${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Students\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n\n              {receiverType === \"role\" && (\n                <Grid item xs={12} md={3} lg={3}>\n                  <FormControl size=\"small\" fullWidth>\n                    <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n                    <Select\n                      label=\"Role\"\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={selectRoles}\n                      onChange={handleSelectRoleChange}\n                      multiple\n                      renderValue={(selected) => selected.join(\", \")}\n                      MenuProps={MenuProps}>\n                      {roles &&\n                        roles.map((row, index) => (\n                          <MenuItem\n                            key={row._id}\n                            value={row.name}\n                            sx={{ fontSize: 12 }}>\n                            <Checkbox\n                              checked={selectRoles.indexOf(row.name) > -1}\n                            />\n                            <ListItemText primary={row.name} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {receiverType === \"user\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <FormControl size=\"small\" fullWidth>\n                      <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n\n                      <Select\n                        labelId=\"demo-simple-select-filled-label\"\n                        id=\"demo-simple-select-filled\"\n                        name=\"role\"\n                        sx={{ marginBottom: \"15px\" }}\n                        multiple\n                        label=\"Role\"\n                        size=\"small\"\n                        onChange={handleRoleChange}\n                        value={selectRoles}>\n                        {roles &&\n                          roles.map((row, index) => (\n                            <MenuItem\n                              key={row._id}\n                              value={row._id}\n                              sx={{ fontSize: 12, fontWeight: 500 }}>\n                              {row.name}\n                            </MenuItem>\n                          ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Popper\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Employees\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={6} lg={4}>\n              <FormControl required={true} size=\"small\" fullWidth>\n                <InputLabel sx={{ fontSize: 12 }}>SMS Type</InputLabel>\n                <Select\n                  label=\"SMS Type\"\n                  id=\"demo-simple-select-filled\"\n                  name=\"smsType\"\n                  value={smsFrom.smsType || \"\"}\n                  onChange={handleFormChange}>\n                  <MenuItem\n                    value={\"general\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    General\n                  </MenuItem>\n                  <MenuItem\n                    value={\"attendance\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Attendence\n                  </MenuItem>\n                  <MenuItem\n                    value={\"fee\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Fee\n                  </MenuItem>\n                  <MenuItem\n                    value={\"credential\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Credential\n                  </MenuItem>\n                  <MenuItem\n                    value={\"exam\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Exam\n                  </MenuItem>\n                  <MenuItem\n                    value={\"leave\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Leave\n                  </MenuItem>\n                  <MenuItem\n                    value={\"library\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Library\n                  </MenuItem>\n                  <MenuItem\n                    value={\"transport\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Transport\n                  </MenuItem>\n                  <MenuItem\n                    value={\"hostel\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Hostel\n                  </MenuItem>\n                  <MenuItem\n                    value={\"preaddmission\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Preaddmission\n                  </MenuItem>\n                  <MenuItem\n                    value={\"parentMeeting\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Parent Meeting\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolTiming\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Timing\n                  </MenuItem>\n                  <MenuItem\n                    value={\"notice\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Notice\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolOpen\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Open\n                  </MenuItem>\n                  <MenuItem\n                    value={\"education\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Education\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              <TextField\n                required={true}\n                size=\"small\"\n                label=\"Subject\"\n                fullWidth\n                name=\"subject\"\n                value={smsFrom.subject || \"\"}\n                onChange={handleFormChange}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={12} lg={12}>\n              <Box style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                <Typography component={\"span\"}>Dynamic Tag: </Typography>\n\n                <Box>\n                  [name],[school_name] - wil get autoreplaced,\n                  <Typography component={\"span\"} color=\"error\">\n                    replace - {\"{{var}}\"} with your content, variable fields may\n                    vary in length. Space consumed for 1 variable is 30 char and\n                    avoid double space.\n                  </Typography>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TextareaAutosize\n                maxRows={4}\n                aria-label=\"maximum height\"\n                placeholder=\"Text Message\"\n                style={{\n                  width: \"100%\",\n                  height: \"120px\",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}\n                name=\"sms\"\n                fullWidth\n                value={smsFrom.sms}\n                onChange={handleFormChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <span>Click here to Notify Via SMS</span>\n              <Switch onChange={handleNotifiy} checked={notifyChecked} />\n            </Grid>\n          </Grid>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={12}\n                lg={12}\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <LoadingButton\n                  loading={sendingMessage}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Submit\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </Box>\n        </Card>\n      </form>\n    </>\n  );\n};\n\nexport default Compose;\n","/** @format */\n\nexport const communicatonReportTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n\n  {\n    name: \"Message\",\n    key: \"message\",\n  },\n\n  {\n    name: \"Total SMS\",\n    key: \"totalSms\",\n  },\n  {\n    name: \"Time/Date\",\n    key: \"createdAt\",\n  },\n];\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Button, Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { communicatonReportTableKeys } from \"../../data/tableKeys/communicationReportData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nconst Type_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Automatic\",\n    value: \"automatic\",\n  },\n];\n\nexport default function Report() {\n  const [data, setdData] = useState([]);\n  const getList = async (values) => {\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      type: \"\",\n      fromDate: null,\n      toDate: null,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n  return (\n    <>\n      <PageHeader title=\"Report\" />\n      <Grid container spacing={2}>\n        <Grid xs={12} md={3} item>\n          <FormSelect\n            required={true}\n            name=\"type\"\n            formik={entryFormik}\n            label=\"Type\"\n            options={Type_Options}\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker\n            formik={entryFormik}\n            label=\"From Date\"\n            name=\"fromDate\"\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker formik={entryFormik} label=\"To Date\" name=\"toDate\" />\n        </Grid>\n        <Grid item xs={12} md={3} lg={3} display=\"flex\" alignSelf=\"center\">\n          <Button size=\"small\" type=\"submit\" variant=\"contained\">\n            Find\n          </Button>\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[\"delete\"]}\n        bodyData={data}\n        bodyDataModal=\"report\"\n        tableKeys={communicatonReportTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Grid,\n  Card,\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  Autocomplete,\n  Popper,\n  Checkbox,\n  styled,\n  InputBase,\n  InputAdornment,\n  Button,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport PageHeader from \"../../components/PageHeader\";\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n\n  borderBottom: `1px solid ${\n    theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n  }`,\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst Credentails = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [classes, setClasses] = useState([]);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n      } else {\n        setSections([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      const allStudentsContacts = students.map((student) => student._id);\n      setContacts(allStudentsContacts);\n      setSelectedStudentCount(students.length);\n      setSelectContacts(\"All\");\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n    }\n\n    setContactsAutoSelect(val);\n  };\n\n  const handleRoleChange = async (e) => {\n    try {\n      const {\n        target: { value },\n      } = e;\n      setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: value,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleEmployeeAuto = (event, val) => {\n    setEmployeeAutoSelect(val);\n    if (val.filter((v) => v._id == \"all\").length) {\n      setSelectEmployee(\"All\");\n      setSelectedEmployeeCount(employees.length);\n      return;\n    }\n    const selectedEmployees = val.filter((emp) => emp._id !== \"all\");\n\n    setSelectedEmployeeCount(selectedEmployees.length);\n\n    if (selectedEmployees.length === employees.length) {\n      setSelectEmployee(\"All\");\n    } else {\n      setSelectEmployee(\n        selectedEmployees.map((emp) => emp.basicInfo.name).join(\", \")\n      );\n    }\n\n    setEmployeeAutoSelect(val);\n  };\n\n  const isStudentRoleSelected = selectRoles.some((roleId) => {\n    const role = roles.find((r) => r._id === roleId);\n    return role && role.name.includes(\"STUDENT\");\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Card\n          sx={{\n            padding: \"15px\",\n            width: { xs: \"100%\", sm: \"100%\", md: \"70%\", lg: \"50%\" },\n          }}>\n          <form>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12} lg={12}>\n                <FormControl variant=\"outlined\" fullWidth required>\n                  <InputLabel\n                    id=\"demo-simple-select-filled-label\"\n                    sx={{ fontSize: 12 }}>\n                    User Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"role\"\n                    sx={{ marginBottom: \"15px\" }}\n                    multiple\n                    label=\"User Type\"\n                    size=\"small\"\n                    onChange={handleRoleChange}\n                    value={selectRoles}>\n                    {roles &&\n                      roles.map((row, index) => (\n                        <MenuItem\n                          key={row._id}\n                          value={row._id}\n                          sx={{ fontSize: 12, fontWeight: 500 }}>\n                          {row.name}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                {selectRoles.some((roleId) => {\n                  const role = roles.find((r) => r._id === roleId);\n                  return role && role.name.includes(\"STUDENT\");\n                }) && selectRoles.length == 1 ? (\n                  <>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectClass}\n                        fullWidth\n                        sx={{ marginBottom: \"15px\" }}\n                        aria-describedby={\"classPopper\"}\n                        onFocus={(e) => {\n                          setClassPopper(classPopper ? null : e.currentTarget);\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Class\"\n                      />\n                      <Popper\n                        style={{ width: \"70%\" }}\n                        id={\"classPopper\"}\n                        open={!!classPopper}\n                        anchorEl={classPopper}>\n                        <FormControl\n                          variant=\"outlined\"\n                          size=\"small\"\n                          fullWidth\n                          sx={{ m: 1, width: \"100%\" }}>\n                          <Autocomplete\n                            onBlur={() => setClassPopper(null)}\n                            open={true}\n                            value={classAutoSelect}\n                            multiple\n                            onChange={handleClassSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            options={classes}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) => `${option.name}`}\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  checked={selected}\n                                />\n                                {`${option.name}`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Class\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectSection}\n                        aria-describedby={\"sectionPopper\"}\n                        sx={{ marginBottom: \"15px\" }}\n                        fullWidth\n                        onFocus={(e) => {\n                          setSectionPopper(\n                            sectionPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Section\"\n                      />\n                      <Popper\n                        style={{ width: \"70%\" }}\n                        id={\"sectionPopper\"}\n                        open={!!sectionPopper}\n                        anchorEl={sectionPopper}>\n                        <FormControl\n                          variant=\"outlined\"\n                          size=\"small\"\n                          fullWidth\n                          sx={{ m: 1, width: \"100%\" }}>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setSectionPopper(null)}\n                            open={true}\n                            value={sectionAutoSelect}\n                            onChange={handleSectionSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={sections.sort((a, b) =>\n                              a.class.name.localeCompare(b.class.name)\n                            )}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              `${option.name}(class:${option.class.name})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n                                {`${option.name}(class:${option.class.name})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Section\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectContacts}\n                        aria-describedby={\"contactsPopper\"}\n                        fullWidth\n                        onFocus={(e) => {\n                          setContactsPopper(\n                            contactsPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Students\"\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              All Total-{selectedStudentCount}\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n\n                      <Popper\n                        style={{ width: \"70%\" }}\n                        id={\"contactsPopper\"}\n                        open={!!contactsPopper}\n                        anchorEl={contactsPopper}>\n                        <FormControl\n                          variant=\"outlined\"\n                          size=\"small\"\n                          sx={{ m: 1, width: \"100%\" }}>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setContactsPopper(null)}\n                            open={true}\n                            value={contactsAutoSelect}\n                            onChange={handleContactsList}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={[\n                              {\n                                _id: \"all\",\n                                basicInfo: {\n                                  name: \"All\",\n                                },\n                                contactNumber: \"\",\n                              },\n                              ...students,\n                            ]}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              option._id === \"all\"\n                                ? \"All\"\n                                : `${option.basicInfo.name} (${option.contactNumber})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n\n                                {`${option.basicInfo.name} (${option.contactNumber})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Students\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n              {!isStudentRoleSelected ? (\n                <Grid item xs={12} md={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    value={selectEmployee}\n                    aria-describedby={\"employeePopper\"}\n                    onFocus={(e) => {\n                      setEmployeeListPopper(\n                        employeeListPopper ? null : e.currentTarget\n                      );\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Employees\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          All Total- {selectedEmployeeCount}\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <Popper\n                    style={{ width: \"70%\" }}\n                    id={\"employeePopper\"}\n                    open={!!employeeListPopper}\n                    anchorEl={employeeListPopper}>\n                    <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                      <Autocomplete\n                        onBlur={() => setEmployeeListPopper(null)}\n                        open={true}\n                        value={employeeAutoSelect}\n                        multiple\n                        onChange={handleEmployeeAuto}\n                        isOptionEqualToValue={(option, value) =>\n                          option._id === value._id\n                        }\n                        options={[\n                          {\n                            _id: \"all\",\n                            basicInfo: { name: \"All\" },\n                          },\n                          ...employees,\n                        ]}\n                        disableCloseOnSelect\n                        getOptionLabel={(option) =>\n                          `${option?.basicInfo.name} (${option?.contactNumber})`\n                        }\n                        renderOption={(props, option, { selected }) => (\n                          <li {...props}>\n                            <Checkbox\n                              icon={icon}\n                              checkedIcon={checkedIcon}\n                              checked={selected}\n                            />\n                            {`${option?.basicInfo.name} (${option?.contactNumber})`}\n                          </li>\n                        )}\n                        renderInput={(params) => (\n                          <StyledInput\n                            ref={params.InputProps.ref}\n                            inputProps={params.inputProps}\n                            placeholder=\"Employees\"\n                            autoFocus\n                          />\n                        )}\n                      />\n                    </FormControl>\n                  </Popper>\n                </Grid>\n              ) : null}\n\n              {selectRoles.length >= 2 &&\n              selectRoles.some((roleId) => {\n                const role = roles.find((r) => r._id === roleId);\n                return role && role.name.includes(\"STUDENT\");\n              }) ? (\n                <>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"classPopper\"}\n                      open={!!classPopper}\n                      anchorEl={classPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          onBlur={() => setClassPopper(null)}\n                          open={true}\n                          value={classAutoSelect}\n                          multiple\n                          onChange={handleClassSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={classes}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => `${option.name}`}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option.name}`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Class\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"sectionPopper\"}\n                      open={!!sectionPopper}\n                      anchorEl={sectionPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setSectionPopper(null)}\n                          open={true}\n                          value={sectionAutoSelect}\n                          onChange={handleSectionSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={sections.sort((a, b) =>\n                            a.class.name.localeCompare(b.class.name)\n                          )}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option.name}(class:${option.class.name})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {`${option.name}(class:${option.class.name})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Section\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"contactsPopper\"}\n                      open={!!contactsPopper}\n                      anchorEl={contactsPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: \"All\",\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? \"All\"\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n\n                              {`${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Students\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Employees\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              ) : (\n                \"\"\n              )}\n\n              <Grid item xs={12} md={12} lg={6} container>\n                <Button variant=\"contained\" size=\"small\" type=\"submit\">\n                  Send Credentials\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default Credentails;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nexport default function BulkPhoto() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudents(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getStudents,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section\n    ) {\n      getStudents(formik.values);\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  const handleNavigateStudent = (student) => {\n    navigate(`/sch/student/edit-student/${student._id}`);\n  };\n\n  const handleChangeFiles = async (e, studentId) => {\n    const { files } = e.target;\n    if (files.length > 0) {\n      const formData = new FormData();\n      formData.append(\"photo\", files[0]);\n\n      try {\n        await put(\n          PRIVATE_URLS.student.updatePhoto + \"/\" + studentId,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        getStudents(formik.values);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"div\"\n            onSubmit={formik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Photo</TableCell>\n              <TableCell align=\"center\">File</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {students.map((student, index) => (\n              <TableRow key={student._id}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">\n                  {student.academicInfo.rollNumber}\n                </TableCell>\n                <TableCell align=\"center\">{student.basicInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  <Avatar src={student.photo} sx={{ margin: \"auto\" }} />\n                </TableCell>\n                <TableCell align=\"center\" sx={{ maxWidth: \"100px\" }}>\n                  {/* <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    style={{ display: \"block\", margin: \"auto\" }}\n                  /> */}\n\n                  <FileSelect\n                    multi={false}\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    customOnChange={true}\n                    label=\"Select Image\"\n                  />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton onClick={() => handleNavigateStudent(student)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport {\n  Avatar,\n  Collapse,\n  Menu,\n  MenuItem,\n  Stack,\n  Switch,\n  Tooltip,\n} from \"@mui/material\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { Route, Routes } from \"react-router-dom\";\n// icons\nimport CircleNotificationsIcon from \"@mui/icons-material/CircleNotifications\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport LockResetIcon from \"@mui/icons-material/LockReset\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nimport menu from \"../data/menu\";\nimport Dashboard from \"../pages/Dashboard\";\n\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport LOGO from \"../assets/images/deleteicon.png\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport ThemeModeContext from \"../context/ThemeModeContext\";\nimport AcademicYear from \"../pages/Administrator/AcademicYear\";\nimport ManageDesignation from \"../pages/HumanResource/ManageDesignation\";\nimport ManageDepartment from \"../pages/HumanResource/ManageDepartment\";\nimport Employee from \"../pages/HumanResource/Employee\";\nimport OfferLetter from \"../pages/HumanResource/OfferLetter\";\nimport RelievingLetter from \"../pages/HumanResource/RelievingLetter\";\nimport OffBoarding from \"../pages/HumanResource/OffBoarding\";\nimport ExperienceLetter from \"../pages/HumanResource/ExperienceLetter\";\nimport TeacherActivity from \"../pages/HumanResource/TeacherActivity\";\nimport RolePermission from \"../pages/Administrator/RolePermission\";\nimport UserRole from \"../pages/Administrator/UserRole\";\nimport ResetPassword from \"../pages/Administrator/ResetPassword\";\nimport Enquiries from \"../pages/Pre-Admission/Enquiries\";\nimport Exams from \"../pages/Pre-Admission/Exams\";\nimport ExamSchedules from \"../pages/Pre-Admission/ExamSchedules\";\nimport Result from \"../pages/Pre-Admission/Result\";\nimport Class from \"../pages/Academic/Class\";\nimport Section from \"../pages/Academic/Section\";\nimport Subject from \"../pages/Academic/Subject\";\nimport StudentAttendance from \"../pages/Attendance/StudentAttendance\";\nimport EmployeeAttendance from \"../pages/Attendance/EmployeeAttendance\";\nimport ClassRoutine from \"../pages/ClassRoutine\";\nimport Overview from \"../pages/Student/Overview\";\nimport AdmitStudent from \"../pages/Student/AdmitStudent\";\nimport Reshuffle from \"../pages/Student/Reshuffle\";\nimport Promotion from \"../pages/Student/Promotion\";\nimport BulkAdmission from \"../pages/Student/BulkAdmission\";\nimport Credential from \"../pages/Student/Credential\";\nimport QuickAdmit from \"../pages/Student/QuickAdmit\";\nimport StudentActivity from \"../pages/Student/StudentActivity\";\nimport Assignment from \"../pages/Assignment\";\nimport Notice from \"../pages/Announcement/Notice\";\nimport News from \"../pages/Announcement/News\";\nimport Holiday from \"../pages/Announcement/Holiday\";\nimport AwardsAndAchievements from \"../pages/Announcement/AwardsAndAchievements\";\nimport SplashNews from \"../pages/Announcement/SplashNews\";\nimport Gallery from \"../pages/Gallery\";\nimport Notifications from \"../pages/Notifications\";\nimport Event from \"../pages/Event\";\nimport ExamGrade from \"../pages/Exam/ExamGrade\";\nimport ExamTerm from \"../pages/Exam/ExamTerm\";\nimport ExamSchedule from \"../pages/Exam/ExamSchedule\";\nimport ExamHallTicket from \"../pages/Exam/ExamHallTicket\";\nimport DivisionWiseReport from \"../pages/ExamMark/DivisionWiseReport\";\nimport SubjectWiseReport from \"../pages/ExamMark/SubjectWiseReport\";\nimport ConsolidatedMarkSheet from \"../pages/ExamMark/ConsolidatedMarkSheet\";\nimport Markscard from \"../pages/ExamMark/Markscard\";\nimport ExamResult from \"../pages/ExamMark/ExamResult\";\nimport ManageMark from \"../pages/ExamMark/ManageMark\";\nimport ExamAttendance from \"../pages/ExamMark/ExamAttendance\";\nimport Courses from \"../pages/LMS/Courses\";\nimport CourseContent from \"../pages/LMS/CourseContent\";\nimport Live from \"../pages/LMS/Live\";\nimport Storage from \"../pages/LMS/Storage\";\nimport Books from \"../pages/Library/Books\";\nimport Periodical from \"../pages/Library/Periodical\";\nimport StudentLibraryMember from \"../pages/Library/StudentLibraryMember\";\nimport StudentIssueReturn from \"../pages/Library/StudentIssueReturn\";\nimport EmployeeLibraryMember from \"../pages/Library/EmployeeLibraryMember\";\nimport EmployeeIssueReturn from \"../pages/Library/EmployeeIssueReturn\";\nimport LeaveType from \"../pages/LeaveManagement/LeaveType\";\nimport StudentsLeave from \"../pages/LeaveManagement/StudentsLeave\";\nimport EmployeeLeave from \"../pages/LeaveManagement/EmployeeLeave\";\nimport LeaveReport from \"../pages/LeaveManagement/LeaveReport\";\nimport Item from \"../pages/Inventory/Item\";\nimport Vendor from \"../pages/Inventory/Vendor\";\nimport InOutTransaction from \"../pages/Inventory/InOutTransaction\";\nimport StockList from \"../pages/Inventory/StockList\";\nimport Issue from \"../pages/Inventory/Issue\";\nimport Sell from \"../pages/Inventory/Sell\";\nimport StudyCertificate from \"../pages/Certificate/StudyCertificate\";\nimport TransferCertificate from \"../pages/Certificate/TransferCertificate\";\nimport ReceiptBook from \"../pages/Fees/ReceiptBook\";\nimport FeeMapCategory from \"../pages/Fees/FeeMapCategory\";\nimport CollectFees from \"../pages/Fees/CollectFees\";\nimport BalanceFeeReport from \"../pages/Fees/BalanceFeeReport\";\nimport FeeOverview from \"../pages/Fees/FeeOverview\";\nimport Reconciliation from \"../pages/Fees/Reconciliation\";\nimport ManageHostel from \"../pages/Hostel/ManageHostel\";\nimport ManageRoomType from \"../pages/Hostel/ManageRoomType\";\nimport ManageRoomAndBed from \"../pages/Hostel/ManageRoomAndBed\";\nimport HostelMember from \"../pages/Hostel/HostelMember\";\nimport Vehicle from \"../pages/Transport/Vehicle\";\nimport ManageRouteAndTrips from \"../pages/Transport/ManageRouteAndTrips\";\nimport TransportMember from \"../pages/Transport/TransportMember\";\nimport VehicleRoutes from \"../pages/Transport/Routes\";\nimport VehicleLog from \"../pages/Transport/VehicleLog\";\nimport VehicleMaintenance from \"../pages/Transport/VehicleMaintenance\";\nimport SalaryGrade from \"../pages/PayRoll/SalaryGrade\";\nimport MakePayment from \"../pages/PayRoll/MakePayment\";\nimport LibraryReport from \"../pages/Report/LibraryReport\";\nimport StudentYearlyAttendance from \"../pages/Report/StudentYearlyAttendance\";\nimport EmployeeYearlyAttendance from \"../pages/Report/EmployeeYearlyAttendance\";\nimport StudentActivityReport from \"../pages/Report/StudentActivityReport\";\nimport StudentAttendanceReport from \"../pages/Report/StudentAttendance\";\nimport EmployeeAttendanceReport from \"../pages/Report/EmployeeAttendance\";\nimport VisitorInfo from \"../pages/VisitorInfo/VisitorInfo\";\nimport StudentCheckout from \"../pages/VisitorInfo/StudentCheckout\";\nimport HelpDesk from \"../pages/HelpDesk\";\nimport GuardianFeedback from \"../pages/GuardianFeedback\";\nimport StudentBulkPhoto from \"../pages/Student/StudentBulkPhoto\";\nimport StudentReport from \"../pages/Report/StudentReport\";\nimport AddForm from \"../forms/AddForm\";\nimport AddEmployee from \"../pages/HumanResource/AddEmployee\";\nimport ManageInstitute from \"../pages/ManageInstitute/ManageInstitute\";\nimport AddInstitute from \"../pages/ManageInstitute/AddInstitute\";\nimport themeData from \"../data/themeData\";\nimport Profile from \"../pages/AccountSettings/Profile\";\nimport UpdateEmployee from \"../pages/HumanResource/UpdateEmployee\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport SettingContext from \"../context/SettingsContext\";\nimport AddStudent from \"../pages/Student/AddStudent\";\nimport AddCourse from \"../pages/LMS/AddCourse\";\nimport UpdateCourse from \"../pages/LMS/UpdateCourse\";\nimport Room from \"../pages/LMS/Room\";\nimport Compose from \"../pages/Communication/Compose\";\nimport Report from \"../pages/Communication/Report\";\nimport Credentials from \"../pages/Communication/Credentials\";\nimport BulkPhoto from \"../pages/Student/BulkPhoto\";\n\n// exlnt_70471681\n// 9538063455\n\nconst drawerWidth = 250;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst DrawerFooter = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-start\",\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nexport default function NavDrawer() {\n  const theme = useTheme();\n  const { selectedSetting } = React.useContext(SettingContext);\n  const [open, setOpen] = React.useState(true);\n  // const { setUser, user } = React.useContext(UserContext);\n  const [sideMenuData, setSideMenuData] = React.useState([]);\n\n  const navigate = useNavigate();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const openProfile = Boolean(anchorEl);\n  const [activeYear, setActiveYear] = React.useState([]);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { isDarkMode, setIsDarkMode } = React.useContext(ThemeModeContext);\n  const [selecteSubMenu, setSelectedSubMenu] = React.useState(\"\");\n  const [selectedMenu, setSelectedMenu] = React.useState(null);\n  const { SIDE_MENU_DATA } = menu;\n\n  React.useEffect(() => {\n    setSideMenuData(SIDE_MENU_DATA);\n    getActiveAcademicYear();\n  }, []);\n\n  //get academic year\n  const getActiveAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setActiveYear(data.result[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // on load if any selected sub-menu was there then open\n  React.useEffect(() => {\n    const openPreviousMenu = () => {\n      let path = window.location.pathname;\n      let menuIndex = null;\n\n      for (let menu of SIDE_MENU_DATA) {\n        if (menu.subMenus.length) {\n          let pathNames = menu.subMenus.map((s) => s.path);\n          if (pathNames.includes(path)) {\n            menuIndex = SIDE_MENU_DATA.indexOf(menu);\n          }\n        }\n      }\n\n      if (menuIndex) {\n        setSelectedMenu(menuIndex);\n        setOpen(true);\n      }\n    };\n\n    openPreviousMenu();\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleModeChange = () => {\n    setIsDarkMode(!isDarkMode);\n    window.localStorage.setItem(\"isDarkMode\", !isDarkMode);\n  };\n\n  const handleToggleMenuOpen = (index) => {\n    if (selectedMenu === index) {\n      return setSelectedMenu(null);\n    }\n    setSelectedMenu(index);\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(\"access_token\");\n    window.localStorage.removeItem(\"current_ecs_user\");\n    window.localStorage.removeItem(\"refresh_token\");\n    window.localStorage.removeItem(\"userType\");\n    navigate(\"/\");\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: 5,\n              ...(open && { display: \"none\" }),\n            }}>\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            color=\"white\"\n            textAlign=\"center\"\n            fontSize=\"18px\"\n            sx={{ display: { xs: \"none\", md: \"block\" } }}>\n            {selectedSetting?.name} [{activeYear ? activeYear?.from : \"-\"} -{\" \"}\n            {activeYear ? activeYear?.to : \"-\"}]\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              width: \"100%\",\n              flex: 1,\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}>\n            <Stack\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              spacing={1}\n              direction=\"row\">\n              <Tooltip title=\"Notification\">\n                <Link to=\"/sch/notifications\">\n                  <IconButton>\n                    <NotificationsIcon\n                      sx={{ width: 26, height: 26, color: \"#BDBDBD\" }}\n                    />\n                  </IconButton>\n                </Link>\n              </Tooltip>\n              <Tooltip title=\"Account Settings\">\n                <IconButton\n                  onClick={handleClick}\n                  // size=\"small\"\n                  // sx={{ ml: 2 }}\n                  aria-controls={openProfile ? \"account-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={openProfile ? \"true\" : undefined}>\n                  <Avatar sx={{ width: 26, height: 26 }} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"websites\">\n                <Link to=\"/\">\n                  <IconButton>\n                    <Avatar\n                      src=\"/world-wide-web.png\"\n                      alt=\"loading...\"\n                      sx={{ width: 26, height: 26 }}\n                    />\n                  </IconButton>\n\n                  {/* <img\n                  src=\"/world-wide-web.png\"\n                  alt=\"loading...\"\n                  width={30}\n                  height={30}\n                  color=\"#fff\"\n                /> */}\n                </Link>\n              </Tooltip>\n            </Stack>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={openProfile}\n        onClose={handleClose}\n        onClick={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: \"visible\",\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n            mt: 1.5,\n            \"& .MuiAvatar-root\": {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            \"&::before\": {\n              content: '\"\"',\n              display: \"block\",\n              position: \"absolute\",\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: \"background.paper\",\n              transform: \"translateY(-50%) rotate(45deg)\",\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/profile\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <PersonIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>Profile</ListItemText>\n          </Link>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/administrator/reset-password\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <LockResetIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>\n              Reset Password\n            </ListItemText>\n          </Link>\n        </MenuItem>\n      </Menu>\n\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"sticky\",\n            top: 0,\n            zIndex: 1,\n            backgroundColor: isDarkMode ? \"#000\" : \"#fff\",\n            overflow: \"hidden\",\n          }}>\n          <Box></Box>\n          <img\n            style={{\n              height: \"50px\",\n              width: \"80px\",\n\n              objectFit: \"contain\",\n            }}\n            src={selectedSetting?.logo}\n          />\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon color=\"primary\" />\n            ) : (\n              <ChevronLeftIcon color=\"primary\" />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {sideMenuData.map((m, index) =>\n            !m.subMenus.length ? (\n              <div key={m.path}>\n                <ListItem disablePadding>\n                  <Link\n                    to={m.path}\n                    style={{\n                      textDecoration: \"none\",\n                      display: \"flex\",\n                      flex: 1,\n                    }}>\n                    <ListItemButton\n                      onClick={() => setSelectedMenu(index)}\n                      selected={\n                        selectedMenu === index ||\n                        window.location.pathname === m.path\n                      }>\n                      <ListItemIcon>{m.icon}</ListItemIcon>\n                      <ListItemText primary={m.name} />\n                    </ListItemButton>\n                  </Link>\n                </ListItem>\n                {/* <Divider /> */}\n              </div>\n            ) : (\n              <div key={m.path + m.name}>\n                <ListItem key={m.path} sx={{ padding: 0 }}>\n                  <ListItemButton\n                    selected={\n                      selectedMenu === index ||\n                      window.location.pathname === m.path\n                    }\n                    onClick={() => handleToggleMenuOpen(index)}>\n                    <ListItemIcon>{m.icon}</ListItemIcon>\n                    <ListItemText primary={m.name} />\n\n                    {selectedMenu === index ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                </ListItem>\n                <Collapse\n                  timeout=\"auto\"\n                  unmountOnExit\n                  in={selectedMenu === index}\n                  sx={{ width: \"100%\" }}>\n                  <List>\n                    {m.subMenus.map((sub) => (\n                      <ListItem sx={{ width: \"100%\" }} key={sub.name}>\n                        <Link\n                          to={sub.path}\n                          style={{\n                            textDecoration: \"none\",\n                            display: \"flex\",\n                            flex: 1,\n                            color: \"red\",\n                          }}>\n                          <ListItemButton\n                            onClick={() => setSelectedSubMenu(sub.path)}\n                            sx={{\n                              \"& .MuiListItemText-root\": {\n                                whiteSpace: \"normal\",\n                                wordWrap: \"wrap\",\n                              },\n                              \"& .MuiListItemIcon-root\": {\n                                // This ensures the ListItemIcon doesn't use the default minimum width\n                                // Adjust this value to decrease the space\n                              },\n                            }}\n                            selected={\n                              selecteSubMenu === sub.path ||\n                              window.location.pathname === sub.path\n                            }>\n                            <ListItemIcon>{sub.icon}</ListItemIcon>\n                            <ListItemText primary={sub.name} />\n                          </ListItemButton>\n                        </Link>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n                {/* <Divider /> */}\n              </div>\n            )\n          )}\n        </List>\n        <Divider />\n        <ListItem disablePadding>\n          <ListItemButton\n            sx={{\n              paddingLeft: 0,\n              \"& .MuiListItemText-root\": {\n                whiteSpace: \"normal\",\n                wordWrap: \"wrap\",\n              },\n              \"& .MuiListItemIcon-root\": {\n                // This ensures the ListItemIcon doesn't use the default minimum width\n                // Adjust this value to decrease the space\n              },\n            }}>\n            <Switch\n              sx={{ marginRight: \"20px\" }}\n              checked={isDarkMode}\n              onChange={handleModeChange}\n            />\n            <ListItemText primary={isDarkMode ? \"Dark Mode\" : \"Light Mode\"} />\n          </ListItemButton>\n        </ListItem>\n        <Divider sx={{ marginBottom: \"20px\" }} />\n        <DrawerFooter>\n          <List sx={{ width: \"100%\" }}>\n            {/* <ListItem disablePadding>\n              <Link\n                to={\"/settings\"}\n                style={{ textDecoration: \"none\", display: \"flex\", flex: 1 }}>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <SettingsIcon fontSize=\"small\" color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Settings\"} />\n                </ListItemButton>\n              </Link>\n            </ListItem> */}\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  \"& .MuiListItemText-root\": {\n                    whiteSpace: \"normal\",\n                    wordWrap: \"wrap\",\n                  },\n                  \"& .MuiListItemIcon-root\": {\n                    // This ensures the ListItemIcon doesn't use the default minimum width\n                    // Adjust this value to decrease the space\n                  },\n                }}\n                onClick={handleLogout}>\n                <ListItemIcon>\n                  <LogoutIcon fontSize=\"small\" color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary={\"Logout\"} />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </DrawerFooter>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n\n          overflowX: \"hidden\",\n          overflowY: \"auto\",\n        }}>\n        <DrawerHeader />\n\n        <Routes>\n          <Route path=\"dashboard\" element={<Dashboard />} />\n          <Route path=\"manage-institute\" element={<ManageInstitute />} />\n          <Route path=\"administrator/academicYear\" element={<AcademicYear />} />\n          <Route\n            path=\"administrator/role-permission\"\n            element={<RolePermission />}\n          />\n          <Route path=\"administrator/user-role\" element={<UserRole />} />\n          <Route\n            path=\"administrator/reset-password\"\n            element={<ResetPassword />}\n          />\n          <Route\n            path=\"human-resource/manage-designation\"\n            element={<ManageDesignation />}\n          />\n          <Route\n            path=\"human-resource/manage-department\"\n            element={<ManageDepartment />}\n          />\n          <Route path=\"human-resource/employee\" element={<Employee />} />\n          <Route\n            path=\"human-resource/update-employee/:id\"\n            element={<UpdateEmployee />}\n          />\n          <Route path=\"human-resource/offer-letter\" element={<OfferLetter />} />\n          <Route\n            path=\"human-resource/relieving-letter\"\n            element={<RelievingLetter />}\n          />\n\n          <Route path=\"human-resource/off-boarding\" element={<OffBoarding />} />\n          <Route\n            path=\"human-resource/experience-letter\"\n            element={<ExperienceLetter />}\n          />\n\n          <Route\n            path=\"human-resource/teacher-activity\"\n            element={<TeacherActivity />}\n          />\n\n          <Route path=\"pre-admission/enquiries\" element={<Enquiries />} />\n          <Route path=\"pre-admission/exams\" element={<Exams />} />\n          <Route\n            path=\"pre-admission/exam-schedules\"\n            element={<ExamSchedules />}\n          />\n          <Route path=\"pre-admission/result\" element={<Result />} />\n\n          <Route path=\"academic/class\" element={<Class />} />\n          <Route path=\"academic/section\" element={<Section />} />\n          <Route path=\"academic/subject\" element={<Subject />} />\n\n          <Route\n            path=\"attendence/student-attendance\"\n            element={<StudentAttendance />}\n          />\n          <Route\n            path=\"attendence/employee-attendance\"\n            element={<EmployeeAttendance />}\n          />\n\n          <Route path=\"class-routine\" element={<ClassRoutine />} />\n          <Route path=\"student/overview\" element={<Overview />} />\n          <Route path=\"student/admit-student\" element={<AdmitStudent />} />\n          <Route path=\"student/add-student\" element={<AddStudent />} />\n          <Route path=\"student/edit-student/:id\" element={<AddStudent />} />\n          <Route path=\"student/reshuffle\" element={<Reshuffle />} />\n          <Route path=\"student/promotion\" element={<Promotion />} />\n          <Route path=\"student/bulk-admission\" element={<BulkAdmission />} />\n          <Route path=\"student/credential\" element={<Credential />} />\n          <Route path=\"student/quick-admit\" element={<QuickAdmit />} />\n\n          <Route path=\"student/bulk-photo\" element={<BulkPhoto />} />\n          <Route\n            path=\"student/student-activity\"\n            element={<StudentActivity />}\n          />\n          <Route\n            path=\"student/student-bulk-photo\"\n            element={<StudentBulkPhoto />}\n          />\n\n          <Route path=\"assignment\" element={<Assignment />} />\n\n          <Route path=\"announcement/notice\" element={<Notice />} />\n          <Route path=\"announcement/news\" element={<News />} />\n          <Route path=\"announcement/holiday\" element={<Holiday />} />\n          <Route\n            path=\"announcement/awardsAndAchievements\"\n            element={<AwardsAndAchievements />}\n          />\n          <Route path=\"announcement/splashNews\" element={<SplashNews />} />\n\n          <Route path=\"gallery\" element={<Gallery />} />\n          <Route path=\"notifications\" element={<Notifications />} />\n          <Route path=\"event\" element={<Event />} />\n\n          <Route path=\"exam/exam-grade\" element={<ExamGrade />} />\n          <Route path=\"exam/exam-term\" element={<ExamTerm />} />\n          <Route path=\"exam/exam-schedule\" element={<ExamSchedule />} />\n          <Route path=\"exam/exam-hall-ticket\" element={<ExamHallTicket />} />\n          <Route\n            path=\"exam-Mark/exam-Attendance\"\n            element={<ExamAttendance />}\n          />\n          <Route path=\"exam-Mark/manage-mark\" element={<ManageMark />} />\n          <Route path=\"exam-Mark/exam-result\" element={<ExamResult />} />\n          <Route path=\"exam-Mark/marks-card\" element={<Markscard />} />\n          <Route\n            path=\"exam-Mark/consolidated-marks-sheet\"\n            element={<ConsolidatedMarkSheet />}\n          />\n          <Route\n            path=\"exam-Mark/subject-wise-report\"\n            element={<SubjectWiseReport />}\n          />\n          <Route\n            path=\"exam-Mark/division-wise-report\"\n            element={<DivisionWiseReport />}\n          />\n\n          <Route path=\"lms/storage\" element={<Storage />} />\n          <Route path=\"lms/courses\" element={<Courses />} />\n          <Route path=\"lms/add-courses\" element={<AddCourse />} />\n          <Route path=\"lms/edit-courses/:id\" element={<UpdateCourse />} />\n          <Route path=\"lms/course-content\" element={<CourseContent />} />\n          <Route path=\"lms/live\" element={<Live />} />\n          <Route path=\"lms/room/:roomID\" element={<Room />} />\n\n          <Route path=\"library/books\" element={<Books />} />\n          <Route path=\"library/periodical\" element={<Periodical />} />\n          <Route\n            path=\"library/student-library-member\"\n            element={<StudentLibraryMember />}\n          />\n          <Route\n            path=\"library/student-issue-return\"\n            element={<StudentIssueReturn />}\n          />\n          <Route\n            path=\"library/employee-library-member\"\n            element={<EmployeeLibraryMember />}\n          />\n          <Route\n            path=\"library/employee-issue-return\"\n            element={<EmployeeIssueReturn />}\n          />\n\n          <Route path=\"leave-management/leave-type\" element={<LeaveType />} />\n          <Route\n            path=\"leave-management/student-leave\"\n            element={<StudentsLeave />}\n          />\n          <Route\n            path=\"leave-management/employee-leave\"\n            element={<EmployeeLeave />}\n          />\n          <Route\n            path=\"leave-management/leave-report\"\n            element={<LeaveReport />}\n          />\n\n          <Route path=\"inventory/item\" element={<Item />} />\n          <Route path=\"inventory/vendor\" element={<Vendor />} />\n          <Route path=\"inventory/transaction\" element={<InOutTransaction />} />\n          <Route path=\"inventory/stockList\" element={<StockList />} />\n          <Route path=\"inventory/issue\" element={<Issue />} />\n          <Route path=\"inventory/sell\" element={<Sell />} />\n          <Route\n            path=\"certificate/study-certificate\"\n            element={<StudyCertificate />}\n          />\n          <Route\n            path=\"certificate/transfer-certificate\"\n            element={<TransferCertificate />}\n          />\n          <Route path=\"fees/receipt-book\" element={<ReceiptBook />} />\n          <Route path=\"fees/feeMap-category\" element={<FeeMapCategory />} />\n          <Route path=\"fees/collect-fees\" element={<CollectFees />} />\n          <Route path=\"fees/balance-fee\" element={<BalanceFeeReport />} />\n          <Route path=\"fees/fee-overview\" element={<FeeOverview />} />\n          <Route path=\"fees/re-conciliation\" element={<Reconciliation />} />\n\n          <Route path=\"hostel/manage-hostel\" element={<ManageHostel />} />\n          <Route path=\"hostel/manage-room-type\" element={<ManageRoomType />} />\n          <Route path=\"hostel/manage-room-bed\" element={<ManageRoomAndBed />} />\n          <Route path=\"hostel/hostel-member\" element={<HostelMember />} />\n\n          <Route path=\"transport/vehicle\" element={<Vehicle />} />\n          <Route\n            path=\"transport/manage-route\"\n            element={<ManageRouteAndTrips />}\n          />\n          <Route path=\"transport/routes\" element={<VehicleRoutes />} />\n          <Route\n            path=\"transport/trasport-member\"\n            element={<TransportMember />}\n          />\n\n          <Route path=\"transport/vehicle-log\" element={<VehicleLog />} />\n          <Route\n            path=\"transport/vehicle-maintenance\"\n            element={<VehicleMaintenance />}\n          />\n\n          <Route path=\"payroll/salary-grade\" element={<SalaryGrade />} />\n          <Route path=\"payroll/make-payment\" element={<MakePayment />} />\n\n          <Route path=\"report/library-report\" element={<LibraryReport />} />\n          <Route\n            path=\"report/student-attendance\"\n            element={<StudentAttendanceReport />}\n          />\n          <Route\n            path=\"report/student-yearly-attendane\"\n            element={<StudentYearlyAttendance />}\n          />\n          <Route\n            path=\"report/employee-attendance\"\n            element={<EmployeeAttendanceReport />}\n          />\n          <Route\n            path=\"report/employee-yearly-attendance\"\n            element={<EmployeeYearlyAttendance />}\n          />\n          <Route path=\"report/student-report\" element={<StudentReport />} />\n          <Route\n            path=\"report/student-activity-report\"\n            element={<StudentActivityReport />}\n          />\n\n          <Route path=\"visitorInfo/visitor-info\" element={<VisitorInfo />} />\n          <Route\n            path=\"visitorInfo/student-checkout\"\n            element={<StudentCheckout />}\n          />\n\n          <Route path=\"help-desk\" element={<HelpDesk />} />\n          <Route path=\"guardian-feedback\" element={<GuardianFeedback />} />\n          <Route path=\"human-resource/add-employee\" element={<AddEmployee />} />\n\n          <Route path=\"communication_compose\" element={<Compose />} />\n          <Route path=\"communication_report\" element={<Report />} />\n          <Route path=\"communication_credentials\" element={<Credentials />} />\n\n          <Route\n            path=\"human-resource/edit-employee/:id\"\n            element={<AddEmployee />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/edit-institute/:id\"\n            element={<AddInstitute />}\n          />\n          <Route path=\"profile\" element={<Profile />} />\n        </Routes>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n}\n","/** @format */\n\nimport { Box, Paper } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport SettingContext from \"../context/SettingsContext\";\n\nconst Wrapper = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  marginBottom: \"20px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: theme.palette.primary.light,\n}));\n\nexport default function PageHeader({ title = \"\", showTextField = true }) {\n  const { settings, setSettings, selectedSetting, setSelectedSetting } =\n    useContext(SettingContext);\n\n  const handleSettingChange = (e) => {\n    const { name, value } = e.target;\n    setSelectedSetting({ ...settings.filter((s) => s._id == value)[0] });\n  };\n\n  return (\n    <Wrapper>\n      <Typography component=\"h1\" sx={{ fontWeight: \"bold\" }}>\n        {title}\n      </Typography>\n      {showTextField && (\n        <Stack direction=\"row\" spacing={2}>\n          <FormControl fullWidth size=\"small\" sx={{ minWidth: \"200px\" }}>\n            <InputLabel id=\"demo-simple-select-label\">Select School</InputLabel>\n            <Select\n              labelId=\"demo-simpless-select-filled-label\"\n              id=\"demo-simple-select-filled-l\"\n              value={selectedSetting?._id}\n              name=\"setting\"\n              onChange={handleSettingChange}\n              IconComponent={(props) => (\n                <KeyboardArrowDownIcon {...props} fontSize=\"medium\" />\n              )}\n              label=\"Select school\">\n              {settings?.map((set) => (\n                <MenuItem key={set._id} value={set._id}>\n                  {set.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      )}\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport NoTableData from \"./NoTableData\";\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\nimport { PuffLoader } from \"react-spinners\";\nimport image from \"../../assets/images/deleteicon.png\";\nimport { Download } from \"@mui/icons-material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 350,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n\n  boxShadow: 24,\n  p: 2,\n};\n\nconst getDataValue = (data, k) => {\n  if (typeof data[k.key] === \"boolean\") {\n    return data[k.key] === true ? \"Yes\" : \"No\";\n  }\n  if (k.path) {\n    if (Object.keys(data[k.path] || {}).length > 0) {\n      return data[k.path][k.key] || \"NA\";\n    }\n  }\n\n  if (k.isDate) {\n    return data[k.key] ? new Date(data[k.key]).toDateString() : \"NA\";\n  } else {\n    return data[k.key];\n  }\n};\n\nexport default function CustomTable({\n  bodyData = [],\n  bodyDataModal = \"\",\n  tableKeys = [],\n  actions = [\"edit\", \"delete\", \"view\", \"card\", \"switch\"],\n  onEditClick = () => {},\n  onDeleteClick = () => {},\n  onViewClick = () => {},\n  onCardClick = () => {},\n  onNavigateFeeMap = () => {},\n  onToggleSwitch = () => {},\n  toggleStatus = false,\n  isDataReady = true,\n  module = \"\",\n  CustomAction = () => {},\n  onUpdate = () => {},\n  onDownloadClick = () => {},\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const handleDeleteClick = (data) => {\n    setSelectedItem(data);\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    onDeleteClick(selectedItem._id);\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              {tableKeys.map((r, i) => (\n                <TableCell\n                  sx={{ fontWeight: \"bold\" }}\n                  key={i + r.name}\n                  align=\"center\">\n                  {r.name}\n                </TableCell>\n              ))}\n              {actions.length ? (\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Action\n                </TableCell>\n              ) : null}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length && isDataReady\n              ? bodyData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((data, index) => (\n                    <TableRow key={data._id || index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n                      {tableKeys.map((k, i) =>\n                        k.type === \"image\" ? (\n                          <TableCell key={i} align=\"center\">\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                              }}>\n                              <Avatar\n                                sx={{\n                                  alignSelf: \"center\",\n                                  objectFit: \"contain\",\n                                }}\n                                src={data[k.key]}\n                              />\n                            </Box>\n                          </TableCell>\n                        ) : (\n                          <TableCell key={i} align=\"center\">\n                            {getDataValue(data, k)}\n                          </TableCell>\n                        )\n                      )}\n                      {actions.length ? (\n                        <TableCell\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            columnGap: \"5px\",\n                          }}>\n                          {actions.includes(\"edit\") && (\n                            <Tooltip title=\"Edit\">\n                              <IconButton onClick={() => onEditClick(data)}>\n                                <EditIcon color=\"primary\" fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n\n                          {actions.includes(\"delete\") && (\n                            <Tooltip title=\"Delete\">\n                              <IconButton\n                                onClick={() => handleDeleteClick(data)}>\n                                <DeleteIcon fontSize=\"small\" color=\"error\" />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n\n                          {actions.includes(\"view\") && (\n                            <Tooltip title=\"View\">\n                              <IconButton onClick={() => onViewClick(data)}>\n                                <RemoveRedEyeRoundedIcon\n                                  fontSize=\"small\"\n                                  color=\"primary\"\n                                />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"card\") && (\n                            <Tooltip title=\"Unbundle\">\n                              <Button\n                                size=\"small\"\n                                variant=\"contained\"\n                                onClick={() => onCardClick(data)}>\n                                Card\n                              </Button>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"switch\") && (\n                            <Tooltip title={toggleStatus}>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => onToggleSwitch(data)}>\n                                <Switch\n                                  size=\"small\"\n                                  checked={data[toggleStatus] === true}\n                                />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n\n                          {actions.includes(\"custom\") && (\n                            <CustomAction\n                              onEditClick={onEditClick}\n                              data={data}\n                              onUpdate={onUpdate}\n                              onNavigateFeeMap={onNavigateFeeMap}\n                            />\n                          )}\n                          {actions.includes(\"download\") && (\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => onDownloadClick(data)}>\n                              <Download fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                        </TableCell>\n                      ) : null}\n                    </TableRow>\n                  ))\n              : null}\n          </TableBody>\n        </Table>\n        {!isDataReady ? (\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingTop: \"20px\",\n            }}>\n            <PuffLoader size={30} color=\"dodgerblue\" />\n          </Box>\n        ) : null}\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={bodyData ? (bodyData.length ? bodyData.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TableContainer>\n\n      {/* === Delete modal === */}\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Are you sure want to delete this item?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleSubmit}>\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function NoTableData({ dataPresent, title }) {\n  if (dataPresent) return null;\n  return (\n    <Typography\n      variant=\"h6\"\n      sx={{\n        textAlign: \"center\",\n        margin: \"5px\",\n        padding: \"5px\",\n      }}\n    >\n      {title.charAt(0).toUpperCase() + title.slice(1)} not found!\n    </Typography>\n  );\n}\n","import { Box } from \"@mui/material\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import { Box, Paper, Tab, Tabs } from \"@mui/material\";\nimport React from \"react\";\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function TabList({\n  labels = [],\n  onChange = () => {},\n  value = 0,\n}) {\n  return (\n    <Box\n      component={Paper}\n      sx={{\n        marginBottom: \"10px\",\n      }}\n    >\n      <Tabs\n        value={value}\n        onChange={onChange}\n        aria-label=\"basic tabs example\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        allowScrollButtonsMobile\n      >\n        {labels.map((l, index) => {\n          return (\n            <Tab\n              sx={{ fontWeight: \"bold\", fontSize: \"12px\" }}\n              key={l}\n              label={l}\n              {...a11yProps(index)}\n            />\n          );\n        })}\n      </Tabs>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport {\n  Box,\n  Divider,\n  IconButton,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function FileListModal({\n  open = false,\n  onClose = () => {},\n  styles = {},\n  selectedFiles = [],\n  setSelectFiles = () => {},\n  customOnChage = false,\n  onRemove = () => {},\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleRemoveImage = (fileName) => {\n    setSelectFiles(selectedFiles.filter((f) => f.name !== fileName));\n  };\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: \"100%\",\n          maxWidth: 650,\n          ...styles,\n        },\n      }}\n    >\n      <DialogTitle>\n        {selectedFiles.length > 1 ? \"Selected files\" : \"Selected file\"}\n      </DialogTitle>\n      <Divider />\n      <DialogContent\n        sx={{\n          padding: \"10px\",\n        }}\n      >\n        {selectedFiles.map(\n          (f, i) => (\n            console.log(f.name, \"gg\"),\n            (\n              <Box\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography>{f.name}</Typography>\n                <IconButton\n                  size=\"small\"\n                  onClick={\n                    customOnChage\n                      ? () => onRemove(f.name)\n                      : () => handleRemoveImage(f.name)\n                  }\n                >\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            )\n          )\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} size=\"small\" variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport FileListModal from \"./FileListModal\";\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  columnGap: \"5px\",\n}));\n\nexport default function FileSelect({\n  name,\n  multi = true,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  selectedFiles = [],\n  disabled = false,\n  setSelectedFiles = () => {},\n  customOnChange = false,\n  onRemove = () => {},\n  accept = \"\",\n  ...rest\n}) {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleModalClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper mt={1}>\n        <Box\n          component=\"div\"\n          onClick={() => setOpen(true)}\n          sx={{\n            borderRadius: \"5px\",\n            padding: \"5px\",\n            backgroundColor: \"white\",\n            border: \"1px solid lightgray\",\n            height: \"30px\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\",\n          }}>\n          <Typography\n            component=\"div\"\n            onClick={() => setOpen(true)}\n            sx={{\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n              backgroundColor: \"white\",\n              color: \"black\",\n              height: \"30px\",\n              width: \"30px\",\n              textAlign: \"center\",\n            }}>\n            {selectedFiles.length}\n          </Typography>\n\n          <RemoveRedEyeRoundedIcon fontSize=\"small\" />\n        </Box>\n\n        <Button fullWidth component=\"label\" size=\"small\" variant=\"outlined\">\n          <input\n            type=\"file\"\n            multiple={multi}\n            accept={accept}\n            // style={{ visibility: \"hidden\" }}\n            hidden\n            onChange={\n              customOnChange\n                ? (e) => onChange(e)\n                : (e) => {\n                    const selectedFiles = e.target.files;\n\n                    if (selectedFiles.length > 0) {\n                      let fileList = [];\n                      for (let i = 0; i < selectedFiles.length; i++) {\n                        const file = selectedFiles[i];\n\n                        fileList.push(file);\n                      }\n                      setSelectedFiles([...fileList]);\n                    } else {\n                      console.log(\"No files selected\");\n                    }\n                  }\n            }\n          />\n          {label}\n        </Button>\n      </Wrapper>\n      <FileListModal\n        open={open}\n        selectedFiles={selectedFiles}\n        setSelectFiles={setSelectedFiles}\n        onClose={handleModalClose}\n        customOnChage={customOnChange}\n        onRemove={onRemove}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport dayjs from \"dayjs\";\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\n\nfunction FormDatePicker({\n  name,\n  label,\n  formik,\n  openTo = \"day\",\n  inputFormat = \"DD-MM-YYYY\",\n  views = [\"year\", \"month\", \"day\"],\n  disabled = false,\n  disableFutureDates = false,\n}) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePicker\n        disableFuture={disableFutureDates}\n        sx={{\n          \"& .MuiInputBase-input\": {\n            // Target the input element\n            height: \"8px\",\n          },\n          marginTop: \"16px\",\n          width: \"100%\",\n        }}\n        // disablePast={true}\n        name={name}\n        variant=\"outlined\"\n        size=\"small\"\n        label={label}\n        disabled={disabled}\n        slotProps={{ textField: { InputLabelProps: { fontSize: \"90px\" } } }}\n        openTo={openTo}\n        closeOnSelect\n        views={views}\n        inputFormat={inputFormat}\n        value={dayjs(formik.values[name]) || null}\n        onChange={(value) => formik.setFieldValue(name, dayjs(value))}\n        // renderInput={(params) => (\n        //   <TextField\n        //     InputLabelProps={{ sx: { fontSize: \"80px\" } }}\n        //     size=\"small\"\n        //     margin=\"normal\"\n        //     required\n        //     {...params}\n        //   />\n        // )}\n      />\n    </LocalizationProvider>\n  );\n}\n\nexport default FormDatePicker;\n"],"names":["SIDE_MENU_DATA","name","path","renderName","subMenus","icon","_jsx","DashboardRoundedIcon","color","fontSize","SettingsSuggest","Person","SubdirectoryArrowRightOutlinedIcon","Diversity2Icon","ManIcon","AccountBalance","CheckBox","AccessTime","Groups","AssignmentRoundedIcon","InstallMobileRounded","CampaignRounded","PhotoRoundedIcon","NotificationsActiveRoundedIcon","TextSnippet","SchoolRounded","LibraryBooksIcon","InventoryIcon","CardMembershipRounded","CurrencyRupee","GiteIcon","DirectionsBusIcon","CurrencyRupeeIcon","BarChart","WcIcon","FeedbackIcon","ChartBar","selectedSetting","useContext","SettingContext","classes","setClasses","useState","uniqueSections","setUniqueSections","ref","width","useResizeObserver","useEffect","async","data","get","PRIVATE_URLS","student","getDashboardStudentDetails","params","schoolId","_id","transformedData","result","map","classItem","transformedItem","className","Object","keys","sections","forEach","section","Set","add","error","console","log","getData","Box","sx","display","flex","children","ResponsiveContainer","height","Paper","_jsxs","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","sectionName","Bar","fill","Math","floor","random","toString","stackId","OuterCard","styled","Card","_ref","theme","marginBottom","padding","alignItems","justifyContent","breakpoints","down","flexDirection","InnerBox","_ref2","alignSelf","Data","_ref3","fontWeight","_ref4","textAlign","Count","_ref5","marginTop","Attendance","studentAttendence","setStudentAttendence","employeeAttendence","setEmployeeAttendence","_studentData$data","_employeeData$data","studentData","employeeData","Promise","all","studentAttendance","getAttendanceSummaryForToday","employeeAttendance","getEmployeeAttendanceSummaryForToday","getStudentAttendanceSummary","darkMode","window","localStorage","getItem","_Fragment","Grid","container","spacing","item","xs","sm","md","lg","Typography","Stack","direction","style","totalStudents","attendanceNotTaken","totalPresent","totalAbsent","totalEmployees","totalLate","DataContainer","StyledFab","Fab","background","QuickLinks","Link","to","textDecoration","size","FindInPage","CardMembership","Message","ScrollContainer","borderRadius","transform","animation","animationPlayState","from","DashboardScorlText","NoDataFound","DashboardNewsConent","marginLeft","marginRight","paddingBottom","position","BoldTrigger","cursor","borderLeft","paddingLeft","NoticeItem","_ref6","themeData","darkPalette","primary","main","Events","notice","setNotice","holidays","setHolidays","list","getNotice","holiday","getHolidays","mt","Calendar","tileClassName","_ref7","date","today","Date","toDateString","minHeight","Collapsible","open","concat","length","Divider","maxHeight","overflow","elevation","index","component","variant","title","FilterStudent","navigate","useNavigate","setSections","students","setStudents","entryFormik","useFormik","initialValues","class","onSubmit","values","enableReinitialize","search","d","label","value","setFieldValue","getSections","_data$result$","basicInfo","getStudents","getClasses","rowSpacing","columnSpacing","handleSubmit","FormSelect","required","formik","options","Button","type","Dashboard","PageHeader","AddForm","disabled","onAddClick","onClick","AddIcon","FormModal","formTitle","onClose","submitButtonTitle","styles","adding","useTheme","fullScreen","useMediaQuery","Dialog","PaperProps","maxWidth","DialogTitle","DialogContent","DialogActions","LoadingButton","loading","academicYearTableKeys","key","AcademicYear","setData","setOpen","dataToEdit","setDataToEdit","setLoading","academicYear","handleClose","note","payload","put","update","post","create","CustomTable","actions","bodyDataModal","bodyData","tableKeys","onEditClick","toggleStatus","onToggleSwitch","toggleActiveStatus","AddDepartmentHandel","FormInput","designationTableKeys","ManageDesignation","designation","orderSequence","onDeleteClick","del","delete","id","AddDesigationHandel","departmentTableKeys","ManageDepartment","department","overviewTableKeys","employeeTableKeys","inactiveTableKeys","Employee","setSelectValue","activeData","setActiveData","InactiveData","setInactiveData","overviewData","setOverviewData","allEmployee","setAllEmployee","searchFilter","setSearchFilter","setSearch","employee","filter","active","s","academicInfo","inactiveData","maleCount","emp","gender","femaleCount","totalCount","male","female","total","getDataDepartment","handleDelete","handeleClickEdit","handleSearch","e","target","trim","ele","toLowerCase","includes","TabList","onChange","handleTabChange","newValue","labels","TabPanel","gap","TextField","ml","placeholder","InputProps","endAdornment","InputAdornment","IconButton","edge","Search","p","Print","ListAlt","offerLetterTableKeys","isDate","LetterViewModal","content","onPrintClick","contentRef","useRef","m","CloseIcon","gutterBottom","dangerouslySetInnerHTML","__html","ReactToPrint","trigger","startIcon","PrintIcon","current","OfferLetter","componentRef","handlePrint","useReactToPrint","modalData","setModalData","containt","offerLetter","joiningDate","dayjs","format","resetForm","onViewClick","FormDatePicker","ReactQuill","relievingLetterDataTableKeys","RelievingLetter","relievingLetter","offBoardingDataTableKeys","Gender_Options","BloodGroup_Options","OffBoarding","formFields","setFormFields","file","userType","user","bloodGroup","dob","resignDate","relivingDate","contactNumber","status","feedback","field","splice","handleRemove","ClearIcon","handleAddRow","experienceTableKeys","ExperienceLetter","experienceLetter","onBlur","handleBlur","teacherActivityTableKeys","TeacherActivity","loadingFind","setLoadingFind","setAcademicYear","subjects","setSubjects","employees","setEmployees","currentUserStringified","currentUser","JSON","parse","teacherActivity","teacher","subject","fromDate","toDate","classId","getSubject","_data$result","role","match","RegExp","empOption","getEmployees","getAcademicYear","topic","rolePermissionTableKeys","ROLE_PERMISSIONS","module","subModule","permissions","toggleItemInArray","array","indexOf","push","removeFromArray","arr","str","StyledBox","zIndex","CRUD_OPERATIONS","RolePermission","setValue","React","roles","setRoles","roleToEdit","setRoleToEdit","roleKeys","setRoleKeys","allPermissionUpdate","setAllPermissionUpdate","getRoleKeys","allKeys","find","k","handleAddOrUpdate","r","formikUpdate","handleUpdateAll","permission","allPermissions","co","every","handleChange","event","openRoleAddUpdateModal","handleModalClose","TableContainer","Table","TableHead","TableRow","TableCell","palette","mode","align","Checkbox","checked","TableBody","roleModule","i","colSpan","backgroundColor","grey","o","_roleKeys$find","_roleKeys$find$permis","handleChangePermission","handleCancelClick","userRoleTableKeys","UserRole","ResetPassword","setEmployee","employeeId","password","account","changePasswordForUser","_r$name","getRoles","enquriesTableKeys","ViewModel","Close","MuiBUtton","StyledTableRow","StyledTableCell","border","tableCellClasses","head","body","CustomActionComponent","onUpdate","updateStatus","preadmissionEnqiry","Enquiries","_modalData$contents","_modalData$contents$s","_modalData$contents$s2","_modalData$contents$s3","_modalData$contents2","_modalData$contents2$","_modalData$contents2$2","_modalData$contents2$3","_modalData$contents3","_modalData$contents4","_modalData$contents4$","_modalData$contents4$2","_modalData$contents5","_modalData$contents5$","_modalData$contents5$2","_modalData$contents6","_modalData$contents6$","_modalData$contents6$2","_modalData$contents6$3","_modalData$contents7","_modalData$contents7$","_modalData$contents7$2","_modalData$contents8","_modalData$contents8$","_modalData$contents8$2","_modalData$contents9","_modalData$contents9$","_modalData$contents9$2","_modalData$contents10","_modalData$contents11","_modalData$contents12","_modalData$contents13","_modalData$contents14","_modalData$contents15","_modalData$contents16","_modalData$contents17","_modalData$contents18","_modalData$contents19","_modalData$contents20","_modalData$contents21","_modalData$contents22","_modalData$contents23","_modalData$contents24","_modalData$contents25","_modalData$contents26","_modalData$contents27","_modalData$contents28","_modalData$contents29","_modalData$contents30","_modalData$contents31","_modalData$contents32","_modalData$contents33","_modalData$contents34","_modalData$contents35","_modalData$contents36","_modalData$contents37","_modalData$contents38","_modalData$contents39","_modalData$contents40","_modalData$contents41","_modalData$contents42","_modalData$contents43","_modalData$contents44","_modalData$contents45","_modalData$contents46","_modalData$contents47","_modalData$contents48","_modalData$contents49","_modalData$contents50","_modalData$contents51","_modalData$contents52","_modalData$contents53","_modalData$contents54","_modalData$contents55","_modalData$contents56","_modalData$contents57","_modalData$contents58","_modalData$contents59","_modalData$contents60","_modalData$contents61","_modalData$contents62","_modalData$contents63","_modalData$contents64","_modalData$contents65","_modalData$contents66","_modalData$contents67","_modalData$contents68","_modalData$contents69","_modalData$contents70","_modalData$contents71","_modalData$contents72","_modalData$contents73","_modalData$contents74","_modalData$contents75","_modalData$contents76","_modalData$contents77","_modalData$contents78","_modalData$contents79","_modalData$contents80","_modalData$contents81","_modalData$contents82","_modalData$contents83","_modalData$contents84","_modalData$contents85","_modalData$contents86","_modalData$contents87","_modalData$contents88","_modalData$contents89","_modalData$contents90","_modalData$contents91","_modalData$contents92","_modalData$contents93","_modalData$contents94","_modalData$contents95","_modalData$contents96","_modalData$contents97","_modalData$contents98","_modalData$contents99","_modalData$contents100","_modalData$contents101","_modalData$contents102","_modalData$contents103","_modalData$contents104","_modalData$contents105","_modalData$contents106","_modalData$contents107","_modalData$contents108","_modalData$contents109","_modalData$contents110","_modalData$contents111","_modalData$contents112","_modalData$contents113","_modalData$contents114","_modalData$contents115","_modalData$contents116","_modalData$contents117","_modalData$contents118","_modalData$contents119","_modalData$contents120","_modalData$contents121","_modalData$contents122","_modalData$contents123","_modalData$contents124","_modalData$contents125","_modalData$contents126","_modalData$contents127","_modalData$contents128","_modalData$contents129","_modalData$contents130","_modalData$contents131","_modalData$contents132","_modalData$contents133","_modalData$contents134","_modalData$contents135","_modalData$contents136","_modalData$contents137","_modalData$contents138","_modalData$contents139","_modalData$contents140","_modalData$contents141","_modalData$contents142","_modalData$contents143","_modalData$contents144","_modalData$contents145","_modalData$contents146","_modalData$contents147","_modalData$contents148","_modalData$contents149","_modalData$contents150","_modalData$contents151","_modalData$contents152","_modalData$contents153","_modalData$contents154","_modalData$contents155","_modalData$contents156","_modalData$contents157","_modalData$contents158","_modalData$contents159","_modalData$contents160","_modalData$contents161","_modalData$contents162","_modalData$contents163","_modalData$contents164","_modalData$contents165","_modalData$contents166","_modalData$contents167","_modalData$contents168","_modalData$contents169","_modalData$contents170","_modalData$contents171","_modalData$contents172","_modalData$contents173","_modalData$contents174","_modalData$contents175","_modalData$contents176","_modalData$contents177","_modalData$contents178","_modalData$contents179","_modalData$contents180","_modalData$contents181","_modalData$contents182","_modalData$contents183","_modalData$contents184","_modalData$contents185","_modalData$contents186","_modalData$contents187","_modalData$contents188","_modalData$contents189","_modalData$contents190","_modalData$contents191","_modalData$contents192","_modalData$contents193","_modalData$contents194","_modalData$contents195","_modalData$contents196","_modalData$contents197","_modalData$contents198","_modalData$contents199","activeButton","setActiveButton","filteredData","setFilteredData","contents","action","c","getEnquiries","tableData","_d$studentDetails","_d$studentDetails$bas","_d$studentDetails2","_d$studentDetails2$ac","_d$studentDetails2$ac2","studentName","studentDetails","basicDetails","submittedOn","createdAt","academicDetails","ButtonGroup","v","textTransform","CustomAction","dividers","mb","toUpperCase","caste","casteIncomeCertificateNumber","motherTongue","birthPlace","aadharNumber","contactDetails","guardianName","guardianContactNumber","alternateNumber","relationWithGuardian","nationalId","presentAddress","permanentAddress","previousSchoolDetails","schoolName","tcNumber","fatherDetails","education","profession","motherDetails","otherDetails","healthCondition","email","hostelRequired","transportRequired","examsTableKeys","inputProps","Wrapper","InputLabels","InputLabel","RadioButtons","Radio","QuizQuestion","quiz","questionIndex","quizData","setQuizData","question","fullWidth","maxRows","multiline","handleQuestionChange","q","prevQuizData","_","handleRemoveQuestion","DeleteIcon","rowGap","correctOption","handleSetCorrectOption","handleOptionChange","optionIndex","newOptions","AddOrUpdateExamModal","dataToUpdate","academicYears","setAcademicYears","addForm","setAddForm","markForm","setMarkForm","submiload","setSubmitload","additionalInstructions","setAdditionalInstructions","negativeMarking","setNegativeMarking","_academicYearData$dat","_classData$data","academicYearData","classData","handleOnChangeForm","hanleMarkChange","prev","preventDefault","toast","some","option","playload","schoolClass","examName","passingPercentage","passingMark","negativeMarkingPerQuestion","marksPerQuestion","mark","point","preadmissionExam","FormControl","Select","labelId","varient","row","MenuItem","handleAddQuizs","handleAddInstruction","instruction","handleAdditionalInstructionChange","updatedInstructions","handleDeleteInstruction","RadioGroup","FormControlLabel","control","InputLabelProps","Exams","gettingList","setGettingList","openQuestionModel","setOpenQuestionModel","getExamList","handleOpenQuestionModel","handleCloseQuestionModel","AddOrUpdateExamSchedule","exams","setExams","examId","startTime","endTime","roomNumber","dateOfExam","preadmissionExamSchedule","bgcolor","boxShadow","DeleteModal","props","Modal","deleteModal","setDeleteModal","src","image","my","ExamSchedules","page","setPage","rowsPerPage","setRowsPerPage","exam","AddExamSchedules","dark","light","_data$exam","academicYearFrom","academicYearTo","examLinkEnabled","Switch","enableExamLink","handleUpdateLink","defaultChecked","handleCopyLink","copylink","examLink","copy","success","ContentCopyIcon","EditIcon","Delete","sendVenueDetailsToStudents","handleSubmitNotify","notified","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","resultTableKeys","Result","academicClassTableKeys","Active","IS_PUBLIC","Class","_dataToEdit$classTeac","classTeachers","isPublic","numericName","showSearch","multiple","academicSectionTableKeys","CustomSelect","isSearch","blurred","setBlurred","inputRef","undefined","isDarkMode","ThemeModeContext","searchText","setSearchText","displayedOptions","useMemo","containsText","text","labelColor","shrink","notched","onAnimationEnd","_inputRef$current","focus","MenuProps","autoFocus","ListSubheader","startAdornment","SearchIcon","onKeyDown","stopPropagation","memo","Section","_dataToEdit$class","_dataToEdit$sectionTe","selectedClass","setSelectedClass","_data$result2","sectionTeacher","academicSubjectTableKeys","Subject_Type","Subject_Group","Subject","_dataToEdit$subjectTe","code","subjectType","subjectGroup","subjectTeachers","t","studentAttendanceReportTableKeys","StudentAttendanceTable","now","setBodyData","isDataReady","updating","setUpdating","updateAttendance","empId","attendanceStatus","a","_data$student","_data$student$basicIn","_data$student2","_data$student2$academ","rollNumber","_data$student3","_data$student4","NoTableData","dataPresent","attendanceData","downloadFile","filename","arguments","blob","Blob","saveAs","hasAllValues","obj","exceptions","showToast","allValuesPresent","StudentAttendance","reportData","setReportData","overViewData","setOverViewData","academicYearList","setAcademicYearList","fetchingAttendanceData","setFetchingAttendanceData","setAttendanceData","downloadingAbsent","setDownloadingAbsent","fetchingreport","setFetchingReport","attendanceFormik","sectionId","getStudentAttendanceOverview","getAttendanceOverview","overviewFormik","reportFormik","month","getAttendanceReport","academicYearId","year","_data$result$4","_data$result$5","_data$result$2","_data$result$3","disableFutureDates","attendanceStudent","sectionInfo","donwloadAbsentReport","responseType","downloadAbsentStudentsReport","percentage","openTo","inputFormat","views","employeeAttendanceReportTableKeys","EmployeeAttendanceTable","_data$employee","_data$employee$basicI","_data$employee2","_data$employee2$basic","_data$employee3","_data$employee4","_data$employee5","EmployeeAttendance","fetchingAttendanceReport","setFetchingAttendanceReport","roleId","ClassRoutine","roomNo","AddClassRoutine","TitleContainer","ValueContainer","StudentCount","showTitle","columnGap","TableHeader","borderRight","TableDivider","borderBottomColor","DataContiner","Overview","_overviewDetails$data","selectAcademicYear","setSelectAcademicYear","overviewDetails","setOverviewDetails","setTotalStudents","totalMaleStudents","setTotalMaleStudents","totalFemaleStudents","setTotalFemaleStudents","overView","totalStudentsCount","totalMaleStudentsCount","totalFemaleStudentsCount","academicYearChanged","downloadAllStudentsExcel","overview","maleStudents","femaleStudents","admitStudentTableKeys","Status_Options","AdmitStudent","navigation","setClassData","sectionData","setSectionData","openModal","setOpenModal","openModalAdmit","setOpenModalAdmit","loader","setLoader","setFile","fileAdmit","setFileAdmit","handleChangeFiles","files","fileList","getClass","sectionAllOption","getSection","downloadStudentsExcel","DownloadForOfflineSharpIcon","downloadStudentsPdf","PrintSharp","handleNavigate","formData","FormData","append","f","bulkStudentAdmit","headers","endIcon","DownloadIcon","getBulkStudentAdmitSheet","FileSelect","customOnChange","selectedFiles","multi","handleCloseAdmitModal","bulkUpdate","bulkUpdateSheet","handleCloseUpdateModal","isBottom","setIsBottom","Reshuffle","studentReshuffle","setStudentReshuffle","checkBox","setCheckBox","reshuffle","setReshuffle","newSection","ids","fatherInfo","handleReshffleCheckBox","StickyBar","currentSectionId","studentIds","resuffle","Promotion","activeAcademicYear","setActiveAcademicYear","promoting","setPromoting","promoteAcademicYearId","currentClassId","promoteClassId","promoteSectionId","slice","handlePromotionCheckBox","promote","MuiTypography","BulkAdmission","visibility","studentCrendentialsTableKeys","Credential","username","fatherName","STATUS_OPTIONS","QuickAdmit","setSettings","setSelectedSetting","admissionNumber","admissionDate","fatherContactNumber","motherName","motherContactNumber","motherInfo","motherPhone","fatherPhone","stringify","admissionNo","rollNumberType","studentActivityTableKeys","StudentActivity","setDate","setFormData","studentActivity","Formik","description","assignmentTableKeys","AddEditAssignment","_entryFormik$values","_entryFormik$values2","onUpdateFormik","setSubject","selectFile","setSelectFile","assignmentType","deadline","attachmentType","isPublish","link","assignment","headerd","Assignment","Section_Options","responseCode","subjectName","noticeTableKeys","Is_Public","Notice","rolesData","setRolesData","rolesAllOption","noticeFor","AddNotice","newsTableKeys","News","selectImg","setSelectImg","news","shortNews","AddNews","onRemove","fileName","handleRemoveFile","img","alt","holidayTableKeys","Holiday","setChecked","AddHoliday","awardAchievementTableKeys","AwardsAndAchievements","awards","location","hostedBy","headlines","AddAwardsAchievement","horizontalSplashNewsTableKeys","AddHorizontalSplash","splashNews","horizontalvalues","newitem","toggle","AddHorizontalSplashNews","popupSplashNewsTableKeys","Content_Type_Options","AddPopup","selectDocument","setSelectdocument","popupvalues","contentType","document","doc","accept","SplashNews","galleryListTableKeys","Gallery","_dataToEdit$images","gallery","overflowX","images","backgroundSize","objectFit","removeFile","handleRemoveImg","notificationsTableKeys","Notifications","eventTableKeys","Event","eventFor","video","shortEvent","getRole","examGradeTableKeys","Grade_Options","ExamGrade","setloading","examGrade","grade","group","gradePoint","markFrom","markTo","AddExamGrade","examTermTableKeys","Is_Assignment_Allowed","Exam_Types","ExamTerm","examTerm","examType","marksAssignmentAllowed","handelExamTerm","examListTableKeys","scheduleListTableKeys","ShowIn_HallTick","ShowIn_Exam_Results","Pratical_Marks","ExamSchedule","examtitle","setExamTitle","examSchedule","examDate","marksFreezDate","maximumMarks","pratical","minimumMarks","praticalMarks","showInHallTick","showInExamResults","obtainedMarks","getExamTerm","handelExamSchedule","ExamHallTicket","setSection","DivisionWiseReport","getExams","SubjectWiseReport","consolidateMarksTableKeys","ConsolidatedMarkSheet","consolidated","setConsolidated","marksCardTableKeys","Markscard","examResultTableKeys","ExamResultViewModel","_tableData$subjects","_tableData$subjects2","_d$subject","totalMarks","toFixed","ExamResult","uploadLoader","setUploadLoader","downloadLoader","setDownloadLoader","allDownloadLoading","setAllDownloadLoading","openBulk","setOpenBulk","studentMarks","getExamResult","_d$student$basicInfo","_d$student$academicIn","_d$student","roleNumber","photo","CustomInput","rest","borderWidth","shape","modalStyle","ManageMark","setStudentMarks","updatingMarks","setUpdatingMarks","fetchingMarks","setFetchingMarks","fileChoosen","setFileChoosen","listStudentMarks","subjectId","previousValues","_s$studentMarks","_s$studentMarks2","_s$studentMarks3","_s$studentMarks3$grad","studentId","obtainedWrittenMarks","comment","handleCustomInputChange","updatedMarks","updateStudentsMarks","_m$grade","bulkUpdateStudentMarks","getbulkUpdateStudentMarks","examTermId","examAttendanceTableKeys","ExamAttendance","Heading","DownloadBox","Courses","courseId","setCourseId","materialURL","setMaterialURL","material","setMaterial","uploadLoad","setUploadLoad","getCourse","course","classIds","join","courseHours","selectedCourse","selectedCourseTitle","state","selectedCourseIds","handleNavigateCourse","handleClickOpen","materialURLs","URL","decodeURIComponent","pathname","split","pop","FileUploadIcon","courseData","DialogContentText","selectedFile","px","py","handleDownload","Download","deleteMaterial","uploadCourseMaterial","createContext","MuiTableCell","CourseContentTable","_chapter$contents","handelOpenDelModel","chapter","ContentContext","CourseContext","openDeleteModel","setOpenDeleteModel","dataToDelete","setDataToDelete","_item$title","pr","YouTubeIcon","QuizIcon","ViewAgendaIcon","InsertDriveFileIcon","QuestionAnswerIcon","substring","handleOpenModel","ArrowDownward","ArrowUpward","chapterId","contentId","courseContent","deleteContent","VideoDialog","setOpenVideo","contentHours","updateContent","addContentToChapter","maxLength","createObjectURL","controls","Boxes","QuizDialog","setOpenQuiz","FlashcardDialog","setOpenFlashcard","cardType","flashCard","MaterialsDialog","setOpenMaterial","AddChapterDialog","setOpenChaper","setChapterData","chapterData","updateChapterDetails","Contents","ShowCourseContent","handleEditChapter","openVideo","openQuiz","openFlashcard","openMaterial","openCodepractice","setOpenCodepractice","deleteChapter","OuterGrid","CourseContent","_courseDetails$chapte","courses","setCourses","openChapter","courseDetails","setCourseDetails","chapters","getDetailsTeachers","Provider","TableData","TableBodydata","Label","FilterBox","getDateWithTime","dateTimeComponents","dateComponents","yearExtracted","parseInt","monthExtracted","dayExtracted","timeComponents","hoursExtracted","minutesExtracted","getStatus","startDate","expiryDate","expiryTime","currentDate","startDataTimestring","moment","expiryDateTimeString","currentDateTimeString","meetingDate","meetingExpiryDate","currentDateAndTime","User_Type","Participant_Type","Meeting_Type","Live","filterMeeting","setFilterMeeting","selectClasses","setSelectClasses","selectedPartcipatType","setSelectedParticipatType","meeting","createdBy","meetingType","participantType","userTypes","participants","employeeParticipants","studentParticipants","_s$academicInfo","_s$academicInfo$class","_s$academicInfo2","_s$academicInfo2$sect","$in","getEmployee","minWidth","FilterListIcon","listData","getMeetingId","roomId","handleJoinClick","meetingData","stupar","handleUpdateModelOpen","AddMeeting","StorageText","StorageContainer","Storage","storageDetails","setStorageDetails","totalStorage","usedStorage","storage","details","libraryBookTableKeys","BookViewModal","author","language","quantity","price","almiraNo","Books","book","cellNumber","isbnNo","edison","AddBooks","periodicalTableKeys","Periodical","periodical","issueNumber","volumeNumber","entryDate","handleGetDownloadSheet","AddFormHandel","studentMemberTableKeys","studentNonMemberTableKeys","StudentMemberAction","actionType","updateLibraryMember","removeLibraryMember","actionTitle","actionDescription","Add","RemoveIcon","StudentLibraryMember","nonMember","setNonMember","_d$otherInfo","otherInfo","libraryMember","rollNo","filteredNonMemberData","_d$otherInfo2","studentLibraryDueTableKeys","studentLibraryHistoryTableKeys","studentLibraryIssueTableKeys","BookDetailed","Issued_To_Type_Option","bookIssue","submit","StudentIssueReturn","setBook","dueList","setDueList","history","setHistory","filteredIssueData","submissionDate","bookName","bookId","issuedName","issuedTo","filtereDueData","dueDate","getBooks","issueDate","issuedToType","reduce","leftInStock","downloadPdf","downloadExcel","employeeLibraryMemberTableKeys","employeeLibraryNonMemberTableKeys","EmployeeMemberAction","EmployeeLibraryMember","empName","employeeLibraryHistoryTableKeys","employeeLibraryDueTableKeys","employeeLibraryIssueTableKeys","EmployeeIssueReturn","leaveTypeTableKeys","ListContainer","flexWrap","overflowY","ListItem","paddingRight","ListItemContainer","LeaveType","selectDepartments","setSelectDepartments","multipleDepartments","setMultipleDepartments","setState","leaveTypeFor","departments","autoEarned","isSpecial","canResetCarryForward","carryForwardCount","autoEarnCount","leaveType","departmentName","getDepartments","AddLeaveType","_selectDepartments$fi","newList","handleRemoveDepartments","CloseRounded","FormLabel","studentLeaveTableKeys","StudentsLeave","employeeLeaveManageTableKeys","employeeLeaveTableKeys","LeaveData","Leave_Options","loadingApprove","setLoadingApprove","leaveStatus","leaveApplication","approveLeave","rejectLeave","EmployeeLeave","totalDays","setotalDays","leaveTypes","setLeaveTypes","setLeaveApplication","leaveEmployeeApplication","setLeaveEmployeeApplications","range","setRange","eployeeLeaveCredits","setEployeeLeaveCredits","getLeaveApplication","leaveTypeName","getLeaveEmployeeApplications","listEmployeeApplications","getLeaveType","employeeLeaveCredits","geteEployeeLeaveCredits","endDate","number","start","end","newItem","toLocaleDateString","getDate","totalTaken","AddLeave","handleNumberOfDay","indexOfV","updatedList","Type_Options","LeaveReport","loadingPdf","setLoadingPdf","loadingExcel","setLoadingExcel","handleGetPrintPdf","handleGetDownloadExcel","_data$result$7","_data$result$8","_data$result$6","_data$result$9","_data$result$10","itemTableKeys","Item","setDepartments","PdfLoading","setPdfLoading","excelLoading","setExcelLoading","_data$department","brand","itemId","response","uri","url","createElement","href","setAttribute","appendChild","click","removeChild","revokeObjectURL","alert","VendorTableKeys","Vendor","_dataToEdit$basicInfo","_dataToEdit$basicInfo2","_dataToEdit$basicInfo3","_dataToEdit$basicInfo4","_dataToEdit$basicInfo5","_dataToEdit$basicInfo6","_dataToEdit$basicInfo7","_dataToEdit$basicInfo8","_dataToEdit$addressIn","_dataToEdit$addressIn2","_dataToEdit$addressIn3","_dataToEdit$addressIn4","_dataToEdit$bankInfo","_dataToEdit$bankInfo2","_dataToEdit$bankInfo3","_dataToEdit$bankInfo4","logo","setLogo","vendor","_data$addedBy","_data$addedBy$basicIn","addedBy","category","phone","gstNumber","dealerName","dealerPhoneNumber","website","address","addressInfo","city","zipCode","bankName","bankInfo","accountNumber","ifscCode","branchName","handleChangePhoto","TransactionTableKeys","paymenyModes","types","purposes","fromTypes","toTypes","InOutTransaction","settings","items","setItems","selectInvoice","setSelectInvoice","vendors","setVendors","selectSchool","setSelectSchool","pricePerItem","trasactionMode","purpose","fromType","toType","school","getItems","_d$addedBy","_d$addedBy$basicInfo","getVendors","_emp$basicInfo","stockListTableKeys","hover","common","black","white","OverviewTable","StockList","mr","issueDetailTableKeys","Issue","issueStatus","employeeName","sellDetailTableKeys","Sell","SellStatus","Content","fontFamily","Container","MuiBox","DateContaner","TextOuterContent","textIndent","StudyCertificate","selectedData","setSelectedData","openBulkIssue","setOpenBulkIssue","loadingDownload","setLoadingDownload","setFromDate","setToDate","handleSubmitCertificate","_values$student","_values$student$fathe","_values$student2","_values$student2$acad","_values$student3","_values$student3$acad","_values$student4","_values$student5","_values$student6","_values$student7","_values$student8","_values$student9","_values$student10","_values$student10$sch","_values$student11","_values$student11$sch","_values$student12","_values$student12$sch","_values$student13","_values$student14","academicId","currentClass","grNo","studentPhoto","schoolAddress","schoolLogo","contactInfo","handleBulkIssueOpen","certificate","getStudyCertificate","Header","Signature","Title","TransferCertificate","receiptBookTableKeys","feeMapTableKeys","LABEL","route","pickType","stop","room","roomType","hostel","addedAfter","addedBefore","installmentsType","AddUpdateFeeMap","selectedReceipt","routes","setRoutes","stops","setStops","hostels","setHostels","roomTypes","setRoomTypes","rooms","setRooms","dependencies","setDependencies","installments","setInstallments","setAddedAfter","setAddedBefore","academicData","getAcademicYears","_r$vehicle","vehicle","routeStart","routeEnd","_route$stops$","_route$stops$2","getRoutes","h","getHostels","getRoomTypes","getRoom","handleAddForm","ceil","handleAddInstallments","fee","installmentsData","monthlyAmount","missing","Array","amount","quarterlyAmount","halfYearlyAmount","othersAmount","others","handleInstallmentChange","val","changeIndex","installment","diffInMonths","updatedDueDate","elementToRemove","removeElementFromArray","receiptTitleId","collectedFrom","routeId","roomTypeId","hostelId","stopId","feeMap","Chip","onDelete","chipToDelete","chips","chip","_s$route","picktype","_r$hostel","_r$type","_r$hostel2","_r$type2","_room$hostel","_room$type","totalBeds","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","enabled","form","showInfo","dep","_data$class","_data$hostel","_data$room","_data$room2","_data$room3","_data$room3$type","CustomActionFee","onNavigateFeeMap","receiptTitle","ReceiptBook","feeMaps","setFeeMaps","receipts","setReceipts","openFeeMap","setOpenFeeMap","selectedReceiptId","setSelectedReceiptId","selectReceipt","setSelectReceipt","detail","getFeeMaps","getReceipts","receipt","handleOpenFeeMap","handleFeeMapEdit","feeMapCategoryTableKeys","FeeMapCategory","setReceips","feeMapId","feeMapCategory","totalSeats","vehicleNumber","transportRouteTitle","CollectFees","receiptTitles","setReceiptTitles","selectStudent","setSelectStudent","feeDetails","setFeeDetails","paymentData","setPaymentData","totalAmountToBePaid","setTotalAmountToBePaid","selectedPastDueIds","setSelectedPastDueIds","downloadingReceipt","setDownloadingReceipt","itemDetails","setItemDetails","fetchingStudents","setFetchingStudents","receiptName","installmentId","_feeMaps$filter$","feeReceipt","getFeeDetails","feeMapCategories","Number","getAllReceiptTitles","getAllFeeMaps","_feeMap$class","getAllStudents","balanceFeeReportTableKeys","BalanceFeeReport","feeOverviewPaymentTableKeys","feeOverviewReceiptTableKeys","FeeOverview","collected","reconciliationTableKeys","Reconciliation","manageHostelTableKeys","HostelViewDialog","hostelType","ManageHostel","_dataToEdit$warden","getWarden","warden","manageHostelRoomTableKeys","ManageRoomType","specification","manageHostelRoomBedTableKeys","RoomAndBedViewDialog","_tableData$beds","beds","allocated","ManageRoomAndBed","_dataToEdit$type","_dataToEdit$hostel","setRoomType","updatingBed","setUpdatingBed","deletingBed","setDeletingBed","getRoomList","_h$hostel","_h$type","hostelName","getRoomTypeList","getHostelList","bed","b","onAddBedsHandle","initialBedsData","newBedData","removeBed","onCloseModal","hostelMemberTableKeys","hostelNNonMemberTableKeys","CustomActionAdd","_data$basicInfo","_room$find","setHostel","setRoom","getHostel","updateHostelMember","String","HostelMember","hostelMember","setHostelMember","nonHostelMember","setNonHostelMember","getDataMemberList","filteredDataMember","_s$otherInfo","admission","filteredDataNonMember","_s$otherInfo2","_s$otherInfo3","_s$otherInfo4","removeHostelMember","vehicleTableKeys","VehicleViewDialog","model","driverName","licenseNumber","driverContactNumber","Vehicle","_dataToEdit$driver","_v$driver","_v$driver$basicInfo","driver","trackingId","insuranceName","insuranceId","AddVehicle","manageRouteTableKeys","RouteAndTripViewDialog","_tableData$vehicle","_tableData$stops","stopKM","pickTime","pickEndTime","dropTime","dropEndTime","FormBox","ManageRouteAndTrips","vehicles","setVehicles","updatingStop","setUpdatingStop","_v$stops","_v$vehicle","stopName","vehicleForRoute","pickStart","pickEnd","dropStart","dropEnd","getVehicles","AddRouteTrips","removeStop","stopData","updateStop","addStop","initialStopsData","transportAddMemberTableKeys","transportMemberTableKeys","Pick_Type","_route$find","setRoute","getRoute","updateTransportMember","TransportMember","transportMember","setTransportMember","transportMemberList","setTransportMemberList","_s$transportInfo","_s$transportInfo2","_s$transportInfo3","transportInfo","_s$transportInfo4","_s$transportInfo5","_s$transportInfo6","formik1","formik2","removeTransportMember","routesTableKeys","Routes","sumOfSeat","setSumOfSeat","totalSeat","sum","_r$vehicle2","vehicleLogTableKeys","Trip_Completed","VehicleLog","_dataToEdit$readingAt","_dataToEdit$readingAt2","_dataToEdit$spareUse","_dataToEdit$spareUse2","_dataToEdit$readingAt5","_dataToEdit$readingAt6","departure","setDeparture","arrival","setArrival","setVehicle","getVehicle","departureTime","readingAtDeparture","reading","arrivalTime","readingAtArrival","distance","spareUse","reason","totalDistanceTravelled","tripCompleted","formDataDeparture","formDataArrival","vehicleLog","readingAtDepartureReading","handleDownloadDeparture","_dataToEdit$readingAt3","downloadUrl","_dataToEdit$readingAt4","vehicleFirmTableKeys","Firm","firm","GSTNumber","vehicleFuelTableKeys","Fuel","setFirm","maintenanceFuel","firmName","getFirm","billNo","fuelQuantity","rate","kiloMeter","vehicleRepairTableKeys","Repair","maintenanceRepair","particulars","vehicleTireTableKeys","VehicleTire","maintenanceTyre","kmReading","kmRun","tyre","tyreNo","vehicleGreecingTableKeys","Greecing","maintenanceGreecing","VehicleMaintenance","salaryGradeTableKeys","SalaryGrade","salaryGrade","breakups","deduction","handleInputChange","addItem","initialData","removeItem","AddSalaryGrade","paymentHistoryTableKeys","MakePayment","paymentHistory","setPaymentHistory","processingPayment","setProcessingPayment","downloadingDeductions","setDownloadingDeductions","deductions","setDeductions","deductionList","sg","getDeductions","selectedMonth","getPaymentHistory","downloadDeductionPdf","onDownloadClick","libraryReportTableKeys","graphData","colors","GroupBYData_Options","HeadingContainer","LibraryReport","academicYearGraph","setAcademicYearGraph","groupByData","report","groupedLibraryData","downloadGroupedLibraryData","AssessmentIcon","PieChart","wrapperStyle","formatter","Pie","isAnimationActive","outerRadius","entry","Cell","StudentYearlyAttendance","getStudentAttendanceReport","numbers","getAttendanceForDay","attendance","yearMonth","day","padStart","num","totalWorkingDays","totalPresentDays","totalAbsentDays","EmployeeYearlyAttendance","getEmployeeAttendanceReport","studentActivityReportTableKeys","StudentActivityReport","getStudentActivityReport","getStudentActivityReportPdf","selectedMonthYear","setSelectedMonthYear","getAllStudentsAttendanceReportForParticularMonth","getMonth","getFullYear","getAllEmployeesAttendanceReportForParticularMonth","visitorInfoTableKeys","VisitorInfoViewModel","_tableData$school","_tableData$toMeetUser","_tableData$reasonToMe","_tableData$reasonToMe2","comingForm","toMeetUserType","toMeetUserName","reasonToMeet","charAt","checkIn","checkOut","Reason_To_Meet","VisitorInfo","_dataToEdit$toMeetUse","_dataToEdit$section","visitorInfo","toMeetUser","toLocaleString","roleName","_roles$find","_roles$find2","studentCheckOutTableKeys","Relation_With_Student","StudentCheckout","_students$find","setLoadingExce","studentCheckout","relationship","visitorName","visitorContactNumber","donwloadExcel","AddStudentCheckoutHandel","ticketTableKeys","HelpDesk","reportImg","setReportImg","guardianFeedbackTableKeys","guardianFeedback","disableElevation","GuardianFeedback","selectedStatus","setSelectedStatus","getFeebacks","lightPalette","wordBreak","studentBulkPhotoTableKeys","StudentBulkPhoto","classCombineData","genderCombineData","libraryCombineData","vehcileCombineData","hostelCombineData","StudentReport","classBar","setClassBar","genderBar","setGenderBar","libraryBar","setLibraryBar","vehicleBar","setVehicleBar","hostelBar","setHostelBar","groupData","setGroupdata","groupDataGraph","setGroupdataGraph","classCombinedData","genderCombinedData","libraryCombinedData","vehicleCombinedData","hostelCombinedData","loadingGraph","setLoadingGraph","getStudentReport","groupBy","layout","borderColor","borderBottom","secondary","backgroundPosition","BasicData","View_Web","Library_Member","Salary_Type","AddEmployee","_dataToEdit$academicI","useParams","designationData","setDesgnationData","departmentData","setDepartmentData","selectedPhoto","setSelectedPhoto","resume","setResume","setSalaryGrade","getEmpById","getEmployeeDetails","getDesignationData","getDepartmentData","getSalaryGrade","responsibility","secMobileNo","religion","spouseName","aadharNo","fatherOccupation","spouseOccupation","qualification","workExperience","salaryType","public","showDetailsForWeb","showTextField","avatar","manageInstituteTableKeys","ManageInstitute","AddOrUpdateFiles","updatingFiles","setUpdatingFiles","setSelectedFiles","handleOpenDialog","addFiles","RollNumber_Options","Attendence_Type","Admission_Options","AddInstitute","_dataToEdit$bannerIma","initialValue","currencyToSymbolMap","bannerImages","setBannerImages","getSchoolDetails","previewCreateUrl","setPreviewCreateUrl","currencies","currencyCodes","currency","regDate","fax","websiteFooter","currencySymbol","sessionStartMonth","sessionEndMonth","studentAttendenceType","latitude","longitude","defaultTimeZone","googleAnalyticsId","teacherActivityFeedbackEnabled","facebookUrl","twitterUrl","linkedinUrl","gplusUrl","youtubeUrl","instagramUrl","pinterestUrl","selectedCurrency","TimezoneSelect","baseStyle","menu","provided","FormTable","handleLinkClick","Avatar","FileDownloadIcon","mx","Gender","Blood_Group","ProfileUpdate","_employee$basicInfo","_employee$basicInfo2","_employee$basicInfo2$","handleCreateOrUpdate","designations","setDesignations","getDesignation","res","fileUpload","handleEmpPhoto","Profile","googlePlusUrl","UpdateEmployee","useLocation","empData","academicInfoworkExperience","academicInfosalaryGrade","imageUrl","Relation_With_Guardian","RTE_Options","AddStudent","_dataToEdit$academicI2","_dataToEdit$academicI3","_dataToEdit$academicI4","_dataToEdit$academicI5","_dataToEdit$academicI6","_dataToEdit$contactIn","_dataToEdit$contactIn2","_dataToEdit$contactIn3","_dataToEdit$contactIn4","_dataToEdit$contactIn5","_dataToEdit$contactIn6","_dataToEdit$contactIn7","_dataToEdit$prevSchIn","_dataToEdit$prevSchIn2","_dataToEdit$prevSchIn3","_dataToEdit$otherInfo","_dataToEdit$otherInfo2","_dataToEdit$otherInfo3","_dataToEdit$otherInfo4","_dataToEdit$otherInfo5","_dataToEdit$otherInfo6","_dataToEdit$otherInfo7","_dataToEdit$prevSchIn4","_dataToEdit$fatherInf2","_dataToEdit$motherInf2","selectedStudentPhoto","setSelectedStuentPhoto","selectedMotherPhoto","setSelectedMotherPhoto","selectedFatherPhoto","setSelectedFatherPhoto","transferCertificate","setTransperCertificate","getStudentDetails","cicn","rte","satNo","guardianContactNumberSecondary","guardianRelation","nationId","prevSchName","prevSchInfo","tcNo","prevClass","busStop","extraInfo","fatherEdu","fatherProfession","fatherDesignation","motherEdu","motherProfession","motherDesignation","handleDownloadTransferCertificate","handleDownloadFatherPhoto","_dataToEdit$fatherInf","handleDownloadMotherPhoto","_dataToEdit$motherInf","handleDownloadStudentPhoto","AddCourse","inputlist","setInputList","benefits","inputlistBenifits","setInputListBenifits","isTrending","KeyboardDoubleArrowRightIcon","l","handleRemoveClick","handleAddClick","handleInputChangeBenifits","handleRemoveClickBenifits","handleAddClickBenifites","FormGroup","UpdateCourse","_course$courseDetails","_course$courseDetails2","_course$class","thumbnailImage","LoadingScreen","message","VideoContainer","TYPE","CREDENTIAL","OneONoneCall","appId","serverSecret","GroupCall","LiveStreaming","Room","roomID","isReady","setIsReady","setError","zpost","setZpost","getRoomDetails","destroy","handleBackPress","replace","_CREDENTIAL$meetingTy","_CREDENTIAL$meetingTy2","appID","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","zp","joinRoom","element","autoHideFooter","enableUserSearch","showMyMicrophoneToggleButton","showRoomTimer","showRemoveUserButton","scenario","config","Host","ConsoleError","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","ITEM_HEIGHT","BorderLinearProgress","LinearProgress","linearProgressClasses","colorPrimary","bar","StyledInput","InputBase","transition","transitions","Compose","sendingMessage","setSendingMessage","receiverType","setReceiverType","selectRoles","setSelectRoles","smsFrom","setSmsFrom","sms","contacts","setContacts","classPopper","setClassPopper","sectionPopper","setSectionPopper","contactsPopper","setContactsPopper","notifyChecked","setNotifyChecked","selectClass","setSelectClass","selectSection","setSelectSection","selectContacts","setSelectContacts","selectedStudentCount","setSelectedStudentCount","selectEmployee","setSelectEmployee","classAutoSelect","setClassAutoSelect","sectionAutoSelect","setSectionAutoSelect","contactsAutoSelect","setContactsAutoSelect","employeeListPopper","setEmployeeListPopper","selectedEmployeeCount","setSelectedEmployeeCount","employeeAutoSelect","setEmployeeAutoSelect","balance","setBalance","handleFormChange","flexFlow","onFocus","currentTarget","Popper","anchorEl","Autocomplete","schclass","classNames","sortedSections","sort","localeCompare","isOptionEqualToValue","disableCloseOnSelect","getOptionLabel","renderOption","selected","sectionIds","sectionNames","handleContactsList","allStudentsContacts","studentNames","renderValue","ListItemText","handleEmployeeAuto","selectedEmployees","smsType","TextareaAutosize","flexGrow","communicatonReportTableKeys","Report","setdData","Credentails","handleClassSelect","handleSectionSelect","isStudentRoleSelected","_ref8","_ref9","BulkPhoto","updatePhoto","handleNavigateStudent","drawerWidth","openedMixin","easing","sharp","duration","enteringScreen","closedMixin","leavingScreen","up","DrawerHeader","mixins","toolbar","DrawerFooter","AppBar","MuiAppBar","shouldForwardProp","prop","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","NavDrawer","sideMenuData","setSideMenuData","setAnchorEl","openProfile","Boolean","activeYear","setActiveYear","setIsDarkMode","selecteSubMenu","setSelectedSubMenu","selectedMenu","setSelectedMenu","getActiveAcademicYear","openPreviousMenu","menuIndex","CssBaseline","Toolbar","handleDrawerOpen","MenuIcon","NotificationsIcon","Menu","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","ListItemIcon","PersonIcon","LockResetIcon","handleDrawerClose","ChevronRightIcon","ChevronLeftIcon","List","ListItemButton","handleToggleMenuOpen","ExpandLess","ExpandMore","Collapse","timeout","unmountOnExit","in","sub","wordWrap","disablePadding","handleModeChange","setItem","handleLogout","LogoutIcon","Route","VehicleRoutes","StudentAttendanceReport","EmployeeAttendanceReport","Credentials","Outlet","IconComponent","KeyboardArrowDownIcon","set","getDataValue","onCardClick","selectedItem","setSelectedItem","handleDeleteClick","RemoveRedEyeRoundedIcon","paddingTop","PuffLoader","other","hidden","a11yProps","Tabs","scrollButtons","allowScrollButtonsMobile","Tab","FileListModal","setSelectFiles","customOnChage","handleRemoveImage","disableFuture","slotProps","textField","closeOnSelect"],"sourceRoot":""}