{"version":3,"file":"static/js/559.b4289990.chunk.js","mappings":"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","sources":["data/menu.js","components/Dashboard/ChartBar.jsx","components/Dashboard/Attendance.jsx","components/Dashboard/QuickLinks.jsx","components/Dashboard/Events.jsx","components/Dashboard/FilterStudent.jsx","pages/Dashboard.jsx","forms/AddForm.jsx","forms/FormModal.jsx","data/tableKeys/academicYearData.js","pages/Administrator/AcademicYear.jsx","data/tableKeys/designation.js","pages/HumanResource/ManageDesignation.jsx","data/tableKeys/departmentData.js","pages/HumanResource/ManageDepartment.jsx","data/tableKeys/overviewData.js","data/tableKeys/employeeData.js","data/tableKeys/inactiveEmployee.js","pages/HumanResource/Employee.jsx","data/tableKeys/offerLetterData.js","forms/LetterViewModal.jsx","pages/HumanResource/OfferLetter.jsx","data/tableKeys/relievingLetterData.js","pages/HumanResource/RelievingLetter.jsx","data/tableKeys/offBoardingData.js","pages/HumanResource/OffBoarding.jsx","data/tableKeys/experienceLetterData.js","pages/HumanResource/ExperienceLetter.jsx","data/tableKeys/teacherActivityData.js","pages/HumanResource/TeacherActivity.jsx","data/tableKeys/rolePermissionData.js","data/roleData.js","pages/Administrator/RolePermission.jsx","data/tableKeys/userRoleData.js","pages/Administrator/UserRole.jsx","pages/Administrator/ResetPassword.jsx","data/tableKeys/enquiries.js","forms/ViewModel.jsx","pages/Pre-Admission/Enquiries.jsx","data/tableKeys/exams.js","pages/Pre-Admission/QuizQuestion.jsx","pages/Pre-Admission/AddOrUpdateExamModal.jsx","pages/Pre-Admission/Exams.jsx","pages/Pre-Admission/AddOrUpdateExamSchedule.jsx","forms/DeleteModal.jsx","pages/Pre-Admission/ExamSchedules.jsx","data/tableKeys/result.js","pages/Pre-Admission/Result.jsx","data/tableKeys/academicClassData.js","pages/Academic/Class.jsx","data/tableKeys/academicSectionData.js","forms/CustomSelect.jsx","pages/Academic/Section.jsx","data/tableKeys/academicSubjectData.js","pages/Academic/Subject.jsx","data/tableKeys/studentAttendanceReportData.js","pages/Attendance/StudentAttendanceTable.jsx","utils.js","pages/Attendance/StudentAttendance.jsx","data/tableKeys/employeeReportData.js","pages/Attendance/EmployeeAttendanceTable.jsx","pages/Attendance/EmployeeAttendance.jsx","pages/ClassRoutine.jsx","components/Student/StudentCount.jsx","pages/Student/Overview.jsx","data/tableKeys/admitStudentData.js","pages/Student/AdmitStudent.jsx","components/StickyBar.jsx","pages/Student/Reshuffle.jsx","data/tableKeys/promotionData.js","pages/Student/Promotion.jsx","pages/Student/BulkAdmission.jsx","data/tableKeys/studentCredentials.js","pages/Student/Credential.jsx","pages/Student/QuickAdmit.jsx","data/tableKeys/studentActivity.js","pages/Student/StudentActivity.jsx","data/tableKeys/assignmentData.js","pages/AddEditAssignment.jsx","pages/Assignment.jsx","data/tableKeys/noticeData.js","pages/Announcement/Notice.jsx","data/tableKeys/newsData.js","pages/Announcement/News.jsx","data/tableKeys/holidayData.js","pages/Announcement/Holiday.jsx","data/tableKeys/awardAchievementsData.js","pages/Announcement/AwardsAndAchievements.jsx","data/tableKeys/horizontalSplashNewsData.js","pages/Announcement/AddHorizontalSplash.jsx","data/tableKeys/popupSplashNewsData.js","pages/Announcement/AddPopup.jsx","pages/Announcement/SplashNews.jsx","data/tableKeys/galleryListData.js","pages/Gallery.jsx","data/tableKeys/notificationsData.js","pages/Notifications.jsx","data/tableKeys/eventData.js","pages/Event.jsx","data/tableKeys/examGradeData.js","pages/Exam/ExamGrade.jsx","data/tableKeys/examTermData.js","pages/Exam/ExamTerm.jsx","data/tableKeys/examListData.js","data/tableKeys/ScheduleListData.js","pages/Exam/ExamSchedule.jsx","pages/Exam/ExamHallTicket.jsx","pages/ExamMark/DivisionWiseReport.jsx","pages/ExamMark/SubjectWiseReport.jsx","data/tableKeys/consolidateMarksCardData.js","pages/ExamMark/ConsolidatedMarkSheet.jsx","data/tableKeys/marksCardData.js","pages/ExamMark/Markscard.jsx","data/tableKeys/examResultData.js","pages/ExamMark/ExamResultViewModel.jsx","pages/ExamMark/ExamResult.jsx","forms/CustomInput.jsx","pages/ExamMark/ManageMark.jsx","data/tableKeys/examAttendanceData.js","pages/ExamMark/ExamAttendance.jsx","pages/LMS/Courses.jsx","pages/LMS/CourseContentTable.jsx","pages/LMS/CourseDialogs/VideoDialog.jsx","pages/LMS/CourseDialogs/QuizDialog.jsx","pages/LMS/CourseDialogs/FlashcardDialog.jsx","pages/LMS/CourseDialogs/MaterialsDialog.jsx","pages/LMS/CourseDialogs/AddChapterDialog.jsx","context/ContentContext.js","pages/LMS/ShowCourseContent.jsx","pages/LMS/CourseContent.jsx","pages/LMS/Live.jsx","pages/LMS/Storage.jsx","data/tableKeys/libraryBooksData.js","pages/Library/BookViewModal.jsx","pages/Library/Books.jsx","data/tableKeys/periodicalData.js","pages/Library/Periodical.jsx","data/tableKeys/studentMember.js","data/tableKeys/studentNonMember.js","pages/Library/StudentLibraryMember.jsx","data/tableKeys/studentLibraryDueData.js","data/tableKeys/studentLibraryHistoryData.js","data/tableKeys/studentlibraryIssueData.js","pages/Library/StudentIssueReturn.jsx","data/tableKeys/employeeLibraryNonMemberData.js","data/tableKeys/employeeLibraryMemberData.js","pages/Library/EmployeeLibraryMember.jsx","data/tableKeys/employeeLibraryHistroyData.js","data/tableKeys/employeeLibraryDueData.js","data/tableKeys/employeeLibraryIssueData.js","pages/Library/EmployeeIssueReturn.jsx","data/tableKeys/leaveTypeData.js","pages/LeaveManagement/LeaveType.jsx","data/tableKeys/studentLeaveData.js","pages/LeaveManagement/StudentsLeave.jsx","data/tableKeys/employeeLeaveManageData.js","data/tableKeys/employeeLeaveListData.js","pages/LeaveManagement/EmployeeLeave.jsx","pages/LeaveManagement/LeaveReport.jsx","data/tableKeys/itemData.js","pages/Inventory/Item.jsx","data/tableKeys/vendorData.js","pages/Inventory/Vendor.jsx","data/tableKeys/transactionData.js","pages/Inventory/InOutTransaction.jsx","data/tableKeys/stockListData.js","pages/Inventory/OverviewTable.jsx","pages/Inventory/StockList.jsx","data/tableKeys/issueDetailData.js","pages/Inventory/Issue.jsx","data/tableKeys/sellDetailData.js","pages/Inventory/Sell.jsx","pages/Certificate/StudyCertificate.jsx","pages/Certificate/TransferCertificate.jsx","data/tableKeys/receiptBookData.js","data/tableKeys/feeMapData.js","pages/Fees/AddUpdateFeeMap.jsx","pages/Fees/ReceiptBook.jsx","data/tableKeys/feeMapCategoryData.js","pages/Fees/FeeMapCategory.jsx","pages/Fees/CollectFees.jsx","data/tableKeys/balanceFeeReportData.js","pages/Fees/BalanceFeeReport.jsx","data/tableKeys/feeOverviewPaymentData.js","data/tableKeys/feeOverviewReceiptData.js","pages/Fees/FeeOverview.jsx","data/tableKeys/reconciliationData.js","pages/Fees/Reconciliation.jsx","data/tableKeys/manageHostelData.js","pages/Hostel/HostelViewDialog.jsx","pages/Hostel/ManageHostel.jsx","data/tableKeys/manageHostelRoom.js","pages/Hostel/ManageRoomType.jsx","data/tableKeys/manageHostelRoomBedData.js","pages/Hostel/RoomAndBedViewDialog.jsx","pages/Hostel/ManageRoomAndBed.jsx","data/tableKeys/hostelMemberData.js","data/tableKeys/hostelNonMember.js","pages/Hostel/HostelMember.jsx","data/tableKeys/vehicleData.js","pages/Transport/VehicleViewDialog.jsx","pages/Transport/Vehicle.jsx","data/tableKeys/manageRouteData.js","pages/Transport/RouteAndTripViewDialog.jsx","pages/Transport/ManageRouteAndTrips.jsx","data/tableKeys/transportAddMemberData.js","data/tableKeys/transportMemberData.js","pages/Transport/TransportMember.jsx","data/tableKeys/routesData.js","pages/Transport/Routes.jsx","data/tableKeys/vehicleLogData.js","pages/Transport/VehicleLog.jsx","data/tableKeys/vehcleFirmData.js","components/Transport/Firm.jsx","data/tableKeys/vehicleFuelData.js","components/Transport/Fuel.jsx","data/tableKeys/vehicleRepairData.js","components/Transport/Repair.jsx","data/tableKeys/vehicleTireData.js","components/Transport/VehicleTire.jsx","data/tableKeys/vehicleGreecingData.js","components/Transport/Greecing.jsx","pages/Transport/VehicleMaintenance.jsx","data/tableKeys/salaryGradeData.js","pages/PayRoll/SalaryGrade.jsx","data/tableKeys/paymentHistoryData.js","pages/PayRoll/MakePayment.jsx","data/tableKeys/libraryTabularData.js","pages/Report/LibraryReport.jsx","pages/Report/StudentYearlyAttendance.jsx","pages/Report/EmployeeYearlyAttendance.jsx","data/tableKeys/studentActivityReportData.js","pages/Report/StudentActivityReport.jsx","pages/Report/StudentAttendance.jsx","pages/Report/EmployeeAttendance.jsx","data/tableKeys/visitorInfoData.js","pages/VisitorInfo/VisitorInfoViewModel.jsx","pages/VisitorInfo/VisitorInfo.jsx","data/tableKeys/studentCheckoutData.js","pages/VisitorInfo/StudentCheckout.jsx","data/tableKeys/ticketData.js","pages/HelpDesk.jsx","data/tableKeys/guardianFeedbackData.js","pages/GuardianFeedback.jsx","data/tableKeys/studentBulkPhotoData.js","pages/Student/StudentBulkPhoto.jsx","pages/Report/StudentReport.jsx","pages/HumanResource/AddEmployee.jsx","data/tableKeys/manageInstituteData.js","pages/ManageInstitute/ManageInstitute.jsx","forms/AddOrUpdateFiles.jsx","pages/ManageInstitute/AddInstitute.jsx","pages/AccountSettings/FormTable.jsx","pages/AccountSettings/ProfileUpdate.jsx","pages/AccountSettings/Profile.jsx","pages/HumanResource/UpdateEmployee.jsx","pages/Student/AddStudent.jsx","pages/LMS/AddCourse.jsx","pages/LMS/UpdateCourse.jsx","components/LoaddingScreen.jsx","pages/LMS/Room.jsx","pages/Communication/Compose.jsx","data/tableKeys/communicationReportData.js","pages/Communication/Report.jsx","pages/Communication/Credentials.jsx","pages/Student/BulkPhoto.jsx","components/NavDrawer.jsx","components/PageHeader.jsx","components/Tables/CustomTable.jsx","components/Tables/NoTableData.jsx","components/Tabs/TabPanel.jsx","components/Tabs/Tablist.jsx","forms/FileListModal.jsx","forms/FileSelect.jsx","forms/FormDatePicker.jsx"],"sourcesContent":["/** @format */\n\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\n\nimport React from \"react\";\nimport GiteIcon from \"@mui/icons-material/Gite\";\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\";\nimport DirectionsBusIcon from \"@mui/icons-material/DirectionsBus\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\nimport ManIcon from \"@mui/icons-material/Man\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport FeedbackIcon from \"@mui/icons-material/Feedback\";\nimport PhotoRoundedIcon from \"@mui/icons-material/PhotoRounded\";\nimport WcIcon from \"@mui/icons-material/Wc\";\nimport SubdirectoryArrowRightOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowRightOutlined\";\n\nimport {\n  SettingsSuggest,\n  AccountBalance,\n  AccessTime,\n  Groups,\n  CheckBox,\n  TextSnippet,\n  SchoolRounded,\n  CardMembershipRounded,\n  CampaignRounded,\n  Person,\n  CurrencyRupee,\n  BarChart,\n  InstallMobileRounded,\n} from \"@mui/icons-material\";\n\nimport NotificationsActiveRoundedIcon from \"@mui/icons-material/NotificationsActiveRounded\";\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\n\nimport Diversity2Icon from \"@mui/icons-material/Diversity2\";\n\nconst SIDE_MENU_DATA = [\n  {\n    name: \"Dashboard\",\n    path: \"/sch/dashboard\",\n    renderName: [],\n    subMenus: [],\n    icon: <DashboardRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Manage Institute\",\n    path: \"/sch/manage-institute\",\n    renderName: [\"\"],\n    subMenus: [],\n    icon: <SettingsSuggest color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Administrator\",\n    path: \"\",\n    renderName: [\n      \"academicYear\",\n      \"userRole\",\n      \"rolePermission\",\n      \"userPasswordReset\",\n    ],\n\n    icon: <Person color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Academic Year\",\n        renderName: \"academicYear\",\n        path: \"/sch/administrator/academicYear\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      // {\n      //   name: \"User Role(ACL)\",\n      //   renderName: \"userRole\",\n      //   path: \"/sch/administrator/user-role\",\n      //   icon: (\n      //     <SubdirectoryArrowRightOutlinedIcon\n      //       color=\"primary\"\n      //       fontSize=\"small\"\n      //     />\n      //   ),\n      // },\n      {\n        name: \"Roles & Permissions\",\n        renderName: \"rolePermission\",\n        path: \"/sch/administrator/role-permission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"User Password Reset\",\n        renderName: \"userPasswordReset\",\n        path: \"/sch/administrator/reset-password\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Human Resource\",\n    path: \"\",\n    renderName: [\n      \"manageDesignation\",\n      \"manageDepartment\",\n      \"employee\",\n      \"offerLetter\",\n      \"relievingLetter\",\n      \"offBoarding\",\n      \"experienceLetter\",\n      \"teacherActivity\",\n    ],\n    icon: <Diversity2Icon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Designation\",\n        renderName: \"manageDesignation\",\n        path: \"/sch/human-resource/manage-designation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Department\",\n        renderName: \"manageDepartment\",\n        path: \"/sch/human-resource/manage-department\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee\",\n        renderName: \"employee\",\n        path: \"/sch/human-resource/employee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Offer-Letter\",\n        renderName: \"offerLetter\",\n        path: \"/sch/human-resource/offer-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Relieving Letter\",\n        renderName: \"relievingLetter\",\n        path: \"/sch/human-resource/relieving-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Off Boarding\",\n        renderName: \"offBoarding\",\n        path: \"/sch/human-resource/off-boarding\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Experience Letter\",\n        renderName: \"experienceLetter\",\n        path: \"/sch/human-resource/experience-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Teacher Activity\",\n        renderName: \"teacherActivity\",\n        path: \"/sch/human-resource/teacher-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Pre-Admission\",\n    path: \"\",\n    renderName: [\"enquiries\", \"enquiries\", \"examSchedules\", \"result\"],\n    icon: <ManIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Enquiries\",\n        renderName: \"enquiries\",\n        path: \"/sch/pre-admission/enquiries\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exams\",\n        renderName: \"exams\",\n        path: \"/sch/pre-admission/exams\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Schedules\",\n        renderName: \"examSchedules\",\n        path: \"/sch/pre-admission/exam-schedules\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Result\",\n        renderName: \"result\",\n        path: \"/sch/pre-admission/result\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Academic\",\n    path: \"\",\n    renderName: [\"class\", \"section\", \"subject\"],\n    icon: <AccountBalance color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Class\",\n        renderName: \"class\",\n        path: \"/sch/academic/class\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Section\",\n        renderName: \"section\",\n        path: \"/sch/academic/section\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject\",\n        renderName: \"subject\",\n        path: \"/sch/academic/subject\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Attendance\",\n    path: \"\",\n    renderName: [\"studentAttendance\", \"employeeAttendance\"],\n    icon: <CheckBox color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Student Attendance\",\n        renderName: \"studentAttendance\",\n        path: \"/sch/attendence/student-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Attendance\",\n        renderName: \"employeeAttendance\",\n        path: \"/sch/attendence/employee-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Class Routine\",\n    path: \"/sch/class-routine\",\n    renderName: [\"class-routine\"],\n    subMenus: [],\n    icon: <AccessTime color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Student\",\n    path: \"\",\n    renderName: [\n      \"overview\",\n      \"admitStudent\",\n      \"reshuffle\",\n      \"promotion\",\n      \"bulkAdmission\",\n      \"credential\",\n      \"quickAdmit\",\n      \"studentActivity\",\n    ],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Overview\",\n        renderName: \"overview\",\n        path: \"/sch/student/overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Admit Student\",\n        renderName: \"admitStudent\",\n        path: \"/sch/student/admit-student\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reshuffle\",\n        renderName: \"reshuffle\",\n        path: \"/sch/student/reshuffle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Promotion\",\n        renderName: \"promotion\",\n        path: \"/sch/student/promotion\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Bulk Admission\",\n        renderName: \"bulkAdmission\",\n        path: \"/sch/student/bulk-admission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credential\",\n        renderName: \"credential\",\n        path: \"/sch/student/credential\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Quick Admit\",\n        renderName: \"quickAdmit\",\n        path: \"/sch/student/quick-admit\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Activity\",\n        renderName: \"studentActivity\",\n        path: \"/sch/student/student-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Assignment\",\n    path: \"/sch/assignment\",\n    renderName: [\"assgnment\"],\n    subMenus: [],\n    icon: <AssignmentRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Communication\",\n    path: \"\",\n    renderName: [\"compose\", \"report\", \"credentials\"],\n    icon: <InstallMobileRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Compose\",\n        renderName: \"compose\",\n        path: \"/sch/communication_compose\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Report\",\n        renderName: \"report\",\n        path: \"/sch/communication_report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credentials\",\n        renderName: \"credentials\",\n        path: \"/sch/communication_credentials\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Announcement\",\n    path: \"\",\n    renderName: [\n      \"notice\",\n      \"news\",\n      \"holiday\",\n      \"awardsAndAchievements\",\n      \"splashNews\",\n    ],\n    icon: <CampaignRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Notice\",\n        renderName: \"notice\",\n        path: \"/sch/announcement/notice\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"News\",\n        renderName: \"news\",\n        path: \"/sch/announcement/news\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Holiday\",\n        renderName: \"holiday\",\n        path: \"/sch/announcement/holiday\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Awards And Achievements\",\n        renderName: \"awardsAndAchievements\",\n        path: \"/sch/announcement/awardsAndAchievements\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Splash News\",\n        renderName: \"splashNews\",\n        path: \"/sch/announcement/splashNews\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Gallery\",\n    path: \"/sch/gallery\",\n    renderName: [\"gallery\"],\n    subMenus: [],\n    icon: <PhotoRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Notifications\",\n    path: \"/sch/notifications\",\n    renderName: [\"notifications\"],\n    subMenus: [],\n    icon: <NotificationsActiveRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Event\",\n    path: \"/sch/event\",\n    renderName: [\"event\"],\n    subMenus: [],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Exam\",\n    path: \"\",\n    renderName: [\"examGrade\", \"examTerm\", \"examSchedule\", \"examHallTicket\"],\n    icon: <TextSnippet color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Exam Grade\",\n        renderName: \"examGrade\",\n        path: \"/sch/exam/exam-grade\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Term\",\n        renderName: \"examTerm\",\n        path: \"/sch/exam/exam-term\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Schedule\",\n        renderName: \"examSchedule\",\n        path: \"/sch/exam/exam-schedule\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Hall Ticket\",\n        renderName: \"examHallTicket\",\n        path: \"/sch/exam/exam-hall-ticket\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Exam Mark\",\n    path: \"\",\n    renderName: [\n      \"examAttendance\",\n      \"manageMark\",\n      \"examResult\",\n      \"marksCard\",\n      \"consolidatedMarksSheet\",\n      \"subjectWiseReport\",\n      \"divisionWiseReport\",\n    ],\n    icon: <SchoolRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Exam Attendance\",\n        renderName: \"examAttendance\",\n        path: \"/sch/exam-Mark/exam-Attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Mark\",\n        renderName: \"manageMark\",\n        path: \"/sch/exam-Mark/manage-mark\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Result\",\n        renderName: \"examResult\",\n        path: \"/sch/exam-Mark/exam-result\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Marks Card\",\n        renderName: \"marksCard\",\n        path: \"/sch/exam-Mark/marks-card\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Consolidated Marks Sheet\",\n        renderName: \"consolidatedMarksSheet\",\n        path: \"/sch/exam-Mark/consolidated-marks-sheet\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject Wise Report\",\n        renderName: \"subjectWiseReport\",\n        path: \"/sch/exam-Mark/subject-wise-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Division Wise Report\",\n        renderName: \"divisionWiseReport\",\n        path: \"/sch/exam-Mark/division-wise-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"LMS\",\n    path: \"\",\n    renderName: [\"storage\", \"courses\", \"courseContent\", \"live\"],\n    icon: <LibraryBooksIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Storage\",\n        renderName: \"storage\",\n        path: \"/sch/lms/storage\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Courses\",\n        renderName: \"courses\",\n        path: \"/sch/lms/courses\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Course Content\",\n        renderName: \"courseContent\",\n        path: \"/sch/lms/course-content\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Live\",\n        renderName: \"live\",\n        path: \"/sch/lms/live\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Library\",\n    path: \"\",\n    renderName: [\n      \"books\",\n      \"periodical\",\n      \"studentLibraryMember\",\n      \"employeeLibraryMember\",\n      \"studentIssueReturn\",\n    ],\n    icon: <LibraryBooksIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Books\",\n        renderName: \"books\",\n        path: \"/sch/library/books\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Periodical\",\n        renderName: \"periodical\",\n        path: \"/sch/library/periodical\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Library Member\",\n        renderName: \"studentLibraryMember\",\n        path: \"/sch/library/student-library-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Library Member\",\n        renderName: \"employeeLibraryMember\",\n        path: \"/sch/library/employee-library-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Issue & Return\",\n        renderName: \"studentIssueReturn\",\n        path: \"/sch/library/student-issue-return\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Leave Management\",\n    path: \"\",\n    renderName: [\"leaveType\", \"employeeLeave\", \"studentLeave\", \"leaveReport\"],\n    icon: <CheckBox color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Leave Type\",\n        renderName: \"leaveType\",\n        path: \"/sch/leave-management/leave-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Leave\",\n        renderName: \"employeeLeave\",\n        path: \"/sch/leave-management/employee-leave\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Students Leave\",\n        renderName: \"studentLeave\",\n        path: \"/sch/leave-management/student-leave\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Leave Report\",\n        renderName: \"leaveReport\",\n        path: \"/sch/leave-management/leave-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Inventory\",\n    path: \"\",\n    renderName: [\"item\", \"vendor\", \"transaction\", \"stockList\", \"issue\", \"sell\"],\n    icon: <InventoryIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Item\",\n        renderName: \"item\",\n        path: \"/sch/inventory/item\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vendor\",\n        renderName: \"vendor\",\n        path: \"/sch/inventory/vendor\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"In/Out Transaction\",\n        renderName: \"transaction\",\n        path: \"/sch/inventory/transaction\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Stock List\",\n        renderName: \"stockList\",\n        path: \"/sch/inventory/stockList\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Issue\",\n        renderName: \"issue\",\n        path: \"/sch/inventory/issue\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Sell\",\n        renderName: \"sell\",\n        path: \"/sch/inventory/sell\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Certificate\",\n    path: \"\",\n    renderName: [\"studyCertificate\", \"transferCertificate\"],\n    icon: <CardMembershipRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Study Certificate\",\n        renderName: \"studyCertificate\",\n        path: \"/sch/certificate/study-certificate\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Transfer Certificate\",\n        renderName: \"transferCertificate\",\n        path: \"/sch/certificate/transfer-certificate\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Fees\",\n    path: \"\",\n    renderName: [\n      \"receiptBook\",\n      \"feeMapCategory\",\n      \"collectFees\",\n      \"balanceFee\",\n      \"feeOverview\",\n      \"reconciliation\",\n    ],\n    icon: <CurrencyRupee color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Receipt Book\",\n        renderName: \"receiptBook\",\n        path: \"/sch/fees/receipt-book\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Map Category\",\n        renderName: \"feeMapCategory\",\n        path: \"/sch/fees/feeMap-category\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Collect Fees\",\n        renderName: \"collectFees\",\n        path: \"/sch/fees/collect-fees\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Balance Fee\",\n        renderName: \"balanceFee\",\n        path: \"/sch/fees/balance-fee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Overview\",\n        renderName: \"feeOverview\",\n        path: \"/sch/fees/fee-overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reconciliation\",\n        renderName: \"reconciliation\",\n        path: \"/sch/fees/re-conciliation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Hostel\",\n    path: \"\",\n    renderName: [\n      \"manageHostel\",\n      \"manageRoomType\",\n      \"manageRoomBed\",\n      \"hostelMember\",\n    ],\n    icon: <GiteIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Hostel\",\n        renderName: \"manageHostel\",\n        path: \"/sch/hostel/manage-hostel\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Type\",\n        renderName: \"manageRoomType\",\n        path: \"/sch/hostel/manage-room-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Bed\",\n        renderName: \"manageRoomBed\",\n        path: \"/sch/hostel/manage-room-bed\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Hostel Member\",\n        renderName: \"hostelMember\",\n        path: \"/sch/hostel/hostel-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Transport\",\n    path: \"\",\n    renderName: [\n      \"vehicle\",\n      \"manageRoute\",\n      \"routes\",\n      \"trasportMember\",\n      \"vehicleLog\",\n      \"vehicleMaintenance\",\n    ],\n    icon: <DirectionsBusIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Vehicle\",\n        renderName: \"vehicle\",\n        path: \"/sch/transport/vehicle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Route & Trips\",\n        renderName: \"manageRoute\",\n        path: \"/sch/transport/manage-route\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Routes\",\n        renderName: \"routes\",\n        path: \"/sch/transport/routes\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Trasport Member\",\n        renderName: \"trasportMember\",\n        path: \"/sch/transport/trasport-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vehicle Log\",\n        renderName: \"vehicleLog\",\n        path: \"/sch/transport/vehicle-log\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vehicle Maintenance\",\n        renderName: \"vehicleMaintenance\",\n        path: \"/sch/transport/vehicle-maintenance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Payroll\",\n    path: \"\",\n    renderName: [\"salaryGrade\", \"makePayment\"],\n    icon: <CurrencyRupeeIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Salary Grade\",\n        renderName: \"salaryGrade\",\n        path: \"/sch/payroll/salary-grade\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Make Payment\",\n        renderName: \"makePayment\",\n        path: \"/sch/payroll/make-payment\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Report\",\n    path: \"\",\n    renderName: [\n      \"libraryReport\",\n      \"studentAttendance\",\n      \"studentYearlyAttendane\",\n      \"employeeAttendance\",\n      \"employeeYearlyAttendance\",\n      \"studentReport\",\n      \"studentActivityReport\",\n    ],\n    icon: <BarChart color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Library Report\",\n        renderName: \"libraryReport\",\n        path: \"/sch/report/library-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Attendance\",\n        renderName: \"studentAttendance\",\n        path: \"/sch/report/student-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Yearly Attendane\",\n        renderName: \"studentYearlyAttendaneroutes\",\n        path: \"/sch/report/student-yearly-attendane\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Attendance\",\n        renderName: \"employeeAttendance\",\n        path: \"/sch/report/employee-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Yearly Attendance\",\n        renderName: \"employeeYearlyAttendance\",\n        path: \"/sch/report/employee-yearly-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Student Report\",\n        renderName: \"studentReport\",\n        path: \"/sch/report/student-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Activity Report\",\n        renderName: \"studentActivityReport\",\n        path: \"/sch/report/student-activity-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Visitor Info\",\n    path: \"\",\n    renderName: [\"visitorInfo\", \"studentCheckout\"],\n    icon: <WcIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Visitor Info\",\n        renderName: \"visitorInfo\",\n        path: \"/sch/visitorInfo/visitor-info\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Checkout\",\n        renderName: \"studentCheckout\",\n        path: \"/sch/visitorInfo/student-checkout\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Help Desk\",\n    path: \"/sch/help-desk\",\n    renderName: [\"Help desk\"],\n    subMenus: [],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Guardian Feedback\",\n    path: \"/sch/guardian-feedback\",\n    renderName: [\"guardianFeedback\"],\n    subMenus: [],\n    icon: <FeedbackIcon color=\"primary\" fontSize=\"small\" />,\n  },\n];\n\nexport default {\n  SIDE_MENU_DATA,\n};\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Box, Paper } from \"@mui/material\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst ChartBar = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [uniqueSections, setUniqueSections] = useState([]);\n  const { ref, width } = useResizeObserver();\n\n  const getRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getDashboardStudentDetails,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      const transformedData = data.result.map((classItem) => {\n        const transformedItem = { className: classItem.className };\n        Object.keys(classItem.sections).forEach((section) => {\n          transformedItem[section] = classItem.sections[section];\n        });\n        return transformedItem;\n      });\n\n      setClasses(transformedData);\n\n      const sections = new Set();\n      data.result.forEach((classItem) => {\n        Object.keys(classItem.sections).forEach((section) => {\n          sections.add(section);\n        });\n      });\n\n      setUniqueSections([...sections]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <Box sx={{ display: \"flex\", flex: 1 }} ref={ref}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Paper sx={{ width: \"100%\", height: \"100%\" }}>\n          <BarChart\n            width={width ? width - 10 : 700}\n            height={350}\n            data={classes}\n            margin={{ top: 20, right: 5, left: 5, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"className\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {uniqueSections.map((sectionName) => (\n              <Bar\n                key={sectionName}\n                dataKey={sectionName}\n                fill={getRandomColor()}\n                stackId=\"stack\"\n              />\n            ))}\n          </BarChart>\n        </Paper>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ChartBar;\n","/** @format */\n\nimport { Box, Card, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Groups } from \"@mui/icons-material\";\nimport ChartBar from \"./ChartBar\";\nimport { Link } from \"react-router-dom\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst OuterCard = styled(Card)(({ theme }) => ({\n  marginBottom: \"15px\",\n  padding: \"10px\",\n  height: \"auto\",\n  width: \"100%\",\n  alignItems: \"center\",\n  justifyContent: \"space-around\",\n\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n}));\n\nconst InnerBox = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\",\n}));\n\nconst Content = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  fontSize: \"16px\",\n  fontWeight: 500,\n}));\nconst Data = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  textAlign: \"center\",\n}));\nconst Count = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  paddingTop: \"5px\",\n}));\n\nexport default function Attendance() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const getStudentAttendanceSummary = async () => {\n    try {\n      const [studentData, employeeData] = await Promise.all([\n        get(PRIVATE_URLS.studentAttendance.getAttendanceSummaryForToday, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }),\n        get(\n          PRIVATE_URLS.employeeAttendance.getEmployeeAttendanceSummaryForToday,\n          {\n            params: {\n              schoolId: selectedSetting._id,\n            },\n          }\n        ),\n      ]);\n\n      console.log(studentData.data?.result, \"student attendance data\");\n      console.log(employeeData?.data?.result, \"employee attendance data\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudentAttendanceSummary();\n  }, [selectedSetting._id]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, margin: \"20px 0px\" }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={4} lg={4}>\n            <OuterCard>\n              <InnerBox>\n                <Groups\n                  sx={{\n                    width: \"80px\",\n                    height: \"80px\",\n                    color: \"#1b3779\",\n                  }}\n                />\n              </InnerBox>\n\n              <Content>\n                <Data>\n                  <Typography>Students Attendance </Typography>\n                  <Typography>2</Typography>\n                  <Count>\n                    <Typography>\n                      <span style={{ color: \"green\", fontWeight: 600 }}>\n                        P:\n                      </span>\n                      4\n                    </Typography>\n                    <Typography>\n                      <span style={{ color: \"red\", fontWeight: 600 }}>A:</span>5\n                    </Typography>\n                  </Count>\n                </Data>\n              </Content>\n            </OuterCard>\n            <OuterCard>\n              <InnerBox>\n                <Groups\n                  sx={{\n                    width: \"80px\",\n                    height: \"80px\",\n                    color: \"#1b3779\",\n                  }}\n                />\n              </InnerBox>\n\n              <Content>\n                <Data>\n                  <Typography>Employee Attendance</Typography>\n                  <Typography>7</Typography>\n                  <Count>\n                    <Typography>\n                      <span style={{ color: \"green\", fontWeight: 600 }}>\n                        P:\n                      </span>\n                      6\n                    </Typography>\n                    <Typography>\n                      <span style={{ color: \"red\", fontWeight: 600 }}>A:</span>4\n                    </Typography>\n                  </Count>\n                </Data>\n              </Content>\n            </OuterCard>\n          </Grid>\n          <Grid item xs={12} sm={12} md={8} lg={8}>\n            <ChartBar />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Card, Fab, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nimport {\n  CardMembership,\n  FindInPage,\n  Groups,\n  Message,\n} from \"@mui/icons-material\";\nimport { Link } from \"react-router-dom\";\n\nconst DataContainer = styled(Card)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  justifyContent: \"space-evenly\",\n  padding: \"25px 0px\",\n  flexDirection: \"column\",\n}));\nconst StyledFab = styled(Fab)(({ theme }) => ({\n  background: \"#1b3779\",\n  color: \"#fff\",\n  \"&:hover\": {\n    color: \"#1b3779\",\n  },\n}));\nexport default function QuickLinks() {\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"center\">\n            <Typography sx={{ fontSize: 18, fontWeight: \"bold\" }}>\n              Quick Links\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/student/add-student\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Groups />\n                  </StyledFab>\n                </Box>\n                <Box>Admit Students</Box>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/human-resource/add-employee\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Groups />\n                  </StyledFab>\n                </Box>\n                <Box>Admit Employee</Box>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/exam-Mark/exam-result\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <FindInPage />\n                  </StyledFab>\n                </Box>\n\n                <Typography> Exam Results</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/exam-Mark/marks-card\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <CardMembership />\n                  </StyledFab>\n                </Box>\n                <Typography>Marks Cards</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/communication_compose\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Message />\n                  </StyledFab>\n                </Box>\n                <Typography>Communication</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Collapsible from \"react-collapsible\";\n\nimport dayjs from \"dayjs\";\nimport \"../Styles/Dashboard.css\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\n\nconst ScrollContainer = styled(Box)(({ theme }) => ({\n  borderRadius: \"5px\",\n  margin: \"18px\",\n  transform: \"translateY(0%)\",\n  animation: \"scroll 15s linear infinite\",\n  animationPlayState: \"running\",\n\n  \"&:hover\": {\n    animationPlayState: \"paused\",\n  },\n\n  \"@keyframes scroll\": {\n    from: {\n      transform: \"translateY(50%)\",\n    },\n    to: {\n      transform: \"translateY(-100%)\",\n    },\n  },\n}));\n\nconst DashboardScorlText = styled(Card)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"10px 0px\",\n\n  height: \"100%\",\n}));\n\nconst NoDataFound = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"5px\",\n  padding: \"5px\",\n  fontWeight: 700,\n}));\n\nconst DashboardNewsConent = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  height: \"auto\",\n  width: \"95%\",\n  marginLeft: \"1rem\",\n  marginRight: \"2rem\",\n  paddingBottom: \"5px\",\n  position: \"relative\",\n}));\n\nconst BoldTrigger = styled(Typography)(({ theme }) => ({\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  fontSize: \"18px\",\n  borderLeft: \"7px solid #ffeb3b\",\n  paddingLeft: theme.spacing(1),\n}));\n\nconst NoticeItem = styled(Typography)(({ theme }) => ({\n  fontWeight: 700,\n  \"&:hover\": {\n    color: themeData.darkPalette.primary.main,\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Events() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [notice, setNotice] = useState([]);\n  const [holidays, setHolidays] = useState([]);\n  // console.log(notice?.length, \"resss\");\n\n  const getNotice = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setNotice(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getHolidays = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setHolidays(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getNotice();\n    getHolidays();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, mt: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Calendar\n              tileClassName={({ date }) => {\n                const today = new Date();\n                if (date.toDateString() === today.toDateString()) {\n                  return \"blue-day\";\n                }\n                return \"\";\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Card sx={{ minHeight: \"200px\", padding: \"15px\" }}>\n              <Collapsible open={true}>\n                <BoldTrigger>{`Notices: (${notice?.length})`}</BoldTrigger>\n                <Divider sx={{ width: \"100%\", mt: 1 }} />\n                <Box\n                  sx={{\n                    height: \"140px\",\n                    maxHeight: \"140px\",\n                    overflow: \"auto\",\n                  }}>\n                  <DashboardScorlText elevation={0}>\n                    <ScrollContainer>\n                      {notice?.map((data, index) => (\n                        <DashboardNewsConent key={index}>\n                          <NoticeItem component=\"li\">{data.notice}</NoticeItem>\n                        </DashboardNewsConent>\n                      ))}\n                    </ScrollContainer>\n                    {!notice?.length && (\n                      <NoDataFound variant=\"h6\">No data found</NoDataFound>\n                    )}\n                  </DashboardScorlText>\n                </Box>\n              </Collapsible>\n            </Card>\n\n            <Card\n              sx={{ minHeight: \"200px\", padding: \"15px\", marginTop: \"10px\" }}>\n              <Collapsible open={true}>\n                <BoldTrigger>{`Holidays: (${holidays?.length})`}</BoldTrigger>\n                <Divider sx={{ width: \"100%\", mt: 1 }} />\n                <Box\n                  sx={{\n                    height: \"140px\",\n                    maxHeight: \"140px\",\n                    overflow: \"auto\",\n                  }}>\n                  <DashboardScorlText elevation={0}>\n                    <ScrollContainer>\n                      {holidays?.map((data, index) => (\n                        <DashboardNewsConent key={index}>\n                          <NoticeItem component=\"li\">{data.title}</NoticeItem>\n                        </DashboardNewsConent>\n                      ))}\n                    </ScrollContainer>\n                    {!holidays?.length && (\n                      <NoDataFound variant=\"h6\">No data found</NoDataFound>\n                    )}\n                  </DashboardScorlText>\n                </Box>\n              </Collapsible>\n            </Card>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function FilterStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudent = (values) => {\n    if (values.student) navigate(`/sch/student/edit-student/${values.student}`);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudent,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\n\nimport Attendance from \"../components/Dashboard/Attendance\";\nimport QuickLinks from \"../components/Dashboard/QuickLinks\";\nimport Events from \"../components/Dashboard/Events\";\nimport FilterStudent from \"../components/Dashboard/FilterStudent\";\n\nexport default function Dashboard() {\n  return (\n    <>\n      <PageHeader title=\"Welcome To School ERP \" />\n      <FilterStudent />\n      <Attendance />\n      <QuickLinks />\n      <Events />\n    </>\n  );\n}\n","import { Box, Fab, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport themeData from \"../data/themeData\";\nexport default function AddForm({ disabled, title, onAddClick = () => {} }) {\n  return (\n    <>\n      <Box\n        sx={{\n          position: \"fixed\",\n          width: \"-moz-fit-content\",\n          width: \"fit-content\",\n          right: \"70px\",\n          bottom: \"20px\",\n        }}\n      >\n        <Tooltip title={title}>\n          <Fab\n            variant=\"contained\"\n            onClick={onAddClick}\n            disabled={disabled}\n            sx={{\n              color: \"#ffff\",\n              background: themeData.darkPalette.primary.main,\n              \":hover\": { background: themeData.darkPalette.primary.main },\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </Tooltip>\n      </Box>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Divider,\n  useMediaQuery,\n  useTheme,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function FormModal({\n  formTitle = \"\",\n  children,\n  formik,\n  open = false,\n  onClose = () => {},\n  submitButtonTitle = \"\",\n  styles = {},\n  adding = false,\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n          component: \"form\",\n          onSubmit: formik.handleSubmit,\n        }}\n      >\n        <DialogTitle sx={{ fontWeight: 600 }}>{formTitle}</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}\n        >\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={onClose}\n          >\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={adding}\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {submitButtonTitle}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","export const academicYearTableKeys = [\n  {\n    name: \"Academic Year\",\n    key: \"academicYear\",\n  },\n\n  {\n    name: \"Status\t\",\n    key: \"active\",\n  },\n  {\n    name: \"Note\t\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\n\n// custom components\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicYearTableKeys } from \"../../data/tableKeys/academicYearData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\n\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useContext } from \"react\";\n\nexport default function AcademicYear() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((d) => ({ ...d, academicYear: `${d.from}-${d.to}` }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.academicYear.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.academicYear.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  console.log(selectedSetting, \"0000000\");\n  // get data on page load\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleToggleActiveStatus = async (academicYear) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.academicYear.toggleActiveStatus + \"/\" + academicYear._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Academic Year\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        bodyDataModal=\"academic year\"\n        bodyData={data}\n        tableKeys={academicYearTableKeys}\n        onEditClick={handleEditClick}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleActiveStatus}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Academic Year\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Academic Year\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"from\"\n              label=\"From Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"to\"\n              label=\"To Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const designationTableKeys = [\n  {\n    name: \"Designation\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { designationTableKeys } from \"../../data/tableKeys/designation\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nexport default function ManageDesignation() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDesigationHandel = () => {\n    setOpen(true);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.designation.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.designation.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.designation.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Designation\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={designationTableKeys}\n        bodyDataModal=\"designation\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Add form fab button =======*/}\n      <AddForm title=\"Add Desigation\" onAddClick={AddDesigationHandel} />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Desigation\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n      >\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Desigation\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const departmentTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { departmentTableKeys } from \"../../data/tableKeys/departmentData\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function ManageDepartment() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setData(data.result);\n\n      // console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.department.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.department.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name ? dataToEdit?.name : \"\",\n      orderSequence: dataToEdit?.orderSequence\n        ? dataToEdit?.orderSequence\n        : data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.department.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Department\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={departmentTableKeys}\n        bodyDataModal=\"department\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Department\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Department\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          {/* {dataToEdit && ( */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          {/* )} */}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n      {/* =========================== */}\n    </>\n  );\n}\n","export const overviewTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Male\",\n    key: \"male\",\n  },\n  {\n    name: \"Female\",\n    key: \"female\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","export const employeeTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","export const inactiveTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { overviewTableKeys } from \"../../data/tableKeys/overviewData\";\nimport { employeeTableKeys } from \"../../data/tableKeys/employeeData\";\nimport { inactiveTableKeys } from \"../../data/tableKeys/inactiveEmployee\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, del, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, Delete, Edit, ListAlt, Print, Search } from \"@mui/icons-material\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\n\nexport default function Employee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [value, setSelectValue] = useState(0);\n  const [activeData, setActiveData] = useState([]);\n  const [InactiveData, setInactiveData] = useState([]);\n  const [overviewData, setOverviewData] = useState([]);\n  const [allEmployee, setAllEmployee] = useState([]);\n  const [searchFilter, setSearchFilter] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const AddEmployeeHandle = (e) => {\n    navigate(\"/sch/human-resource/add-employee\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"employyeee\");\n      setAllEmployee(data.result);\n\n      const activeData = data.result\n        .filter((item) => item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      const inactiveData = data.result\n        .filter((item) => !item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      setActiveData(activeData);\n      setInactiveData(inactiveData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataDepartment = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const overviewData = data.result.map((department) => {\n        const maleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"male\" &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const femaleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"female\" &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const totalCount = maleCount + femaleCount;\n        return {\n          ...department,\n          male: maleCount,\n          female: femaleCount,\n          total: totalCount,\n        };\n      });\n\n      setOverviewData(overviewData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDataDepartment();\n  }, [allEmployee, selectedSetting._id]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.employee.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/human-resource/edit-employee/${data._id}`);\n  };\n\n  const handleSearch = (e) => {\n    const { value } = e.target;\n    setSearch(value.trim());\n    if (value.trim() !== \"\") {\n      activeData.length > 0 &&\n        setSearchFilter(\n          activeData.filter((ele) =>\n            ele.basicInfo.name\n              .toLowerCase()\n              .includes(value.toLowerCase().trim())\n          )\n        );\n    } else {\n      setSearchFilter([]);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Employee List\", \"Inactive Employee List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={\"\"}\n          tableKeys={overviewTableKeys}\n          bodyData={overviewData}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={employeeTableKeys}\n          bodyData={search ? searchFilter : activeData}\n          bodyDataModal=\"employee\"\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={inactiveTableKeys}\n          bodyDataModal=\"employee\"\n          bodyData={search ? searchFilter : InactiveData}\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n\n      {/* == Fab button component =========== */}\n      <AddForm title=\"Add Employee\" onAddClick={AddEmployeeHandle} />\n    </>\n  );\n}\n","export const offerLetterTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useRef } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ReactToPrint from \"react-to-print\";\n\nexport default function LetterViewModal({\n  open,\n  content,\n  onClose,\n  onPrintClick,\n  title,\n}) {\n  const contentRef = useRef(null);\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}>\n      <DialogTitle\n        sx={{ m: 0, p: 2, fontWeight: 600 }}\n        id=\"customized-dialog-title\">\n        {title}\n      </DialogTitle>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: \"absolute\",\n          right: 8,\n          top: 8,\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent>\n        <Typography gutterBottom>\n          <div\n            class=\"printContainer\"\n            ref={contentRef}\n            dangerouslySetInnerHTML={{ __html: content }}></div>\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <ReactToPrint\n          trigger={() => (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \":hover\": { background: \"#1b3779\" },\n              }}\n              onClick={onPrintClick}\n              startIcon={<PrintIcon />}>\n              Print\n            </Button>\n          )}\n          content={() => contentRef.current}\n        />\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { offerLetterTableKeys } from \"../../data/tableKeys/offerLetterData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function OfferLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.offerLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.offerLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.offerLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      offerLetter:\n        dataToEdit?.offerLetter ||\n        ` <strong>Congratulations! You've Been Selected for the Role of [Job Title]</strong>\n          <p>[Company Name]</p>\n          <p>[Address eg. Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103]</p>\n          <p>[City, State, ZIP Code]</p>\n          <p>Date: [DD, MM, YY]</p>\n          <strong>Dear [Candidate's Full Name],</strong>\n          <p>We are thrilled to offer you the position of [Job Title] at [Company Name]. After careful consideration, we believe your skills, experience, and vision make you the perfect fit for our team.</p>\n          <strong>Position Details:</strong>\n            <p><strong>- Job Title:</strong> [Job Title]</p>\n            <p><strong>- Department:</strong> [Department]</p>\n            <p><strong>- Supervisor:</strong> [Supervisor/Manager Name]</p>\n            <p><strong>- Start Date:</strong> [Start Date]</p>\n            <p><strong>- Compensation:</strong> [Salary or Compensation Details]</p>\n        <strong>Work Hours:</strong>\n        <p>[Regular work hours, any flexible schedule options, etc.]</p>\n        <p>We believe that [Company Name] is a place where you can grow and thrive. Your role as [Job Title] will be pivotal in driving our company's success and we look forward to the innovative contributions you will bring to our team.</p>\n        <p>Please indicate your acceptance of this offer by signing and returning a copy of this letter by <strong>[Acceptance Deadline]</strong>. Should you have any questions or need further clarification, feel free to reach out to <strong>[HR Contact Name]</strong> at <strong>[HR Contact Email]</strong> or <strong>[HR Contact Phone Number]</strong>.</p>\n        <p>We eagerly await your positive response and look forward to welcoming you to the [Company Name] family.</p>\n        <p>Warm Regards,</p>\n        <p>[HR, Manager Name]</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p style=\"text-align:\"center;\">&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.offerLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.offerLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Offer Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\"Offer letter list\", \"Add offer letter\", \"Edit offer letter\"]\n            : [\"Offer letter list\", \"Add offer Letter\"]\n        }\n      />\n\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={offerLetterTableKeys}\n          bodyDataModal=\"offer letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Offer Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                value={entryFormik.values.offerLetter}\n                required\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.offerLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const relievingLetterDataTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { relievingLetterDataTableKeys } from \"../../data/tableKeys/relievingLetterData\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { Button, Grid } from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function RelievingLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n  const componentRef = useRef();\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.relievingLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.relievingLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.relievingLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      relievingLetter:\n        dataToEdit?.relievingLetter ||\n        `<strong>Relieving Letter</strong>\n        <p>[Company Name]</p>\n        <p>Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n        <p>Date: DD, MM, YY\t</p>\n        <p>Dear [Employee's Full Name],</p>\n        <p>We hereby acknowledge receipt of your resignation letter dated <strong>[Resignation Date]</strong>, in which you requested to be relieved from your position as <strong>[Employee's Designation]</strong> at <strong>[Company Name]</strong>. We are pleased to provide you with your relieving letter.</p>\n        <p>This is to inform you that you <strong>[Employee ID]</strong> will be relieved after careful consideration and necessary formalities.</p>\n        <p>You have successfully completed your tenure at <strong>[Company Name]</strong> as <strong>[Job Title]</strong> from <strong>[Joining Date]</strong> to <strong>[Last Working Date]</strong>. We appreciate your dedicated service and commitment during your time with us.</p>\n        <p>Sincerely,</p>\n        <p>HR, Manager</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.relievingLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.relievingLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Relieving letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Relieving letter list\",\n                \"Add relieving letter\",\n                \"Edit relieving letter\",\n              ]\n            : [\"Relieving letter list\", \"Add relieving letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={relievingLetterDataTableKeys}\n          bodyDataModal=\"relieving letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Relieving  Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              gap={1}\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","export const offBoardingDataTableKeys = [\n  {\n    name: \"Employee name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joininng Date\",\n    key: \"date\",\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\n\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { offBoardingDataTableKeys } from \"../../data/tableKeys/offBoardingData\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\nexport default function OffBoarding() {\n  const [value, setSelectValue] = useState(0);\n  const [formFields, setFormFields] = useState([{ name: \"\", file: null }]);\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      user: \"\",\n      name: \"\",\n      bloodGroup: \"\",\n      dob: dayjs(new Date()),\n      joiningDate: dayjs(new Date()),\n      resignDate: dayjs(new Date()),\n      relivingDate: dayjs(new Date()),\n      gender: \"\",\n      contactNumber: \"\",\n      status: \"\",\n      feedback: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  const handleAddRow = () => {\n    setFormFields([...formFields, { name: \"\", file: \"\" }]);\n  };\n  const handleRemove = (index) => {\n    const list = [...formFields];\n    list.splice(index, 1);\n    setFormFields(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Off-Boarding letter list\", \"Add Off-Boarding\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\"]}\n          tableKeys={offBoardingDataTableKeys}\n          bodyDataModal=\"Off-Boarding letter\"\n          bodyData={data}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"Select User Type\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"user\"\n                formik={entryFormik}\n                label=\"Select User\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Basic Information\n              </Typography>\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"gender\"\n                formik={entryFormik}\n                label=\"Select Gender\"\n                options={Gender_Options}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"bloodGroup\"\n                formik={entryFormik}\n                label=\"Select Blood Group\"\n                options={BloodGroup_Options}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"dob\"\n                formik={entryFormik}\n                label=\"DOB\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Working Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"joiningDate\"\n                formik={entryFormik}\n                label=\"Joining Date\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"resignDate\"\n                formik={entryFormik}\n                label=\"Resign Date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"relivingDate\"\n                formik={entryFormik}\n                label=\"RelivingD ate\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Profile Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Select Status\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={9} item>\n              <FormInput\n                required={true}\n                name=\"feedback\"\n                formik={entryFormik}\n                label=\"Feedback\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Additional Document Information\n              </Typography>\n            </Grid>\n            {formFields.map((field, index) => (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormInput\n                    required={true}\n                    name=\"name\"\n                    formik={entryFormik}\n                    label=\"Name\"\n                  />\n                </Grid>\n\n                <Grid xs={12} md={12} lg={4} item>\n                  <FormInput\n                    required={true}\n                    name=\"file\"\n                    formik={entryFormik}\n                    label=\"Select Image\"\n                    type=\"file\"\n                  />\n                </Grid>\n                <Grid item xs={1} md={1} lg={3} mt={1} alignSelf=\"center\">\n                  <Button onClick={() => handleRemove(index)}>\n                    <ClearIcon color=\"error\" />\n                  </Button>\n                </Grid>\n              </>\n            ))}\n            <Grid xs={12} md={12} lg={12} item>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={handleAddRow}\n                startIcon={<AddIcon />}\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Box display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n          <Button size=\"small\" color=\"error\" variant=\"contained\">\n            Cancel\n          </Button>\n          <Button size=\"small\" variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","export const experienceTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { experienceTableKeys } from \"../../data/tableKeys/experienceLetterData\";\nimport { Button, Grid } from \"@mui/material\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useReactToPrint } from \"react-to-print\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\n\nexport default function ExperienceLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.experienceLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.experienceLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.experienceLetter.create, payload);\n        getData();\n      }\n\n      setSelectValue(0);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      experienceLetter:\n        dataToEdit?.experienceLetter ||\n        ` <strong>Experience Letter</strong>\n          <p>Webpruce Company</p>\n          <p>Date: 12, January 2024</p>\n          <p>Place: Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n          <p>To Whom It May Concern,</p>\n          <p>This is to certify that <strong>[Employee's Full Name]</strong> was employed with us as a <strong>[Job Title]</strong> in the <strong>[Department]</strong> department from <strong>[Start Date]</strong> to <strong>[End Date]</strong>.</p>\n          <p>During their tenure with us, [Employee's Full Name] was responsible for:</p>\n          <p>- Key Responsibility 1</p>\n          <p>- Key Responsibility 2</p>\n          <p>We found [Employee's Full Name] to be a dedicated and reliable employee who consistently showed a high level of professionalism. They are leaving us due to [reason for leaving, if appropriate], and we wish them all the best in their future endeavors.</p>\n          <p>We highly recommend [Employee's Full Name] for any future employment opportunities and are confident that they will be an asset to any organization they join.</p>\n          <p>If you require any further information, please do not hesitate to contact us.</p>\n          <p>Warm Regards,</p>\n          <p><strong>[Your Name]</strong></p>\n          <p><strong>[Your Job Title]</strong></p>\n          <p><strong>[Contact Information]</strong></p>\n          <br/>\n          <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n        `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.experienceLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.experienceLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Experience Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Experience letter list\",\n                \"Add experience letter\",\n                \"Edit experience letter\",\n              ]\n            : [\"Experience letter list\", \"Add experience Letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={experienceTableKeys}\n          bodyDataModal=\"experience  letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n\n        <LetterViewModal\n          title={\"Experience Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              gap={1}\n              item\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const teacherActivityTableKeys = [\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Topic\",\n    key: \"topic\",\n  },\n];\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { teacherActivityTableKeys } from \"../../data/tableKeys/teacherActivityData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nexport default function TeacherActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingFind, setLoadingFind] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  let currentUserStringified = window.localStorage.getItem(\"current_ecs_user\");\n\n  let currentUser = JSON.parse(currentUserStringified);\n\n  const getData = async (values) => {\n    try {\n      setLoadingFind(true);\n      const { data } = await get(PRIVATE_URLS.teacherActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            teacher: values.teacher,\n            class: values.class,\n            section: values.section,\n            subject: values.subject,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n      setLoadingFind(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingFind(false);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const emp = data.result\n        ?.filter((e) =>\n          e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n        )\n        .map((d) => ({ label: d.basicInfo.name, value: d._id }));\n\n      const empOption = [{ label: \"Me\", value: currentUser._id }, ...emp];\n      setEmployees(empOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    if (newValue !== 1) {\n      setDataToEdit(null);\n    }\n    setSelectValue(newValue);\n  };\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      // formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSections = async (classId) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: classId,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      // formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n      // formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.teacherActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.teacherActivity.create,\n          payload\n        );\n      }\n      formik.handleSubmit();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      section: dataToEdit?.section._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      topic: dataToEdit?.topic || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      teacher: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections(entryFormik.values.class);\n      getSubject();\n      formik.resetForm();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections(formik.values.class);\n      getSubject();\n      entryFormik.resetForm();\n    }\n  }, [formik.values.class]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.teacherActivity.delete + \"/\" + id);\n\n      getData();\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Teacher Activity\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"All Activity\", dataToEdit ? \"Edit Activity\" : \"Add Activity\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"teacher\"\n                  formik={formik}\n                  label=\"Select Teacher\"\n                  options={employees}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={formik}\n                  label=\"Subject\"\n                  options={subjects}\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                item\n                display={\"flex\"}\n                justifyContent={\"flex-end\"}>\n                <LoadingButton\n                  loading={loadingFind}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  Find\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={teacherActivityTableKeys}\n          bodyDataModal=\"teacher activity\"\n          bodyData={data}\n          onDeleteClick={handleDelete}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select subject\"\n                  options={subjects}\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  required={true}\n                  name=\"topic\"\n                  formik={entryFormik}\n                  label=\"Topic covered\"\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                mt={1}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}\n                item>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleClose}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const rolePermissionTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nexport const ROLE_PERMISSIONS = [\n  {\n    module: \"Institute Selector\",\n    subModule: [\n      {\n        module: \"Institute Selector\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Dashboard\",\n    subModule: [\n      {\n        module: \"Dashboard\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Institute\",\n    subModule: [\n      {\n        module: \"Institute\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Administrator\",\n    subModule: [\n      {\n        module: \"Academic Year\",\n        permissions: [],\n      },\n      {\n        module: \"Roles and Permissions\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Human Resources\",\n    subModule: [\n      {\n        module: \"Designation\",\n        permissions: [],\n      },\n      {\n        module: \"Department\",\n        permissions: [],\n      },\n      {\n        module: \"Employee\",\n        permissions: [],\n      },\n      {\n        module: \"Offer Letter\",\n        permissions: [],\n      },\n      {\n        module: \"Relieving Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Off Boarding\",\n        permissions: [],\n      },\n\n      {\n        module: \"Experience Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Teacher Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Pre-Admission\",\n    subModule: [\n      {\n        module: \"Enquiries\",\n        permissions: [],\n      },\n      {\n        module: \"Exams\",\n        permissions: [],\n      },\n      {\n        module: \"Exam Schedules\",\n        permissions: [],\n      },\n      {\n        module: \"Result\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Academic\",\n    subModule: [\n      {\n        module: \"Class\",\n        permissions: [],\n      },\n      {\n        module: \"Section\",\n        permissions: [],\n      },\n      {\n        module: \"Subject\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Attendance\",\n    subModule: [\n      {\n        module: \"Student Attendance\",\n        permissions: [],\n      },\n      {\n        module: \"Employee Attendance\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Class Routine\",\n    subModule: [\n      {\n        module: \"Class Routine\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Student\",\n    subModule: [\n      {\n        module: \"Overview\",\n        permissions: [],\n      },\n      {\n        module: \"Admit Student\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reshuffle\",\n        permissions: [],\n      },\n\n      {\n        module: \"Promotion\",\n        permissions: [],\n      },\n      {\n        module: \"Bulk Admission\",\n        permissions: [],\n      },\n      {\n        module: \"Credential\",\n        permissions: [],\n      },\n      {\n        module: \"Quick Admit\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Assignment\",\n    subModule: [\n      {\n        module: \"Assignment\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Communication\",\n    subModule: [\n      {\n        module: \"Compose\",\n        permissions: [],\n      },\n      {\n        module: \"Report\",\n        permissions: [],\n      },\n      {\n        module: \"Credential\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Announcement\",\n    subModule: [\n      {\n        module: \"Notice\",\n        permissions: [],\n      },\n      {\n        module: \"News\",\n        permissions: [],\n      },\n\n      {\n        module: \"Holiday\",\n        permissions: [],\n      },\n\n      {\n        module: \"Awards And Achievement\",\n        permissions: [],\n      },\n      {\n        module: \"Splash News\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Gallery\",\n    subModule: [\n      {\n        module: \"Gallery\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Notification\",\n    subModule: [\n      {\n        module: \"Notification\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Event\",\n    subModule: [\n      {\n        module: \"Event\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Exam\",\n    subModule: [\n      {\n        module: \"Exam Grade\",\n        permissions: [],\n      },\n      {\n        module: \"Exam Term\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Schedule\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Hall Ticket\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Exam Mark\",\n    subModule: [\n      {\n        module: \"Exam Attendance\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Mark\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Result\",\n        permissions: [],\n      },\n\n      {\n        module: \"Marks Card\",\n        permissions: [],\n      },\n\n      {\n        module: \"Consolidated Marks Sheet\",\n        permissions: [],\n      },\n\n      {\n        module: \"Subject Wise Report\",\n        permissions: [],\n      },\n\n      {\n        module: \"Division Wise Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"LMS\",\n    subModule: [\n      {\n        module: \"Storage\",\n        permissions: [],\n      },\n      {\n        module: \"Courses\",\n        permissions: [],\n      },\n\n      {\n        module: \"Course Content\",\n        permissions: [],\n      },\n\n      {\n        module: \"Live\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Library\",\n    subModule: [\n      {\n        module: \"Books\",\n        permissions: [],\n      },\n      {\n        module: \"Periodical\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Library Member\",\n        permissions: [],\n      },\n\n      {\n        module: \"Employee Library Member\",\n        permissions: [],\n      },\n      {\n        module: \"Issue and Returns\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Leave Management\",\n    subModule: [\n      {\n        module: \"Leave Type\",\n        permissions: [],\n      },\n      {\n        module: \"Employee Leave\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Leave\",\n        permissions: [],\n      },\n\n      {\n        module: \"Leave Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Inventory\",\n    subModule: [\n      {\n        module: \"Item\",\n        permissions: [],\n      },\n      {\n        module: \"Vendor\",\n        permissions: [],\n      },\n\n      {\n        module: \"In/Out Transaction\",\n        permissions: [],\n      },\n\n      {\n        module: \"Stock ist\",\n        permissions: [],\n      },\n\n      {\n        module: \"Issue\",\n        permissions: [],\n      },\n\n      {\n        module: \"Sell\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Certificate\",\n    subModule: [\n      {\n        module: \"Study Certificate\",\n        permissions: [],\n      },\n      {\n        module: \"Transfer Certificate\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Fees\",\n    subModule: [\n      {\n        module: \"Receipt Book\",\n        permissions: [],\n      },\n      {\n        module: \"Fee Map Category\",\n        permissions: [],\n      },\n\n      {\n        module: \"Collect Fees\",\n        permissions: [],\n      },\n\n      {\n        module: \"Balance Fee\",\n        permissions: [],\n      },\n\n      {\n        module: \"Fee Overview\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reconciliation\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Hostel\",\n    subModule: [\n      {\n        module: \"Manage Hostel\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Room Type\",\n        permissions: [],\n      },\n\n      {\n        module: \"Manage Room Bed\",\n        permissions: [],\n      },\n\n      {\n        module: \"Hostel Member\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Transport\",\n    subModule: [\n      {\n        module: \"Vehicle\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Route And Trips\",\n        permissions: [],\n      },\n\n      {\n        module: \"Routes\",\n        permissions: [],\n      },\n\n      {\n        module: \"Transport Member\",\n        permissions: [],\n      },\n\n      {\n        module: \"Vehicle Log\",\n        permissions: [],\n      },\n\n      {\n        module: \"Vehicle Maintenance\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Payroll\",\n    subModule: [\n      {\n        module: \"Salary Grade\",\n        permissions: [],\n      },\n      {\n        module: \"Make Payment\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Report\",\n    subModule: [\n      {\n        module: \"Library Report\",\n        permissions: [],\n      },\n      {\n        module: \"Student Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Studnet Yearly Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Emplyee Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Employee Yearly Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Report\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Activity Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Visitor Info\",\n    subModule: [\n      {\n        module: \"Visitor Info\",\n        permissions: [],\n      },\n      {\n        module: \"Student Checkout\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Help Desk\",\n    subModule: [\n      {\n        module: \"Help Desk\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Guardian Feedback\",\n    subModule: [\n      {\n        module: \"Guardian Feedback\",\n        permissions: [],\n      },\n    ],\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { rolePermissionTableKeys } from \"../../data/tableKeys/rolePermissionData\";\nimport { ROLE_PERMISSIONS } from \"../../data/roleData\";\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nfunction toggleItemInArray(array, item) {\n  const index = array.indexOf(item);\n\n  if (index === -1) {\n    // Item not present, add it to the array\n    array.push(item);\n  } else {\n    // Item present, remove it from the array\n    array.splice(index, 1);\n  }\n\n  return array;\n}\n\nfunction addIfNotPresent(arr, str) {\n  if (!arr.includes(str)) {\n    arr.push(str);\n  }\n  return arr;\n}\n\nfunction removeFromArray(arr, str) {\n  const index = arr.indexOf(str);\n  if (index !== -1) {\n    arr.splice(index, 1);\n  }\n  return arr;\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst CRUD_OPERATIONS = [\"view\", \"add\", \"update\", \"delete\"];\n\nexport default function RolePermission() {\n  const [value, setValue] = React.useState(0);\n  const [roles, setRoles] = useState([]);\n  const [roleToEdit, setRoleToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [roleKeys, setRoleKeys] = useState([]);\n  const [allPermissionUpdate, setAllPermissionUpdate] = useState([\n    \"view\",\n    \"add\",\n    \"update\",\n    \"delete\",\n  ]);\n\n  const getRoleKeys = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.getRoleKeys);\n\n      if (roleToEdit) {\n        let allKeys = [...roleToEdit.permissions];\n        for (let key of data.result) {\n          if (!allKeys.find((k) => k.module == key.module)) {\n            allKeys.push(key);\n          }\n        }\n        setRoleKeys(allKeys);\n      } else {\n        setRoleKeys(data.result);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getRoleKeys();\n    if (value == 0) {\n      setRoleToEdit(null);\n    }\n  }, [value]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleRoleEditClick = (data) => {\n    setRoleToEdit(data);\n    setValue(1);\n  };\n  const handleCancelClick = () => {\n    setValue(0);\n  };\n  const openRoleAddUpdateModal = () => {\n    setValue(0);\n    setOpen(true);\n  };\n\n  const handleModalClose = () => setOpen(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleAddOrUpdate = async (values) => {\n    let payload = {\n      ...values,\n      permissions: roleKeys,\n    };\n\n    if (!roleToEdit) {\n      payload[\"permissions\"] = roleKeys.map((r) => ({ ...r, permissions: [] }));\n    }\n\n    try {\n      if (roleToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.role.update + \"/\" + roleToEdit._id,\n          payload\n        );\n        setValue(0);\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.role.create, payload);\n        setValue(0);\n        getData();\n      }\n\n      formik.resetForm();\n      setOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formikUpdate = useFormik({\n    initialValues: {\n      name: roleToEdit?.name || \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePermission = (module, permission) => {\n    setRoleKeys(\n      roleKeys.map((k) =>\n        k.module === module\n          ? {\n              ...k,\n              permissions: toggleItemInArray(\n                k.permissions,\n                permission.toLowerCase()\n              ),\n            }\n          : k\n      )\n    );\n  };\n\n  const handleUpdateAll = (permission) => {\n    setRoleKeys(\n      roleKeys.map((r) => ({\n        ...r,\n        permissions: allPermissionUpdate.includes(permission)\n          ? removeFromArray(r.permissions, permission)\n          : addIfNotPresent(r.permissions, permission),\n      }))\n    );\n  };\n\n  useEffect(() => {\n    let allPermissions = [];\n\n    for (let co of CRUD_OPERATIONS) {\n      if (\n        roleKeys.every((module) =>\n          module.permissions.includes(co.toLowerCase())\n        )\n      ) {\n        allPermissions.push(co.toLowerCase());\n      } else {\n        allPermissions.filter((p) => p !== co);\n      }\n    }\n\n    setAllPermissionUpdate(allPermissions);\n  }, [roleKeys]);\n\n  const handleDeleteRole = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.role.delete + \"/\" + id);\n      setRoles(roles.filter((r) => r._id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Role Permission\" />\n\n      <TabList\n        onChange={handleChange}\n        value={value}\n        labels={roleToEdit && value === 1 ? [\"List\", \"Edit\"] : [\"List\"]}\n      />\n      <TabPanel value={value} index={0}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"role permission\"\n          bodyData={roles}\n          onEditClick={handleRoleEditClick}\n          tableKeys={rolePermissionTableKeys}\n          onDeleteClick={handleDeleteRole}\n        />\n        <AddForm title=\"Add Role\" onAddClick={openRoleAddUpdateModal} />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle=\"Create Role\"\n        onClose={handleModalClose}\n        submitButtonTitle=\"Create\">\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={formik}\n              name=\"name\"\n              label=\"Role Name\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {roleToEdit && value == 1 && (\n        <TabPanel value={value} index={1}>\n          <Grid container rowSpacing={1} columnSpacing={2}>\n            <Grid item xs={12} sm={12} md={12}>\n              <FormInput\n                required={true}\n                name=\"name\"\n                type=\"text\"\n                formik={formikUpdate}\n                label=\"Role Name\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <Typography\n                sx={{\n                  margin: \"10px 0px\",\n                  fontWeight: \"500\",\n                  fontSize: \"16px\",\n                  fontWeight: 700,\n                }}>\n                {\" \"}\n                Set permission for this role\n              </Typography>\n            </Grid>\n          </Grid>\n          <TableContainer component={Paper} sx={{ marginBottom: \"60px\" }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                      paddingLeft: \"15px\",\n                    }}>\n                    Module Name\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    View\n                    <Checkbox\n                      onChange={() => handleUpdateAll(\"view\")}\n                      name=\"view\"\n                      checked={allPermissionUpdate.includes(\"view\")}\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Add{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"add\")}\n                      onChange={() => handleUpdateAll(\"add\")}\n                      name=\"add\"\n                    />{\" \"}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Update{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"update\")}\n                      onChange={() => handleUpdateAll(\"update\")}\n                      name=\"update\"\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Delete{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"delete\")}\n                      onChange={() => handleUpdateAll(\"delete\")}\n                      name=\"delete\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ROLE_PERMISSIONS.map((roleModule, i) => {\n                  const { module, subModule } = roleModule;\n\n                  return (\n                    <>\n                      <TableRow key={i}>\n                        <TableCell\n                          colSpan={5}\n                          sx={{\n                            backgroundColor: (theme) =>\n                              theme.palette.mode === \"dark\"\n                                ? \"rgba(32,33,32,1)\"\n                                : theme.palette.grey[100],\n                          }}>\n                          <Typography fontWeight={\"bold\"} paddingLeft={\"10px\"}>\n                            {module}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                      {subModule.map((m, i) => (\n                        <TableRow k={m.module + i.toString()}>\n                          <TableCell align=\"center\">{m.module}</TableCell>\n\n                          {CRUD_OPERATIONS.map((o) => (\n                            <TableCell align=\"center\" key={o}>\n                              <Checkbox\n                                onChange={() =>\n                                  handleChangePermission(m.module, o)\n                                }\n                                checked={\n                                  roleKeys\n                                    .find((role) => role.module === m.module)\n                                    ?.permissions?.includes(o) || false\n                                }\n                              />\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      ))}\n                    </>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <StyledBox\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? \"rgba(32,33,32,1)\"\n                      : theme.palette.grey[100],\n                }}>\n                <Stack spacing={2} direction=\"row\">\n                  <Button\n                    onClick={handleCancelClick}\n                    variant=\"contained\"\n                    color=\"error\"\n                    size=\"small\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={formikUpdate.handleSubmit}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Update\n                  </Button>\n                </Stack>\n              </StyledBox>\n            </Grid>\n          </Grid>\n        </TabPanel>\n      )}\n    </>\n  );\n}\n","export const userRoleTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"role\",\n  },\n];\n","import React, { useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { userRoleTableKeys } from \"../../data/tableKeys/userRoleData\";\n\nexport default function UserRole() {\n  const [data, setData] = useState([]);\n\n  return (\n    <>\n      <PageHeader title=\"User Role\" />\n      <CustomTable\n        actions={[\"edit\"]}\n        bodyDataModal=\"user role\"\n        bodyData={data}\n        tableKeys={userRoleTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Paper, Grid, Button } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nexport default function ResetPassword() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.userType,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        employeeId: values.employeeId,\n        password: values.password,\n      };\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.account.changePasswordForUser,\n        payload\n      );\n      resetForm();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      employeeId: \"\",\n      password: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.userType) {\n      getEmployees();\n    }\n  }, [entryFormik.values.userType, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"User Password Reset\" />\n      <Paper sx={{ padding: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"User Type\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"employeeId\"\n                formik={entryFormik}\n                label=\"Employees\"\n                options={employees}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                formik={entryFormik}\n                label=\"Password\"\n                name=\"password\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Change Password\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nexport const enquriesTableKeys = [\n  {\n    name: \"Student Name\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Submitted On\",\n    key: \"submittedOn\",\n    isDate: true,\n  },\n  // {\n  //   name: \"Approval Status\",\n  //   key: \"status\",\n  // },\n];\n","/** @format */\n\nimport React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ViewModel({ open, onClose, title, children }) {\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{ m: 0, p: 2, fontWeight: 600 }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { enquriesTableKeys } from \"../../data/tableKeys/enquiries\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  DialogContent,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  tableCellClasses,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport { Box, ButtonGroup, styled } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ViewModel from \"../../forms/ViewModel\";\n\nconst MuiBUtton = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"blue\",\n    color: \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nconst CustomActionComponent = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const updateStatus = async (status) => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.preadmissionEnqiry.update + \"/\" + data._id, {\n        status,\n      });\n      setLoading(false);\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      {/* <Stack direction=\"row\" spacing={2}>\n        {[\"Pending\", \"approved\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"rejected\")}\n            disableElevation\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        )}\n        {[\"Pending\", \"rejected\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"approved\")}\n            disableElevation\n            size=\"small\"\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        )}\n      </Stack> */}\n\n      <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\n        {[\"Approved\", \"Pending\"].includes(data.status) ? (\n          <LoadingButton\n            variant=\"contained\"\n            size=\"small\"\n            loading={loading == \"Rejected\"}\n            onClick={() => updateStatus(\"Rejected\")}\n            color=\"error\">\n            Reject\n          </LoadingButton>\n        ) : null}\n\n        {[\"Rejected\", \"Pending\"].includes(data.status) ? (\n          <LoadingButton\n            size=\"small\"\n            variant=\"contained\"\n            loading={loading == \"Approved\"}\n            onClick={() => updateStatus(\"Approved\")}\n            color=\"success\">\n            Approve\n          </LoadingButton>\n        ) : null}\n      </Stack>\n    </>\n  );\n};\n\nexport default function Enquiries() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [activeButton, setActiveButton] = useState(\"Pending\");\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    contents: \"\",\n    action: () => {},\n  });\n\n  const handleButtonClick = (status) => {\n    setActiveButton(status);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const getEnquiries = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionEnqiry.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"studentDetails.academicDetails.academicYear\": values.academicYear,\n            \"studentDetails.academicDetails.class\": values.class,\n            fromDate: values.fromDate,\n            toDate: values.toDate,\n          },\n        },\n      });\n      let tableData = data.result.map((d) => ({\n        ...d,\n        studentName: d.studentDetails?.basicDetails?.name,\n        submittedOn: d.createdAt,\n        class: d.studentDetails?.academicDetails?.class?.name,\n      }));\n      setData(tableData);\n      setFilteredData(tableData.filter((d) => d.status === activeButton));\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getEnquiries,\n  });\n\n  useEffect(() => {\n    if (!activeButton) {\n      return setFilteredData(data);\n    }\n    setFilteredData(data.filter((e) => e.status === activeButton));\n  }, [activeButton]);\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      contents: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.preadmissionEnqiry.delete + \"/\" + _id\n      );\n      getEnquiries();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Enquiries\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              loading={loading}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <MuiBUtton>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          {[\"Pending\", \"Approved\", \"Rejected\"].map((v, i) => (\n            <Button\n              key={i}\n              variant=\"outlined\"\n              onClick={() => {\n                handleButtonClick(v);\n              }}\n              style={{\n                backgroundColor: activeButton === v ? \"#1b3779\" : \"\",\n                color: activeButton === v ? \"white\" : \"black\",\n                textTransform: \"capitalize\",\n              }}>\n              {v}:{data.filter((item) => item.status === v).length}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </MuiBUtton>\n\n      <CustomTable\n        actions={[\"custom\", \"delete\", \"view\"]}\n        tableKeys={enquriesTableKeys}\n        bodyDataModal=\"enquiries\"\n        bodyData={filteredData}\n        onUpdate={entryFormik.handleSubmit}\n        CustomAction={CustomActionComponent}\n        onViewClick={handleClickOpenView}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ==== view enquery ===== */}\n      <ViewModel\n        title=\"Enquiry Details\"\n        open={modalData?.open}\n        tableData={modalData?.contents}\n        onClose={onCloseViewModel}>\n        {/* ======== Desktop view table ============ */}\n        <DialogContent\n          dividers\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"block\",\n              md: \"block\",\n              lg: \"block\",\n            },\n          }}>\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Academic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents.class || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Academic Year\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {`${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.from} - ${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.to}` ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Basic Information\n          </Typography>\n\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Student Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentName || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Date Of Birth\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {dayjs(\n                    modalData?.contents?.studentDetails?.basicDetails?.dob ||\n                      \"NA\"\n                  ).format(\"DD-MM-YYYY\")}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Gender\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.gender ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Blood Group\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.bloodGroup?.toUpperCase() ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Religion\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.caste ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Caste Income Certificate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.casteIncomeCertificateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Mother Tongue\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.motherTongue || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Birth Place\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.birthPlace || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Aadhar Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.aadharNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Contact Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianContactNumber || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Alternate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.alternateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Relation With Guardian\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.relationWithGuardian || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  National Id\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.nationalId || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Present Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.presentAddress || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Permanent Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.permanentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Previous School Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow width={200}>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous School Name\n                </StyledTableCell>\n                <StyledTableCell>\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.schoolName || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  TC Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.tcNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Father Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Mother Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Other Information:\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Health Condition\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.healthCondition || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Email\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails?.email ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Hostel Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.hostelRequired || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Transport Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.transportRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n\n        {/* ======== Mobile view table ============ */}\n        <DialogContent\n          dividers\n          sx={{\n            display: {\n              xs: \"block\",\n              sm: \"none\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}>\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Academic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Academic Year\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {`${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.from} - ${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.to}` ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Basic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Student Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Date Of Birth\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {dayjs(\n                    modalData?.contents?.studentDetails?.basicDetails?.dob ||\n                      \"NA\"\n                  ).format(\"DD-MM-YYYY\")}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Gender\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.gender ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Blood Group\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.bloodGroup?.toUpperCase() ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Religion\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.caste ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Caste Income Certificate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.casteIncomeCertificateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Mother Tongue\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.motherTongue || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Birth Place\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.birthPlace || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Aadhar Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.aadharNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Contact Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianContactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Alternate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.alternateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Relation With Guardian\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.relationWithGuardian || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  National Id\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.nationalId || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Present Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.presentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Permanent Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.permanentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Previous School Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow width={200}>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous School Name\n                </StyledTableCell>\n                <StyledTableCell>\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.schoolName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  TC Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.tcNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Father Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Mother Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Other Information:\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Health Condition\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.healthCondition || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Email\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails?.email ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Hostel Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.hostelRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Transport Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.transportRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nexport const examsTableKeys = [\n  {\n    name: \"Exam Name\",\n    key: \"examName\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  // {\n  //   name: \"Question\",\n  //   key: \"question\",\n  // },\n];\n","/** @format */\n\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n}));\n\nconst Question = styled(Typography)(() => ({\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n}));\n\nconst Option = styled(Typography)(() => ({\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n}));\n\nconst InputLabels = styled(InputLabel)(() => ({\n  fontSize: \"12px\",\n  fontWeight: 580,\n  color: \"#616161\",\n  paddingLeft: \"10px\",\n}));\n\nconst RadioButtons = styled(Radio)(() => ({\n  marginTop: \"-10px\",\n}));\n\nexport default function QuizQuestion({\n  quiz = {},\n  questionIndex,\n  quizData,\n  setQuizData,\n}) {\n  const handleQuestionChange = (e, i) => {\n    setQuizData(\n      quizData.map((q, index) =>\n        index === i ? { ...q, question: e.target.value } : q\n      )\n    );\n  };\n\n  const handleRemoveQuestion = (questionIndex) => {\n    setQuizData((prevQuizData) =>\n      prevQuizData.filter((_, index) => index !== questionIndex)\n    );\n  };\n\n  const handleSetCorrectOption = (o, questionIndex) => {\n    setQuizData(\n      quizData.map((q, i) =>\n        i === questionIndex ? { ...q, correctOption: o } : q\n      )\n    );\n  };\n\n  const handleOptionChange = (e, questionIndex, optionIndex) => {\n    let questionToUpdate = quizData.filter((q, i) => i === questionIndex)[0];\n    let options = questionToUpdate.options;\n    let newOptions = options.map((o, i) =>\n      i === optionIndex ? e.target.value : o\n    );\n    setQuizData(\n      quizData.map((q, i) =>\n        i === questionIndex ? { ...q, options: newOptions } : q\n      )\n    );\n  };\n  return (\n    <Wrapper>\n      <InputLabels\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n        {questionIndex + 1}.{\" \"}\n        {quiz.question ? \"Update Your Question!\" : \"Write your question\"}\n      </InputLabels>\n\n      <TextField\n        fullWidth\n        size=\"small\"\n        name=\"question\"\n        maxRows={3}\n        multiline\n        value={quiz.question}\n        placeholder=\"Type here...\"\n        onChange={(e) => handleQuestionChange(e, questionIndex)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              {questionIndex > 0 ? (\n                <IconButton\n                  color=\"error\"\n                  size=\"small\"\n                  onClick={() => handleRemoveQuestion(questionIndex)}>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </IconButton>\n              ) : null}\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Grid\n        sx={{\n          marginBottom: \"10px\",\n          backgroundColor: (theme) => theme.palette.grey[100],\n          borderRadius: \"5px\",\n          padding: \"20px\",\n          border: \"1px solid lightgrey\",\n          marginTop: \"10px\",\n        }}\n        container\n        rowGap={2}>\n        {quiz.options.map((o, i) => (\n          <Grid key={i} item xs={12} md={6} sx={{ padding: \"0 10px\" }}>\n            <Box\n              sx={{\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                display: \"flex\",\n              }}>\n              <RadioButtons\n                size=\"small\"\n                {...label}\n                color=\"default\"\n                checked={quiz.correctOption && quiz.correctOption === o}\n                onChange={(e) => handleSetCorrectOption(o, questionIndex)}\n                value={o}\n                type=\"radio\"\n              />\n              <InputLabels>Option {i + 1}</InputLabels>\n            </Box>\n            <TextField\n              multiline\n              maxRows={3}\n              fullWidth\n              size=\"small\"\n              name={`option${i + 1}`}\n              value={o}\n              onChange={(e) => handleOptionChange(e, questionIndex, i)}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useMediaQuery,\n  Button,\n  IconButton,\n  InputAdornment,\n  FormControlLabel,\n  Checkbox,\n  Radio,\n  RadioGroup,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useTheme } from \"@mui/material\";\nimport QuizQuestion from \"./QuizQuestion\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { toast } from \"react-toastify\";\n\nexport default function AddOrUpdateExamModal({\n  open = false,\n  onClose = () => {},\n  dataToUpdate = null,\n}) {\n  const theme = useTheme();\n  const { selectedSetting } = useContext(SettingContext);\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYears, setAcademicYears] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [markForm, setMarkForm] = useState({});\n  const [submiload, setSubmitload] = useState(false);\n  const [quizData, setQuizData] = useState([\n    {\n      question: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: \"\",\n    },\n  ]);\n  const [additionalInstructions, setAdditionalInstructions] = useState([\"\"]);\n  const [negativeMarking, setNegativeMarking] = useState(false);\n\n  const getData = async () => {\n    try {\n      const [academicYearData, classData] = await Promise.all([\n        get(PRIVATE_URLS.academicYear.list),\n        get(PRIVATE_URLS.class.list, {\n          params: { schoolId: selectedSetting._id },\n        }),\n      ]);\n\n      setAcademicYears(academicYearData.data?.result);\n      setClasses(classData.data?.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleOnChangeForm = (e) => {\n    const { name, value } = e.target;\n    setAddForm({\n      ...addForm,\n      [name]: value,\n    });\n  };\n\n  const handleAddQuizs = () => {\n    setQuizData([\n      ...quizData,\n      {\n        question: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctOption: \"\",\n      },\n    ]);\n  };\n\n  const handleAddInstruction = () => {\n    setAdditionalInstructions([...additionalInstructions, \"\"]);\n  };\n\n  const handleAdditionalInstructionChange = (e, index) => {\n    const updatedInstructions = [...additionalInstructions];\n    updatedInstructions[index] = e.target.value;\n    setAdditionalInstructions(updatedInstructions);\n  };\n\n  const handleDeleteInstruction = (index) => {\n    const updatedInstructions = [...additionalInstructions];\n    updatedInstructions.splice(index, 1);\n    setAdditionalInstructions(updatedInstructions);\n  };\n\n  const hanleMarkChange = (e) => {\n    const { name, value } = e.target;\n    setMarkForm((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleCheckboxChange = (event) => {\n    setNegativeMarking(event.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const quiz = quizData.map((q, index) => {\n        return {\n          question: q.question,\n          options: [\n            { value: q.options[0] },\n            { value: q.options[1] },\n            { value: q.options[2] },\n            { value: q.options[3] },\n          ],\n\n          correctOption: q.correctOption,\n        };\n      });\n      if (quiz.filter((q) => !q.question || !q.options).length)\n        return toast.error(\"Question cannot be empty\");\n      if (quiz.some((q) => q.options.some((option) => option.name === \"\")))\n        return toast.error(\"Option cannot be empty\");\n\n      if (quiz.filter((q) => !q.correctOption).length)\n        return toast.error(\"Please select a correct option\");\n      setSubmitload(true);\n      let playload = {\n        schoolId: selectedSetting._id,\n        academicYear: addForm.academicYear,\n        classId: addForm.schoolClass,\n        examName: addForm.examName,\n        passingPercentage: markForm.passingMark,\n        quiz: quiz,\n        negativeMarking: negativeMarking,\n        negativeMarkingPerQuestion: markForm.negativeMarking,\n        marksPerQuestion: markForm.mark,\n        additionalInstructions: additionalInstructions.map((add) => ({\n          point: add,\n        })),\n      };\n\n      const { data } = await post(\n        PRIVATE_URLS.preadmissionExam.create,\n        playload\n      );\n      handleClose();\n      // handleEditClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setSubmitload(false);\n  };\n\n  const handleClose = () => {\n    // setEditId(null);\n    setQuizData([\n      {\n        question: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctOption: \"\",\n      },\n    ]);\n    setAddForm({});\n    setMarkForm({});\n    setNegativeMarking(false);\n    setAdditionalInstructions([]);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullScreen={fullScreen}\n      maxWidth=\"md\"\n      fullWidth\n      aria-labelledby=\"responsive-dialog-title\">\n      <Box component=\"form\" sx={{ padding: 2 }} onSubmit={handleSubmit}>\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              fontWeight=\"bold\">\n              {dataToUpdate ? \"Update Exam\" : \"Add Exam\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <FormControl size=\"small\" fullWidth required>\n              <InputLabel>Academic Year</InputLabel>\n              <Select\n                labelId=\"demo-simpless-select-filled-label\"\n                id=\"demo-simple-select-filled-l\"\n                varient=\"outlined\"\n                label=\"academic year\"\n                name=\"academicYear\"\n                value={addForm.academicYear || \"\"}\n                onChange={handleOnChangeForm}>\n                {academicYears &&\n                  academicYears.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {row.from} - {row.to}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <FormControl size=\"small\" fullWidth required>\n              <InputLabel>Class</InputLabel>\n              <Select\n                variant=\"outlined\"\n                label=\"class\"\n                labelId=\"demo-simple-select-filled-label\"\n                id=\"demo-simple-select-filled\"\n                name=\"schoolClass\"\n                value={addForm.schoolClass || \"\"}\n                onChange={handleOnChangeForm}>\n                {classes &&\n                  classes.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {row.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4} sx={{ mt: 0.2 }}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              required\n              size=\"small\"\n              label=\"Exam name\"\n              name=\"examName\"\n              id=\"filled-required\"\n              value={addForm.examName || \"\"}\n              onChange={handleOnChangeForm}\n            />\n          </Grid>\n        </Grid>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            padding: \"10px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mt: 4,\n            mb: 2,\n            border: \"1px solid lightgray\",\n            borderRadius: \"5px\",\n          }}>\n          <Typography sx={{ textAlign: \"left\", fontWeight: \"bold\" }}>\n            Add Questions:\n          </Typography>\n\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleAddQuizs}\n            startIcon={<AddIcon />}>\n            ADD\n          </Button>\n        </Box>\n\n        {quizData?.map((q, questionIndex) => (\n          <QuizQuestion\n            quiz={q}\n            questionIndex={questionIndex}\n            key={questionIndex}\n            quizData={quizData}\n            setQuizData={setQuizData}\n          />\n        ))}\n\n        <Box sx={{ mt: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              padding: \"10px\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mt: 4,\n              mb: 2,\n              border: \"1px solid lightgray\",\n              borderRadius: \"5px\",\n            }}>\n            <Typography sx={{ fontWeight: \"bold\" }}>\n              Additional Instruction:\n            </Typography>\n\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={handleAddInstruction}>\n              Add\n            </Button>\n          </Box>\n\n          {additionalInstructions.map((instruction, index) => (\n            <Grid container key={index} sx={{ mt: 1 }}>\n              <Grid item xs={12} md={12} lg={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  size=\"small\"\n                  multiline\n                  value={instruction}\n                  onChange={(e) => handleAdditionalInstructionChange(e, index)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          color=\"error\"\n                          size=\"small\"\n                          onClick={() => handleDeleteInstruction(index)}>\n                          <DeleteIcon fontSize=\"small\" color=\"error\" />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ))}\n        </Box>\n\n        <Grid container spacing={2} sx={{ mt: 1.5 }}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                gap: \"4px\",\n              }}>\n              <Typography sx={{ fontSize: \"16px\" }}>\n                Negative Marking:{\" \"}\n              </Typography>\n\n              <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n                value={negativeMarking}\n                onChange={handleCheckboxChange}\n                sx={{ mt: 1 }}>\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n\n              {/* <Typography sx={{ fontSize: \"16px\" }}>\n                Negative Marking:{\" \"}\n              </Typography>\n              <Box>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      fontSize=\"small\"\n                      checked={negativeMarking}\n                      onChange={handleCheckboxChange}\n                    />\n                  }\n                  label={\n                    <Typography style={{ fontSize: \"15px\" }}>Yes</Typography>\n                  }\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      fontSize=\"small\"\n                      checked={negativeMarking}\n                      onChange={(event) =>\n                        setNegativeMarking(event.target.checked)\n                      }\n                    />\n                  }\n                  label={\n                    <Typography style={{ fontSize: \"15px\" }}>No</Typography>\n                  }\n                />\n              </Box> */}\n            </Box>\n          </Grid>\n          {negativeMarking === \"true\" && (\n            <Grid item xs={12} md={12} lg={4}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                required\n                label=\"Negative Marks Per Question\"\n                type=\"number\"\n                name=\"negativeMarking\"\n                value={markForm.negativeMarking || \"\"}\n                onChange={hanleMarkChange}\n                InputLabelProps={{ style: { fontSize: 12 } }}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12} md={12} lg={4}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              required\n              label=\"Marks Per Question\"\n              type=\"number\"\n              name=\"mark\"\n              value={markForm.mark || \"\"}\n              onChange={hanleMarkChange}\n              InputLabelProps={{ style: { fontSize: 12 } }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12} lg={4}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Pass percentage (%)\"\n              size=\"small\"\n              required\n              type=\"number\"\n              name=\"passingMark\"\n              value={markForm.passingMark || \"\"}\n              onChange={hanleMarkChange}\n              InputLabelProps={{ style: { fontSize: 12 } }}\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: \"3%\",\n              mt: 3,\n            }}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"error\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n\n            <LoadingButton\n              loading={submiload}\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \"&:hover\": {\n                  background: \"#1b3779\",\n                },\n              }}>\n              Submit\n            </LoadingButton>\n          </Box>\n        </Grid>\n      </Box>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { examsTableKeys } from \"../../data/tableKeys/exams\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddForm from \"../../forms/AddForm\";\nimport AddOrUpdateExamModal from \"./AddOrUpdateExamModal\";\n\nexport default function Exams() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [gettingList, setGettingList] = useState(false);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  // question model;\n  const [openQuestionModel, setOpenQuestionModel] = useState(false);\n  const handleCloseQuestionModel = () => setOpenQuestionModel(false);\n  const handleOpenQuestionModel = () => setOpenQuestionModel(true);\n\n  // get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  // get exam list\n  const getExamList = async (values) => {\n    try {\n      setGettingList(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            class: values.class,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setData(data.result.map((d) => ({ ...d, class: d.class.name })));\n    } catch (error) {\n      console.log(error);\n    }\n    setGettingList(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n    },\n    onSubmit: getExamList,\n  });\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.preadmissionExam.delete + \"/\" + _id\n      );\n\n      getExamList();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exams\" />\n\n      <AddForm title=\"Add Exam\" onAddClick={handleOpenQuestionModel} />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              loading={gettingList}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={examsTableKeys}\n        bodyDataModal=\"exams\"\n        bodyData={data}\n        onDeleteClick={handleDelete}\n      />\n      <AddOrUpdateExamModal\n        open={openQuestionModel}\n        onClose={handleCloseQuestionModel}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Grid } from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function AddOrUpdateExamSchedule({\n  open,\n  selectedSetting,\n  handleClose = () => {},\n}) {\n  const [dataToEdit, setDataToEdit] = useState();\n  const [loading, setLoading] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [exams, setExams] = useState([]);\n\n  // get years\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"classId\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik?.values.academicYear,\n            class: entryFormik?.values.classId,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setExams(data.result.map((d) => ({ label: d.examName, value: d._id })));\n      entryFormik.setFieldValue(\"examId\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        dateOfExam: dayjs(values.dateOfExam).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n\n      console.log(payload, \"ppppppp\");\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.preadmissionExamSchedule.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.preadmissionExamSchedule.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      classId: \"\",\n      examId: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      roomNumber: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik?.values.academicYear && entryFormik?.values.classId) {\n      getExamList();\n    }\n  }, [\n    entryFormik?.values.academicYear,\n    entryFormik?.values.classId,\n    selectedSetting,\n  ]);\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Schedules\" : \"Add Exam Schedules\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"classId\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"examId\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"dateOfExam\"\n              label=\"Date of Exam\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"time\"\n              name=\"startTime\"\n              label=\"Start Time\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"time\"\n              name=\"endTime\"\n              label=\"End Time\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"roomNumber\"\n              label=\"Room No.\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"address\" label=\"Address\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport image from \"../assets/images/deleteicon.png\";\nimport { Box, Button, Modal, Typography } from \"@mui/material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 350,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  p: 2,\n};\nexport default function DeleteModal(props) {\n  console.log(props, \"llkprops\");\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        open={props.deleteModal}\n        onClose={() => props.setDeleteModal(false)}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Are you sure want to delete this item?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => props.setDeleteModal(false)}>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                props.handleDelete(props.id, props.routineIndex);\n                props.setDeleteModal(false);\n              }}\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\">\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddOrUpdateExamSchedule from \"./AddOrUpdateExamSchedule\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport copy from \"clipboard-copy\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { toast } from \"react-toastify\";\nimport { Delete } from \"@mui/icons-material\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nexport default function ExamSchedules() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // get years\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik?.values.academicYear,\n            class: entryFormik?.values.class,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setExams(data.result.map((d) => ({ label: d.examName, value: d._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamSchedules = async (values) => {\n    console.log(values, \"exam values\");\n\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionExamSchedule.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            class: values.class,\n            exam: values.exam,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      console.log(data.result, \"exam list\");\n      setData(data.result.map((d) => ({ ...d, class: d.class.name })));\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      exam: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getExamSchedules,\n  });\n\n  useEffect(() => {\n    if (entryFormik?.values.academicYear && entryFormik?.values.class) {\n      getExamList();\n    }\n  }, [\n    entryFormik?.values.academicYear,\n    entryFormik?.values.class,\n    selectedSetting,\n  ]);\n\n  const AddExamSchedules = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // setDataToEdit(null);\n  };\n\n  const handleCopyLink = (copylink) => {\n    console.log(copylink, \"copylink\");\n    copy(`${copylink}`);\n    toast.success(\"Exam Link Copied successfully\");\n  };\n\n  const handleUpdateLink = async (id) => {\n    try {\n      const res = await put(\n        `${PRIVATE_URLS.preadmissionExamSchedule.enableExamLink}${id}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitNotify = async (e, id) => {\n    e.preventDefault();\n    try {\n      const res = await post(\n        `${PRIVATE_URLS.preadmissionExamSchedule.sendVenueDetailsToStudents}/${id}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(\n        PRIVATE_URLS.preadmissionExamSchedule.delete + \"/\" + id\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Schedules\" />\n\n      <AddForm title=\"Add Exam Schedules\" onAddClick={AddExamSchedules} />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Academic Year</TableCell>\n\n              <TableCell align=\"center\">Class</TableCell>\n              <TableCell align=\"center\">Exam</TableCell>\n              <TableCell align=\"center\">Exam Link</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          {data.map((data, index) => (\n            <TableRow>\n              <TableCell align=\"center\">\n                {page * rowsPerPage + index + 1}\n              </TableCell>\n              <TableCell align=\"center\">\n                {data.academicYear.academicYearFrom}-\n                {data.academicYear.academicYearTo}\n              </TableCell>\n\n              <TableCell align=\"center\">{data.class.name}</TableCell>\n              <TableCell align=\"center\">{data.exam?.examName}</TableCell>\n              <TableCell align=\"center\">\n                <Tooltip\n                  title={`${\n                    data.examLinkEnabled === true ? \"Enable\" : \"Disable\"\n                  }`}>\n                  <Switch\n                    key={data._id}\n                    onClick={() => handleUpdateLink(data._id)}\n                    defaultChecked={data.examLinkEnabled ? true : false}\n                  />\n                </Tooltip>\n\n                <Tooltip title=\"Copy Link\">\n                  <IconButton\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleCopyLink(data?.examLink)}>\n                    <ContentCopyIcon fontSize=\"small\" color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n\n              <TableCell>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    gap: 2,\n                  }}>\n                  <Tooltip title=\"Update\">\n                    <IconButton\n                      style={{\n                        color: \"#1b3779\",\n                      }}\n                      size=\"small\">\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={() => setDeleteModal(data._id)}>\n                      <Delete color=\"error\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <DeleteModal\n                    deleteModal={deleteModal}\n                    handleDelete={handleDelete}\n                    id={data._id}\n                    setDeleteModal={setDeleteModal}\n                  />\n\n                  <Button\n                    size=\"small\"\n                    onClick={(e) => handleSubmitNotify(e, data._id)}\n                    disabled={data.notified === true}\n                    variant=\"contained\">\n                    {data.notified === true ? \"Notified\" : \"Notify\"}\n                  </Button>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {/* ==== add/edit exam schedules ======== */}\n      <AddOrUpdateExamSchedule\n        open={open}\n        handleClose={handleClose}\n        selectedSetting={selectedSetting}\n      />\n    </>\n  );\n}\n","export const resultTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Max marks\",\n    key: \"maxMarks\",\n  },\n  {\n    name: \"Passing marks \",\n    key: \"passingMarks\",\n  },\n  {\n    name: \"Obtained marks\",\n    key: \"obtainedMarks\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { resultTableKeys } from \"../../data/tableKeys/result\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { Box, ButtonGroup, styled } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\n\nconst MuiBUtton = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nexport default function Result() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [classes, setClasses] = useState([]);\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Result\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <MuiBUtton>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          <Button variant=\"contained\">Pending:56</Button>\n          <Button>Approved: 100</Button>\n\n          <Button>Rejected:0</Button>\n        </ButtonGroup>\n      </MuiBUtton>\n\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={resultTableKeys}\n        bodyDataModal=\"result\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","export const academicClassTableKeys = [\n  {\n    name: \"Class\",\n    key: \"name\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Is-Public\",\n    key: \"isPublic\",\n  },\n];\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport { academicClassTableKeys } from \"../../data/tableKeys/academicClassData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Class() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getEmployees();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.class.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.class.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      classTeachers: dataToEdit?.classTeachers?.map((c) => c._id) || [],\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      numericName: dataToEdit?.numericName || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.class.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Classes\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicClassTableKeys}\n        bodyDataModal=\"class\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Class\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class\" : \"Add Class\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}\n      >\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Class Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"classTeachers\"\n              label={`Class Teachers - (${entryFormik.values.classTeachers.length})`}\n              required={false}\n              showSearch={true}\n              multiple={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is-Public\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"numericName\"\n              label=\"Numeric Name\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const academicSectionTableKeys = [\n  { name: \"Section Name\", key: \"name\" },\n  // {\n  //   name: \"Class\",\n  //   path: \"class\",\n  //   key: \"name\",\n  // },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Is-Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  ListSubheader,\n  TextField,\n  InputAdornment,\n} from \"@mui/material\";\nimport React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ThemeModeContext from \"../context/ThemeModeContext\";\n\nconst containsText = (text, searchText) =>\n  text?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1;\n\nfunction CustomSelect({\n  value,\n  name = \"\",\n  label = \"\",\n  options = [],\n  onChange = () => {},\n  disabled = false,\n  required = false,\n  multiple = false,\n  isSearch = true,\n}) {\n  const [blurred, setBlurred] = useState(false);\n\n  var inputRef = useRef(undefined);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const displayedOptions = useMemo(\n    () => options.filter((option) => containsText(option.label, searchText)),\n    [searchText, options, blurred]\n  );\n\n  useEffect(() => {\n    setSearchText(\"\");\n  }, [blurred]);\n\n  const labelColor =\n    disabled && !isDarkMode\n      ? \"gray\"\n      : !disabled && isDarkMode\n      ? \"white\"\n      : !disabled && !isDarkMode\n      ? \"black\"\n      : disabled && isDarkMode\n      ? \"gray\"\n      : \"inherit\";\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n      sx={{ top: \"4px\" }}>\n      <InputLabel sx={{ color: labelColor }} shrink={true} id={label}>\n        {label}\n      </InputLabel>\n      <Select\n        disabled={disabled}\n        notched\n        name={name}\n        multiple={multiple}\n        labelId={label}\n        value={value || \"\"}\n        label={label}\n        onChange={onChange}\n        onAnimationEnd={() => inputRef?.current?.focus()}\n        MenuProps={{ autoFocus: false }}\n        onBlur={() => setBlurred(!blurred)}>\n        {isSearch && (\n          <ListSubheader>\n            <TextField\n              onBlur={() => setBlurred(!blurred)}\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={(e) => setSearchText(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n\n        {displayedOptions.map((s, i) => (\n          <MenuItem key={i} value={s.value}>\n            {s.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default memo(CustomSelect);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSectionTableKeys } from \"../../data/tableKeys/academicSectionData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Section() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n      if (!payload.sectionTeacher) {\n        delete payload.sectionTeacher;\n      }\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.section.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.section.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      sectionTeacher: dataToEdit?.sectionTeacher?._id || \"\",\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (selectedClass) {\n      getData();\n    }\n  }, [selectedClass, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.section.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Section\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicSectionTableKeys}\n        bodyDataModal=\"section\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Section\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit sections ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Section\" : \"Add Section\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}\n      >\n        <Grid rowSpacing={1} columnSpacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Section Name\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"sectionTeacher\"\n              label=\"Section Teacher\"\n              options={employees}\n              showSearch={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is-Public\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const academicSubjectTableKeys = [\n  { name: \"Subject Name\", key: \"name\" },\n  {\n    name: \"Subject Code\",\n    key: \"code\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSubjectTableKeys } from \"../../data/tableKeys/academicSubjectData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Subject_Type = [\n  { label: \"Mandatory\", value: \"mandatory\" },\n  { label: \"Optional\", value: \"optional\" },\n];\n\nconst Subject_Group = [\n  { label: \"Scholastic\", value: \"scholastic\" },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function Subject() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting, selectedSetting._id]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.subject.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.subject.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      code: dataToEdit?.code || \"\",\n      subjectType: dataToEdit?.subjectType || \"\",\n      subjectGroup: dataToEdit?.subjectGroup || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      subjectTeachers: dataToEdit?.subjectTeachers?.map((t) => t._id) || [],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    console.log(selectedClass, \"000000\");\n    if (selectedClass) {\n      setData([]);\n      getData();\n    } else {\n      setData([]);\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.subject.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicSubjectTableKeys}\n        bodyDataModal=\"subject\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Subject\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit Subjects ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update\" : \"Add Subject\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Subject Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"code\"\n              label=\"Subject Code\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectType\"\n              label=\"Subject Type\"\n              options={Subject_Type}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectGroup\"\n              label=\"Group\"\n              options={Subject_Group}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              showSearch={true}\n              multiple={true}\n              formik={entryFormik}\n              name=\"subjectTeachers\"\n              label={`Subject Teachers-(${entryFormik.values.subjectTeachers.length})`}\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentAttendanceReportTableKeys = [\n  {\n    name: \"Student\",\n    key: \"student\",\n  },\n  {\n    name: \"Working Days\",\n    key: \"workingDays\",\n  },\n  {\n    name: \"Present Days\",\n    key: \"presentDays\",\n  },\n\n  {\n    name: \"Percentage\",\n    key: \"percentagePresent\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\n\nimport NoTableData from \"../../components/Tables/NoTableData\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function StudentAttendanceTable({\n  bodyData = [],\n  date = new Date(Date.now()),\n  setBodyData = () => {},\n  bodyDataModal = \"Attendance data\",\n  isDataReady = true,\n  classId,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateAttendance = (empId, status) => {\n    setBodyData(\n      bodyData.map((d) =>\n        d.student._id == empId ? { ...d, attendanceStatus: status } : d\n      )\n    );\n  };\n\n  const handleUpdateAll = (status) => {\n    setBodyData(\n      bodyData.map((d) => ({\n        ...d,\n        attendanceStatus: status,\n      }))\n    );\n  };\n\n  const handleUpdateAttendance = async () => {\n    try {\n      setUpdating(true);\n      const { data } = await put(PRIVATE_URLS.studentAttendance.update, {\n        attendanceData: bodyData.map((d) => ({\n          ...d,\n          student: d.student._id,\n        })),\n        date,\n        schoolId: selectedSetting._id,\n        classId,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setUpdating(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Roll Number\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Present All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"absent\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"present\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Absent All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"absent\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length\n              ? bodyData.map((data, index) => (\n                  <TableRow key={data._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {data.student?.basicInfo?.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {data.student?.academicInfo?.rollNumber}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"present\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.student?._id, \"present\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"absent\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.student?._id, \"absent\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        {!bodyData.length ? null : (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px 10px\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={updating}\n              onClick={handleUpdateAttendance}\n              size=\"small\">\n              Update\n            </LoadingButton>\n          </Box>\n        )}\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport { toast } from \"react-toastify\";\nimport { saveAs } from \"file-saver\";\n\nexport function downloadFile(\n  contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  data,\n  filename\n) {\n  // Convert the buffer data to a Blob\n  const blob = new Blob([data], {\n    type: contentType,\n  });\n\n  // Save the Blob as a file using FileSaver.js\n  saveAs(blob, filename);\n}\n\nexport function hasAllValues(obj, exceptions = [], showToast = true) {\n  let allValuesPresent = true;\n  for (const key in obj) {\n    if (!exceptions.includes(key) && !obj[key]) {\n      allValuesPresent = false;\n      if (showToast) {\n        toast.error(`Value for \"${key}\" is missing!`);\n      }\n    }\n  }\n  return allValuesPresent;\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { studentAttendanceReportTableKeys } from \"../../data/tableKeys/studentAttendanceReportData\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport StudentAttendanceTable from \"./StudentAttendanceTable\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function StudentAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [reportData, setReportData] = useState([]);\n  const [overViewData, setOverViewData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [fetchingAttendanceData, setFetchingAttendanceData] = useState(false);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [downloadingAbsent, setDownloadingAbsent] = useState(false);\n  const [fetchingreport, setFetchingReport] = useState(false);\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const downloadAbsentStudentsReport = async (values) => {\n    try {\n      setDownloadingAbsent(true);\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.donwloadAbsentReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            date: dayjs(attendanceFormik.values.date).format(\"YYYY-MM-DD\"),\n            classId: values.sectionInfo.class,\n            sectionId: values.section,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", data, \"student-absent-list\");\n      setDownloadingAbsent(false);\n    } catch (error) {\n      setDownloadingAbsent(false);\n    }\n  };\n\n  const handleFindClick = async (values) => {\n    try {\n      setFetchingAttendanceData(true);\n      const { data } = await get(PRIVATE_URLS.studentAttendance.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          date: dayjs(values.date).format(\"YYYY-MM-DD\"),\n        },\n      });\n\n      setAttendanceData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceData(false);\n  };\n\n  const attendanceFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      date: dayjs(new Date()).format(\"YYYY/MM/DD\"),\n    },\n    onSubmit: handleFindClick,\n  });\n\n  useEffect(() => {\n    setAttendanceData([]);\n  }, [attendanceFormik.values]);\n\n  const getStudentAttendanceOverview = async (values) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.getAttendanceOverview,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n            classId: values.class,\n          },\n        }\n      );\n      setOverViewData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const overviewFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      date: dayjs(new Date()).format(\"YYYY/MM/DD\"),\n    },\n    onSubmit: getStudentAttendanceOverview,\n  });\n\n  // useEffect(() => {\n  //   if (overviewFormik.values.class && overviewFormik.values.date) {\n  //     overviewFormik.handleSubmit();\n  //   }\n  // }, [overviewFormik.values.class, overviewFormik.values.date]);\n\n  useEffect(() => {\n    if (overviewFormik.values.class && overviewFormik.values.date) {\n      getStudentAttendanceOverview(overviewFormik.values);\n    }\n  }, [overviewFormik.values.class, overviewFormik.values.date]);\n\n  const getAttendanceReport = async (values) => {\n    try {\n      setFetchingReport(true);\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.getAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            classId: values.class,\n            sectionId: values.section,\n            month: dayjs(new Date(values.month)).get(\"month\") + 1,\n            year: dayjs(new Date(values.month)).get(\"year\"),\n          },\n        }\n      );\n      setReportData(data.result);\n      setFetchingReport(false);\n    } catch (error) {\n      console.log(error);\n      setFetchingReport(false);\n    }\n  };\n\n  const reportFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      month: null,\n    },\n    onSubmit: getAttendanceReport,\n    enableReinitialize: true,\n  });\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      reportFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      overviewFormik.setFieldValue(\"class\", data.result[0]?._id);\n      attendanceFormik.setFieldValue(\"class\", data.result[0]?._id);\n      reportFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class:\n              overviewFormik.values.class ||\n              attendanceFormik.values.class ||\n              reportFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n\n      attendanceFormik.setFieldValue(\"section\", data.result[0]?._id);\n      reportFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      overviewFormik.values.class ||\n      attendanceFormik.values.class ||\n      reportFormik.values.class\n    ) {\n      getSections();\n    }\n  }, [\n    overviewFormik.values.class,\n    attendanceFormik.values.class,\n    reportFormik.values.class,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    attendanceFormik.resetForm();\n    reportFormik.resetForm();\n    overviewFormik.resetForm();\n  }, [value]);\n\n  return (\n    <>\n      <PageHeader title=\"Student Attedance\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Attedance\", \"Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={overviewFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={overviewFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\">Section</TableCell>\n                <TableCell align=\"center\">Present</TableCell>\n                <TableCell align=\"center\">Absent</TableCell>\n                <TableCell align=\"center\">Percentage</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {overViewData.length > 0 &&\n                overViewData.map((attendanceStudent, index) => (\n                  <TableRow key={attendanceStudent._id}>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.sectionInfo.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.totalPresent}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.totalAbsent}\n                      <LoadingButton\n                        size=\"small\"\n                        loading={downloadingAbsent}\n                        variant=\"contained\"\n                        sx={{ ml: 1 }}\n                        onClick={() =>\n                          downloadAbsentStudentsReport(attendanceStudent)\n                        }>\n                        Download\n                      </LoadingButton>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.percentage}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          {!overViewData.length && (\n            <Typography\n              variant=\"h6\"\n              sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n              No data found\n            </Typography>\n          )}\n        </TableContainer>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={attendanceFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={attendanceFormik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={attendanceFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n            <Grid xs={12} md={3} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <LoadingButton\n                loading={fetchingAttendanceData}\n                onClick={attendanceFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <StudentAttendanceTable\n          date={attendanceFormik.values.date}\n          bodyData={attendanceData}\n          setBodyData={setAttendanceData}\n          classId={attendanceFormik.values.class}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={reportFormik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={reportFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={reportFormik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"Month\"\n                name=\"month\"\n                openTo=\"month\"\n                inputFormat=\"MM\"\n                views={[\"month\"]}\n                required={true}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              display={\"flex\"}\n              gap={1}\n              justifyContent={\"flex-end\"}>\n              <LoadingButton\n                loading={fetchingreport}\n                onClick={reportFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"reports\"\n          bodyData={reportData}\n          tableKeys={studentAttendanceReportTableKeys}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeAttendanceReportTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"employee\",\n  },\n  {\n    name: \"Working Days\",\n    key: \"workingDays\",\n  },\n  {\n    name: \"Present Days\",\n    key: \"presentDays\",\n  },\n\n  {\n    name: \"Percentage\",\n    key: \"percentagePresent\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\n\nimport NoTableData from \"../../components/Tables/NoTableData\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function EmployeeAttendanceTable({\n  bodyData = [],\n  date = new Date(Date.now()),\n  setBodyData = () => {},\n  bodyDataModal = \"Attendance data\",\n  isDataReady = true,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateAttendance = (empId, status) => {\n    setBodyData(\n      bodyData.map((d) =>\n        d.employee._id == empId ? { ...d, attendanceStatus: status } : d\n      )\n    );\n  };\n\n  const handleUpdateAll = (status) => {\n    setBodyData(\n      bodyData.map((d) => ({\n        ...d,\n        attendanceStatus: status,\n      }))\n    );\n  };\n\n  const handleUpdateAttendance = async () => {\n    try {\n      setUpdating(true);\n      const { data } = await put(PRIVATE_URLS.employeeAttendance.update, {\n        attendanceData: bodyData.map((d) => ({\n          ...d,\n          employee: d.employee._id,\n        })),\n        date,\n        schoolId: selectedSetting._id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setUpdating(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Employee Id\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Present All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"absent\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"present\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Absent All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"absent\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Late All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"absent\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"late\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length\n              ? bodyData.map((data, index) => (\n                  <TableRow key={data._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {data.employee?.basicInfo?.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {data.employee?.basicInfo?.empId}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"present\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"present\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"absent\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"absent\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"late\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"late\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        {!bodyData.length ? null : (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px 10px\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={updating}\n              onClick={handleUpdateAttendance}\n              size=\"small\">\n              Update\n            </LoadingButton>\n          </Box>\n        )}\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { employeeAttendanceReportTableKeys } from \"../../data/tableKeys/employeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport EmployeeAttendanceTable from \"./EmployeeAttendanceTable\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [roles, setRoles] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [fetchingAttendanceData, setFetchingAttendanceData] = useState(false);\n  const [fetchingAttendanceReport, setFetchingAttendanceReport] =\n    useState(false);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleFindClick = async (values) => {\n    try {\n      setFetchingAttendanceData(true);\n      const { data } = await get(PRIVATE_URLS.employeeAttendance.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          roleId: values.role,\n          date: values.date,\n        },\n      });\n      setAttendanceData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceData(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      role: \"\",\n      date: dayjs(new Date()),\n    },\n    onSubmit: handleFindClick,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.date && entryFormik.values.role) {\n      setAttendanceData([]);\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleGetReport = async (values) => {\n    try {\n      setFetchingAttendanceReport(true);\n      const { data } = await get(\n        PRIVATE_URLS.employeeAttendance.getAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            roleId: values.role,\n            fromDate: values.fromDate,\n            toDate: values.toDate,\n          },\n        }\n      );\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceReport(false);\n  };\n\n  const reportFormik = useFormik({\n    initialValues: {\n      role: \"\",\n      date: dayjs(new Date()),\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    if (\n      reportFormik.values.fromDate &&\n      reportFormik.values.role &&\n      reportFormik.values.toDate\n    ) {\n      setData([]);\n      reportFormik.handleSubmit();\n    }\n  }, [reportFormik.values, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Attedance\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Attedance\", \"Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"role\"\n                formik={entryFormik}\n                label=\"Select Roles\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={fetchingAttendanceData}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <EmployeeAttendanceTable\n          date={entryFormik.values.date}\n          bodyData={attendanceData}\n          setBodyData={setAttendanceData}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"role\"\n                formik={reportFormik}\n                label=\"Select Roles\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"To Date\"\n                name=\"toDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                onClick={reportFormik.handleSubmit}\n                loading={fetchingAttendanceReport}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"reports\"\n          bodyData={data}\n          tableKeys={employeeAttendanceReportTableKeys}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport { Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../forms/AddForm\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport FormInput from \"../forms/FormInput\";\nimport FormModal from \"../forms/FormModal\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function ClassRoutine() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      teacher: \"\",\n      roomNo: \"\",\n      startTime: \"\",\n      endTime: \"\",\n    },\n    onSubmit: console.log(\"nnnnnnn\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      class: \"\",\n    },\n    onSubmit: console.log(\"nnnnnnn\"),\n  });\n\n  const AddClassRoutine = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getSubject();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    getClasses();\n\n    getEmployees();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Class Routine\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Typography component=\"h1\" sx={{ fontWeight: \"bold\", mt: 1 }}>\n        Sections\n      </Typography>\n\n      <AddForm title=\"Add Class Routine\" onAddClick={AddClassRoutine} />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class Routine\" : \"Add Routine\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"class\"\n              label=\"Class\"\n              required={true}\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"section\"\n              label=\"Section\"\n              required={true}\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"subject\"\n              label=\"Subject\"\n              required={true}\n              options={subjects}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"teacher\"\n              label=\"Teacher\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"roomNo\" label=\"Room Number\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"startTime\"\n              label=\"Start Time\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"endTime\" label=\"End Time\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import { Box, Stack, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst TitleContainer = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  borderRadius: \"5px\",\n  padding: \"2px 5px\",\n  width: \"60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nconst ValueContainer = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nexport default function StudentCount({\n  title = \"\",\n  count = 0,\n  showTitle = false,\n}) {\n  return (\n    <Stack direction=\"row\" columnGap={showTitle ? 1 : 0}>\n      {showTitle ? (\n        <TitleContainer>\n          <Typography\n            sx={{ fontSize: \"14px\", color: \"white\", fontWeight: \"bold\" }}\n          >\n            {title}\n          </Typography>\n        </TitleContainer>\n      ) : null}\n      <ValueContainer>\n        <Typography sx={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\n          {count}\n        </Typography>\n      </ValueContainer>\n    </Stack>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  styled,\n} from \"@mui/material\";\nimport StudentCount from \"../../components/Student/StudentCount\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst TableHeader = styled(TableCell)(({ theme }) => ({\n  borderRight: \"1px solid grey\",\n}));\nconst TableDivider = styled(Divider)(({ theme }) => ({\n  borderBottomColor: \"grey\",\n  width: \"100%\",\n}));\n\nconst DataContiner = styled(Box)(({ theme }) => ({\n  marginTop: \"52px\",\n  display: \"flex\",\n  rowGap: \"2px\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  paddingBottom: \"10px\",\n}));\n\nexport default function Overview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectAcademicYear, setSelectAcademicYear] = useState(\"\");\n  const [overviewDetails, setOverviewDetails] = useState([]);\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [totalMaleStudents, setTotalMaleStudents] = useState(0);\n  const [totalFemaleStudents, setTotalFemaleStudents] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setSelectAcademicYear(data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    const academicYearChanged = async () => {\n      try {\n        if (selectAcademicYear) {\n          const { data } = await get(PRIVATE_URLS.student.overView, {\n            params: {\n              schoolId: selectedSetting._id,\n              academicYear: selectAcademicYear,\n            },\n          });\n\n          setOverviewDetails(data?.result);\n\n          setTotalStudents(data.result.totalStudentsCount);\n          setTotalMaleStudents(data.result.totalMaleStudentsCount);\n          setTotalFemaleStudents(data.result.totalFemaleStudentsCount);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    academicYearChanged();\n  }, [selectAcademicYear, selectedSetting]);\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(\n        PRIVATE_URLS.student.downloadAllStudentsExcel,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: selectAcademicYear,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Overview\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"academicYear\"\n              value={selectAcademicYear}\n              onChange={(e) => setSelectAcademicYear(e.target.value)}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\", mt: 2 }}>\n            <Tooltip title=\"Download\">\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleGetDownloadExcel}>\n                Download Students\n              </LoadingButton>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Box sx={{ fontSize: { md: \"15px\", sm: \"12px\" }, padding: \"1.2rem\" }}>\n        <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n          <Box>Total Students:{totalStudents}</Box>\n          <Box>Total Male Students:{totalMaleStudents}</Box>\n          <Box>Total Female Students:{totalFemaleStudents}</Box>\n        </Box>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableHeader align=\"center\">Class</TableHeader>\n\n              <TableHeader align=\"center\">Students</TableHeader>\n\n              <TableHeader align=\"center\">Sections</TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {overviewDetails?.data?.map((overview, i) => (\n              <TableRow key={overview.className}>\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\" }}\n                  align=\"center\">\n                  {overview.name}\n                </TableCell>\n\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\", padding: 0 }}\n                  align=\"center\">\n                  <DataContiner>\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Male\"\n                      count={overview.maleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Female\"\n                      count={overview.femaleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Total\"\n                      count={overview.totalStudents}\n                    />\n                  </DataContiner>\n                </TableCell>\n\n                <TableCell align=\"left\">\n                  <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                      <TableHead\n                        sx={{\n                          backgroundColor: (theme) =>\n                            theme.palette.mode === \"dark\"\n                              ? theme.palette.primary.dark\n                              : theme.palette.primary.light,\n                        }}>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\">\n                              {overview.section}\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\" key={index}>\n                              <Box\n                                sx={{\n                                  display: \"flex\",\n                                  rowGap: \"2px\",\n                                  flexDirection: \"column\",\n                                }}>\n                                <StudentCount\n                                  title=\"Male\"\n                                  count={overview.maleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Female\"\n                                  count={overview.femaleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Total\"\n                                  count={overview.count}\n                                />\n                              </Box>\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nexport const admitStudentTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"section\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Admission No\",\n    key: \"admissionNumber\",\n    path: \"academicInfo\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PrintSharp } from \"@mui/icons-material\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { admitStudentTableKeys } from \"../../data/tableKeys/admitStudentData\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst Status_Options = [\n  { label: \"Active\", value: true },\n  { label: \"In-Active\", value: false },\n];\n\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function AdmitStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigation = useNavigate();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n\n  const [loader, setLoader] = useState(false);\n\n  const [file, setFile] = useState([]);\n  const [fileAdmit, setFileAdmit] = useState([]);\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"admitFile\") {\n        setFileAdmit(fileList);\n      } else if (type === \"updateFile\") {\n        setFile(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleCloseUpdateModal = () => {\n    setOpenModal(false);\n    setFile([]);\n  };\n\n  const handleCloseAdmitModal = () => {\n    setOpenModalAdmit(false);\n    setFileAdmit([]);\n  };\n\n  const handelAddStudent = (e) => {\n    navigation(\"/sch/student/add-student\");\n  };\n\n  const handleEditClick = (data) => {\n    navigation(`/sch/student/edit-student/${data._id}`);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              active: values.active,\n            },\n          },\n        });\n\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n              active: values.active,\n            },\n          },\n        });\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"all\",\n      active: true,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSectionData(sectionAllOption);\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.delete + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(PRIVATE_URLS.student.downloadStudentsExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n          active: entryFormik.values.active,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"students.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetDownloadPdf = async () => {\n    try {\n      setLoader(true);\n      const getStudentPdf = await get(\n        PRIVATE_URLS.student.downloadStudentsPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            active: entryFormik.values.active,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getStudentPdf.data, \"student-list.pdf\");\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n    }\n  };\n\n  const handleSubmitBulkUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n\n      file.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(PRIVATE_URLS.student.bulkUpdate, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetUpdateSheet = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.student.bulkUpdateSheet, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetAdmitSheet = async () => {\n    try {\n      const getExcel = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"studentAdmit_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleAdmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"schoolId\", selectedSetting._id);\n      fileAdmit.forEach((f) => formData.append(\"file\", f));\n\n      await post(PRIVATE_URLS.student.bulkStudentAdmit, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNavigate = () => {\n    navigation(\"/sch/student/bulk-photo\");\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Students\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Status\"\n                options={Status_Options}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n            }}>\n            {entryFormik.values.academicYear &&\n              entryFormik.values.class &&\n              entryFormik.values.section !== \"all\" && (\n                <Stack\n                  gap={1}\n                  direction={{ xs: \"column\", sm: \"row\", md: \"row\" }}>\n                  <Tooltip title=\"Bulk Admit\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModalAdmit(true)}>\n                      BULK ADMIT\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Bulk Update\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModal(true)}>\n                      BULK UPDATE\n                    </Button>\n                  </Tooltip>\n                </Stack>\n              )}\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 1,\n            }}>\n            <Stack direction=\"row\">\n              <Tooltip title=\"Download\">\n                <LoadingButton\n                  loading={loading}\n                  onClick={handleGetDownloadExcel}>\n                  <DownloadForOfflineSharpIcon color=\"primary\" />\n                </LoadingButton>\n              </Tooltip>\n              <Tooltip title=\"Print\">\n                <LoadingButton loading={loader} onClick={handleGetDownloadPdf}>\n                  <PrintSharp color=\"primary\" />\n                </LoadingButton>\n              </Tooltip>\n\n              <Button size=\"small\" variant=\"contained\" onClick={handleNavigate}>\n                Bulk Photo\n              </Button>\n            </Stack>\n          </Box>\n        </Box>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={admitStudentTableKeys}\n        bodyDataModal=\"students\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* add student */}\n      <AddForm title=\"Add Students\" onAddClick={handelAddStudent} />\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleAdmit}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Admit\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  endIcon={<DownloadIcon />}\n                  onClick={handleGetAdmitSheet}>\n                  Sample\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select  File\"\n                  onChange={(e) => handleChangeFiles(e, \"admitFile\")}\n                  customOnChange={true}\n                  selectedFiles={fileAdmit}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseAdmitModal}>\n                  Cancel\n                </Button>\n                <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleSubmitBulkUpdate}>\n            {\" \"}\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Update\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={handleGetUpdateSheet}\n                  endIcon={<DownloadIcon />}>\n                  Download\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select File\"\n                  onChange={(e) => handleChangeFiles(e, \"updateFile\")}\n                  customOnChange={true}\n                  selectedFiles={file}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseUpdateModal}>\n                  Cancel\n                </Button>\n                <Button variant=\"contained\" size=\"small\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nconst StickyBar = ({ children, content }) => {\n  const [isBottom, setIsBottom] = useState(true);\n\n  useEffect(() => {\n    // Remove the event listener since we want the bar to be fixed at the bottom\n    return () => {};\n  }, []);\n\n  return (\n    <>\n      {/* Additional items at the bottom */}\n      {isBottom && content && (\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n            right: 0,\n            width: \"100%\",\n            background: \"whitesmoke\",\n            padding: \"15px\",\n            zIndex: 1000,\n          }}\n        >\n          {content}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default StickyBar;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { Checkbox } from \"@mui/material\";\nimport { hasAllValues } from \"../../utils\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useTheme } from \"@emotion/react\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function Reshuffle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n  const [file, setFile] = useState([]);\n  const [studentReshuffle, setStudentReshuffle] = useState([]);\n  const [checkBox, setCheckBox] = useState([]);\n  const [reshuffle, setReshuffle] = useState(false);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = studentReshuffle.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleReshffleCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudentReshuffle(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      newSection: \"\",\n    },\n    onSubmit: getList,\n  });\n\n  useEffect(() => {\n    setStudentReshuffle([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleReshuffle = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        sectionId: entryFormik.values.newSection,\n        classId: entryFormik.values.class,\n        currentSectionId: entryFormik.values.section,\n        studentIds: checkBox,\n      };\n\n      setReshuffle(true);\n\n      const { data } = await put(PRIVATE_URLS.student.resuffle, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setReshuffle(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Reshuffle\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Current Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"newSection\"\n                formik={entryFormik}\n                label=\"Change To\"\n                options={sectionData.filter(\n                  (section) => section.value !== entryFormik.values.section\n                )}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap=\"10px\">\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={() => setOpenModalAdmit(true)}>\n                Bulk Reshuffle\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Father Name</TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  onChange={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentReshuffle.map((row, index) => (\n              <TableRow key={row._id}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  {row.academicInfo.rollNumber}\n                </TableCell>\n                <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  <Checkbox\n                    checked={checkBox.includes(row._id)}\n                    onChange={(e) => handleReshffleCheckBox(row._id, e)}\n                    {...label}\n                    sx={{\n                      color: \"#1b3779\",\n                      \"&.Mui-checked\": {\n                        color: \"#1b3779\",\n                      },\n                    }}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          {!studentReshuffle.length && (\n            <Typography\n              variant=\"h6\"\n              sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n              No data found\n            </Typography>\n          )}\n        </Table>\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={studentReshuffle.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {studentReshuffle.length > 0 && (\n        <StickyBar\n          content={\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={reshuffle}\n                varient=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handleReshuffle}\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                  color: \"#fff\",\n                }}>\n                Reshuffle\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Admit\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <Button variant=\"contained\" endIcon={<DownloadIcon />}>\n                Get Sample\n              </Button>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <FileSelect\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={file}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button variant=\"contained\" type=\"submit\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","export const promotionTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Father Name\",\n    key: \"fatherName\",\n  },\n];\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { promotionTableKeys } from \"../../data/tableKeys/promotionData\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { hasAllValues } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Promotion() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [activeAcademicYear, setActiveAcademicYear] = useState({});\n  const [checkBox, setCheckBox] = useState([]);\n  const [promoting, setPromoting] = useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setActiveAcademicYear(data.result.find((a) => a.active));\n      entryFormik.setFieldValue(\"promoteAcademicYearId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudentList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          search: {\n            academicYear: activeAcademicYear._id,\n            \"academicInfo.section\": values.currentSectionId,\n            \"academicInfo.class\": values.currentClassId,\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      promoteAcademicYearId: \"\",\n      currentClassId: \"\",\n      currentSectionId: \"\",\n      promoteClassId: \"\",\n      promoteSectionId: \"\",\n    },\n    onSubmit: getStudentList,\n  });\n\n  useEffect(() => {\n    setData([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setSectionData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentSectionId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentClassId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n    getSection();\n  }, [selectedSetting._id]);\n\n  const handlePromotionCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = data.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n\n  const handlePromotion = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        ...entryFormik.values,\n        studentIds: checkBox,\n      };\n      setPromoting(true);\n      const { data } = await put(PRIVATE_URLS.student.promote, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setPromoting(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Promotion\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Box sx={{ fontSize: 16, fontWeight: \"bold\" }}>\n          <Typography component=\"span\" color=\"forestgreen\" fontWeight=\"bold\">\n            Running Session:{\" \"}\n          </Typography>\n          <Typography component=\"span\" fontWeight=\"bold\">\n            {activeAcademicYear?.from}-{activeAcademicYear?.to}\n          </Typography>\n        </Box>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteAcademicYearId\"\n              formik={entryFormik}\n              label=\"Promote To Session\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentClassId\"\n              formik={entryFormik}\n              label=\"Current Class\"\n              options={classData}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentSectionId\"\n              formik={entryFormik}\n              label=\"Current Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.currentClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteClassId\"\n              formik={entryFormik}\n              label=\"Promote Class\"\n              options={classData\n                .filter((s) => s._id !== entryFormik.values.currentClassId)\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteSectionId\"\n              formik={entryFormik}\n              label=\"Promote Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.promoteClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={2}\n            display=\"flex\"\n            alignItems=\"center\"\n            // justifyContent=\"flex-end\"\n          >\n            <Button\n              disabled={!hasAllValues(entryFormik.values, [], false)}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}\n          >\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Father Name</TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  onClick={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.academicInfo.rollNumber}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox\n                      size=\"small\"\n                      checked={checkBox.includes(row._id)}\n                      onChange={(e) => handlePromotionCheckBox(row._id, e)}\n                      {...label}\n                      sx={{\n                        color: \"#1b3779\",\n                        \"&.Mui-checked\": {\n                          color: \"#1b3779\",\n                        },\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}\n          >\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {data.length > 0 && (\n        <StickyBar\n          content={\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={promoting}\n                varient=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handlePromotion}\n              >\n                Promote\n              </LoadingButton>\n            </Box>\n          }\n        />\n      )}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst MuiTypography = styled(Typography)(({ theme }) => ({\n  fontSize: \"16px\",\n}));\n\nexport default function BulkAdmission() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [file, setFile] = useState(null);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  const downloadBulkAdmissionSheet = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        { responseType: \"blob\", params: { schoolId: selectedSetting._id } }\n      );\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"Bulk Admission Sheet\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadSheet = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.student.bulkStudentAdmit,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Admission\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            xs={12}\n            md={6}\n            lg={3}\n            item>\n            <Button size=\"large\" component=\"label\">\n              <input\n                visibility=\"hidden\"\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />\n            </Button>\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <LoadingButton\n              onClick={downloadBulkAdmissionSheet}\n              endIcon={<DownloadIcon />}\n              size=\"small\"\n              variant=\"contained\">\n              Get Sample\n            </LoadingButton>\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <MuiTypography component=\"ul\">\n              <MuiTypography component=\"li\">\n                School role type configured with\n                <span style={{ color: \"red\" }}> manual</span>, please mention\n                role number in column.\n              </MuiTypography>\n              <MuiTypography component=\"li\">\n                School admission_no configured with auto{\" \"}\n                <span style={{ color: \"red\" }}> auto _ascending_no, </span>\n                admission_no column will be ignored.\n              </MuiTypography>\n            </MuiTypography>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              onClick={uploadSheet}\n              size=\"small\"\n              variant=\"contained\">\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Box\n        sx={{\n          padding: \"20px\",\n          borderRadius: \"5px\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\" ? \"rgba(32,33,32,1)\" : \"#FFF9C4\",\n        }}>\n        <Typography sx={{ fontSize: \"22px\" }} fontWeight=\"bold\">\n          Instruction:\n        </Typography>\n        <MuiTypography component=\"ol\">\n          <MuiTypography component=\"li\">\n            At first select the (School), Class and Section\n          </MuiTypography>\n          <MuiTypography component=\"li\">Generate CSV file.</MuiTypography>\n          <MuiTypography component=\"li\">\n            Open the downloaded CSV file and enter student information with\n            unique username.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Save the edited CSV file.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Upload again CSV file you just edited and submit.\n          </MuiTypography>\n        </MuiTypography>\n      </Box>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentCrendentialsTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"User Name\",\n    key: \"username\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Father Name\",\n    key: \"fatherName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentCrendentialsTableKeys } from \"../../data/tableKeys/studentCredentials\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Credential() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // search student\n  const handleStudentSearchSubmit = async (e) => {\n    setLoader(true);\n\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setData(\n        data.result.map((student) => ({\n          username: student.username,\n          fatherName: student.fatherInfo.name,\n          name: student.basicInfo.name,\n          rollNumber: student.academicInfo,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n    setLoader(false);\n  };\n\n  // console.log(data, \"datata==========\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleStudentSearchSubmit,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n            <LoadingButton\n              loading={loader}\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentCrendentialsTableKeys}\n        bodyDataModal=\"credentials\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst STATUS_OPTIONS = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function QuickAdmit() {\n  const { selectedSetting, setSettings, setSelectedSetting } =\n    useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreate = async (values) => {\n    console.log(values.caste, \"check error\");\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          caste: values.caste,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        contactNumber: values.contactNumber,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting?._id,\n        active: values.active || true,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n\n      setLoading(true);\n      const { data } = await post(PRIVATE_URLS.student.create, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      name: \"\",\n      admissionNumber: \"\",\n      admissionDate: null,\n      dob: null,\n      gender: \"\",\n      caste: \"\",\n      contactNumber: \"\",\n      fatherName: \"\",\n      fatherContactNumber: \"\",\n      motherName: \"\",\n      motherContactNumber: \"\",\n      class: \"\",\n      section: \"\",\n      rollNumber: \"\",\n      active: \"\",\n    },\n    onSubmit: handleCreate,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting?._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Quick Admit\" />\n      <Box onSubmit={entryFormik.handleSubmit} component=\"form\">\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Basic Information\n              </Typography>\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={selectedSetting?.admissionNo === \"manual\"}\n                name=\"admissionNumber\"\n                formik={entryFormik}\n                label=\"Admission No.\"\n                disabled={selectedSetting?.admissionNo != \"manual\"}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"admissionDate\"\n                formik={entryFormik}\n                label=\"Admission Date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"dob\"\n                formik={entryFormik}\n                label=\"DOB\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"gender\"\n                formik={entryFormik}\n                label=\"Select Gender\"\n                options={Gender_Options}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput name=\"caste\" formik={entryFormik} label=\"Caste\" />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"contactNumber\"\n                formik={entryFormik}\n                label=\"Contact Number\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Parent Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"fatherName\"\n                formik={entryFormik}\n                label=\"Father Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"fatherContactNumber\"\n                formik={entryFormik}\n                label=\"Father Phone Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"motherName\"\n                formik={entryFormik}\n                label=\"Mother Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"motherContactNumber\"\n                formik={entryFormik}\n                label=\"Mother Phone Number\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Academic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"rollNumber\"\n                formik={entryFormik}\n                label=\"Roll No\"\n                disabled={selectedSetting?.rollNumberType !== \"manual\"}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Active Status\"\n                options={STATUS_OPTIONS}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}>\n          <LoadingButton\n            loading={loading}\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\">\n            Submit\n          </LoadingButton>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","export const studentActivityTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentActivityTableKeys } from \"../../data/tableKeys/studentActivity\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function StudentActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setDate] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [formData, setFormData] = useState({\n    class: \"\",\n    section: \"\",\n    academicYear: \"\",\n    student: \"\",\n  });\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get activity list\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            student: values.student,\n            academicYear: values.academicYear,\n          },\n        },\n      });\n      setDate(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      Formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      Formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: Formik.values.class,\n          },\n        },\n      });\n      Formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: Formik.values.academicYear,\n            \"academicInfo.class\": Formik.values.class,\n            \"academicInfo.section\": Formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      Formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    Formik.handleSubmit();\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        student: values.student,\n        description: values.description,\n        name: values.name,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.studentActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.studentActivity.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      student: Formik.values.student || \"\",\n      academicYear: Formik.values.academicYear || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      Formik.values.academicYear &&\n      Formik.values.class &&\n      Formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    Formik.values.academicYear,\n    Formik.values.class,\n    Formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (Formik.values.academicYear) {\n      getData();\n    }\n  }, [Formik.values.academicYear]);\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(\n        PRIVATE_URLS.studentActivity.delete + \"/\" + id\n      );\n      Formik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Activity\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"div\"\n          onSubmit={Formik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={Formik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={Formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={Formik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={Formik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\"\n              disabled={!Formik.values.student}\n              onClick={Formik.handleSubmit}>\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={studentActivityTableKeys}\n        bodyDataModal=\"student activity\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        title=\"Student Activity\"\n        onAddClick={AddDepartmentHandel}\n        disabled={!Formik.values.student}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Activity\" : \"Add Student Activity\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"academicYear\"\n              label=\"Academic Year\"\n              required={true}\n              options={academicYearList}\n            />\n          </Grid> */}\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Select Student\"\n              required={true}\n              showSearch={true}\n              options={students}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={12} item>\n            <FormInput formik={entryFormik} name=\"name\" label=\"Activity Name\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const assignmentTableKeys = [\n  {\n    name: \"Assignment Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Class\",\n    key: \"className\",\n  },\n  {\n    name: \"Subject\",\n    key: \"subjectName\",\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Deadline\",\n    key: \"deadline\",\n    isDate: true,\n  },\n  // {\n  //   name: \"Get Assignment\",\n  //   key: \"assignment\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport FormInput from \"../forms/FormInput\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nexport default function AddEditAssignment({\n  dataToEdit = \"\",\n  handleClose = () => {},\n  onUpdateFormik = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      console.log(data, \"section\");\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get subject\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    formData.append(\"title\", values.title);\n    formData.append(\"class\", values.class);\n    formData.append(\"section\", values.section);\n    formData.append(\"subject\", values.subject);\n    formData.append(\"assignmentType\", values.assignmentType);\n\n    formData.append(\"deadline\", dayjs(values.deadline).format(\"YYYY-MM-DD\"));\n    formData.append(\"attachmentType\", values.attachmentType);\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"note\", values.note);\n    formData.append(\"link\", values.link);\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.assignment.update + \"/\" + dataToEdit.id,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.assignment.create, formData, {\n          headers: { \"Content-type\": \"multipart/form-data\" },\n        });\n      }\n      onUpdateFormik.handleSubmit();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      class: dataToEdit?.class || \"\",\n      section: dataToEdit?.section || \"\",\n      subject: dataToEdit?.subject || \"\",\n      assignmentType: dataToEdit?.assignmentType || \"\",\n\n      deadline: dataToEdit?.deadline\n        ? dayjs(dataToEdit.deadline).format(\"YYYY/MM/DD\")\n        : null,\n\n      attachmentType: dataToEdit?.attachmentType || \"\",\n      isPublish: dataToEdit?.isPublish || false,\n      note: dataToEdit?.note || \"\",\n      link: dataToEdit?.link || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  console.log(dataToEdit, \"dataToEdit\");\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              required={true}\n              name=\"title\"\n              formik={entryFormik}\n              label=\"Assignment Title\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"assignmentType\"\n              formik={entryFormik}\n              label=\"Select Assignment Type\"\n              options={[\n                { label: \"Class\", value: \"class\" },\n                { label: \"Assignment\", value: \"assignment\" },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"deadline\"\n              label=\"Deadline\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"attachmentType\"\n              formik={entryFormik}\n              label=\"Select Attachment Type\"\n              options={[\n                { label: \"File\", value: \"File\" },\n                { label: \"Link\", value: \"Link\" },\n              ]}\n            />\n          </Grid>\n          {entryFormik.values?.attachmentType === \"File\" && (\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                name={`file`}\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectFile}\n              />\n            </Grid>\n          )}\n          {entryFormik.values?.attachmentType === \"Link\" && (\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"link\"\n                label=\"Link\"\n                required={true}\n                formik={entryFormik}\n              />\n            </Grid>\n          )}\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              name=\"isPublish\"\n              formik={entryFormik}\n              label=\"Publish To Web\"\n              options={[\n                { label: \"Yes\", value: true },\n                { label: \"No\", value: false },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item>\n            <FormInput name=\"note\" formik={entryFormik} label=\"Note\" />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ ml: 2 }}\n              loading={loading}>\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../components/PageHeader\";\nimport { assignmentTableKeys } from \"../data/tableKeys/assignmentData\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport TabPanel from \"../components/Tabs/TabPanel\";\nimport TabList from \"../components/Tabs/Tablist\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FormInput from \"../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { del, get, post, put } from \"../services/apiMethods\";\nimport SettingContext from \"../context/SettingsContext\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddEditAssignment from \"./AddEditAssignment\";\n\nexport default function Assignment() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [value, setSelectValue] = useState(0);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const Section_Options = [{ label: \"All\", value: \"all\" }, ...sections];\n\n  const [loading, setLoading] = useState(false);\n\n  // get assignment\n  const getData = async (values) => {\n    try {\n      setLoading(true);\n      if (values?.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.assignment.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: values.class,\n            },\n          },\n        });\n        // console.log(data.responseCode, \"all\");\n\n        if (data.responseCode === \"OK\") {\n          setData(\n            data.result.map((assignment) => ({\n              ...assignment,\n              className: assignment.class.name,\n              subjectName: assignment.subject.name,\n              id: assignment._id,\n            }))\n          );\n        }\n      } else {\n        const { data } = await get(PRIVATE_URLS.assignment.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: values.class,\n              section: values.section,\n            },\n          },\n        });\n\n        if (data.responseCode === \"OK\") {\n          setData(\n            data.result.map((assignment) => ({\n              ...assignment,\n              className: assignment.class.name,\n              subjectName: assignment.subject.name,\n              id: assignment._id,\n            }))\n          );\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getData();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit({\n      ...data,\n      class: data.class._id,\n      subject: data.subject._id,\n    });\n    setSelectValue(1);\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"pppppp\");\n    try {\n      if (data.file) {\n        window.open(data.file, \"_blank\");\n      } else {\n        window.open(data.link, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"No file or link found in the data\");\n    }\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.assignment.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Assignment\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Assignment\",\n          dataToEdit && value != 0 ? \"Edit Assignment\" : \"Add Assignment\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={Section_Options}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ ml: 2 }}>\n                Search\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          bodyDataModal=\"Assignment\"\n          bodyData={data}\n          tableKeys={assignmentTableKeys}\n          onEditClick={handleEditClick}\n          onViewClick={handleClickOpenView}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <AddEditAssignment\n          dataToEdit={dataToEdit}\n          handleClose={handleClose}\n          onUpdateFormik={entryFormik}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const noticeTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { noticeTableKeys } from \"../../data/tableKeys/noticeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Grid } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { post, put, get, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Notice() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [rolesData, setRolesData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result.map((r) => ({\n        label: r.name,\n        value: r._id,\n      }));\n\n      const rolesAllOption = [{ label: \"All\", value: \"all\" }, ...roles];\n      setRolesData(rolesAllOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddNotice = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.notice.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.notice.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit ? dataToEdit.title : \"\",\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n      noticeFor: dataToEdit ? dataToEdit.noticeFor : \"\",\n      notice: dataToEdit ? dataToEdit.notice : \"\",\n      isPublic: dataToEdit ? dataToEdit.isPublic : false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.notice.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Notice\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Notice\"\n        bodyData={data}\n        tableKeys={noticeTableKeys}\n        adding={loading}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm title=\"Add Notice\" onAddClick={AddNotice} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Notice\" : \"Add Notice\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"noticeFor\"\n              type=\"text\"\n              formik={entryFormik}\n              label=\"Notice For\"\n              options={rolesData}\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"notice\"\n              label=\"Notice\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const newsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { newsTableKeys } from \"../../data/tableKeys/newsData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useEffect } from \"react\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function News() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.news.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddNews = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", values.title);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n      formData.append(\"news\", values.news);\n      formData.append(\"shortNews\", values.shortNews);\n      formData.append(\"isPublic\", values.isPublic);\n      selectImg.forEach((file) => formData.append(\"file\", file));\n\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.news.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.news.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n\n      date: dataToEdit?.date || null,\n\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n      news: dataToEdit?.news || \"\",\n      shortNews: dataToEdit?.shortNews || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.news.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"News\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"News\"\n        bodyData={data}\n        tableKeys={newsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add News\" onAddClick={AddNews} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update News\" : \"Add News\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              multi={false}\n              name=\"image\"\n              label=\"Select Image\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <FormInput\n              name=\"shortNews\"\n              formik={entryFormik}\n              label=\"Short News\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"news\"\n              label=\"News\"\n              required={true}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            sm={12}\n            md={12}\n            item\n            display=\"flex\"\n            justifyContent=\"center\">\n            {dataToEdit && dataToEdit.image && (\n              <>\n                <img\n                  src={dataToEdit.image}\n                  alt=\"image\"\n                  style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n                />\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const holidayTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"From Date\",\n    key: \"fromDate\",\n    isDate: true,\n  },\n  {\n    name: \"To Date\",\n    key: \"toDate\",\n    isDate: true,\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { holidayTableKeys } from \"../../data/tableKeys/holidayData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { Checkbox, FormControlLabel, Grid, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { post, put, get, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Holiday() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [classes, setClasses] = useState([]);\n\n  // get holiday\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getClasses();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  // open holiday model\n  const AddHoliday = () => {\n    setOpen(true);\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create/update holiday\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n        toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.holiday.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const data = await post(PRIVATE_URLS.holiday.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      fromDate: dataToEdit?.fromDate\n        ? dayjs(dataToEdit.fromDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      toDate: dataToEdit?.toDate\n        ? dayjs(dataToEdit.toDate).format(\"YYYY/MM/DD\")\n        : null,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || \"\",\n      class: dataToEdit?.class || \"\",\n      section: dataToEdit?.section || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.holiday.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handelCheckedBox = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Holiday\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Holiday\"\n        bodyData={data}\n        tableKeys={holidayTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Holiday\" onAddClick={AddHoliday} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Holiday\" : \"Add Holiday\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"fromDate\"\n              formik={entryFormik}\n              label=\"From Date\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"toDate\"\n              formik={entryFormik}\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item mt={1}>\n            <FormControlLabel\n              control={\n                <Checkbox checked={checked} onChange={handelCheckedBox} />\n              }\n              label=\"Update All student attendance as holiday\"\n            />\n          </Grid>\n          {checked && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const awardAchievementTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Location\",\n    key: \"location\",\n  },\n  {\n    name: \"Is Public\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { awardAchievementTableKeys } from \"../../data/tableKeys/awardAchievementsData\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put, del } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function AwardsAndAchievements() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.awards.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddAwardsAchievement = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n    formData.append(\"location\", values.location);\n    formData.append(\"hostedBy\", values.hostedBy);\n    formData.append(\"headlines\", values.headlines);\n    formData.append(\"note\", values.note);\n    formData.append(\"isPublic\", values.isPublic);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.awards.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.awards.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n\n      location: dataToEdit?.location || \"\",\n      hostedBy: dataToEdit?.hostedBy || \"\",\n      headlines: dataToEdit?.headlines || \"\",\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    // console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.awards.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // console.log(dataToEdit, \"dataToEdittttt\");\n  return (\n    <>\n      <PageHeader title=\"Award And Achievements\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Award and Achievements\"\n        bodyData={data}\n        tableKeys={awardAchievementTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm\n        title=\"Add Awards & Achievement\"\n        onAddClick={AddAwardsAchievement}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Awards & Achievement\"\n            : \"Add Awards & Achievement\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"location\"\n              label=\"Location\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"hostedBy\"\n              label=\"Hosted By\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"headlines\"\n              label=\"Headlines\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              multi={false}\n              name=\"image\"\n              label=\"Select Image\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"Is Public\"\n              options={Is_Public}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          <Grid\n            xs={12}\n            sm={12}\n            md={12}\n            item\n            display=\"flex\"\n            justifyContent=\"center\">\n            {dataToEdit && dataToEdit.image && (\n              <>\n                <img\n                  src={dataToEdit.image}\n                  alt=\"image\"\n                  style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n                />\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const horizontalSplashNewsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Text\",\n    key: \"text\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useState } from \"react\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { horizontalSplashNewsTableKeys } from \"../../data/tableKeys/horizontalSplashNewsData\";\n\nexport default function AddHorizontalSplash() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.splashNews.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const horizontalvalues = data.result.filter(\n        (newitem) => newitem.type !== \"Popup\"\n      );\n      setData(horizontalvalues);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddHorizontalSplashNews = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      setLoading(true);\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      getData();\n\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.splashNews.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.splashNews.create, payload);\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      text: dataToEdit?.text || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.splashNews.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggle = async (data) => {\n    try {\n      const res = await put(PRIVATE_URLS.splashNews.toggle + \"/\" + data._id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"switch\"]}\n        bodyDataModal=\"Horizontal Splash News\"\n        bodyData={data}\n        tableKeys={horizontalSplashNewsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onToggleSwitch={handleToggle}\n        toggleStatus=\"enabled\"\n      />\n\n      <AddForm\n        title=\"Add Horizontal Splash News\"\n        onAddClick={AddHorizontalSplashNews}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Horizontal Splash News\"\n            : \"Add Horizontal Splash News\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"title\" label=\"Title\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"text\" label=\"Text\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const popupSplashNewsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { popupSplashNewsTableKeys } from \"../../data/tableKeys/popupSplashNewsData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst Content_Type_Options = [\n  { label: \"Link\", value: \"Link\" },\n  { label: \"Text\", value: \"Text\" },\n  { label: \"Image\", value: \"Image\" },\n  { label: \"Document\", value: \"Document\" },\n];\n\nexport default function AddPopup() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [selectDocument, setSelectdocument] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.splashNews.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const popupvalues = data.result.filter(\n        (newitem) => newitem.type === \"Popup\"\n      );\n\n      setData(popupvalues);\n\n      console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddHorizontalSplashNews = () => {\n    setOpen(true);\n  };\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"link\", values.link);\n    formData.append(\"text\", values.text);\n    formData.append(\"type\", \"Popup\");\n    formData.append(\"contentType\", values.contentType);\n    formData.append(\"schoolId\", selectedSetting._id);\n    selectImg.forEach((file) => formData.append(\"image\", file));\n    selectDocument.forEach((file) => formData.append(\"document\", file));\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.splashNews.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.splashNews.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentType: dataToEdit?.contentType || \"\",\n      text: dataToEdit?.text || \"\",\n      link: dataToEdit?.link || \"\",\n      document: dataToEdit?.document || \"\",\n      image: dataToEdit?.image || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.splashNews.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggle = async (data) => {\n    try {\n      const res = await put(PRIVATE_URLS.splashNews.toggle + \"/\" + data._id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n    setSelectdocument(selectDocument.filter((doc) => doc.name != fileName));\n  };\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"image\") {\n        setSelectImg(fileList);\n      } else {\n        setSelectdocument(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  return (\n    <>\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"switch\"]}\n        bodyDataModal=\"Popup Splash News\"\n        bodyData={data}\n        tableKeys={popupSplashNewsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onToggleSwitch={handleToggle}\n        toggleStatus=\"enabled\"\n      />\n      <AddForm\n        title=\"Add Vertical Splash News\"\n        onAddClick={AddHorizontalSplashNews}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Vertical Splash News\"\n            : \"Add Vertical Splash News\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"title\" label=\"Title\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"contentType\"\n              label=\"Content Type\"\n              required={true}\n              options={Content_Type_Options}\n            />\n          </Grid>\n          {entryFormik.values.contentType === \"Link\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"link\"\n                label=\"Link\"\n                required={true}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Text\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"text\"\n                label=\"Text\"\n                required={true}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Image\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                name=\"image\"\n                multi={false}\n                label=\"Select Photo\"\n                onChange={(e) => handleChangeFiles(e, \"image\")}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Document\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                multi={false}\n                name=\"document\"\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e, \"document\")}\n                customOnChange={true}\n                selectedFiles={selectDocument}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n          )}\n        </Grid>\n        <Grid xs={12} sm={12} md={12} item>\n          {dataToEdit && dataToEdit.image && (\n            <>\n              <img\n                src={dataToEdit.image}\n                alt=\"image\"\n                style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n              />\n            </>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\n\nimport AddHorizontalSplash from \"./AddHorizontalSplash\";\nimport AddPopup from \"./AddPopup\";\n\nexport default function SplashNews() {\n  const [value, setValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Splash News\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Horizontal\", \"Popup\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <AddHorizontalSplash />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <AddPopup />\n      </TabPanel>\n    </>\n  );\n}\n","export const galleryListTableKeys = [\n  {\n    name: \"Gallery Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Is view on web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, IconButton, Paper } from \"@mui/material\";\nimport { galleryListTableKeys } from \"../data/tableKeys/galleryListData\";\nimport PageHeader from \"../components/PageHeader\";\nimport TabList from \"../components/Tabs/Tablist\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FormSelect from \"../forms/FormSelect\";\nimport TabPanel from \"../components/Tabs/TabPanel\";\nimport FormInput from \"../forms/FormInput\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function Gallery() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [date, setDate] = useState(dataToEdit ? dayjs(dataToEdit.date) : null);\n\n  console.log(dataToEdit, \"gall dataToEdit\");\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.gallery.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(data, \"gallery list\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    // console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.gallery.removeFile + \"/\" + dataToEdit._id,\n        { file: img }\n      );\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"note\", values.note);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.gallery.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.gallery.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n    setDataToEdit(null);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    setSelectImg([]);\n    getData();\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      entryFormik.resetForm();\n    }\n  }, [value]);\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.gallery.delete + \"/\" + _id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Gallery\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Gallery List\",\n          `${dataToEdit && value != 0 ? \"Edit Gallery\" : \"Add Gallery\"}`,\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"Gallery\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          tableKeys={galleryListTableKeys}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Gallery Title\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={entryFormik} label=\"Date\" name=\"date\" />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"isPublic\"\n                formik={entryFormik}\n                label=\"Is Public Web\"\n                options={[\n                  { label: \"Yes\", value: true },\n                  { label: \"No\", value: false },\n                ]}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                name={`images`}\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                label=\"Select Image\"\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput name=\"note\" formik={entryFormik} label=\"Note\" />\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.images?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"100px\",\n                        height: \"100px\",\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                        objectFit: \"center\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <Close color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ ml: 2 }}>\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const notificationsTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Message\",\n    key: \"message\",\n  },\n  {\n    name: \"Total SMS\",\n    key: \"totalSMS\",\n  },\n  {\n    name: \"Time/Date\",\n    key: \"female\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { notificationsTableKeys } from \"../data/tableKeys/notificationsData\";\n\nexport default function Notifications() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Notifications\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Notifications\"\n        bodyData={data}\n        tableKeys={notificationsTableKeys}\n      />\n    </>\n  );\n}\n","export const eventTableKeys = [\n  {\n    name: \"Event Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Location\",\n    key: \"location\",\n  },\n  {\n    name: \"From Date\",\n    key: \"fromDate\",\n    isDate: true,\n  },\n  {\n    name: \"To Date\",\n    key: \"toDate\",\n    isDate: true,\n  },\n  {\n    name: \"Hosted By\",\n    key: \"hostedBy\",\n  },\n];\n","/** @format */\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { eventTableKeys } from \"../data/tableKeys/eventData\";\nimport AddForm from \"../forms/AddForm\";\nimport FormModal from \"../forms/FormModal\";\nimport FormInput from \"../forms/FormInput\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport FileSelect from \"../forms/FileSelect\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function Event() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.event.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"event\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRole = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      // console.log(data, \"rol\");\n      setRoles(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // open add model\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleChangeFiles = (e) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files?.length > 0) {\n      for (let i = 0; i < files?.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"eventFor\", values.eventFor);\n    formData.append(\"location\", values.location);\n\n    formData.append(\"fromDate\", dayjs(values.fromDate).format(\"YYYY-MM-DD\"));\n\n    formData.append(\"toDate\", dayjs(values.toDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"video\", values.video);\n    formData.append(\"shortEvent\", values.shortEvent);\n    formData.append(\"note\", values.note);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.event.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.event.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      eventFor: dataToEdit?.eventFor || \"\",\n      location: dataToEdit?.location || \"\",\n      fromDate: dataToEdit?.fromDate\n        ? dayjs(dataToEdit.fromDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      toDate: dataToEdit?.toDate\n        ? dayjs(dataToEdit.toDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      isPublic: dataToEdit?.isPublic || false,\n      video: dataToEdit?.video || null,\n      shortEvent: dataToEdit?.shortEvent || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  useEffect(() => {\n    getRole();\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.event.delete + \"/\" + _id);\n\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Events\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"events\"\n        bodyData={data}\n        tableKeys={eventTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Events\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Events\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Event Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"eventFor\"\n              label=\"Select Event For\"\n              required={true}\n              options={roles}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"location\"\n              label=\"Location\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"hostedBy\" label=\"Hosted By\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"video\" label=\"Video Link\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            {/* <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"file\"\n              name=\"image\"\n              label=\"Select Image\"\n              inputProps={{\n                accept: \"image/*\",\n              }}\n            /> */}\n            <FileSelect\n              name={`image`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              label=\"Select Photo\"\n              selectedFiles={selectImg}\n              // onRemove={(fileName) => handleRemoveFile(fileName)}\n              multi={false}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is Web View\"\n              options={[\n                { label: \"Yes\", value: true },\n                { label: \"No\", value: false },\n              ]}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              name=\"shortEvent\"\n              label=\"Short event\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examGradeTableKeys = [\n  {\n    name: \"Exam Grade\",\n    key: \"grade\",\n  },\n  {\n    name: \"Group\",\n    key: \"group\",\n  },\n  {\n    name: \"Grade Point\",\n    key: \"gradePoint\",\n  },\n  {\n    name: \"Percentage From\",\n    key: \"markFrom\",\n  },\n  {\n    name: \"Percentage To\",\n    key: \"markTo\",\n  },\n  { name: \"Note\", key: \"note\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { examGradeTableKeys } from \"../../data/tableKeys/examGradeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nconst Grade_Options = [\n  {\n    label: \"Scholastic\",\n    value: \"scholastic\",\n  },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function ExamGrade() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const [loading, setloading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddExamGrade = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    const payload = {\n      ...values,\n      schoolId: selectedSetting._id,\n    };\n\n    setloading(true);\n\n    try {\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examGrade.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examGrade.create, payload);\n\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setloading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      grade: dataToEdit?.grade || \"\",\n      group: dataToEdit?.group || \"\",\n      gradePoint: dataToEdit?.gradePoint || \"\",\n      markFrom: dataToEdit?.markFrom || \"\",\n      markTo: dataToEdit?.markTo || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examGrade.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"Exam Grade\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={examGradeTableKeys}\n        bodyDataModal=\"exam grades\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Exam Grade\" onAddClick={AddExamGrade} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Grade\" : \"Add Exam Grade\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"grade\"\n              label=\"Exam Grade\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"group\"\n              label=\"Group\"\n              required={true}\n              options={Grade_Options}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"gradePoint\"\n              label=\"Grade Point\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              required={true}\n              name=\"markFrom\"\n              label=\"Mark From\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              required={true}\n              name=\"markTo\"\n              label=\"Mark To\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examTermTableKeys = [\n  {\n    name: \"Exam Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"examType\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { examTermTableKeys } from \"../../data/tableKeys/examTermData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Is_Assignment_Allowed = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Exam_Types = [\n  {\n    label: \"General\",\n    value: \"general\",\n  },\n  { label: \"Competitive\", value: \"competitive\" },\n];\n\nexport default function ExamTerm() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handelExamTerm = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examTerm.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examTerm.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      examType: dataToEdit?.examType || \"\",\n      marksAssignmentAllowed: dataToEdit?.marksAssignmentAllowed || false,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examTerm.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Term\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"exam terms\"\n        bodyData={data}\n        tableKeys={examTermTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm title=\"Add Exam Term\" onAddClick={handelExamTerm} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Term\" : \"Add Exam Term\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"examType\"\n              label=\"Exam Type\"\n              required={true}\n              options={Exam_Types}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"marksAssignmentAllowed\"\n              label=\"Marks Assignment Allowed\"\n              options={Is_Assignment_Allowed}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is Public\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examListTableKeys = [\n  {\n    name: \"Exam Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"examType\",\n  },\n];\n","/** @format */\n\nexport const scheduleListTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"name\",\n    path: \"subject\",\n  },\n  {\n    name: \"Date\",\n    key: \"examDate\",\n    isDate: true,\n  },\n  {\n    name: \"Time\",\n    key: \"startTime\",\n  },\n  {\n    name: \"Max Marks\",\n    key: \"maximumMarks\",\n  },\n  {\n    name: \"Min Marks\",\n    key: \"minimumMarks\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { examListTableKeys } from \"../../data/tableKeys/examListData\";\nimport { scheduleListTableKeys } from \"../../data/tableKeys/ScheduleListData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\n\nconst ShowIn_HallTick = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst ShowIn_Exam_Results = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Pratical_Marks = [\n  { label: \"Active\", value: \"active\" },\n  { label: \"In active\", value: \"inactive\" },\n];\n\nexport default function ExamSchedule() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [examtitle, setExamTitle] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [classes, setClasses] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examSchedule.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: values.class,\n            examTerm: values.examTerm,\n          },\n        },\n      });\n      setData(data.result.map((s) => ({ ...s, subject: s.subject })));\n      // console.log(data.result, \"resullttttt\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handelExamSchedule = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const getExamTerm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setExamTitle(\n        data.result.map((c) => ({ ...c, label: c.title, value: c._id }))\n      );\n      formik.setFieldValue(\"examTerm\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"examTerm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: formik.values.class },\n        },\n      });\n      setSubject(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      examTerm: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        examDate: dayjs(values.examDate).format(\"YYYY/MM/DD\"),\n        marksFreezDate: dayjs(values.marksFreezDate).format(\"YYYY/MM/DD\"),\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examSchedule.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.examSchedule.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      examTerm: dataToEdit?.examTerm._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      examDate: dataToEdit?.examDate\n        ? dayjs(dataToEdit.examDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      startTime: dataToEdit?.startTime || \"\",\n      endTime: dataToEdit?.endTime || \"\",\n      marksFreezDate: dataToEdit?.marksFreezDate\n        ? dayjs(dataToEdit?.marksFreezDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      maximumMarks: dataToEdit?.maximumMarks || \"\",\n\n      pratical: dataToEdit?.pratical || \"\",\n      minimumMarks: dataToEdit?.minimumMarks || \"\",\n      praticalMarks: dataToEdit?.praticalMarks || \"\",\n      showInHallTick: dataToEdit?.showInHallTick || \"\",\n      showInExamResults: dataToEdit?.showInExamResults || \"\",\n      orderSequence: dataToEdit?.orderSequence || \"\",\n      praticalMarks: dataToEdit?.praticalMarks || \"\",\n      showInHallTick: dataToEdit?.showInHallTick || true,\n      showInExamResults: dataToEdit?.showInExamResults || true,\n      obtainedMarks: dataToEdit?.obtainedMarks || 0,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getExamTerm();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSubject();\n    }\n  }, [selectedSetting, formik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.examTerm) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values.class, entryFormik.values.examTerm, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examSchedule.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Schedule\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Exam List\", \"Schedule List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                // options={\"\"}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"exam list\"\n          bodyData={examtitle}\n          tableKeys={examListTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                name=\"examTerm\"\n                formik={entryFormik}\n                label=\"Select Exam\"\n                options={examtitle}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <AddForm title=\"Add Exam Schedule\" onAddClick={handelExamSchedule} />\n\n        <FormModal\n          open={open}\n          formik={formik}\n          formTitle={dataToEdit ? \"Update Exam Schedule\" : \"Add Exam Schedule\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"examTerm\"\n                label=\"Exam\"\n                required={true}\n                options={examtitle}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"class\"\n                label=\"Class\"\n                required={true}\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"subject\"\n                label=\"Subject\"\n                required={true}\n                options={subject}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormDatePicker\n                required={true}\n                name=\"examDate\"\n                formik={formik}\n                label=\"Exam Date\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"startTime\"\n                type=\"time\"\n                formik={formik}\n                label=\"Start Time\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"endTime\"\n                type=\"time\"\n                formik={formik}\n                label=\"End Time\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={6} item>\n              <FormDatePicker\n                required={true}\n                label=\"Marks Freez Date\"\n                formik={formik}\n                name=\"marksFreezDate\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"pratical\"\n                formik={formik}\n                label=\"Pratical\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"maximumMarks\"\n                formik={formik}\n                label=\"Maximum Marks\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"minimumMarks\"\n                formik={formik}\n                label=\"MinMarks\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={formik}\n                name=\"orderSequence\"\n                label=\"Order Sequence\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"showInHallTick\"\n                label=\"ShowIn HallTick\"\n                options={ShowIn_HallTick}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"showInExamResults\"\n                label=\"Show In Exam Results\"\n                options={ShowIn_Exam_Results}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"praticalMarks\"\n                label=\"Pratical Marks\"\n                options={Pratical_Marks}\n              />\n            </Grid>\n          </Grid>\n        </FormModal>\n\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"schedule list\"\n          bodyData={data}\n          tableKeys={scheduleListTableKeys}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ExamHallTicket() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [examtitle, setExamTitle] = useState([]);\n\n  const getExamTerm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setExamTitle(\n        data.result.map((d) => ({ ...d, label: d.title, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"exam\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      exam: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n    getExamTerm();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Exam Hall Ticket\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={examtitle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Generate\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function DivisionWiseReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Division Wise Report\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function SubjectWiseReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n            section: entryFormik.values.section,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      exam: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject Wise Report\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","export const consolidateMarksTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, IconButton, Paper } from \"@mui/material\";\nimport { consolidateMarksTableKeys } from \"../../data/tableKeys/consolidateMarksCardData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ConsolidatedMarkSheet() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [consolidated, setConsolidated] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleRemoveSubject = (examIndex, subjectIndex) => {\n    setConsolidated(\n      consolidated.map((con, i) => {\n        if (i === examIndex) {\n          return {\n            ...con,\n            subjects: con.subjects.filter(\n              (subject, index) => index !== subjectIndex\n            ),\n          };\n        } else {\n          return con;\n        }\n      })\n    );\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Consolidate Marks Sheet\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Add exams\n            </Button>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item display=\"flex\" gap={2}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"compress\"\n                formik={entryFormik}\n                label=\"Compress\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"exam\"\n                formik={entryFormik}\n                label=\"Select Exam\"\n                // options={\"\"}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item display=\"flex\" alignItems=\"center\">\n              <IconButton color=\"error\">\n                {/* <Button onClick={() => handleRemoveSubject(index, subjectIndex)}> */}\n                <Close />\n              </IconButton>\n              <Button>Add Subject</Button>\n            </Grid>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item display=\"flex\" gap={2}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"compress\"\n                formik={entryFormik}\n                label=\"Compress\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"subject\"\n                formik={entryFormik}\n                label=\"Select Subject\"\n                // options={\"\"}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item display=\"flex\" alignItems=\"center\">\n              <IconButton color=\"error\">\n                {/* <Button onClick={() => handleRemoveSubject(index, subjectIndex)}> */}\n                <Close />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Consolidate marks card\"\n        bodyData={data}\n        tableKeys={consolidateMarksTableKeys}\n      />\n    </>\n  );\n}\n","export const marksCardTableKeys = [\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Published to web\",\n    key: \"webPublish\",\n  },\n  {\n    name: \"Published to app\",\n    key: \"appPublish\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { marksCardTableKeys } from \"../../data/tableKeys/marksCardData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Markscard() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Marks Card\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          {/* <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid> */}\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"marks card\"\n        bodyData={data}\n        tableKeys={marksCardTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const examResultTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNumber\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n  {\n    name: \"Exam Mark\",\n    key: \"totalMarks\",\n  },\n  {\n    name: \"Obtained Mark\",\n    key: \"obtainedMarks\",\n  },\n  {\n    name: \"Percentage\",\n    key: \"percentage\",\n  },\n  {\n    name: \"Grade\",\n    key: \"overallGrade\",\n  },\n  {\n    name: \"action\",\n    key: \"true\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ExamResultViewModel({\n  title = \"\",\n  open = false,\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table>\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\">S.No</TableCell>\n                <TableCell align=\"center\">Subject</TableCell>\n                <TableCell align=\"center\">Total Marks</TableCell>\n                <TableCell align=\"center\">Obtained Marks</TableCell>\n                <TableCell align=\"center\">Grade</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableData?.subjects?.map((d, i) => (\n                <TableRow>\n                  <TableCell align=\"center\">{i + 1}</TableCell>\n                  <TableCell align=\"center\">{d?.subject?.name}</TableCell>\n                  <TableCell align=\"center\">{d?.totalMarks}</TableCell>\n                  <TableCell align=\"center\">{d?.obtainedMarks}</TableCell>\n                  <TableCell align=\"center\">{d?.grade}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <Box mt={1}>\n            <Typography variant=\"subtitle1\">\n              <b>Total Subject:</b> {tableData.subjects?.length}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Max Marks:</b> {tableData.totalMarks}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Obtained Marks:</b> {tableData.obtainedMarks}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Percentage: </b>\n              {tableData.percentage ? tableData.percentage.toFixed(2) : \"0.00\"}%\n            </Typography>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Paper,\n} from \"@mui/material\";\nimport { examResultTableKeys } from \"../../data/tableKeys/examResultData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ExamResultViewModel from \"./ExamResultViewModel\";\n\nexport default function ExamResult() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [uploadLoader, setUploadLoader] = useState(false);\n  const [downloadLoader, setDownloadLoader] = useState(false);\n  const [allDownloadLoading, setAllDownloadLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [openBulk, setOpenBulk] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getResult = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentMarks.getExamResult, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          examId: values.exam,\n        },\n      });\n      setData(\n        data.result.map((d) => ({\n          ...d,\n          name: d.student.basicInfo?.name,\n          roleNumber: d.student.academicInfo?.rollNumber,\n          image: d.student?.photo,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // console.log(data, \"bbb\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n    },\n    onSubmit: getResult,\n  });\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  console.log(data, \"bvd\");\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  const onClose = () => {\n    setOpenBulk(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Result\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n            <LoadingButton\n              onClick={() => setOpenBulk(true)}\n              size=\"small\"\n              variant=\"contained\"\n              sx={{ ml: 1 }}>\n              Bulk Upload\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"view\", \"download\"]}\n        bodyDataModal=\"exam result\"\n        bodyData={data}\n        tableKeys={examResultTableKeys}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* view exam result ============= */}\n      <ExamResultViewModel\n        title=\"Exam Result Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData || []}\n        onClose={onCloseViewModel}\n      />\n\n      {/* Bulk upload model ============= */}\n      {/* <Dialog\n        open={openBulk}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n          component: \"form\",\n        }}>\n        <DialogTitle sx={{ fontWeight: 600 }}>Bulk Upload</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <LoadingButton\n            size=\"small\"\n            loading={uploadLoader}\n            variant=\"contained\"\n            type=\"submit\">\n            Upload\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={downloadLoader}\n            variant=\"contained\"\n            type=\"submit\">\n            Download\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={allDownloadLoading}\n            variant=\"contained\"\n            type=\"submit\">\n            Download All Student\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            Submit\n          </LoadingButton>\n        </DialogContent>\n      </Dialog> */}\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport { TextField, useTheme } from \"@mui/material\";\n\nexport default function CustomInput({\n  name,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  style = {},\n  ...rest\n}) {\n  const theme = useTheme();\n\n  return (\n    <TextField\n      required={required}\n      id={name}\n      name={name}\n      label={label}\n      placeholder={`Enter ${label}`}\n      fullWidth\n      value={value || \"\"}\n      onChange={onChange}\n      sx={{\n        mt: 2,\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        ...style,\n      }}\n      variant=\"outlined\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      InputProps={{\n        multiple: true,\n        style: {\n          borderWidth: 1,\n          height: \"40px\",\n          borderRadius: theme.shape.borderRadius,\n        },\n      }}\n      {...rest}\n    />\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { manageMarkTableKeys } from \"../../data/tableKeys/manageMarkData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport StickyBar from \"../../components/StickyBar\";\n\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { downloadFile } from \"../../utils\";\n\nconst modalStyle = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function ManageMark() {\n  const [data, setData] = useState([]);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [studentMarks, setStudentMarks] = useState([]);\n  const [updatingMarks, setUpdatingMarks] = useState(false);\n  const [fetchingMarks, setFetchingMarks] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [fileChoosen, setFileChoosen] = useState([]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileChoosen(file);\n    } else {\n      setFileChoosen(null);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFileChoosen(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setFileChoosen(fileChoosen.filter((img) => img.name != fileName));\n  };\n\n  // get class list\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section list\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get subject list\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetMarks = async (values) => {\n    try {\n      setFetchingMarks(true);\n      const { data } = await get(PRIVATE_URLS.studentMarks.listStudentMarks, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          subjectId: values.subject,\n          examId: values.exam,\n        },\n      });\n      setFetchingMarks(false);\n\n      let previousValues = data.result.map((s) => ({\n        rollNumber: s.academicInfo.rollNumber,\n        name: s.basicInfo.name,\n        studentId: s._id,\n        obtainedMarks: s.studentMarks?.obtainedWrittenMarks || 0,\n        comment: s.studentMarks?.comment || \"\",\n        grade: s.studentMarks?.grade?.grade || \"NA\",\n      }));\n\n      setStudentMarks(previousValues);\n    } catch (error) {\n      setFetchingMarks(false);\n\n      console.log(error);\n    }\n  };\n\n  const updateStudentMarks = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        classId: entryFormik.values.class,\n        sectionId: entryFormik.values.section,\n        subjectId: entryFormik.values.subject,\n        examId: entryFormik.values.exam,\n        studentMarks: studentMarks,\n      };\n      setUpdatingMarks(true);\n      const { data } = await put(\n        PRIVATE_URLS.studentMarks.updateStudentsMarks,\n        payload\n      );\n\n      setStudentMarks(\n        data.result.map((m) => ({\n          studentId: m.student._id,\n          rollNumber: m.student.academicInfo.rollNumber,\n          name: m.student.basicInfo.name,\n          obtainedMarks: m.obtainedWrittenMarks || 0,\n          comment: m.comment,\n          grade: m?.grade?.grade || \"NA\",\n        }))\n      );\n      setUpdatingMarks(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingMarks(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      exam: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n    },\n    onSubmit: handleGetMarks,\n  });\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  useEffect(() => {\n    setStudentMarks([]);\n  }, [entryFormik.values]);\n\n  const handleCustomInputChange = (e, index) => {\n    let updatedMarks = [...studentMarks];\n    updatedMarks[index][e.target.name] = e.target.value;\n    setStudentMarks(updatedMarks);\n  };\n\n  const getbulkUpdateStudentMarksExcel = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.studentMarks.getbulkUpdateStudentMarks,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            classId: entryFormik.values.class,\n            sectionId: entryFormik.values.section,\n            subjectId: entryFormik.values.subject,\n            examTermId: entryFormik.values.exam,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"studentMarks\"\n      );\n    } catch (error) {}\n  };\n\n  const updateThroughScheet = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"subjectId\", entryFormik.values.subject);\n      formData.append(\"examTermId\", entryFormik.values.exam);\n\n      fileChoosen.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(\n        PRIVATE_URLS.studentMarks.bulkUpdateStudentMarks,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Manage Marks\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Stack direction=\"row\" spacing={2}>\n              <LoadingButton\n                loading={fetchingMarks}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n              <Button\n                onClick={() => setOpenModal(true)}\n                size=\"small\"\n                variant=\"contained\">\n                Bulk Update\n              </Button>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Roll Number\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Obtained Marks\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Grade\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Comment\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentMarks.map((data, index) => (\n              <TableRow key={data.studentId}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">{data.name}</TableCell>\n\n                <TableCell align=\"center\">{data.rollNumber}</TableCell>\n\n                <TableCell align=\"center\">\n                  <CustomInput\n                    type=\"number\"\n                    style={{ maxWidth: \"150px\" }}\n                    name=\"obtainedMarks\"\n                    value={data.obtainedMarks}\n                    label=\"Obtained Marks\"\n                    onChange={(e) => handleCustomInputChange(e, index)}\n                  />\n                </TableCell>\n\n                <TableCell align=\"center\">{data.grade}</TableCell>\n\n                <TableCell align=\"center\">\n                  <CustomInput\n                    style={{ maxWidth: \"200px\" }}\n                    name=\"comment\"\n                    value={data.comment}\n                    label=\"Comment\"\n                    onChange={(e) => handleCustomInputChange(e, index)}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {studentMarks.length > 0 && (\n        <StickyBar\n          content={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}>\n              <LoadingButton\n                loading={updatingMarks}\n                size=\"small\"\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                onClick={updateStudentMarks}\n                variant=\"contained\">\n                Update\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 350 },\n            },\n          },\n        }}>\n        <Box component={\"form\"} onSubmit={updateThroughScheet} sx={modalStyle}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Upload\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LoadingButton\n                // loading={downloadLoader}\n                variant=\"contained\"\n                sx={{\n                  width: \"100%\",\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                  color: \"#fff\",\n                }}\n                endIcon={<DownloadIcon />}\n                onClick={getbulkUpdateStudentMarksExcel}>\n                Download\n              </LoadingButton>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LoadingButton\n                // loading={downloadLoaderAll}\n                variant=\"contained\"\n                style={{\n                  width: \"100%\",\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                }}\n                endIcon={<DownloadIcon />}\n                // onClick={handleGetAllUploadSheet}\n              >\n                Download All Students\n              </LoadingButton>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <FileSelect\n                name=\"student_marks\"\n                label=\"Select updated File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={fileChoosen}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <LoadingButton\n                // loading={sheetLoader}s\n                variant=\"contained\"\n                sx={{\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                }}\n                type=\"submit\">\n                Update Marks\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","export const examAttendanceTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNumber\",\n  },\n  {\n    name: \"Attend All\",\n    key: \"true\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { examAttendanceTableKeys } from \"../../data/tableKeys/examAttendanceData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ExamAttendance() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n      subject: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n            section: entryFormik.values.section,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Exam Attendance\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"exam attendance\"\n        bodyData={data}\n        tableKeys={examAttendanceTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TablePagination,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport Download from \"@mui/icons-material/Download\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst Data = styled(TableCell)(() => ({\n  textAlign: \"center\",\n}));\n\nconst Heading = styled(TableCell)(() => ({\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  color: \"#ffff\",\n}));\n\nconst DownloadBox = styled(Box)(() => ({\n  background: `rgb(133 140 223 / 19%)`,\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  borderRadius: \"10px\",\n  color: \"black\",\n}));\n\nexport default function Courses() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState([]);\n  const [courseId, setCourseId] = useState(\"\");\n  const [materialURL, setMaterialURL] = useState();\n  const [open, setOpen] = React.useState(false);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n\n  const [material, setMaterial] = useState(null);\n  const [file, setFile] = useState(null);\n  const [uploadLoad, setUploadLoad] = useState(false);\n  const navigate = useNavigate();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  const getCourse = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.course.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { classIds: selectedClass },\n        },\n      });\n\n      setData(data.result);\n\n      // console.log(data.result, \"mmmmmmbbbbbbnnnnnn\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedClass) {\n      getCourse();\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleSubmit = () => {\n    navigate(\"/sch/lms/add-courses\");\n  };\n\n  const handleChange = (event) => {\n    setSelectedClass(event.target.value);\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/lms/edit-courses/${data._id}`, {\n      state: { courseData: data },\n    });\n  };\n\n  const handleNavigateCourse = (id) => {\n    const selectedCourse = data.find((course) => course._id === id);\n    if (selectedCourse) {\n      const selectedCourseTitle = selectedCourse.title;\n      navigate(\"/sch/lms/course-content\", {\n        state: {\n          selectedCourseIds: id,\n          selectedCourseTitle: selectedCourseTitle,\n        },\n      });\n    }\n  };\n\n  const handleClickOpen = (id, material) => {\n    setOpen(true);\n    setCourseId(id);\n    if (material) {\n      const materialURLs = new URL(material);\n      const fileName = decodeURIComponent(\n        materialURLs.pathname.split(\"/\").pop()\n      );\n      setMaterial(fileName);\n    }\n    setMaterialURL(material);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setMaterial(null);\n  };\n\n  const handleDeleteMaterial = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await del(\n        PRIVATE_URLS.course.deleteMaterial + \"/\" + courseId\n      );\n      getCourse();\n      setMaterial(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    setUploadLoad(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.course.uploadCourseMaterial + \"/\" + courseId,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      setUploadLoad(false);\n      getCourse();\n      handleClose();\n    } catch (error) {\n      console.error(error);\n      setUploadLoad(false);\n    }\n    setUploadLoad(false);\n  };\n\n  const handleDownload = () => {\n    try {\n      window.open(materialURL, \"_blank\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.course.delete + \"/\" + id);\n      getCourse();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Courses\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\">\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"class\"\n              multiple={true}\n              value={selectedClass}\n              onChange={handleChange}\n              label=\"Select Class\"\n              options={classData}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <Heading>S.No</Heading>\n              <Heading>Class</Heading>\n              <Heading>Course Name</Heading>\n              <Heading>Subject </Heading>\n              <Heading>Duration</Heading>\n              <Heading>Content</Heading>\n              <Heading>Material</Heading>\n              <Heading>Action</Heading>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((course, index) => (\n                <TableRow key={course._id}>\n                  <Data>{index + 1}</Data>\n                  <Data>{course.class.map((c) => c.name).join(\" | \")}</Data>\n                  <Data>{course.title}</Data>\n                  <Data>\n                    {course.class.length > 1\n                      ? \"Universal\"\n                      : course.subject.name}\n                  </Data>\n                  <Data>{course.courseHours}</Data>\n                  <Data>\n                    <Button onClick={() => handleNavigateCourse(course._id)}>\n                      Upload\n                    </Button>\n                  </Data>\n\n                  <Data>\n                    <Tooltip title=\"Upload Material\">\n                      <Button\n                        onClick={() =>\n                          handleClickOpen(course._id, course.material)\n                        }>\n                        <FileUploadIcon />\n                      </Button>\n                    </Tooltip>\n                  </Data>\n\n                  <Data>\n                    <Tooltip title=\"Edit\">\n                      <Button onClick={() => handeleClickEdit(course)}>\n                        <EditIcon color=\"primary\" fontSize=\"small\" />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => setDeleteModal(course._id)}>\n                        <Delete color=\"error\" fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n\n                    <DeleteModal\n                      deleteModal={deleteModal}\n                      handleDelete={handleDelete}\n                      id={course._id}\n                      setDeleteModal={setDeleteModal}\n                    />\n                  </Data>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\">\n        <DialogTitle\n          id=\"responsive-dialog-title\"\n          sx={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n          {\"Upload Your Material\"} {data.material}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <input type=\"file\" onChange={handleFileChange} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogContent>\n          {material ? (\n            <DownloadBox px={2} py={1}>\n              <Typography>{material}</Typography>\n              <Stack direction={\"row\"}>\n                {material ? (\n                  <Button size=\"small\" onClick={handleDownload} color=\"error\">\n                    <Download fontSize=\"small\" color=\"primary\" />\n                  </Button>\n                ) : null}\n\n                <Button\n                  size=\"small\"\n                  onClick={handleDeleteMaterial}\n                  color=\"error\">\n                  <ClearIcon fontSize=\"small\" />\n                </Button>\n              </Stack>\n            </DownloadBox>\n          ) : (\n            \"\"\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            size=\"small\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            variant=\"contained\"\n            loading={uploadLoad}\n            onClick={handleUpload}\n            autoFocus>\n            Upload\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n\n      <AddForm onAddClick={handleSubmit} />\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\n// icons\nimport QuizIcon from \"@mui/icons-material/Quiz\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\nimport ViewAgendaIcon from \"@mui/icons-material/ViewAgenda\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\n\nconst MuiTableCell = styled(TableCell)(() => ({\n  width: \"150px\",\n  fontSize: \"15px\",\n  fontWeight: \"bold\",\n  color: \"black\",\n}));\n\nexport default function CourseContentTable({\n  chapter,\n  courseId,\n  onEditClick = () => {},\n  handelOpenDelModel = () => {},\n  handleDeleteChapter = () => {},\n}) {\n  console.log(chapter, \"gau\");\n  return (\n    <>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <MuiTableCell align=\"center\">S.No</MuiTableCell>\n              <MuiTableCell align=\"center\">Content Type</MuiTableCell>\n              <MuiTableCell align=\"center\">Content Title</MuiTableCell>\n\n              <MuiTableCell align=\"center\">Action</MuiTableCell>\n\n              <MuiTableCell align=\"center\">Sort</MuiTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {chapter.contents?.map(\n              (item, index) => (\n                console.log(item, \"ttete\"),\n                (\n                  <TableRow>\n                    <TableCell align=\"center\">\n                      <Typography sx={{ pr: \"10px\" }}>{index + 1}</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          columnGap: \"5px\",\n                        }}>\n                        {item.type === \"Video\" ? (\n                          <YouTubeIcon fontSize=\"small\" color=\"error\" />\n                        ) : null}\n                        {item.type === \"Quiz\" ? (\n                          <QuizIcon fontSize=\"small\" color=\"success\" />\n                        ) : null}\n                        {item.type === \"FlashCard\" ? (\n                          <ViewAgendaIcon fontSize=\"small\" color=\"warning\" />\n                        ) : null}\n                        {item.type === \"Material\" ? (\n                          <InsertDriveFileIcon fontSize=\"small\" color=\"info\" />\n                        ) : null}\n                        {item.type === \"CodePractice\" ? (\n                          <QuestionAnswerIcon\n                            fontSize=\"small\"\n                            sx={{ color: \"#1b3779\" }}\n                          />\n                        ) : null}\n                      </Box>\n                    </TableCell>\n\n                    <TableCell align=\"center\">\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                        }}>\n                        <Typography variant=\"inherit\">\n                          {item.title?.substring(0, 80)}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n\n                    <TableCell align=\"center\">\n                      <IconButton onClick={() => onEditClick(item)}>\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton color=\"error\" onClick={handelOpenDelModel}>\n                        <DeleteIcon color=\"error\" fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n\n                    <TableCell align=\"center\">\n                      {index === chapter.contents.length - 1 ? null : (\n                        <IconButton>\n                          {/*<IconButton onClick={() => sortContent(item._id, \"down\")}> */}\n                          <ArrowDownward />\n                        </IconButton>\n                      )}\n                      {index === 0 ? null : (\n                        <IconButton>\n                          {/* <IconButton onClick={() => sortContent(item._id, \"up\")}> */}\n                          <ArrowUpward />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                )\n              )\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { toast } from \"react-toastify\";\nimport FileSelect from \"../../../forms/FileSelect\";\n\nexport default function VideoDialog({\n  open,\n  title,\n  courseId,\n  chapter,\n  dataToEdit,\n  setDataToEdit = () => {},\n  setOpenVideo = () => {},\n  onUpdate = () => {},\n  Formik,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"Video\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      title: values.name,\n      description: \"\",\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((video) => formData.append(\"file\", video));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n        // console.log(data, \"video post\");\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n      video: dataToEdit?.video || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpenVideo(false);\n    setDataToEdit(null);\n    Formik.setFieldValue(\"contents\", \"\");\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid spacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Video Name 0/80*\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item>\n            <FileSelect\n              name={`file`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Video\"\n              multi={false}\n              accept=\"video/*\"\n            />\n          </Grid>\n          {selectFile.length\n            ? selectFile?.map((v) => (\n                <video\n                  src={URL.createObjectURL(v)}\n                  style={{\n                    backgroundColor: \"black\",\n                    margin: \"20px 20px\",\n                    borderRadius: \"10px\",\n                    overflow: \"hidden\",\n                    textAlign: \"center\",\n                  }}\n                  controls\n                  type=\"video/mp4\"\n                />\n              ))\n            : \"\"}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  TextField,\n  styled,\n} from \"@mui/material\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport { useFormik } from \"formik\";\n\nconst InputLabels = styled(InputLabel)(() => ({\n  fontSize: \"12px\",\n  fontWeight: 580,\n  color: \"#616161\",\n  paddingLeft: \"10px\",\n}));\n\nconst Boxes = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n}));\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function QuizDialog({ title, open, Formik, setOpenQuiz }) {\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [quizData, setQuizData] = useState([\n    {\n      question: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: \"\",\n    },\n  ]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: \"\",\n      contentHours: \"\",\n      description: \"\",\n      question: \"\",\n      option: \"\",\n    },\n    onSubmit: console.log(\"q\"),\n  });\n\n  const handleClose = () => {\n    setOpenQuiz(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title 0/80*\"\n              type=\"text\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          {quizData?.map((quiz, i) => (\n            <Grid\n              container\n              rowSpacing={2}\n              key={i}\n              sx={{\n                margin: \"20px\",\n                backgroundColor: \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"0 15px 20px 15px\",\n                border: \"1px solid lightgrey\",\n              }}>\n              <Grid item xs={12} md={12}>\n                <InputLabels>\n                  {i + 1}.\n                  {quiz.question\n                    ? \"Update Your Question!\"\n                    : \"Write your question\"}\n                </InputLabels>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  name=\"question\"\n                  value={quiz.question}\n                  placeholder=\"Type here...\"\n                  //   onChange={(e) => handleQuestionChange(e, i)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        {i > 0 ? (\n                          <IconButton\n                            color=\"error\"\n                            size=\"small\"\n                            // onClick={() => removeQuiz(i)}\n                          >\n                            {/* <DeleteIcon fontSize=\"small\" color=\"error\" /> */}\n                          </IconButton>\n                        ) : null}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Grid container rowGap={2} columnSpacing={2}>\n                  {quiz.options.map((o, i) => (\n                    <Grid key={i} item xs={12} md={6}>\n                      <Boxes>\n                        <Radio\n                          size=\"small\"\n                          {...label}\n                          color=\"default\"\n                          checked={\n                            quiz.correctOption && quiz.correctOption === o\n                          }\n                          //   onChange={(e) => handleSetCorrectOption(o, i)}\n                          value={o}\n                          type=\"radio\"\n                        />\n                        <InputLabels>Option {i + 1}</InputLabels>\n                      </Boxes>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        name={`option${i + 1}`}\n                        value={o}\n                        // onChange={(e) => handleOptionChange(e, i, i)}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../../forms/FormSelect\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { toast } from \"react-toastify\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport FileSelect from \"../../../forms/FileSelect\";\n\nexport default function FlashcardDialog({\n  chapter,\n  title,\n  open,\n  setOpenFlashcard,\n  courseId,\n  onUpdate = () => {},\n  setDataToEdit = () => {},\n  dataToEdit,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n  console.log(dataToEdit, \"dataToEdit\");\n\n  console.log(chapter, \"flash ch\");\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"FlashCard\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      flashCard: {\n        cardType: values.cardType,\n        text: \"Text\",\n      },\n      title: values.title,\n      description: values.description,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n\n    if (values.cardType === \"Image\" && !selectFile.length)\n      return toast.error(\"Please select an Image file for Flash Card!\");\n\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      if (dataToEdit) {\n        setLoading(true);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n      description: dataToEdit?.description || \"\",\n      cardType: dataToEdit?.cardType || \"\",\n      text: dataToEdit?.text || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenFlashcard(false);\n    setDataToEdit(null);\n  };\n\n  // console.log(entryFormik.values.cardType, \"ggggggggg\");\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title 0/80*\"\n              type=\"text\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              required={true}\n              name=\"cardType\"\n              label=\"Select Card Type\"\n              options={[\n                { label: \"Flashcard Text\", value: \"Text\" },\n                { label: \"Flashcard Image\", value: \"Image\" },\n              ]}\n            />\n          </Grid>\n          {entryFormik.values.cardType === \"Text\" ? (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"text\"\n                label=\"Flashcard Text\"\n                required={entryFormik.values.cardType === \"Text\" ? true : false}\n              />\n            </Grid>\n          ) : (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                name={`file`}\n                required={\n                  entryFormik.values.cardType === \"Image\" ? true : false\n                }\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectFile}\n                label=\"Upload Flashcard Image\"\n                // multi={false}\n                accept=\"image/*\"\n              />\n            </Grid>\n          )}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { toast } from \"react-toastify\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\n\nexport default function MaterialsDialog({\n  chapter,\n  courseId,\n  title,\n  open,\n  setOpenMaterial,\n  onUpdate = () => {},\n  setDataToEdit = () => {},\n  dataToEdit,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectFile, setSelectFile] = useState([]);\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"Material\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      title: values.material,\n      chapterId: chapter._id,\n      contentHours: values.contentHours,\n    };\n\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      if (dataToEdit) {\n        setLoading(true);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n        // console.log(data, \"post\");\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenMaterial(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Material Name\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`file`}\n              required={true}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Flashcard Image\"\n              // multi={false}\n              accept=\"image/*\"\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"image\"\n              label=\"Upload Material\"\n              type=\"file\"\n            />\n          </Grid> */}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport Grid from \"@mui/material/Grid\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { toast } from \"react-toastify\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport CourseContent from \"../CourseContent\";\nimport CourseContext from \"../../../context/CourseContext\";\n\nexport default function AddChapterDialog({\n  title,\n  open,\n  setOpenChaper = () => {},\n  setChapterData = () => {},\n  // onUpdate = () => {},\n  // courseId,\n  chapterData,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n  console.log(chapterData, \"gaua\");\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      if (chapterData) {\n        const formData = new FormData();\n\n        selectFile.forEach((file) => formData.append(\"file\", file));\n        formData.append(\"schoolId\", selectedSetting._id);\n        formData.append(\"chapterId\", chapterData?._id);\n        formData.append(\"title\", values.title);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateChapterDetails + \"/\" + courseId,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const formData = new FormData();\n        const body = { title: values.title };\n        formData.append(\"body\", JSON.stringify(body));\n        selectFile.forEach((file) => formData.append(\"file\", file));\n        formData.append(\"schoolId\", selectedSetting._id);\n        console.log(courseId, \"courseId\");\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.create + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      // entryFormik.handleSubmit();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: chapterData?.title || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenChaper(false);\n    setChapterData(null);\n    entryFormik.resetForm();\n    onUpdate();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={chapterData ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={chapterData ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Chapter Name\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`file`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Material\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport { createContext } from \"react\";\n\nconst ContentContext = createContext(null);\n\nexport default ContentContext;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\n//Icons\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport CourseContentTable from \"./CourseContentTable\";\nimport VideoDialog from \"./CourseDialogs/VideoDialog\";\nimport QuizDialog from \"./CourseDialogs/QuizDialog\";\nimport FlashcardDialog from \"./CourseDialogs/FlashcardDialog\";\nimport MaterialsDialog from \"./CourseDialogs/MaterialsDialog\";\nimport CodePracticeDialog from \"./CourseDialogs/CodePracticeDialog\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddChapterDialog from \"./CourseDialogs/AddChapterDialog\";\nimport DeleteModal from \"../../forms/DeleteModal\";\nimport ContentContext from \"../../context/ContentContext\";\nimport CourseContext from \"../../context/CourseContext\";\n\nconst Contents = [\n  {\n    id: 1,\n    label: \"Video\",\n    value: \"video\",\n  },\n  {\n    id: 2,\n    label: \"Quiz\",\n    value: \"quiz\",\n  },\n  {\n    id: 3,\n    label: \"FlashCard\",\n    value: \"flashcard\",\n  },\n  {\n    id: 4,\n    label: \"Material\",\n    value: \"material\",\n  },\n  // {\n  //   id: 5,\n  //   label: \"Code Practice\",\n  //   value: \"codepractice\",\n  // },\n];\n\nexport default function ShowCourseContent({\n  // chapter,\n  course,\n  // courseId,\n  // onUpdate = () => {},\n  handleEditChapter = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { chapter } = useContext(ContentContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [openVideo, setOpenVideo] = useState(false);\n  const [openQuiz, setOpenQuiz] = useState(false);\n  const [openFlashcard, setOpenFlashcard] = useState(false);\n  const [openMaterial, setOpenMaterial] = useState(false);\n  const [openCodepractice, setOpenCodepractice] = useState(false);\n  const [openDeleteModel, setOpenDeleteModel] = useState(false);\n\n  console.log(openDeleteModel, \"openDeleteModel\");\n  console.log(chapter, \"chapter\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      contents: \"\",\n    },\n    onSubmit: console.log(\"jj\"),\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.contents === \"video\") {\n      setOpenVideo(entryFormik.values.contents === \"video\");\n    } else if (entryFormik.values.contents === \"quiz\") {\n      setOpenQuiz(entryFormik.values.contents === \"quiz\");\n    } else if (entryFormik.values.contents === \"flashcard\") {\n      setOpenFlashcard(entryFormik.values.contents === \"flashcard\");\n    } else if (entryFormik.values.contents === \"material\") {\n      setOpenMaterial(entryFormik.values.contents === \"material\");\n    } else {\n      setOpenCodepractice(entryFormik.values.contents === \"codepractice\");\n    }\n  }, [entryFormik.values.contents, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"upd\");\n    let type = Contents.find((c) => c.label === data?.type);\n    // console.log(type, \"oooo\");\n    entryFormik.setFieldValue(\"contents\", type?.value);\n    setDataToEdit(data);\n  };\n\n  const handelOpenDelModel = () => {\n    setOpenDeleteModel(true);\n  };\n\n  const handleDeleteChapter = async (_id) => {\n    let payload = {\n      ..._id,\n      chapterId: _id,\n    };\n\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.courseContent.deleteChapter + \"/\" + courseId,\n        payload\n      );\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const handleSubmit = () => {\n  //   onDeleteClick(selectedItem._id);\n  //   setOpen(false);\n  // };\n\n  return (\n    <>\n      <Box\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"5px\",\n          px: 1,\n          mb: 3,\n          backgroundColor: \"aliceblue\",\n        }}>\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={6}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              p: 2,\n            }}>\n            <Typography\n              width=\"100%\"\n              variant=\"h6\"\n              component=\"div\"\n              fontWeight={600}\n              fontSize={16}\n              display=\"flex\"\n              alignItems=\"center\">\n              <Tooltip title=\"Delete Chapter\">\n                <IconButton size=\"small\" color=\"error\">\n                  <DeleteIcon\n                    fontSize=\"small\"\n                    color=\"error\"\n                    onClick={handelOpenDelModel}\n                  />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                title=\"Update Chapter\"\n                style={{\n                  color: \"#1b3779\",\n                }}>\n                <IconButton size=\"small\">\n                  <EditIcon fontSize=\"small\" onClick={handleEditChapter} />\n                </IconButton>\n              </Tooltip>\n              Chapter: {chapter?.title}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} sm={6} md={2}>\n            <FormSelect\n              required={true}\n              name=\"contents\"\n              formik={entryFormik}\n              label=\"Add Content\"\n              options={Contents}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <CourseContentTable\n              chapter={chapter}\n              courseId={courseId}\n              onEditClick={handleEditClick}\n              handelOpenDelModel={handelOpenDelModel}\n              // handleDeleteChapter={handleDeleteChapter}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* delete model ======== */}\n      <DeleteModal\n        deleteModal={openDeleteModel}\n        handleDelete={handleDeleteChapter}\n        id={chapter?._id}\n        setDeleteModal={setOpenDeleteModel}\n      />\n\n      {/* open video model ============= */}\n      <VideoDialog\n        title=\"Video for Course\"\n        open={openVideo}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenVideo={setOpenVideo}\n        chapter={chapter}\n        onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open quiz model ============== */}\n      <QuizDialog\n        title=\"Quiz\"\n        open={openQuiz}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenQuiz={setOpenQuiz}\n        chapter={chapter}\n        onUpdate={onUpdate}\n      />\n\n      {/* open flashcard model ========== */}\n      <FlashcardDialog\n        title=\"Flashcard\"\n        open={openFlashcard}\n        chapter={chapter}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenFlashcard={setOpenFlashcard}\n        onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open material model =========== */}\n      <MaterialsDialog\n        title=\"Material\"\n        open={openMaterial}\n        Formik={entryFormik}\n        chapter={chapter}\n        courseId={courseId}\n        setOpenMaterial={setOpenMaterial}\n        onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open CodePractice model =========== */}\n      {/* <CodePracticeDialog\n        title=\"Code Practice\"\n        open={openCodepractice}\n        Formik={entryFormik}\n        chapter={chapter}\n        courseId={courseId}\n        setOpenCodepractice={setOpenCodepractice}\n      /> */}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Button, Divider, Grid, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\n// icons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport ShowCourseContent from \"./ShowCourseContent\";\nimport AddChapterDialog from \"./CourseDialogs/AddChapterDialog\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CourseContext from \"../../context/CourseContext\";\nimport ContentContext from \"../../context/ContentContext\";\n\nconst Label = styled(\"label\")(() => ({\n  fontWeight: 650,\n  fontSize: \"15px\",\n  color: \"#424242\",\n}));\n\nconst OuterGrid = styled(Grid)(() => ({\n  padding: 1,\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n}));\n\nexport default function CourseContent() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [courses, setCourses] = useState([]);\n  const [openChapter, setOpenChaper] = useState(false);\n  const [courseDetails, setCourseDetails] = useState({ chapters: [] });\n  const [chapterData, setChapterData] = useState(null);\n\n  // console.log(chapterData, \"chapterData\");\n  // console.log(courseDetails, \"courseDetails\");\n  // get course list\n  const getCourse = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.course.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setCourses(\n        data.result.map((c) => ({ ...c, label: c.title, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"courseId\", data?.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get content details\n  const getDetails = async (values) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.courseContent.getDetailsTeachers + \"/\" + values.courseId,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n      setCourseDetails(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      courseId: \"\",\n    },\n    onSubmit: getDetails,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getCourse();\n  }, []);\n\n  useEffect(() => {\n    if (courses.length) {\n      entryFormik.handleSubmit();\n    }\n  }, [courses, entryFormik.values.courseId]);\n\n  const handelOpenChapter = (data) => {\n    setOpenChaper(true);\n  };\n\n  const handleEditChapter = (data) => {\n    console.log(data, \"upd\");\n    setOpenChaper(true);\n    setChapterData(data);\n  };\n\n  return (\n    <>\n      <CourseContext.Provider\n        value={{\n          courses,\n          courseId: entryFormik.values.courseId,\n          onUpdate: entryFormik.handleSubmit,\n        }}>\n        <PageHeader title=\"Course Content\" />\n\n        <OuterGrid container>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            my={2}\n            gap={2}\n            display=\"flex\"\n            alignItems=\"center\">\n            <Box sx={{ width: 260 }}>\n              <FormSelect\n                required={true}\n                name=\"courseId\"\n                formik={entryFormik}\n                label=\"Select Course To Add Content\"\n                options={courses}\n              />\n            </Box>\n\n            <Button\n              variant=\"contained\"\n              size=\"medium\"\n              disabled={!courses.length}\n              startIcon={<AddIcon />}\n              sx={{ mt: 1 }}\n              multi={false}\n              onClick={handelOpenChapter}>\n              Chapter\n            </Button>\n          </Grid>\n        </OuterGrid>\n        <Divider />\n\n        {/* show all models components == */}\n\n        {courseDetails.chapters?.map((chapter, i) => (\n          <ContentContext.Provider value={{ chapter: chapter }}>\n            <ShowCourseContent\n              key={i}\n              chapter={chapter}\n              courseId={entryFormik.values.courseId}\n              course={courseDetails}\n              // submitDetails={() => entryFormik.handleSubmit()}\n              handleEditChapter={() => handleEditChapter(chapter)}\n            />\n          </ContentContext.Provider>\n        ))}\n\n        {/* open chapter model ========== */}\n        <AddChapterDialog\n          title=\"Chapter for Course\"\n          open={openChapter}\n          setOpenChaper={setOpenChaper}\n          courseId={entryFormik.values.courseId}\n          chapterData={chapterData}\n          setChapterData={setChapterData}\n          onUpdate={() => entryFormik.handleSubmit()}\n        />\n      </CourseContext.Provider>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport moment from \"moment\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FormInput from \"../../forms/FormInput\";\nimport { Delete, Search } from \"@mui/icons-material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport dayjs from \"dayjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst TableData = styled(TableCell)(() => ({\n  textAlign: \"center\",\n  color: \"#ffff\",\n  fontWeight: 600,\n}));\n\nconst TableBodydata = styled(TableCell)(() => ({\n  textAlign: \"center\",\n}));\nconst Label = styled(\"label\")(() => ({\n  fontWeight: 650,\n  fontSize: \"15px\",\n  color: \"#424242\",\n  paddingLeft: \"10px\",\n}));\n\nconst FilterBox = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  gap: \"10px\",\n  marginBottom: 1,\n}));\nconst getDateWithTime = (dateTimeString = \"27/09/2024 14:30\") => {\n  const dateTimeComponents = dateTimeString.split(\" \");\n\n  // Extract date components\n  const dateComponents = dateTimeComponents[0].split(\"/\");\n  const yearExtracted = parseInt(dateComponents[2], 10);\n  const monthExtracted = parseInt(dateComponents[1], 10) - 1; // Months are zero-based\n  const dayExtracted = parseInt(dateComponents[0], 10);\n\n  // Extract time components\n  const timeComponents = dateTimeComponents[1].split(\":\");\n  const hoursExtracted = parseInt(timeComponents[0], 10);\n  const minutesExtracted = parseInt(timeComponents[1], 10);\n\n  // Create a new Date object using the extracted components\n  return new Date(\n    yearExtracted,\n    monthExtracted,\n    dayExtracted,\n    hoursExtracted,\n    minutesExtracted\n  );\n};\n\nconst getStatus = (startDate, startTime, expiryDate, expiryTime) => {\n  let currentDate = Date.now();\n  let startDataTimestring = `${moment(startDate).format(\n    \"DD/MM/YYYY\"\n  )} ${startTime}}`;\n  let expiryDateTimeString = `${moment(expiryDate).format(\n    \"DD/MM/YYYY\"\n  )} ${expiryTime}`;\n  let currentDateTimeString = `${moment(currentDate).format(\n    \"DD/MM/YYYY\"\n  )} ${moment(currentDate).format(\"LT\")}`;\n\n  let meetingDate = getDateWithTime(startDataTimestring);\n  let meetingExpiryDate = getDateWithTime(expiryDateTimeString);\n  let currentDateAndTime = getDateWithTime(currentDateTimeString);\n\n  if (meetingDate > currentDateAndTime) {\n    return \"Upcoming\";\n  } else if (\n    meetingDate < currentDateAndTime &&\n    meetingExpiryDate > currentDateAndTime\n  ) {\n    return \"Available\";\n  } else {\n    return \"Expired\";\n  }\n};\n\nconst User_Type = [\n  { label: \"Student\", value: \"student\" },\n  { label: \"Employee\", value: \"employee\" },\n];\n\nconst Participant_Type = [\n  { label: \"Single\", value: \"Single\" },\n  { label: \"Class Students\", value: \"Class Students\" },\n  { label: \"Selected\", value: \"Selected\" },\n];\n\nconst Meeting_Type = [\n  { label: \"One-On-One Call\", value: \"OneONoneCall\" },\n  { label: \"Group Call\", value: \"GroupCall\" },\n  { label: \"Live Streaming\", value: \"LiveStreaming\" },\n];\n\nexport default function Live() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [filterMeeting, setFilterMeeting] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [classes, setClasses] = useState([]);\n  const [selectClasses, setSelectClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const navigate = useNavigate();\n  const [employee, setEmployee] = useState([]);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n  const [selectedPartcipatType, setSelectedParticipatType] = useState(\"All\");\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.meeting.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n      setFilterMeeting(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddMeeting = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      setSelectClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.classId,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.classId,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: { $in: entryFormik.values.roles },\n          },\n        },\n      });\n\n      console.log(data, \"jjjjjjjjjjjjj\");\n\n      setEmployee(\n        data.result.map((s) => ({\n          ...s,\n          label: s.basicInfo.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(data.result.map((s) => ({ ...s, label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getDateWithTime();\n  }, []);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n\n        startDate: dayjs(values.startDate).format(\"YYYY/MM/DD\"),\n        expiryDate: dayjs(values.expiryDate).format(\"YYYY/MM/DD\"),\n\n        participants:\n          entryFormik.values.participantType === \"Single\"\n            ? [entryFormik.values.participants]\n            : entryFormik.values.participants,\n\n        employeeParticipants: employee.filter(\n          (e) =>\n            entryFormik.values.roles.includes(e.role) &&\n            entryFormik.values.employeeParticipants.includes(e._id)\n        ),\n        studentParticipants: students.filter(\n          (s) =>\n            entryFormik.values.classId.includes(s?.academicInfo?.class?._id) &&\n            entryFormik.values.section.includes(\n              s?.academicInfo?.section?._id\n            ) &&\n            entryFormik.values.studentParticipants.includes(s?._id)\n        ),\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.meeting.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n        handleClose();\n      } else {\n        const { data } = await post(PRIVATE_URLS.meeting.create, payload);\n        getData();\n        handleClose();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      classId: dataToEdit?.classId || [],\n\n      expiryDate: dataToEdit?.expiryDate\n        ? dayjs(dataToEdit.expiryDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      expiryTime: dataToEdit?.expiryTime || \"\",\n      startDate: dataToEdit?.startDate\n        ? dayjs(dataToEdit?.startDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      startTime: dataToEdit?.startTime || \"\",\n      createdBy: dataToEdit?.createdBy || \"\",\n      meetingType: dataToEdit?.meetingType || \"\",\n      participantType: dataToEdit?.participantType || \"\",\n      userTypes: dataToEdit?.userTypes || [],\n      participants: [],\n      roles: [],\n      section: [],\n      employeeParticipants: [],\n      studentParticipants: [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.roles) {\n      getEmployee();\n    }\n  }, [entryFormik.values.roles, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.classId) {\n      getSections();\n    }\n  }, [entryFormik.values.classId, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.classId && entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.classId, entryFormik.values.section, selectedSetting]);\n\n  const handleUpdateModelOpen = (id) => {\n    console.log(id, \"idddddd\");\n    setDataToEdit(id);\n    let meetingData = data.filter((m) => m._id == id)[0];\n    if (meetingData.userTypes.includes(\"employee\")) {\n      let roles = [];\n      for (let emp of meetingData.employeeParticipants) {\n        if (roles.filter((r) => r == emp.role).length < 1) {\n          roles.push(emp.role);\n        }\n      }\n\n      entryFormik.setFieldValue(\"roles\", roles);\n      entryFormik.setFieldValue(\n        \"employeeParticipants\",\n        meetingData.employeeParticipants.map((p) => p._id)\n      );\n    }\n\n    if (meetingData.userTypes.includes(\"student\")) {\n      let classes = [];\n      let sections = [];\n      for (let stupar of meetingData.studentParticipants) {\n        if (sections.filter((s) => s == stupar.academicInfo.class).length < 1) {\n          sections.push(stupar.academicInfo.section);\n        }\n        if (classes.filter((c) => c == stupar.academicInfo.class).length < 1) {\n          classes.push(stupar.academicInfo.class);\n        }\n      }\n\n      entryFormik.setFieldValue(\"classId\", classes);\n      entryFormik.setFieldValue(\"section\", sections);\n      entryFormik.setFieldValue(\n        \"studentParticipants\",\n        meetingData.studentParticipants.map((p) => p._id)\n      );\n    }\n\n    if (meetingData.participantType === \"Class Students\") {\n      entryFormik.setFieldValue(\n        \"classId\",\n        meetingData.classId.map((c) => c._id)\n      );\n    }\n\n    entryFormik.setFieldValue(\"meetingType\", meetingData.meetingType);\n    entryFormik.setFieldValue(\"expiryDate\", meetingData.expiryDate);\n    entryFormik.setFieldValue(\"startTime\", meetingData.startTime);\n    entryFormik.setFieldValue(\"expiryTime\", meetingData.expiryTime);\n    entryFormik.setFieldValue(\"participantType\", meetingData.participantType);\n    entryFormik.setFieldValue(\"userTypes\", meetingData.userTypes);\n\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (selectedPartcipatType) {\n      if (selectedPartcipatType === \"All\") {\n        setFilterMeeting(data);\n      } else {\n        setFilterMeeting(\n          data.filter((c) => c.meetingType === selectedPartcipatType)\n        );\n      }\n    }\n  }, [selectedPartcipatType, selectedSetting]);\n  const handleFilter = (e) => {\n    setSelectedParticipatType(e.target.value);\n  };\n\n  const handleJoinClick = (id) => {\n    const getMeetingId = data.find((item) => item._id === id);\n    console.log(getMeetingId);\n    if (getMeetingId) {\n      const meetingType = getMeetingId.meetingType;\n      navigate(`/sch/lms/room/${getMeetingId.roomId}`, {\n        state: { meetingType: meetingType },\n      });\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.meeting.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Live\" />\n\n      <FilterBox>\n        <FormControl size=\"small\" sx={{ m: 1, minWidth: 250 }}>\n          <Label id=\"demo-simple-select-label\">\n            <FilterListIcon fontSize=\"small\" /> Filter Meeting\n          </Label>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            placeholder=\"Select Course\"\n            value={selectedPartcipatType}\n            onChange={handleFilter}>\n            <MenuItem value=\"All\"> All </MenuItem>\n            <MenuItem value=\"OneONoneCall\">One-On-One Call </MenuItem>\n            <MenuItem value=\"GroupCall\">Group Call </MenuItem>\n            <MenuItem value=\"LiveStreaming\">Live Streaming</MenuItem>\n          </Select>\n        </FormControl>\n      </FilterBox>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableData>S.No</TableData>\n              <TableData>Meeting Date</TableData>\n              <TableData>Meeting Type</TableData>\n              <TableData>Status</TableData>\n              <TableData>Start Meeting</TableData>\n              <TableData>Action</TableData>\n            </TableRow>\n          </TableHead>{\" \"}\n          <TableBody>\n            {(filterMeeting ? filterMeeting : data).map((listData, i) => (\n              <TableRow>\n                <TableBodydata>{i + 1}</TableBodydata>\n\n                <TableBodydata>\n                  {dayjs(listData.startDate).format(\"DD-MM-YYYY\")}, Time:{\" \"}\n                  {listData.startTime}\n                </TableBodydata>\n                <TableBodydata>{listData.meetingType}</TableBodydata>\n                <TableBodydata>\n                  <Box\n                    sx={{\n                      py: 1,\n                      objectFit: \"contain\",\n                      borderRadius: \"5px\",\n                      background:\n                        getStatus(\n                          listData.startDate,\n                          listData.startTime,\n                          listData.expiryDate,\n                          listData.expiryTime\n                        ) === \"Expired\"\n                          ? \"#85848430\"\n                          : \"#8281e74d\",\n                    }}>\n                    {getStatus(\n                      listData.startDate,\n                      listData.startTime,\n                      listData.expiryDate,\n                      listData.expiryTime\n                    )}\n                  </Box>\n                </TableBodydata>\n                <TableBodydata>\n                  <Button\n                    disabled={\n                      getStatus(\n                        listData.startDate,\n                        listData.startTime,\n                        listData.expiryDate,\n                        listData.expiryTime\n                      ) === \"Expired\"\n                    }\n                    onClick={() => handleJoinClick(listData._id)}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Join\n                  </Button>\n                </TableBodydata>\n\n                <TableBodydata>\n                  <Tooltip title=\"Edit\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleUpdateModelOpen(listData._id)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => setDeleteModal(listData._id)}>\n                      <Delete fontSize=\"small\" color=\"error\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <DeleteModal\n                    deleteModal={deleteModal}\n                    handleDelete={handleDelete}\n                    id={listData._id}\n                    setDeleteModal={setDeleteModal}\n                  />\n                </TableBodydata>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Box align=\"center\" colSpan={12} py={2}>\n            <Typography variant=\"h6\" align=\"center\">\n              Live sessions Not found!\n            </Typography>\n          </Box>\n        )}\n        {!filterMeeting.length === 0 && (\n          <Box align=\"center\" colSpan={12} py={2}>\n            <Typography variant=\"h6\" align=\"center\">\n              Live sessions Not found!\n            </Typography>\n          </Box>\n        )}\n      </TableContainer>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Meeting\" : \"Add Meeting\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"meetingType\"\n              label=\"Meeting Type\"\n              options={Meeting_Type}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"participantType\"\n              label=\"Participant Type\"\n              options={Participant_Type}\n            />\n          </Grid>\n\n          {(entryFormik.values.participantType === \"Single\" ||\n            entryFormik.values.participantType === \"Selected\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  multiple={true}\n                  formik={entryFormik}\n                  name=\"userTypes\"\n                  label=\"User Type\"\n                  options={User_Type}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.userTypes.includes(\"student\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"classId\"\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"section\"\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"studentParticipants\"\n                  multiple={\n                    entryFormik.values.participantType !== \"Single\"\n                      ? true\n                      : false\n                  }\n                  label=\"Select Student\"\n                  options={students}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.userTypes.includes(\"employee\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"roles\"\n                  label=\"Select Role\"\n                  options={roles}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"employeeParticipants\"\n                  label=\"Select Employee\"\n                  options={employee}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.participantType === \"Class Students\" && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"classId\"\n                  multiple={\n                    entryFormik.values.participantType === \"Class Students\"\n                      ? true\n                      : false\n                  }\n                  label=\"Select Class\"\n                  options={selectClasses}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Enter Start Date\"\n              name=\"startDate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              label=\"Enter Start Time\"\n              type=\"time\"\n              name=\"startTime\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Enter Expiry Date\"\n              name=\"expiryDate\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              label=\"Enter Expiry Time\"\n              type=\"time\"\n              name=\"expiryTime\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      <AddForm title=\"Add Meeting\" onAddClick={AddMeeting} />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst StorageText = styled(Typography)(() => ({\n  border: \"1px solid lightGrey\",\n  fontWeight: \"600\",\n  padding: 10,\n  borderRadius: 5,\n  textAlign: \"center\",\n}));\nconst StorageContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst Storage = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [storageDetails, setStorageDetails] = useState({\n    totalStorage: 0,\n    usedStorage: 0,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.storage.details, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setStorageDetails(data.result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Storage\" />\n      <StorageContainer>\n        <Paper\n          sx={{\n            padding: 4,\n            width: { xs: \"100%\", sm: \"70%\", md: \"50%\", lg: \"40%\" },\n          }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <StorageText>\n                Total Storage:{\" \"}\n                <Typography component=\"span\" fontWeight=\"bold\" color=\"#607d8b\">\n                  {storageDetails.totalStorage}\n                </Typography>\n              </StorageText>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <StorageText>\n                Used Storage:{\" \"}\n                <Typography component=\"span\" fontWeight=\"bold\" color=\"#607d8b\">\n                  {storageDetails.usedStorage}\n                </Typography>\n              </StorageText>\n            </Grid>\n          </Grid>\n        </Paper>\n      </StorageContainer>\n    </>\n  );\n};\n\nexport default Storage;\n","/** @format */\n\nexport const libraryBookTableKeys = [\n  {\n    name: \"Book Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Author\",\n    key: \"author\",\n  },\n  {\n    name: \"Book Cover\",\n    key: \"bookCover\",\n    type: \"image\",\n  },\n  {\n    name: \"Price\",\n    key: \"price\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n  {\n    name: \"Issue\",\n    key: \"issueNumber\",\n  },\n  {\n    name: \"Available\",\n    key: \"available\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport dayjs from \"dayjs\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function BookViewModal({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Book Title\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.title}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Book ID\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.id}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Author\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.author}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Language\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.language}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.quantity}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Price\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.price}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Almira No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.almiraNo}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {dayjs(tableData?.createdAt).format(\"DD-MM-YYYY\")}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { libraryBookTableKeys } from \"../../data/tableKeys/libraryBooksData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\n\nimport FormModal from \"../../forms/FormModal\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddForm from \"../../forms/AddForm\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport BookViewModal from \"./BookViewModal\";\n\nexport default function Books() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    schoolName: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.book.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"llllllllll\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddBooks = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"schoolId\", selectedSetting._id);\n    formData.append(\"title\", values.title);\n    formData.append(\"id\", values.id);\n    formData.append(\"department\", values.department);\n    formData.append(\"cellNumber\", values.cellNumber);\n    formData.append(\"isbnNo\", values.isbnNo);\n    formData.append(\"edison\", values.edison);\n    formData.append(\"author\", values.author);\n    formData.append(\"language\", values.language);\n    formData.append(\"price\", values.price);\n    formData.append(\"quantity\", values.quantity);\n    formData.append(\"almiraNo\", values.almiraNo);\n    selectImg.forEach((file) => formData.append(\"bookCover\", file));\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.book.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.book.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        getData();\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      id: dataToEdit?.id || \"\",\n      department: dataToEdit?.department || \"\",\n      cellNumber: dataToEdit?.cellNumber || \"\",\n      isbnNo: dataToEdit?.isbnNo || \"\",\n      edison: dataToEdit?.edison || \"\",\n      author: dataToEdit?.author || \"\",\n      language: dataToEdit?.language || \"\",\n      price: dataToEdit?.price || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      almiraNo: dataToEdit?.almiraNo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.book.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Library\" />\n\n      <Paper sx={{ padding: 2, mb: 1 }}>\n        <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n          <Button size=\"small\" variant=\"contained\">\n            Download\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Count By title\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Stock Verification\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Bulk Upload\n          </Button>\n        </Stack>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={libraryBookTableKeys}\n        bodyDataModal=\"book\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onViewClick={handleClickOpenView}\n      />\n\n      <AddForm title=\"Add Books\" onAddClick={AddBooks} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Books\" : \"Add Books\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"id\"\n              label=\"Book Id\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"department\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"cellNumber\"\n              label=\"Cell Number\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"isbnNo\" label=\"ISBN No\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"edison\" label=\"Edison\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"author\" label=\"Author\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"language\" label=\"Language\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"price\" label=\"Price\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"quantity\"\n              required={true}\n              label=\"Quantity\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"almiraNo\" label=\"Almira No\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FileSelect\n              name=\"bookCover\"\n              label=\"Select Book\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      <BookViewModal\n        title=\"Book Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const periodicalTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Issue Number\",\n    key: \"issueNumber\",\n  },\n  {\n    name: \"Volume Number\",\n    key: \"volumeNumber\",\n  },\n  {\n    name: \"Book Cover\",\n    key: \"bookCover\",\n    type: \"image\",\n  },\n  {\n    name: \"Price\",\n    key: \"price\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n\n  {\n    name: \"Journal Entry Date\",\n    key: \"entryDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { periodicalTableKeys } from \"../../data/tableKeys/periodicalData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\n\nexport default function Periodical() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectImg, setSelectImg] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [downloadLoader, setDownloadLoader] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.periodical.list);\n      console.log(data, \"perr\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"type\", values.type);\n    formData.append(\"department\", values.department);\n    formData.append(\"issueNumber\", values.issueNumber);\n    formData.append(\"volumeNumber\", values.volumeNumber);\n    formData.append(\"quantity\", values.quantity);\n    formData.append(\"price\", values.price);\n    formData.append(\"entryDate\", dayjs(values.entryDate).format(\"YYYY-MM-DD\"));\n    selectImg.forEach((file) => formData.append(\"bookCover\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.periodical.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.periodical.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  // open add model\n  const AddFormHandel = () => {\n    setOpen(true);\n  };\n\n  const handleChangeFiles = (e) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      type: dataToEdit?.type || \"\",\n      department: dataToEdit?.department || \"\",\n      issueNumber: dataToEdit?.issueNumber || \"\",\n      volumeNumber: dataToEdit?.volumeNumber || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      price: dataToEdit?.price || \"\",\n      entryDate: dataToEdit?.entryDate || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setOpen(true);\n    getData();\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.periodical.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadSheet = () => {\n    console.log(\"ggg\");\n  };\n\n  // const handleGetDownloadSheet = async (e) => {\n  //   setDownloadLoader(true);\n  //   e.preventDefault();\n  //   try {\n  //     // const response = await get(\n  //     //   `/${selectedSetting._id}/periodical/downloadexcel`,\n  //     //   {\n  //     //     responseType: \"blob\",\n  //     //   }\n  //     // );\n\n  //     const downloadUrl = URL.createObjectURL(new Blob([response.data]));\n  //     const link = document.createElement(\"a\");\n  //     link.href = downloadUrl;\n  //     link.setAttribute(\"download\", `periodical-stock.xlsx`);\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setDownloadLoader(false);\n  // };\n\n  return (\n    <>\n      <PageHeader title=\"Periodical List\" />\n      <Paper sx={{ padding: 2, mb: 1 }}>\n        <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleGetDownloadSheet}>\n            Download\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Count By title\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Bulk Upload\n          </Button>\n        </Stack>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={periodicalTableKeys}\n        bodyDataModal=\"periodical list\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Periodical List\" onAddClick={AddFormHandel} />\n\n      {/* ==== Add/Update Periodical List ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Periodical List\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Periodical Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Select Type\"\n              options={[\n                { label: \"Journal\", value: \"journal\" },\n                { label: \"Magazine\", value: \"magazine\" },\n                { label: \"Newspaper\", value: \"newspaper\" },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"department\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"issueNumber\"\n              label=\"Issue Number\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"volumeNumber\"\n              label=\"Volume Number\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              name=\"quantity\"\n              label=\"Quantity\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"price\"\n              label=\"price\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"entryDate\"\n              label=\"Select Entry Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`bookCover`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              label=\"Select Book Cover\"\n              // onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/*\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n];\n","/** @format */\n\nexport const studentNonMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { studentMemberTableKeys } from \"../../data/tableKeys/studentMember\";\nimport { studentNonMemberTableKeys } from \"../../data/tableKeys/studentNonMember\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport { Add, Remove as RemoveIcon } from \"@mui/icons-material\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\n\nconst StudentMemberAction = ({\n  onUpdate = () => {},\n  data = {},\n  actionType,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      if (actionType === \"add\") {\n        await put(PRIVATE_URLS.student.updateLibraryMember + \"/\" + data._id);\n      } else {\n        await del(PRIVATE_URLS.student.removeLibraryMember + \"/\" + data._id);\n      }\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  const actionTitle = actionType === \"add\" ? \"Add Member\" : \"Remove Member\";\n  const actionDescription =\n    actionType === \"add\"\n      ? \"Do you want to add this student to the library member list?\"\n      : \"Do you want to remove this student from the library member list?\";\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={actionType === \"add\" ? <Add /> : <RemoveIcon />}\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={actionTitle}\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>{actionDescription}</Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function StudentLibraryMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [students, setStudents] = useState([]);\n  const [nonMember, setNonMember] = useState([]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          studentName: d.basicInfo,\n          className: d.academicInfo.class,\n          sectionName: d.academicInfo.section,\n          rollNo: d.academicInfo,\n        }));\n\n      const filteredNonMemberData = data.result\n        .filter((d) => !d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          studentName: d.basicInfo,\n          className: d.academicInfo.class,\n          sectionName: d.academicInfo.section,\n          rollNo: d.academicInfo,\n        }));\n\n      setStudents(filteredData);\n\n      setNonMember(filteredNonMemberData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Student Library Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Student Member List\", \"Student Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentMemberTableKeys}\n          bodyData={students}\n          bodyDataModal=\"student\"\n          CustomAction={(props) => (\n            <StudentMemberAction {...props} actionType=\"remove\" />\n          )}\n          onUpdate={getStudents}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentNonMemberTableKeys}\n          bodyData={nonMember}\n          bodyDataModal=\"student\"\n          CustomAction={(props) => (\n            <StudentMemberAction {...props} actionType=\"add\" />\n          )}\n          onUpdate={getStudents}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentLibraryDueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nexport const studentLibraryHistoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nexport const studentLibraryIssueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { studentLibraryDueTableKeys } from \"../../data/tableKeys/studentLibraryDueData\";\nimport { studentLibraryHistoryTableKeys } from \"../../data/tableKeys/studentLibraryHistoryData\";\nimport { studentLibraryIssueTableKeys } from \"../../data/tableKeys/studentlibraryIssueData\";\nimport { Button, Grid, Paper, Stack, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport dayjs from \"dayjs\";\n\nconst BookDetailed = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n}));\n\nconst Issued_To_Type_Option = [\n  { label: \"Student\", value: \"student\" },\n  { label: \"Employee\", value: \"employee\" },\n];\n\nconst CustomAction = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.bookIssue.submit + \"/\" + data._id);\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button size=\"small\" variant=\"contained\" onClick={handleClickOpen}>\n          Return\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Return Book\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>\n              Are you sure you want to change the issue status to return?\n            </Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function StudentIssueReturn() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [employee, setEmployee] = useState([]);\n  const [book, setBook] = useState([]);\n  const [dueList, setDueList] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.bookIssue.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const filteredIssueData = data.result\n        .filter((s) => s.submissionDate == null)\n        .map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }));\n\n      const currentDate = new Date();\n      const filtereDueData = data.result\n        .filter(\n          (s) =>\n            s.dueDate &&\n            new Date(s.dueDate) < currentDate &&\n            s.submissionDate == null\n        )\n        .map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }));\n\n      setData(filteredIssueData);\n      setDueList(filtereDueData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const getBooks = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.book.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setBook(data.result.map((s) => ({ ...s, label: s.title, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }));\n      setStudents(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }));\n      setEmployee(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getBooks();\n    getStudents();\n    getEmployee();\n  }, [selectedSetting]);\n\n  const getList = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.bookIssue.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      console.log(data.result, \"issues\");\n      setHistory(\n        data.result.map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }))\n      );\n\n      console.log(data.result, \"histttttttttt\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getList,\n  });\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getIssuePdf = await get(PRIVATE_URLS.bookIssue.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: formik.values.fromDate,\n          toDate: formik.values.toDate,\n        },\n      });\n\n      downloadFile(\"application/pdf\", getIssuePdf.data, \"Issue_Details.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.bookIssue.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: formik.values.fromDate,\n          toDate: formik.values.toDate,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"Issue_Details.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        issueDate: dayjs(values.issueDate).format(\"YYYY/MM/DD\"),\n        dueDate: dayjs(values.dueDate).format(\"YYYY/MM/DD\"),\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      const { data } = await post(PRIVATE_URLS.bookIssue.create, payload);\n      getData();\n      resetForm();\n      handleClose();\n      getBooks();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      issueDate: null,\n      book: \"\",\n      quantity: 0,\n      dueDate: null,\n      issuedToType: \"\",\n      issuedTo: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    formik.handleSubmit();\n  }, [selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Issue & Return\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Issue List\", \"Due List\", \"History List\"]}\n      />\n\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        sx={{ mt: 1, mb: 2 }}>\n        Issue Book\n      </Button>\n      <TabPanel index={0} value={value}>\n        <BookDetailed sx={{ padding: 1 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Total Books:{\" \"}\n            {book.reduce((total, current) => total + current.leftInStock, 0)}\n          </Typography>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Issued: {data.length}\n          </Typography>\n          <Typography variant=\"h6\" fontSize={16} fontWeight=\"bold\">\n            Due: {dueList.length}\n          </Typography>\n        </BookDetailed>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentLibraryIssueTableKeys}\n          bodyData={data}\n          bodyDataModal=\"issue list\"\n          CustomAction={CustomAction}\n          onUpdate={getData}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentLibraryDueTableKeys}\n          bodyData={dueList}\n          bodyDataModal=\"due list\"\n          CustomAction={CustomAction}\n          onUpdate={getData}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                sx={{ alignSelf: \"center\", mt: 1 }}\n                item>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n              <Grid xs={12} md={12} lg={12} item>\n                <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n                  <Button\n                    size=\"small\"\n                    onClick={handleGetPrintPdf}\n                    variant=\"contained\">\n                    Download\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    onClick={handleGetDownloadExcel}\n                    variant=\"contained\">\n                    Print\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyData={history}\n          bodyDataModal=\"list\"\n          tableKeys={studentLibraryHistoryTableKeys}\n        />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Issue\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"book\"\n              label=\"Book\"\n              required={true}\n              options={book}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"issueDate\"\n              label=\"Issue Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"quantity\"\n              label=\"Quantity\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"dueDate\"\n              label=\"Due Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"issuedToType\"\n              label=\"Issued To Type\"\n              required={true}\n              options={Issued_To_Type_Option}\n            />\n          </Grid>\n          {entryFormik.values.issuedToType === \"student\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={entryFormik}\n                name=\"issuedTo\"\n                label=\"Issued To\"\n                required={true}\n                options={students}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.issuedToType === \"employee\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={entryFormik}\n                name=\"issuedTo\"\n                label=\"Issued To\"\n                required={true}\n                options={employee}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeLibraryMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"empName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n\n  {\n    name: \"Library Id\",\n    key: \"libraryId\",\n  },\n];\n","/** @format */\n\nexport const employeeLibraryNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"empName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n\n  {\n    name: \"Library Id\",\n    key: \"libraryId\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLibraryMemberTableKeys } from \"../../data/tableKeys/employeeLibraryNonMemberData\";\nimport { employeeLibraryNonMemberTableKeys } from \"../../data/tableKeys/employeeLibraryMemberData\";\n\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\n\nconst EmployeeMemberAction = ({\n  onUpdate = () => {},\n  data = {},\n  actionType,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      if (actionType === \"add\") {\n        await put(PRIVATE_URLS.employee.updateLibraryMember + \"/\" + data._id);\n      } else {\n        await del(PRIVATE_URLS.employee.removeLibraryMember + \"/\" + data._id);\n      }\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  const actionTitle = actionType === \"add\" ? \"Add Member\" : \"Remove Member\";\n  const actionDescription =\n    actionType === \"add\"\n      ? \"Do you want to add this employee to the library member list?\"\n      : \"Do you want to remove this employee from the library member list?\";\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={actionType === \"add\" ? <Add /> : <RemoveIcon />}\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={actionTitle}\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>{actionDescription}</Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function EmployeeLibraryMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [employee, setEmployee] = useState([]);\n  const [nonMember, setNonMember] = useState([]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          empName: d.basicInfo,\n        }));\n\n      const filteredNonMemberData = data.result\n        .filter((d) => !d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          empName: d.basicInfo,\n        }));\n\n      setEmployee(filteredData);\n      setNonMember(filteredNonMemberData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployee();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Library Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Employee Member List\", \"Employee Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLibraryMemberTableKeys}\n          bodyData={employee}\n          bodyDataModal=\"employee\"\n          CustomAction={(props) => (\n            <EmployeeMemberAction {...props} actionType=\"remove\" />\n          )}\n          onUpdate={getEmployee}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLibraryNonMemberTableKeys}\n          bodyData={nonMember}\n          bodyDataModal=\"employee\"\n          CustomAction={(props) => (\n            <EmployeeMemberAction {...props} actionType=\"add\" />\n          )}\n          onUpdate={getEmployee}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const employeeLibraryHistoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","export const employeeLibraryDueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","export const employeeLibraryIssueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","import React, { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLibraryHistoryTableKeys } from \"../../data/tableKeys/employeeLibraryHistroyData\";\nimport { employeeLibraryDueTableKeys } from \"../../data/tableKeys/employeeLibraryDueData\";\nimport { employeeLibraryIssueTableKeys } from \"../../data/tableKeys/employeeLibraryIssueData\";\nimport { Button, Grid, Paper, Stack, Typography, styled } from \"@mui/material\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\n\nconst BookDetailed = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n}));\nexport default function EmployeeIssueReturn() {\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  return (\n    <>\n      <PageHeader title=\"Employee Issue & Return\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Issue List\", \"Due List\", \"History List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <BookDetailed sx={{ padding: 1 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Total Books: 1\n          </Typography>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Issued: 1\n          </Typography>\n          <Typography variant=\"h6\" fontSize={16} fontWeight=\"bold\">\n            Due: 1\n          </Typography>\n        </BookDetailed>\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLibraryIssueTableKeys}\n          bodyData={data}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLibraryDueTableKeys}\n          bodyData={data}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"To Date\"\n                name=\"toDate\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              sx={{ alignSelf: \"center\", mt: 1 }}\n              item\n            >\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n                <Button size=\"small\" variant=\"contained\">\n                  Download\n                </Button>\n                <Button size=\"small\" variant=\"contained\">\n                  Print\n                </Button>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable actions={[]} tableKeys={employeeLibraryHistoryTableKeys} />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const leaveTypeTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Leave Category\",\n    key: \"leaveTypeFor\",\n  },\n  {\n    name: \"Department\",\n    key: \"departmentName\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport { leaveTypeTableKeys } from \"../../data/tableKeys/leaveTypeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\n// icons\nimport { CloseRounded } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst ListContainer = styled(Box)(() => ({\n  flexWrap: \"nowrap\",\n  overflowY: \"hidden\",\n  overflowX: \"auto\",\n  flexDirection: \"column\",\n  display: \"flex\",\n  margin: \"10px 10px\",\n}));\n\nconst ListItem = styled(Typography)(() => ({\n  fontSize: \"14px\",\n  paddingRight: \"5px\",\n  paddingLeft: \"5px\",\n}));\n\nconst ListItemContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  backgroundColor: \"#f9f9f9\",\n  marginRight: \"10px\",\n  alignItems: \"center\",\n  borderRadius: \"10@s\",\n  minWidth: \"150px\",\n}));\n\nexport default function LeaveType({}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [selectDepartments, setSelectDepartments] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [multipleDepartments, setMultipleDepartments] = useState([]);\n  const [state, setState] = useState({\n    name: \"\",\n    leaveTypeFor: \"\",\n    departments: \"\",\n    autoEarned: false,\n    total: 0,\n    isSpecial: false,\n    canResetCarryForward: false,\n    carryForwardCount: 0,\n    autoEarnCount: 0,\n  });\n\n  let {\n    name,\n    leaveTypeFor,\n    departments,\n    autoEarned,\n    total,\n    isSpecial,\n    canResetCarryForward,\n    carryForwardCount,\n    autoEarnCount,\n  } = state;\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((s) => ({\n          ...s,\n          departmentName: s?.departments.map((d) => d.name).join(\", \"),\n        }))\n      );\n\n      console.log(data.result, \"bbbnvghfhfd\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // console.log(multipleDepartments, \"multipleDepartments\");\n\n  const getDepartments = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setSelectDepartments(\n        data.result.map((d) => ({ label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, [selectedSetting]);\n\n  const AddLeaveType = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let payload = {\n      name,\n      leaveTypeFor,\n      departments: multipleDepartments,\n      autoEarned,\n      total,\n      isSpecial,\n      canResetCarryForward,\n      carryForwardCount,\n      autoEarnCount,\n      schoolId: selectedSetting._id,\n    };\n    // console.log(payload, \"payload\");\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.leaveType.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.leaveType.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setState({\n      name: \"\",\n      leaveTypeFor: \"\",\n      departments: \"\",\n      autoEarned: false,\n      total: 0,\n      isSpecial: false,\n      canResetCarryForward: false,\n      carryForwardCount: 0,\n      autoEarnCount: 0,\n    });\n    setMultipleDepartments([]);\n\n    setOpen(false);\n    setLoading(false);\n  };\n\n  let handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"departments\") {\n      setMultipleDepartments(value);\n    } else {\n      setState({ ...state, [name]: value });\n    }\n  };\n\n  const handleRemoveDepartments = (data) => {\n    let newList = multipleDepartments.filter((t) => t != data);\n    setMultipleDepartments(newList);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setState({\n      name: data.name,\n      leaveTypeFor: data.leaveTypeFor,\n      departments: data.departments.map((d) => d._id),\n      autoEarned: data.autoEarned,\n      total: data.total,\n      isSpecial: data.isSpecial,\n      canResetCarryForward: data.canResetCarryForward,\n      carryForwardCount: data.carryForwardCount,\n      autoEarnCount: data.autoEarnCount,\n    });\n    setMultipleDepartments(data.departments.map((d) => d._id));\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.leaveType.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Leave Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={leaveTypeTableKeys}\n        bodyDataModal=\"leave type\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Leave Type\" onAddClick={AddLeaveType} />\n\n      {/* ==== add/edit leave type ======== */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n        }}>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle sx={{ fontWeight: 600 }}>\n            {dataToEdit ? \"Update  Leave Type\" : \"Add  Leave Type\"}\n          </DialogTitle>\n          <Divider />\n          <DialogContent p={2}>\n            <Grid rowSpacing={0} columnSpacing={2} container>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormControl fullWidth>\n                  <TextField\n                    required\n                    id=\"basic-standard\"\n                    name=\"name\"\n                    size=\"small\"\n                    value={name}\n                    onChange={handleChange}\n                    label=\"Name\"\n                    sx={{ label: { fontSize: 12 } }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel size=\"small\" required>\n                    Select Leave Type\n                  </InputLabel>\n                  <Select\n                    required={true}\n                    label=\"Select Leave Types\"\n                    labelId=\"demo-simpless-select-filled-label\"\n                    id=\"demo-simple-select-filled-l\"\n                    name=\"leaveTypeFor\"\n                    value={leaveTypeFor}\n                    onChange={handleChange}>\n                    <MenuItem value={\"Student\"}>Student</MenuItem>\n                    <MenuItem value={\"Employee\"}>Employee</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              {state?.leaveTypeFor === \"Employee\" && (\n                <>\n                  <Grid item xs={12} md={12} mt={2}>\n                    <FormControl fullWidth size=\"small\">\n                      <InputLabel size=\"small\" required>\n                        Select Department\n                      </InputLabel>\n                      <Select\n                        label=\"Select Departments\"\n                        labelId=\"demo-simpless-select-filled-label\"\n                        id=\"demo-simple-select-filled-l\"\n                        name=\"departments\"\n                        value={multipleDepartments || \"\"}\n                        onChange={handleChange}\n                        multiple>\n                        {selectDepartments.map((d) => (\n                          <MenuItem key={d.value} value={d.value}>\n                            {d.label}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n\n                    <ListContainer>\n                      {multipleDepartments.map((m) => (\n                        <ListItemContainer key={m}>\n                          <ListItem component=\"span\">\n                            {\n                              selectDepartments.filter((d) => d.value == m)[0]\n                                ?.label\n                            }\n                          </ListItem>\n                          <IconButton\n                            color=\"error\"\n                            onClick={() => handleRemoveDepartments(m)}>\n                            <CloseRounded fontSize=\"small\" />\n                          </IconButton>\n                        </ListItemContainer>\n                      ))}\n                    </ListContainer>\n                  </Grid>\n\n                  <Grid item xs={12} sm={12} md={12}>\n                    <FormControl required fullWidth size=\"small\">\n                      <RadioGroup\n                        size=\"small\"\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"isSpecial\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={isSpecial}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Special Type:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            value={true}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            value={false}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"total\"\n                        value={total}\n                        onChange={handleChange}\n                        label=\"Total\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} mt={2}>\n                    <FormControl fullWidth size=\"small\">\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"autoEarned\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={autoEarned}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Leave Auto Earned:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            value={true}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            size=\"small\"\n                            value={false}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"autoEarnCount\"\n                        value={autoEarnCount}\n                        onChange={handleChange}\n                        label=\"Enter Auto Earn Count\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} mt={2}>\n                    <FormControl fullWidth>\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"canResetCarryForward\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={canResetCarryForward}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Carryforward Reset:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            size=\"small\"\n                            value={true}\n                            sx={{ fontSize: 15 }}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            size=\"small\"\n                            value={false}\n                            sx={{ fontSize: 15 }}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"carryForwardCount\"\n                        value={carryForwardCount}\n                        onChange={handleChange}\n                        label=\"Enter Carryforward Count\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Close\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              loading={loading}\n              variant=\"contained\"\n              type=\"submit\">\n              {dataToEdit ? \"Update\" : \"Submit\"}\n            </LoadingButton>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","export const studentLeaveTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveType\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"numberOfDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n  },\n  {\n    name: \"Status\",\n    key: \"status\",\n  },\n];\n","import React, { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { studentLeaveTableKeys } from \"../../data/tableKeys/studentLeaveData\";\n\nexport default function StudentsLeave() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Student Leave\" />\n\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentLeaveTableKeys}\n        bodyDataModal=\"student leave\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeLeaveManageTableKeys = [\n  {\n    name: \"Name\",\n    key: \"applierRoleName\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveTypeName\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"totalDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n    isDate: true,\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n    isDate: true,\n  },\n  {\n    name: \"Status\",\n    key: \"leaveStatus\",\n  },\n];\n","/** @format */\n\nexport const employeeLeaveTableKeys = [\n  {\n    name: \"Name\",\n    key: \"applierRoleName\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveTypeName\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"totalDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n    isDate: true,\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n    isDate: true,\n  },\n  {\n    name: \"Status\",\n    key: \"leaveStatus\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLeaveManageTableKeys } from \"../../data/tableKeys/employeeLeaveManageData\";\nimport { employeeLeaveTableKeys } from \"../../data/tableKeys/employeeLeaveListData\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddForm from \"../../forms/AddForm\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useContext } from \"react\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nconst LeaveData = styled(Paper)(({ theme }) => ({\n  height: \"80px\",\n  padding: \"20px\",\n  textAlign: \"center\",\n}));\n\nconst DataContainer = styled(Grid)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"10px\",\n}));\n\nconst Leave_Options = [\n  { label: \"FullDay\", value: \"fullday\" },\n  { label: \"First half\", value: \"firstHalf\" },\n  { label: \"Second half\", value: \"secondHalf\" },\n];\n\nconst CustomAction = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [loadingApprove, setLoadingApprove] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateApproveStatus = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n      };\n      setLoadingApprove(true);\n      await put(\n        PRIVATE_URLS.leaveApplication.approveLeave + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      setLoadingApprove(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingApprove(false);\n    }\n  };\n\n  const updateRejectStatus = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.leaveApplication.rejectLeave + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        {data.leaveStatus === \"pending\" || data.leaveStatus === \"rejected\" ? (\n          <LoadingButton\n            loading={loadingApprove}\n            size=\"small\"\n            onClick={updateApproveStatus}\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        ) : null}\n        {data.leaveStatus === \"pending\" || data.leaveStatus === \"approved\" ? (\n          <LoadingButton\n            loading={loading}\n            size=\"small\"\n            onClick={updateRejectStatus}\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        ) : null}\n      </Stack>\n    </>\n  );\n};\n\nexport default function EmployeeLeave() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [totalDays, setotalDays] = useState(0);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [leaveApplication, setLeaveApplication] = useState([]);\n  const [leaveEmployeeApplication, setLeaveEmployeeApplications] = useState([]);\n  const [range, setRange] = useState([]);\n  const [eployeeLeaveCredits, setEployeeLeaveCredits] = useState([]);\n\n  const AddLeave = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getLeaveApplication = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveApplication.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveApplication(\n        data.result.map((s) => ({ ...s, leaveTypeName: s.leaveType.name }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const geteEployeeLeaveCredits = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.leaveApplication.employeeLeaveCredits,\n        {\n          params: { schoolId: selectedSetting._id },\n        }\n      );\n      setEployeeLeaveCredits(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveEmployeeApplications = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.leaveApplication.listEmployeeApplications,\n        {\n          params: { schoolId: selectedSetting._id },\n        }\n      );\n      setLeaveEmployeeApplications(\n        data.result.map((s) => ({ ...s, leaveTypeName: s.leaveType.name }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveType = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveTypes(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getLeaveType();\n    getLeaveApplication();\n    geteEployeeLeaveCredits();\n    getLeaveEmployeeApplications();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"schoolId\", selectedSetting._id);\n    formData.append(\"leaveTypeId\", values.leaveType);\n    formData.append(\"startDate\", dayjs(values.startDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"endDate\", dayjs(values.endDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"subject\", values.subject);\n    formData.append(\"description\", values.description);\n    formData.append(\"totalDays\", totalDays);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n\n    try {\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.leaveApplication.create,\n        formData\n      );\n      getLeaveEmployeeApplications();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      leaveType: \"\",\n      startDate: null,\n      endDate: null,\n      subject: \"\",\n      description: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  let handleNumberOfDay = (e, v) => {\n    const { name, value } = e.target;\n\n    const indexOfV = range.indexOf(v);\n    let updatedList = range.map((item, index) =>\n      index == indexOfV ? { ...item, value: value } : item\n    );\n    setRange(updatedList);\n  };\n\n  useEffect(() => {\n    let number = 0;\n    for (let item of range) {\n      if (item.value) {\n        if (item.value === \"fullday\") {\n          number += 1;\n        } else {\n          number += 0.5;\n        }\n      }\n    }\n    setotalDays(number);\n  }, [range]);\n\n  useEffect(() => {\n    if (entryFormik.values.endDate && entryFormik.values.startDate) {\n      const start = new Date(entryFormik.values.startDate);\n      const end = new Date(entryFormik.values.endDate);\n      if (start <= end) {\n        const currentDate = new Date(start);\n        let list = [];\n        while (currentDate <= end) {\n          let newItem = {\n            value: \"\",\n            date: new Date(currentDate).toLocaleDateString(),\n          };\n          list.push(newItem);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n        setRange(list);\n      }\n    }\n  }, [entryFormik.values.endDate, entryFormik.values.startDate]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Leave\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Leave List\", \"Leave Manage\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <DataContainer container spacing={2}>\n          <Grid item xs={4} md={4} lg={2}>\n            <LeaveData>\n              <Typography fontSize=\"15px\" color=\"#196838\">\n                Total taken :89\n              </Typography>\n            </LeaveData>\n          </Grid>\n          {eployeeLeaveCredits.map((data) => (\n            <Grid item xs={4} md={4} lg={2}>\n              <LeaveData>\n                <Typography fontSize=\"15px\">\n                  {data.name}:{data.total}\n                </Typography>\n                <Typography fontSize=\"15px\">\n                  {\" \"}\n                  Total taken :{data.totalTaken ? data.totalTaken : 0}\n                </Typography>\n              </LeaveData>\n            </Grid>\n          ))}\n        </DataContainer>\n\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLeaveTableKeys}\n          bodyData={leaveEmployeeApplication}\n          bodyDataModal=\"leave\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLeaveManageTableKeys}\n          bodyData={leaveApplication}\n          bodyDataModal=\"leave\"\n          CustomAction={CustomAction}\n          onUpdate={getLeaveApplication}\n        />\n      </TabPanel>\n\n      <AddForm title=\"Add Employee Leave\" onAddClick={AddLeave} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Employee Leave\" : \"Add Employee Leave\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"leaveType\"\n              label=\"Leave Type\"\n              required={true}\n              options={leaveTypes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"startDate\"\n              label=\"Start Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"endDate\"\n              label=\"End Date\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"subject\" label=\"Subject\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FileSelect\n              name=\"image\"\n              label=\"Select File\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n            sx={{\n              margin: \"15px 0px\",\n            }}>\n            <Typography>Number of days : {totalDays}</Typography>\n          </Grid>\n          {!entryFormik.values.endDate ? (\n            <></>\n          ) : (\n            <Grid item xs={12} md={12} lg={12}>\n              <Typography required>Information :</Typography>\n              {!entryFormik.values.endDate ? (\n                <></>\n              ) : (\n                <Box\n                  style={{\n                    height: \"100px\",\n                    overflow: \"scroll\",\n                  }}>\n                  {range.map((date, index) => (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        gap: \"10px\",\n                      }}\n                      key={index}>\n                      <Typography>{date.date}</Typography>\n\n                      <CustomSelect\n                        name=\"totalDays\"\n                        value={date.value}\n                        onChange={(e) => handleNumberOfDay(e, date)}\n                        options={Leave_Options}\n                      />\n                    </Box>\n                  ))}\n                </Box>\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nconst Type_Options = [\n  {\n    label: \"Student\",\n    value: \"student\",\n  },\n  {\n    label: \"Employee\",\n    value: \"employee\",\n  },\n];\n\nexport default function LeaveReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loadingPdf, setLoadingPdf] = useState(false);\n  const [loadingExcel, setLoadingExcel] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear:\n              entryFormik.values.academicYear || formik.values.academicYear,\n            \"academicInfo.class\":\n              entryFormik.values.class || formik.values.class,\n            \"academicInfo.section\":\n              entryFormik.values.section || formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n      formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveType = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveTypes(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(\n        data.result.map((r) => ({\n          ...r,\n          label: r.name,\n          value: r._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"role\", data.result[0]?._id);\n      formik.setFieldValue(\"role\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role || formik.values.role,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"employee\", data.result[0]?._id);\n      formik.setFieldValue(\"employee\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleGetPrintPdf = async (values) => {\n    try {\n      setLoadingPdf(true);\n      const getPdf = await get(PRIVATE_URLS.leaveApplication.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          userType: values.userType,\n          academicYearId: values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"leave_details.pdf\");\n\n      setLoadingPdf(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingPdf(false);\n    }\n  };\n\n  const handleGetDownloadExcel = async (values) => {\n    try {\n      setLoadingExcel(true);\n      const getExcel = await get(PRIVATE_URLS.leaveApplication.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          userType: values.userType,\n          academicYearId: values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"leave_details.xlsx\"\n      );\n      setLoadingExcel(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingExcel(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      type: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetDownloadExcel,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n      type: \"\",\n      userType: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetPrintPdf,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n    getRoles();\n    getLeaveType();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      (entryFormik.values.academicYear &&\n        entryFormik.values.class &&\n        entryFormik.values.section) ||\n      (formik.values.academicYear &&\n        formik.values.class &&\n        formik.values.section)\n    ) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n    entryFormik.values.section,\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (entryFormik.values.role || formik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role, formik.values.role]);\n\n  return (\n    <>\n      <PageHeader title=\"Leave Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Summary\", \"Leave Planner\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Select Type\"\n                options={Type_Options}\n              />\n            </Grid>\n            {entryFormik.values.type === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={entryFormik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n            {entryFormik.values.type === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={entryFormik}\n                    label=\"Select Employee\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loadingExcel}\n                onClick={handleGetDownloadExcel}\n                size=\"small\"\n                variant=\"contained\">\n                Download\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={formik}\n                label=\"Select Type\"\n                options={leaveTypes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={formik}\n                label=\"Select User Type\"\n                options={Type_Options}\n              />\n            </Grid>\n            {formik.values.userType === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={formik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={formik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={formik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n            {formik.values.userType === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={formik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={formik}\n                    label=\"Select Employee\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loadingPdf}\n                onClick={handleGetPrintPdf}\n                size=\"small\"\n                variant=\"contained\">\n                Print\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const itemTableKeys = [\n  {\n    name: \"Item Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Department\",\n    key: \"departmentName\",\n  },\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Brand\",\n    key: \"brand\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { itemTableKeys } from \"../../data/tableKeys/itemData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Item() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [departments, setDepartments] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [PdfLoading, setPdfLoading] = useState(false);\n  const [excelLoading, setExcelLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // console.log(data.result, \"firm\");\n      setData(\n        data.result.map((data) => ({\n          ...data,\n          departmentName: data?.department?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartments = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartments(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"department\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.item.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.item.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      department: dataToEdit?.department || \"\",\n      brand: dataToEdit?.brand || \"\",\n      itemId: dataToEdit?.itemId || \"\",\n      description: dataToEdit?.description || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit({ ...data, department: data.department._id });\n    setValue(1);\n  };\n\n  // pfd download\n  const handlePdfDownload = async (e) => {\n    setPdfLoading(true);\n\n    try {\n      const response = await get(PRIVATE_URLS.item.downloadPdf, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(response, \"response\");\n      const uri = URL.createObjectURL(response.data);\n      window.open(uri, \"_blank\");\n    } catch (error) {\n      console.log(error);\n    }\n    setPdfLoading(false);\n  };\n\n  // excel download\n  const handleExcelDownload = async (e) => {\n    setExcelLoading(true);\n    console.log(\"usha\");\n\n    try {\n      const response = await get(PRIVATE_URLS.item.downloadExcel, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // Create a blob from the response data\n      const blob = new Blob([response.data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      // Create a download URL\n      const url = URL.createObjectURL(blob);\n\n      // Create a link element\n      const link = document.createElement(\"a\");\n      link.href = url;\n      const fileName = `InventoryItem.xlsx`;\n      link.setAttribute(\"download\", fileName);\n\n      // Append the link to the document body\n      document.body.appendChild(link);\n\n      // Simulate a click to trigger the download\n      link.click();\n\n      // Remove the link from the document\n      document.body.removeChild(link);\n\n      // Revoke the object URL to free up memory\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(\"Error downloading the Excel file:\", error);\n      alert(\"Failed to download the file. Please try again.\");\n    }\n    setExcelLoading(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Item\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Item List\",\n          dataToEdit && value != 0 ? \"Edit Item\" : \"Add Item\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <LoadingButton\n          type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ my: 2 }}\n          loading={PdfLoading}\n          onClick={handlePdfDownload}>\n          PDF\n        </LoadingButton>\n        <LoadingButton\n          type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ ml: 2, my: 2 }}\n          loading={excelLoading}\n          onClick={handleExcelDownload}>\n          Excel\n        </LoadingButton>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Items\"\n          bodyData={data}\n          tableKeys={itemTableKeys}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Item name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"department\"\n                formik={entryFormik}\n                label=\"Select Department\"\n                options={departments}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"brand\"\n                formik={entryFormik}\n                label=\"Brand\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"itemId\"\n                formik={entryFormik}\n                label=\"item Id\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={false}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Description\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Item name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"department\"\n                formik={entryFormik}\n                label=\"Select Department\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"brand\"\n                formik={entryFormik}\n                label=\"brand\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"id\"\n                formik={entryFormik}\n                label=\"Item Id\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={false}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Description\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const VendorTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { VendorTableKeys } from \"../../data/tableKeys/vendorData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nexport default function Vendor() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      setData(\n        data.result.map((data) => ({\n          ...data,\n          name: data?.addedBy?.basicInfo?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/Update action\n  const handleCreateOrUpdate = async (values) => {\n    console.log(values, \"values\");\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          category: values.category,\n          phone: values.phone,\n          email: values.email,\n          gstNumber: values.gstNumber,\n          dealerName: values.dealerName,\n          dealerPhoneNumber: values.dealerPhoneNumber,\n          website: values.website,\n        },\n        addressInfo: {\n          address: values.address,\n          state: values.state,\n          city: values.city,\n          zipCode: values.zipCode,\n        },\n        bankInfo: {\n          bankName: values.bankName,\n          accountNumber: values.accountNumber,\n          ifscCode: values.ifscCode,\n          branchName: values.branchName,\n        },\n        photo: values.photo,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      logo.forEach((file) => formData.append(\"photo\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vendor.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vendor.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      category: dataToEdit?.basicInfo?.category || \"\",\n      name: dataToEdit?.basicInfo?.name || \"\",\n      phone: dataToEdit?.basicInfo?.phone || \"\",\n      email: dataToEdit?.basicInfo?.email || \"\",\n      gstNumber: dataToEdit?.basicInfo?.gstNumber || \"\",\n      dealerName: dataToEdit?.basicInfo?.dealerName || \"\",\n      dealerPhoneNumber: dataToEdit?.basicInfo?.dealerPhoneNumber || \"\",\n      website: dataToEdit?.basicInfo?.website || \"\",\n      address: dataToEdit?.addressInfo?.address || \"\",\n      state: dataToEdit?.addressInfo?.state || \"\",\n      city: dataToEdit?.addressInfo?.city || \"\",\n      zipCode: dataToEdit?.addressInfo?.zipCode || \"\",\n      bankName: dataToEdit?.bankInfo?.bankName || \"\",\n      accountNumber: dataToEdit?.bankInfo?.accountNumber || \"\",\n      ifscCode: dataToEdit?.bankInfo?.ifscCode || \"\",\n      branchName: dataToEdit?.bankInfo?.branchName || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  // console.log(dataToEdit, \"dataToEdit\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"photo\") {\n        setLogo(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vendor\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Vendor List\",\n          dataToEdit && value != 0 ? \"Edit Vendor\" : \"Add Vendor\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Vendor\"\n          bodyData={data}\n          tableKeys={VendorTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Logo:\n              </Typography>\n              <FileSelect\n                name=\"photo\"\n                multi={false}\n                label=\"Select Logo\"\n                onChange={(e) => handleChangePhoto(e, \"photo\")}\n                customOnChange={true}\n                selectedFiles={logo}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Basic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"category\"\n                formik={entryFormik}\n                label=\"Category\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"phone\"\n                formik={entryFormik}\n                label=\"Phone no.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"email\"\n                formik={entryFormik}\n                label=\"Email\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"gstNumber\"\n                formik={entryFormik}\n                label=\"GST Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"dealerName\"\n                formik={entryFormik}\n                label=\"Dealer Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"dealerPhoneNumber\"\n                formik={entryFormik}\n                label=\"Dealer Phone No.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"website\"\n                formik={entryFormik}\n                label=\"Vendor Website\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Address Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"address\"\n                formik={entryFormik}\n                label=\"Address\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"city\"\n                formik={entryFormik}\n                label=\"City\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"state\"\n                formik={entryFormik}\n                label=\"State\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"zipCode\"\n                formik={entryFormik}\n                label=\"Zip Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Bank Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"bankName\"\n                formik={entryFormik}\n                label=\"Bank Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"accountNumber\"\n                formik={entryFormik}\n                label=\"Account No\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"ifscCode\"\n                formik={entryFormik}\n                label=\"IFSC Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"branchName\"\n                formik={entryFormik}\n                label=\"Branch Name\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 2, fontWeight: \"bold\" }}>\n                Logo:\n              </Typography>\n              <FormInput\n                required={true}\n                name=\"logo\"\n                formik={entryFormik}\n                label=\"logo\"\n                type=\"file\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Basic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"category\"\n                formik={entryFormik}\n                label=\"Category\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"contactNumber\"\n                formik={entryFormik}\n                label=\"Phone no.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"email\"\n                formik={entryFormik}\n                label=\"Email\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"gst\"\n                formik={entryFormik}\n                label=\"GST Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"dealerName\"\n                formik={entryFormik}\n                label=\"Dealer Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"dealerContact\"\n                formik={entryFormik}\n                label=\"Dealer Phone No.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"vendorWebsite\"\n                formik={entryFormik}\n                label=\"Vendor Website\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Address Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"address\"\n                formik={entryFormik}\n                label=\"Address\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"city\"\n                formik={entryFormik}\n                label=\"City\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"state\"\n                formik={entryFormik}\n                label=\"State\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"zipCode\"\n                formik={entryFormik}\n                label=\"Zip Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Bank Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"bankName\"\n                formik={entryFormik}\n                label=\"Bank Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"accountNo\"\n                formik={entryFormik}\n                label=\"Account No\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"ifsc\"\n                formik={entryFormik}\n                label=\"IFSC Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"branchName\"\n                formik={entryFormik}\n                label=\"Branch Name\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const TransactionTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  { name: \"Date\", key: \"date\" },\n  { name: \"Status\", key: \"status\" },\n];\n","/** @format */\n\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { TransactionTableKeys } from \"../../data/tableKeys/transactionData\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst paymenyModes = [\n  { label: \"Cash\", value: \"Cash\" },\n  { label: \"Upi\", value: \"Upi\" },\n  { label: \"Netbanking\", value: \"Netbanking\" },\n  { label: \"Cheque\", value: \"Cheque\" },\n  { label: \"Card\", value: \"Card\" },\n  { label: \"Others\", value: \"Others\" },\n  { label: \"Null\", value: \"Null\" },\n];\n\nconst types = [\n  { label: \"In\", value: \"In\" },\n  { label: \"Out\", value: \"Out\" },\n];\n\nconst purposes = [\n  { label: \"Inhouse\", value: \"Inhouse\" },\n  { label: \"Damage\", value: \"Damage\" },\n  { label: \"Purchase\", value: \"Purchase\" },\n  { label: \"Sell\", value: \"Sell\" },\n  { label: \"Return\", value: \"Return\" },\n  { label: \"InventoryUpdate\", value: \"InventoryUpdate\" },\n];\n\nconst fromTypes = [\n  { label: \"Vendor\", value: \"Vendor\" },\n  { label: \"School\", value: \"School\" },\n];\n\nconst status = [\n  { label: \"Pending\", value: \"Pending\" },\n  { label: \"Completed\", value: \"Completed\" },\n  { label: \"Cancelled\", value: \"Cancelled\" },\n];\n\nconst toTypes = [\n  { label: \"School\", value: \"School\" },\n  { label: \"Vendor\", value: \"Vendor\" },\n  { label: \"Student\", value: \"Student\" },\n  { label: \"Employee\", value: \"Employee\" },\n];\n\nexport default function InOutTransaction() {\n  const { settings, selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectInvoice, setSelectInvoice] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [selectSchool, setSelectSchool] = useState(\n    settings.map((s) => ({ label: s.name, value: s._id }))\n  );\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      // setData(\n      //   data.result.map((data) => ({\n      //     ...data,\n      //     departmentName: data?.department?.name,\n      //   }))\n      // );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get items\n  const getItems = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list);\n      // console.log(data, \"haha\");\n      setItems(\n        data.result.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"studentName\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get vendors\n  const getVendors = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(data, \"vendors\");\n      setVendors(\n        data.result.map((d) => ({\n          label: d.addedBy?.basicInfo?.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"vendor\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get roles\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"role\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get employee\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role,\n          },\n        },\n      });\n      setEmployees(\n        data.result.map((emp) => ({\n          label: emp?.basicInfo?.name,\n          value: emp._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"employee\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/Update action\n  const handleCreateOrUpdate = async (values) => {\n    console.log(values, \"values\");\n    try {\n      const payload = {\n        ...values,\n        from: values.fromType === \"vendor\" ? values.vendor : values.school,\n        // toType: values.toType===\"vendor\" ? values.\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectInvoice.forEach((file) => formData.append(\"invoice\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vendor.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vendor.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: dataToEdit?.item || \"\",\n      pricePerItem: dataToEdit?.pricePerItem || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      trasactionMode: dataToEdit?.trasactionMode || \"\",\n      type: dataToEdit?.type || \"\",\n      purpose: dataToEdit?.purpose || \"\",\n      fromType: dataToEdit?.fromType || \"\",\n      status: dataToEdit?.status || \"\",\n      toType: dataToEdit?.toType || \"\",\n      vendor: dataToEdit?.vendor || \"\",\n      section: dataToEdit?.section || \"\",\n      class: dataToEdit?.class || \"\",\n      employee: dataToEdit?.employee || \"\",\n      role: dataToEdit?.role || \"\",\n      studentName: dataToEdit?.studentName || \"\",\n      school: dataToEdit?.school || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getData();\n    getItems();\n    getVendors();\n    getClasses();\n    getRoles();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.section, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role]);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"invoice\") {\n        setSelectInvoice(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectInvoice(selectInvoice.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Transaction\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Transaction List\", \"Make Transaction\", \"Edit Transaction\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Transaction\"\n          bodyData={data}\n          tableKeys={TransactionTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mb: 1, fontWeight: \"bold\" }}>\n                Item Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Item\"\n                options={items}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"pricePerItem\"\n                formik={entryFormik}\n                label=\"Price Per Item\"\n                type=\"number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"trasactionMode\"\n                formik={entryFormik}\n                label=\"Mode of Payment\"\n                options={paymenyModes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Type\"\n                options={types}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"purpose\"\n                formik={entryFormik}\n                label=\"Purpose\"\n                options={purposes}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Between\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"From Type\"\n                options={fromTypes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"To Type\"\n                options={toTypes}\n              />\n            </Grid>\n            {/* <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Transaction Status\"\n                options={status}\n              />\n            </Grid> */}\n            {(entryFormik.values.fromType === \"Vendor\" ||\n              entryFormik.values.toType === \"Vendor\") && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"vendor\"\n                  formik={entryFormik}\n                  label=\"Vendors\"\n                  options={vendors}\n                />\n              </Grid>\n            )}\n            {entryFormik.values.toType === \"Student\" && (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"studentName\"\n                    formik={entryFormik}\n                    label=\"Select Student Name\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {(entryFormik.values.fromType === \"School\" ||\n              entryFormik.values.toType === \"School\") && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"school\"\n                  formik={entryFormik}\n                  label=\"Select School\"\n                  options={selectSchool}\n                />\n              </Grid>\n            )}\n            {entryFormik.values.toType === \"Employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={entryFormik}\n                    label=\"Select Employees\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FileSelect\n                name=\"invoice\"\n                label=\"Select Invoice\"\n                onChange={(e) => handleChangeFiles(e, \"invoice\")}\n                customOnChange={true}\n                selectedFiles={selectInvoice}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mb: 1, fontWeight: \"bold\" }}>\n                Item Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Item\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"price\"\n                formik={entryFormik}\n                label=\"Price per Item\"\n                type=\"number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"mode\"\n                formik={entryFormik}\n                label=\"Mode of Payment\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"purpose\"\n                formik={entryFormik}\n                label=\"Purpose\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Between\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Transaction Status\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"vender\"\n                formik={entryFormik}\n                label=\"Venders\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"section\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"studentName\"\n                formik={entryFormik}\n                label=\"Student Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={12} item>\n              <Button size=\"small\" variant=\"outlined\" sx={{ my: 2 }}>\n                Upload Invoice\n              </Button>\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const stockListTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n  {\n    name: \"Total Stock\",\n    key: \"totalStock\",\n  },\n];\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function OverviewTable() {\n  return (\n    <>\n      <TableContainer\n        sx={{\n          display: \"grid\",\n          justifyContent: \"center\",\n          my: 2,\n        }}\n      >\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h6\"\n          component=\"div\"\n          textAlign=\"start\"\n          sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}\n        >\n          Overview\n        </Typography>\n        {/* ========= Desktop view =============== */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"none\",\n              md: \"inline-block\",\n              lg: \"inline-block\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0} Qty\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n\n        {/* ======== Tablet view table ============ */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"inline-block\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0}\n                Qty\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n\n        {/* ======== Mobile view table ============ */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"inline-block\",\n              sm: \"none\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0}\n                {\"  \"}Qty\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { stockListTableKeys } from \"../../data/tableKeys/stockListData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport OverviewTable from \"./OverviewTable\";\n\nexport default function StockList() {\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Item Stock\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} style={{ alignSelf: \"center\" }} item>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Sell\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Issue\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Add Item\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Add Vendor\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      {/* overview table component ======= */}\n      <Grid xs={12} md={12} lg={12} style={{ alignSelf: \"center\" }} item>\n        <Button size=\"small\" variant=\"contained\" sx={{ mr: 2, mt: 1 }}>\n          Excel\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ mr: 2, mt: 1 }}>\n          PDF\n        </Button>\n      </Grid>\n      <OverviewTable />\n      {/* ================================ */}\n      <Typography\n        id=\"modal-modal-title\"\n        variant=\"h6\"\n        component=\"div\"\n        textAlign=\"start\"\n        sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}\n      >\n        List of Stocks\n      </Typography>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Item stock\"\n        bodyData={data}\n        tableKeys={stockListTableKeys}\n      />\n    </>\n  );\n}\n","export const issueDetailTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"itemName\",\n  },\n  {\n    name: \"Issuer Name\",\n    key: \"issueName\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { issueDetailTableKeys } from \"../../data/tableKeys/issueDetailData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst status = [\n  { label: \"Returned\", value: \"Returned\" },\n  { label: \"Pending\", value: \"Pending\" },\n  { label: \"Issued\", value: \"Issued\" },\n  { label: \"Deleted\", value: \"Deleted\" },\n];\n\nexport default function Issue() {\n  const { settings, selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [selectSchool, setSelectSchool] = useState(\n    settings.map((s) => ({ label: s.name, value: s._id }))\n  );\n  console.log(selectSchool, \"selectSchool\");\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  // get items\n  const getItems = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list);\n      // console.log(data, \"haha\");\n      setItems(\n        data.result.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: \"\",\n      quantity: \"\",\n      issueStatus: \"\",\n      fromType: \"\",\n      school: \"\",\n      toType: \"\",\n      employeeName: \"\",\n      note: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getItems();\n  }, [selectedSetting._id]);\n\n  const handleClose = () => {\n    setValue(0);\n    getItems();\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Issue Details\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"List of Issue\", \"Issue\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Issue\"\n          bodyData={data}\n          tableKeys={issueDetailTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Select Item\"\n                options={items}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Select Issue Status\"\n                options={status}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"Select From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"Select School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"Select To Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"employeeName\"\n                formik={entryFormik}\n                label=\"Select Employee Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Issue\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const sellDetailTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"itemName\",\n  },\n  {\n    name: \"Sellar Name\",\n    key: \"issueName\",\n  },\n  {\n    name: \"Total Quantity\",\n    key: \"quantity\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { sellDetailTableKeys } from \"../../data/tableKeys/sellDetailData\";\n\nexport default function Sell() {\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: \"\",\n      quantity: \"\",\n      SellStatus: \"\",\n      fromType: \"\",\n      school: \"\",\n      toType: \"\",\n      employeeName: \"\",\n      note: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Sell Details\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Sold List\", \"Sell\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Sell\"\n          bodyData={data}\n          tableKeys={sellDetailTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Select Item\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Select Quantity\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"sellStatus\"\n                formik={entryFormik}\n                label=\"Select Sell Status\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"Select From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"Select School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"Select To Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"employeeName\"\n                formik={entryFormik}\n                label=\"Select Employee Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item\n            >\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Sell\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\n\nconst Heading = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  marginTop: \"40px\",\n  textDecoration: \"underline\",\n}));\n\nconst Content = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  padding: \"0 5px\",\n  display: \"inline\",\n  fontWeight: \"bold\",\n  textDecoration: \"underline\",\n  fontFamily: \"Roboto ,sans-serif\",\n}));\n\nconst Container = styled(Box)(({ theme }) => ({\n  width: \"100%\",\n  marginTop: \"10px\",\n  border: \"1px solid black\",\n  padding: \"20px\",\n}));\n\nconst MuiBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: \"10px\",\n  marginTop: \"20px\",\n}));\n\nconst DateContaner = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  padding: \"20px\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n}));\n\nconst TextOuterContent = styled(Box)(({ theme }) => ({\n  padding: \"20px\",\n  display: \"flex\",\n  textIndent: \"50px\",\n}));\n\nexport default function StudyCertificate() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [openBulkIssue, setOpenBulkIssue] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingDownload, setLoadingDownload] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [fromDate, setFromDate] = useState(dayjs(Date.now()));\n  const [toDate, setToDate] = useState(dayjs(Date.now()));\n  const [sections, setSections] = useState([]);\n\n  // console.log(selectedData, \"selectedData\");\n  // console.log(students, \"students\");\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d,\n          id: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitCertificate = async (values) => {\n    console.log(values, \"bfyy\");\n    setLoading(true);\n\n    try {\n      setSelectedData({\n        ...selectedData,\n        fatherName: values?.student?.fatherInfo?.name,\n        academicYearFrom: values?.student?.academicYear?.from,\n        academicYearTo: values?.student?.academicYear?.to,\n        academicId: values?.academicYear,\n        studentName: values?.student?.basicInfo.name,\n        studentId: values?.student?._id,\n        currentClass: values?.student?.academicInfo.class.name,\n        dob: values?.student?.basicInfo.dob,\n        grNo: values?.student?.basicInfo.grNo,\n        studentPhoto: values?.student?.photo,\n        schoolName: values?.student?.school?.name,\n        schoolAddress: values?.student?.school?.address,\n        schoolLogo: values?.student?.school?.logo,\n        category: values?.student?.basicInfo.category,\n        address: values?.student?.contactInfo.presentAddress,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleSubmitCertificate,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleSubmitCertificate,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getStudents();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSubmitCertificateDownload = async (e) => {\n    setLoadingDownload(true);\n\n    try {\n      const response = await get(PRIVATE_URLS.certificate.getStudyCertificate, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: selectedData?.academicId,\n          studentId: selectedData?.studentId,\n        },\n      });\n\n      // Create a Blob from the data\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n\n      // Create a link element\n      const link = document.createElement(\"a\");\n      const uri = URL.createObjectURL(blob);\n\n      link.href = uri;\n      link.setAttribute(\"download\", \"studyCertificate.pdf\");\n\n      document.body.appendChild(link);\n\n      link.click();\n\n      // Remove the link from the document\n      document.body.removeChild(link);\n\n      // Revoke the object URL to free up memory\n      URL.revokeObjectURL(uri);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoadingDownload(false);\n  };\n\n  const handleClose = () => {\n    setOpenBulkIssue(false);\n  };\n\n  const handleBulkIssueOpen = () => {\n    setOpenBulkIssue(true);\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Study Certificate\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            gap={1}\n            item>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleBulkIssueOpen}>\n              Bulk Issue\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={entryFormik.handleSubmit}\n              loading={loading}>\n              Issue\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      {entryFormik.values.student != \"\" && (\n        <>\n          <Container>\n            <Grid\n              container\n              spacing={2}\n              display=\"flex\"\n              justifyContent=\"space-between\">\n              <Grid item xs={6} md={6} lg={3} textAlign=\"start\">\n                <img\n                  src={selectedData.schoolLogo || \"/world-wide-web.png\"}\n                  alt=\"loading...\"\n                  height={100}\n                  width={95}\n                  style={{ objectFit: \"contain\" }}\n                />\n              </Grid>\n\n              <Grid item xs={6} md={6} lg={6} textAlign=\"center\" mt={2}>\n                <Typography textAlign=\"center\" fontSize=\"20px\">\n                  {selectedData.schoolName || \"St Pauls High School\"}\n                </Typography>\n                <Typography textAlign=\"center\" fontSize=\"16px\">\n                  {selectedData.schoolAddress || \"ABC NAGAR\"}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6} lg={3} textAlign=\"end\">\n                <img\n                  src={selectedData.studentPhoto || \"/studingimg.jpg\"}\n                  alt=\"photo\"\n                  height={120}\n                  width={100}\n                  style={{ objectFit: \"contain\" }}\n                />\n              </Grid>\n            </Grid>\n            <Heading>STUDY CERTIFICATE</Heading>\n            <TextOuterContent>\n              <Typography\n                component=\"span\"\n                sx={{\n                  fontSize: \"25px\",\n                  fontFamily: \"sans-serif\",\n                }}>\n                This is to certify that Sri./Kum.\n                <Content component={\"span\"}>\n                  {selectedData.fatherName || \"NA\"}\n                </Content>\n                son/daughter of Mr.\n                <Content component={\"span\"}>\n                  {selectedData.studentName || \"NA\"}\n                </Content>\n                studying in\n                <Content component={\"span\"}>\n                  {selectedData.currentClass || \"NA\"}\n                </Content>\n                in our school for the academic year\n                <Content component={\"span\"}>\n                  {`${selectedData.academicYearFrom} - ${selectedData.academicYearTo}` ||\n                    \"NA\"}\n                </Content>\n                .The residential address is as follows:\n                <Content component={\"span\"}>\n                  {selectedData.address || \"NA\"}\n                </Content>\n                . According to our school records his/her date of birth is\n                <Content component={\"span\"}>\n                  {dayjs(selectedData.dob).format(\"DD-MM-YYYY\")}\n                </Content>\n                . and category is as per our school record G R No is{\" \"}\n                <Content component={\"span\"}>\n                  {selectedData.grNo || \"NA\"}\n                </Content>\n                .\n              </Typography>\n            </TextOuterContent>\n            <DateContaner>\n              <Box>\n                <Typography gutterBottom fontSize=\"20px\">\n                  {dayjs().format(\"DD-MM-YYYY\")}\n                </Typography>\n                <Typography component=\"span\" fontSize=\"20px\">\n                  Place:{\" \"}\n                </Typography>\n                <Typography component=\"span\" fontSize=\"20px\">\n                  {selectedData.schoolAddress}\n                </Typography>\n              </Box>\n\n              <Typography fontSize=\"20px\">Sign Of Head Master</Typography>\n            </DateContaner>\n          </Container>\n\n          <MuiBox>\n            <LoadingButton\n              variant=\"contained\"\n              size=\"small\"\n              type=\"submit\"\n              loading={loadingDownload}\n              onClick={handleSubmitCertificateDownload}>\n              Download\n            </LoadingButton>\n            <Button variant=\"contained\" size=\"small\" aria-label=\"search\">\n              Print\n            </Button>\n          </MuiBox>\n        </>\n      )}\n      {/* ======= bulk issue form model ========= */}\n      <Dialog\n        open={openBulkIssue}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\",\n            p: 2,\n          }}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              fontWeight=\"bold\">\n              Bulk Issue\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"academic\"\n              formik={formik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={6}>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={formik}\n              label=\"Select Student\"\n              options={classes}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={formik}\n              label=\"Select Student\"\n              options={sections}\n            />\n          </Grid>\n          {/* \n          <Grid item xs={12} md={6} lg={6}>\n            <FormControl fullWidth size=\"small\" required>\n              <InputLabel>Student Names</InputLabel>\n              <Select\n                required\n                label=\"Student Names\"\n                id=\"demo-simple-select-filled\"\n                name=\"name\"\n                multiple\n                // value={selectedItems}\n                onChange={handleOnChange}\n                renderValue={(selected) => (\n                  <div style={{ display: \"flex\", overflowX: \"auto\" }}>\n                    {selectedData.map((studentId) => (\n                      <Chip\n                        key={studentId}\n                        label={\n                          students.find((student) => student._id === studentId)\n                            ?.basicInfo.name\n                        }\n                        style={{ marginRight: 5 }} // Adjust spacing between chips\n                      />\n                    ))}\n                  </div>\n                )}>\n                {students.map((s) => (\n                  <MenuItem key={s.id} value={s.id}>\n                    {s.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid> */}\n\n          <Grid item xs={12} md={12} lg={12}>\n            <Box\n              display=\"flex\"\n              gap={2}\n              justifyContent={{\n                xs: \"center\",\n                sm: \"center\",\n                md: \"flex-end\",\n                lg: \"flex-end\",\n              }}>\n              <LoadingButton\n                // loading={downloadLoading}\n                sx={{\n                  color: \"#fff\",\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                // onClick={handleBulkCertificateDownload}\n                disabled={loadingDownload}>\n                Download\n              </LoadingButton>\n\n              <LoadingButton\n                // loading={printerLoader}\n                // onClick={handleBulkPrint}\n                type=\"button\"\n                sx={{\n                  color: \"#fff\",\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                aria-label=\"search\">\n                Print\n              </LoadingButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst Header = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"25px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"21px\",\n  },\n}));\n\nconst DataContainer = styled(Grid)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  [theme.breakpoints.down(\"lg\")]: {\n    flexDirection: \"row\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n}));\n\nconst Container = styled(Box)(({ theme }) => ({\n  marginTop: \"20px\",\n  padding: \"40px\",\n  [theme.breakpoints.down(\"lg\")]: {\n    width: \"80%\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    width: \"100%\",\n  },\n}));\n\nconst Signature = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"13px\",\n  },\n}));\n\nconst ListItem = styled(Typography)(({ theme }) => ({\n  fontSize: \"18px\",\n  width: \"48%\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"14px\",\n    width: \"100%\",\n  },\n}));\n\nconst Content = styled(Typography)(({ theme }) => ({\n  fontSize: \"20px\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"14px\",\n  },\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: 500,\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"25px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"18px\",\n  },\n}));\nexport default function TransferCertificate() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getAcademicYear();\n    getStudents();\n  }, [selectedSetting._id]);\n  return (\n    <>\n      <PageHeader title=\"Study Certificate\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            display=\"flex\"\n            alignSelf=\"center\"\n            justifyContent=\"flex-end\"\n            gap={1}\n            item>\n            <Button size=\"small\" variant=\"contained\">\n              Issue\n            </Button>\n            <Button size=\"small\" variant=\"contained\">\n              Bulk Issue\n            </Button>\n            <Button size=\"small\" variant=\"contained\">\n              Print\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n          <Typography\n            sx={{\n              fontSize: { xs: \"25px\", sm: \"25px\", md: \"30px\", lg: \"30px\" },\n              fontWeight: \"bold\",\n            }}>\n            Kayaka school\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={12}\n          style={{ textAlign: \"center\" }}>\n          <Title>ENGLISH MEDIUM PRIMARY AND HIGH SCHOOL</Title>\n          <Title>Kayaka school</Title>\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n          <Header>TRANSFER CERTIFICATE</Header>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={12}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          width={\"100%\"}>\n          <Container>\n            <Grid container spacing={2}>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>1] Name of the School:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"schoolName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>2] Name of the Pupil in full:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"studentName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>3] G. R. No:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"grNo\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>4] Place of Birth:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"birthPlace\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem> 5] Date of Birth(in figures and words):</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"dobWords\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>6] Sex:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"sex\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>7] Nationality:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"nationality\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>8] Religion:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"religion\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>9] Caste:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"caste\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  10] Whether the candidate belongs to SC and ST:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"belongs\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>11] Aadhar No.:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"aadhar\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>12] Name of the father:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"fatherName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>13] Name of the mother:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"motherName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem> 14] Date of Admission in the Scchool:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"admissionDate\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>15] School Previously Attended:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"prevSchool\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  16] Standard in which admission is granted:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"admissionGrant\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  17] Standard in which the pupil was studying at the time of\n                  leaving the school(in words):\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"currentClass\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>18] Medium of instruction:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"instructions\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  19] Whether the pupil has paid all the free due of the school:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"fees\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>20] Promoted to/ Detained in:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"proDet\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  21] Whether medically examinated or not ? :\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"medical\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  22] Date of pupil's last attendance at the school:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"lastAttend\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  23] Date of which the application for the Transfer Certificate\n                  was received:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"transferRecivied\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  24] Date of issue of the Transfer Certificate:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"dateIssue\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>25] Attendance:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"attendance\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>26] Character & Conduct:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"character\"\n                />\n              </DataContainer>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Header>CERTIFICATE</Header>\n              </Grid>\n              <Grid item xs={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n                <Content>\n                  Certified that the entries made in this Transfer Certificate\n                  are taken from the entries made as per the general egister\n                  maintained in the institution. The entries with the original\n                  records persented by the parents\n                </Content>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Signature>Prepared By</Signature>\n                <Signature>Checked By</Signature>\n                <Signature>Head Master</Signature>\n              </Grid>\n            </Grid>\n          </Container>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/** @format */\n\nexport const receiptBookTableKeys = [\n  {\n    name: \"Receipt Name\",\n    key: \"name\",\n  },\n];\n","export const feeMapTableKeys = [\n  {\n    name: \"Details\",\n    key: \"detail\",\n  },\n  { name: \"Fee\", key: \"fee\" },\n  { name: \"Installments\", key: \"installment\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Divider,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst LABEL = {\n  class: \"Class - (Academic department)\",\n  route: \"Route - (Transport department)\",\n  pickType: \"Pick-Type - (Transport department)\",\n  stop: \"Stop - (Transport department)\",\n  room: \"Room - (Hostel department)\",\n  roomType: \"Room Type - (Hostel department)\",\n  hostel: \"Hostel - (Hostel department)\",\n  addedAfter: \"Added After - (Student admission date)\",\n  addedBefore: \"Added Before - (Student admission date)\",\n  academicYear: \"Academic Year - (Student academic year)\",\n  libraryMember: \"Library Member - (Human Resource department)\",\n};\n\nconst installmentsType = [\n  { label: \"Monthly\", id: 1 },\n  { label: \"Quaterly\", id: 2 },\n  { label: \"Half-Yearly\", id: 3 },\n  { label: \"Yearly\", id: 4 },\n  { label: \"Others\", id: 5 },\n];\n\nfunction removeElementFromArray(array, elementToRemove) {\n  const index = array.indexOf(elementToRemove);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n  return array;\n}\n\nexport default function AddUpdateFeeMap({\n  selectedReceipt = \"\",\n  open = true,\n  setOpen = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [dataToEdit, setDataToEdit] = useState(\"\");\n  const [classes, setClasses] = useState([]);\n  const [academicYears, setAcademicYears] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [stops, setStops] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dependencies, setDependencies] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [installments, setInstallments] = useState([]);\n  const [addedAfter, setAddedAfter] = useState(null);\n  const [addedBefore, setAddedBefore] = useState(null);\n  // get academic year\n  const getAcademicYears = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setAcademicYears(\n        data.result.map((academicData) => ({\n          ...academicData,\n          label: `${academicData.from} - ${academicData.to}`,\n          value: academicData._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get route and stops\n  const getRoutes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRoutes(\n        data.result.map((r) => ({\n          ...r,\n          label: `${r.vehicle?.number} ${r.title} (${r.routeStart} To ${r.routeEnd})`,\n          value: r._id,\n        }))\n      );\n\n      setStops(\n        data.result.map((route) => ({\n          label: route.stops[0]?.name,\n          value: route.stops[0]?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Hostels\n  const getHostels = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setHostels(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Room type\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setRoomTypes(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Rooms\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRooms(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYears();\n    getClasses();\n    getRoutes();\n    getHostels();\n    getRoomTypes();\n    getRoom();\n  }, []);\n\n  const handleAddSubmit = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n\n    if (!addForm.pickType) {\n      removeElementFromArray(dependencies, \"pickType\");\n    }\n\n    try {\n      let payload = {\n        receiptTitleId: selectedReceipt,\n        collectedFrom: \"student\",\n        dependencies: dependencies,\n        classId: addForm.class,\n        routeId: addForm.route,\n        pickType: addForm.pickType,\n        roomId: addForm.room,\n        roomTypeId: addForm.roomType,\n        hostelId: addForm.hostel,\n        addedAfter: new Date(addedAfter),\n        addedBefore: new Date(addedBefore),\n        stopId: addForm.stop,\n        academicYearId: addForm.academicYear,\n        fee: addForm.fee,\n        installments: installments,\n        schoolId: selectedSetting._id,\n        libraryMember: \"\",\n      };\n      // console.log(payload, \"payload\");\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMap.update + \"/\" + dataToEdit?._id,\n          payload\n        );\n\n        // // setSearch({});\n        // if (data > 199 && data < 299) {\n        //   await getFeeMaps();\n        //   resetForm();\n        //   // handleCloseAddDialog();\n        // }\n      } else {\n        const { data } = await post(PRIVATE_URLS.feeMap.create, payload);\n        // console.log(data, \"ippp\");\n        // setSearch({});\n        // if (status > 199 && status < 299) {\n        //   await getFeeMaps();\n        //   resetForm();\n        //   handleCloseAddDialog();\n        // }\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    setOpen(false);\n  };\n\n  const resetForm = () => {\n    setAddForm({});\n    setDataToEdit(null);\n    setInstallments([]);\n    setDependencies([]);\n  };\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDependencies(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  const handleAddForm = (e) => {\n    const { name, value } = e.target;\n    if (name == \"fee\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: parseInt(value),\n      }));\n    } else if (name == \"others\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: Math.ceil(value),\n      }));\n    } else {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleDelete = (chipToDelete) => {\n    setDependencies((chips) => chips.filter((chip) => chip !== chipToDelete));\n    if (chipToDelete == \"class\") {\n      setAddForm((prev) => ({ ...prev, class: \"\" }));\n    }\n    if (chipToDelete === \"hostel\") {\n      setAddForm((prev) => ({ ...prev, hostel: \"\", room: \"\" }));\n    }\n    if (chipToDelete === \"route\") {\n      setAddForm((prev) => ({ ...prev, stop: \"\", route: \"\" }));\n    }\n    if (chipToDelete === \"room\") {\n      setAddForm((prev) => ({ ...prev, room: \"\" }));\n    }\n    if (chipToDelete === \"pickType\") {\n      setAddForm((prev) => ({ ...prev, pickType: \"\" }));\n    }\n    if (chipToDelete === \"roomType\") {\n      setAddForm((prev) => ({ ...prev, roomType: \"\" }));\n    }\n    if (chipToDelete === \"academicYear\") {\n      setAddForm((prev) => ({ ...prev, academicYearId: \"\" }));\n    }\n    if (chipToDelete === \"addedAfter\") {\n      setAddedAfter(null);\n    }\n    if (chipToDelete === \"addedBefore\") {\n      setAddedBefore(null);\n    }\n    if (chipToDelete === \"stop\") {\n      setAddForm((prev) => ({ ...prev, stop: \"\" }));\n    }\n  };\n\n  // useEffect(() => {\n  //   if (filteredFeeMaps.length) {\n  //     let deps = [];\n  //     for (let feeMap of filteredFeeMaps) {\n  //       deps = [...deps, ...feeMap.extendedDependencies];\n  //     }\n\n  //     let uniqueDeps = new Set(deps);\n  //     setAllDependencies([...uniqueDeps]);\n  //   }\n  // }, [filteredFeeMaps]);\n\n  const handleAddInstallments = () => {\n    if (!addForm.installmentsType || !addForm.fee) return;\n    let installmentsData = [];\n\n    if (addForm.installmentsType === \"Monthly\") {\n      const monthlyAmount = Math.floor(addForm.fee / 12);\n      const missing = addForm.fee - monthlyAmount * 12;\n\n      // console.log(missing, \"missing\");\n      installmentsData = Array.from({ length: 12 }).map((v, i) => ({\n        id: i + 1,\n        amount: monthlyAmount,\n        missing: missing,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Quaterly\") {\n      const quarterlyAmount = Math.floor(addForm.fee / 4);\n      const missing = addForm.fee - quarterlyAmount * 4;\n\n      installmentsData = Array.from({ length: 4 }).map((v, i) => ({\n        id: i + 1,\n        amount: quarterlyAmount,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Half-Yearly\") {\n      const halfYearlyAmount = Math.floor(addForm.fee / 2);\n      const missing = addForm.fee - halfYearlyAmount * 2;\n\n      installmentsData = Array.from({ length: 2 }).map((v, i) => ({\n        id: i + 1,\n        amount: halfYearlyAmount,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Yearly\") {\n      installmentsData = Array.from({ length: 1 }).map((v, i) => ({\n        id: i,\n        amount: addForm.fee,\n        dueDate: dayjs(),\n      }));\n    } else if (addForm.installmentsType === \"Others\") {\n      const othersAmount = Math.floor(addForm.fee / addForm.others);\n      const missing = addForm.fee - othersAmount * addForm.others;\n\n      installmentsData = Array.from({ length: addForm.others }).map((v, i) => ({\n        id: i + 1,\n        amount: othersAmount,\n        dueDate: dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else {\n      setInstallments([]);\n      return;\n    }\n    setInstallments(installmentsData);\n  };\n\n  useEffect(() => {\n    handleAddInstallments();\n  }, [addForm.installmentsType, addForm.others, addForm.fee]);\n\n  const handleInstallmentChange = (val, key, changeIndex) => {\n    setInstallments((prev) =>\n      prev.map((installment, index) => {\n        if (index === changeIndex) {\n          return key === \"amount\"\n            ? { ...installment, [key]: parseInt(val) }\n            : key === \"dueDate\"\n            ? { ...installment, [key]: val }\n            : installment;\n        } else if (index > changeIndex) {\n          let diffInMonths = index - changeIndex;\n          if (addForm.installmentsType === \"Quaterly\") {\n            diffInMonths = diffInMonths * 3;\n          } else if (addForm.installmentsType === \"Half-Yearly\") {\n            diffInMonths = diffInMonths * 6;\n          } else if (addForm.installmentsType === \"Others\") {\n            diffInMonths = diffInMonths * 1;\n          }\n          const updatedDueDate = dayjs(val)\n            .add(diffInMonths, \"month\")\n            .format(\"YYYY-MM-DD\");\n          return { ...installment, dueDate: updatedDueDate };\n        } else {\n          return installment;\n        }\n      })\n    );\n  };\n\n  // console.log(addForm);\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onSubmit={handleAddSubmit}\n        component=\"form\">\n        <DialogTitle sx={{ fontWeight: 600 }}>\n          {dataToEdit ? \"Update Fee Map\" : \"Add Fee Map\"}\n        </DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={12} md={12} item>\n              <Typography variant=\"body\">\n                Choose the dependencies that will serve as the basis for the fee\n                calculation.\n              </Typography>\n              <Grid xs={12} sm={6} md={8} item>\n                <FormControl size=\"small\" sx={{ mt: 2, width: 400 }}>\n                  <InputLabel id=\"demo-multiple-chip-label\">\n                    Choose the dependencies\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-multiple-chip-label\"\n                    id=\"demo-multiple-chip\"\n                    size=\"small\"\n                    multiple\n                    label=\"Choose the dependencies\"\n                    value={dependencies}\n                    onChange={handleChange}>\n                    {Object.keys(LABEL).map((name) => (\n                      <MenuItem key={name} value={name}>\n                        {LABEL[name]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              {dependencies && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    gap: 0.5,\n                    marginLeft: \"20px\",\n                  }}>\n                  {dependencies.map((value, i) => (\n                    <Chip\n                      sx={{ mt: 2 }}\n                      key={value}\n                      label={LABEL[value]}\n                      onDelete={() => handleDelete(value)}\n                    />\n                  ))}\n                </Box>\n              )}\n            </Grid>\n\n            {dependencies.includes(\"academicYear\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Academic Year</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"academicYear\"\n                    required\n                    value={addForm.academicYear || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Academic Year\">\n                    {academicYears.map((a) => (\n                      <MenuItem key={a._id} value={a._id}>\n                        {a.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {dependencies.includes(\"class\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Class</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"class\"\n                    required\n                    value={addForm.class || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Class\">\n                    {classes.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"route\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Route</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"route\"\n                    required\n                    value={addForm.route || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Route\">\n                    {routes.map((route) => (\n                      <MenuItem key={route._id} value={route._id}>\n                        {route?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"stop\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Stop</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"stop\"\n                    required\n                    value={addForm.stop || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select stop\">\n                    {stops\n                      ?.filter((s) =>\n                        addForm.route ? s.route?._id == addForm.route : s._id\n                      )\n                      .map((stop) => (\n                        <MenuItem key={stop._id} value={stop._id}>\n                          {stop?.label}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {(dependencies.includes(\"route\") ||\n              dependencies.includes(\"pickType\")) && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Pick Type</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"pickType\"\n                    value={addForm.pickType || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Pick Type\">\n                    {[\"Drop\", \"Pick\", \"Both\"].map((picktype) => (\n                      <MenuItem key={picktype} value={picktype}>\n                        {picktype}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"hostel\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Hostel</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"hostel\"\n                    required\n                    value={addForm.hostel || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Hostel\">\n                    {hostels.map((hostel) => (\n                      <MenuItem key={hostel._id} value={hostel._id}>\n                        {hostel?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"roomType\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Room Type</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"roomType\"\n                    required\n                    value={addForm.roomType || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Room Type\">\n                    {roomTypes.map((roomType) => (\n                      <MenuItem key={roomType._id} value={roomType._id}>\n                        {roomType?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"room\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Room</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"room\"\n                    required\n                    value={addForm.room || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Room\">\n                    {rooms\n                      .filter((r) => {\n                        if (addForm.hostel && addForm.roomType) {\n                          return (\n                            r.hostel?._id == addForm.hostel &&\n                            r.type?._id == addForm.roomType\n                          );\n                        } else if (addForm.hostel && !addForm.roomType) {\n                          return r.hostel?._id == addForm.hostel;\n                        } else if (!addForm.hostel && addForm.roomType) {\n                          return r.type?._id == addForm.roomType;\n                        } else {\n                          return r._id;\n                        }\n                      })\n                      .map((room) => (\n                        <MenuItem key={room._id} value={room._id}>\n                          {room.hostel?.name} - {room.type?.name}{\" \"}\n                          {`(${room.totalBeds}-Beds)`}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"addedAfter\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    label=\"Added After\"\n                    inputFormat=\"DD-MM-YYYY\"\n                    value={addedAfter}\n                    onChange={(newValue) => setAddedAfter(newValue)}\n                    renderInput={(params) => (\n                      <TextField {...params} size=\"small\" fullWidth />\n                    )}\n                  />\n                </LocalizationProvider>\n              </Grid>\n            )}\n            {dependencies.includes(\"addedBefore\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    label=\"Added Before\"\n                    inputFormat=\"DD-MM-YYYY\"\n                    value={addedBefore}\n                    onChange={(newValue) => setAddedBefore(newValue)}\n                    renderInput={(params) => (\n                      <TextField {...params} size=\"small\" fullWidth />\n                    )}\n                  />\n                </LocalizationProvider>\n              </Grid>\n            )}\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                label=\"Fee\"\n                type=\"number\"\n                required\n                name=\"fee\"\n                value={addForm.fee || \"\"}\n                onChange={handleAddForm}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Installment Type</InputLabel>\n                <Select\n                  size=\"small\"\n                  name=\"installmentsType\"\n                  value={addForm.installmentsType || \"\"}\n                  onChange={handleAddForm}\n                  label=\"Select Installment Type\">\n                  {installmentsType.map((installments) => (\n                    <MenuItem key={installments.id} value={installments.label}>\n                      {installments.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            {addForm.installmentsType == \"Others\" && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <TextField\n                  // sx={{ marginTop: 1 }}\n                  fullWidth\n                  label=\"Number of installments\"\n                  size=\"small\"\n                  name=\"others\"\n                  type=\"number\"\n                  value={addForm.others || \"\"}\n                  onChange={handleAddForm}\n                />\n              </Grid>\n            )}\n\n            {installments.map((installment, index) => (\n              <React.Fragment key={index}>\n                <Grid item xs={12} sm={6} md={6} mt={2}>\n                  <TextField\n                    fullWidth\n                    type=\"number\"\n                    label={`installment ${index + 1}`}\n                    value={installment.amount}\n                    size=\"small\"\n                    // enabled={dataToEdit}\n                    onChange={(e) =>\n                      handleInstallmentChange(e.target.value, \"amount\", index)\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6} md={6} mt={2}>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DatePicker\n                      inputFormat=\"DD-MM-YYYY\"\n                      enabled={dataToEdit}\n                      label=\"Due Date\"\n                      form\n                      value={installment.dueDate}\n                      onChange={(newValue) =>\n                        handleInstallmentChange(newValue, \"dueDate\", index)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          fullWidth\n                          enabled={dataToEdit}\n                          {...params}\n                          size=\"small\"\n                        />\n                      )}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            {dataToEdit ? \"Update\" : \"Submit\"}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { receiptBookTableKeys } from \"../../data/tableKeys/receiptBookData\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Add, Search } from \"@mui/icons-material\";\nimport { feeMapTableKeys } from \"../../data/tableKeys/feeMapData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddUpdateFeeMap from \"./AddUpdateFeeMap\";\n\nconst showInfo = (data) => {\n  let result = [];\n  // console.log(data, \"fsusg\");\n  for (let dep of data.dependencies) {\n    if (dep === \"academicYear\") {\n      result.push(\n        `[${data.academicYearId.from}-${data.academicYearId.to}]-Academic Year`\n      );\n    } else if (dep === \"class\") {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if (dep === \"hostel\") {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if (dep === \"roomType\") {\n      result.push(`[${data.roomType.name}]-Room_Type`);\n    } else if (dep === \"room\") {\n      let newItem = `[${data.room?.hostel.name}]+[${data.room?.totalBeds} Beds]+[${data.room?.type?.name}]-Room`;\n      result.push(newItem);\n    } else if (dep == \"route\") {\n      let newItem = `[${data.route.vehicle.number}]+[${data.route.title}]-Route`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if (dep === \"stop\") {\n      let newItem = `[${data.stop.name}]-Stop`;\n      result.push(newItem);\n    } else if (dep === \"addedBefore\") {\n      // let newItem = `[${moment(data.addedBefore).format(\"DD/MM/YYYY\")}]-Stop`;\n      // result.push(newItem);\n    } else if (dep === \"addedAfter\") {\n      // let newItem = `[${moment(data.addedAfter).format(\"DD/MM/YYYY\")}]-Stop`;\n      // result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nconst CustomActionFee = ({\n  onUpdate = () => {},\n  data = {},\n  onEditClick = () => {},\n  onNavigateFeeMap = () => {},\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(`${PRIVATE_URLS.receiptTitle.toggleActiveStatus}/${data._id}`);\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          onClick={() => onEditClick(data)}>\n          Edit\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          onClick={() => onNavigateFeeMap(data._id)}>\n          Fee Map\n        </Button>\n        <LoadingButton\n          loading={loading}\n          size=\"small\"\n          onClick={updateStatus}\n          color={data.active ? \"success\" : \"error\"}\n          variant=\"contained\">\n          {data.active ? \"Activate\" : \"DeActivate\"}\n        </LoadingButton>\n      </Stack>\n    </>\n  );\n};\n\nexport default function ReceiptBook() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [receipts, setReceipts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openFeeMap, setOpenFeeMap] = useState(false);\n  const [selectedReceiptId, setSelectedReceiptId] = useState(\"\");\n  const [selectReceipt, setSelectReceipt] = useState(selectedReceiptId || \"\");\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          Search: { receiptTitle: selectReceipt },\n        },\n      });\n      setFeeMaps(data.result.map((f) => ({ ...f, detail: showInfo(f) })));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data, status } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setReceipts(data.result);\n      if (data.result.length > 0) {\n        setSelectReceipt(selectReceipt ? selectReceipt : data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectReceipt) {\n      getFeeMaps();\n    }\n  }, [selectReceipt]);\n\n  useEffect(() => {\n    getData();\n    getReceipts();\n  }, [selectedSetting]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.receiptTitle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.receiptTitle.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleFeeMapEdit = (id, data) => {\n    // console.log(data, \"hgafs\");\n    setDataToEdit({ ...data });\n    // setAddForm({\n    //   ...data,\n    //   schoolClass: data.class?._id,\n    //   route: data.route?._id,\n    //   room: data.room?._id,\n    //   others: data.installments.length,\n    //   installmentType: calculateInstallmentType(data.installments.length),\n    // });\n  };\n\n  const handleOpenFeeMap = () => {\n    setOpenFeeMap(true);\n  };\n\n  const handleFeeMap = (id) => {\n    // console.log(id, \"id usha\");\n    setSelectedReceiptId(id);\n    setSelectValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Receipt Book\" />\n\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Receipt Book\", \"Fee Map\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button\n          variant=\"contained\"\n          onClick={handleClickOpen}\n          startIcon={<Add />}\n          sx={{ mt: 1, mb: 2 }}>\n          Add Receipt\n        </Button>\n\n        <CustomTable\n          actions={[\"custom\"]}\n          bodyDataModal=\"Receipt Book\"\n          bodyData={data}\n          tableKeys={receiptBookTableKeys}\n          feeMapTableKeys\n          onEditClick={handleEditClick}\n          onNavigateFeeMap={handleFeeMap}\n          CustomAction={CustomActionFee}\n          onUpdate={getData}\n        />\n        {/* Add/Update Receipt book ========= */}\n        <FormModal\n          open={open}\n          formik={entryFormik}\n          formTitle={dataToEdit ? \"Update Receipt Book\" : \"Add Receipt Book\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={12} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"name\"\n                label=\"Receipt Name\"\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </FormModal>\n      </TabPanel>\n\n      <TabPanel index={1} value={value}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Select Receipt</InputLabel>\n              <Select\n                required={true}\n                fullWidth\n                value={selectReceipt || \"\"}\n                onChange={(e) => setSelectReceipt(e.target.value)}\n                label=\"Select Receipt\">\n                {receipts.map((receipt) => (\n                  <MenuItem value={receipt._id} key={receipt._id || \"\"}>\n                    {receipt.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <Button\n              variant=\"contained\"\n              startIcon={<Add />}\n              onClick={handleOpenFeeMap}>\n              Add Fee Map\n            </Button>\n          </Grid>\n        </Grid>\n\n        <CustomTable\n          actions={[\"edit\", \"switch\"]}\n          bodyDataModal=\"Fee Map\"\n          bodyData={feeMaps}\n          tableKeys={feeMapTableKeys}\n          CustomAction={CustomActionFee}\n          onEditClick={handleFeeMapEdit}\n        />\n\n        {/* Add/Update Fee Map ========= */}\n        <AddUpdateFeeMap\n          open={openFeeMap}\n          Formik={entryFormik}\n          dataToEdit={dataToEdit}\n          setOpen={setOpenFeeMap}\n          loading={loading}\n          selectedReceipt={selectReceipt}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const feeMapCategoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  { name: \"Description\", key: \"description\" },\n  { name: \"Amount\t\", key: \"amount\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid } from \"@mui/material\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { feeMapCategoryTableKeys } from \"../../data/tableKeys/feeMapCategoryData\";\nimport { Add } from \"@mui/icons-material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nexport default function FeeMapCategory() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      Formik.setFieldValue(\"name\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get feemap list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: { schoolId: selectedSetting._id, search: { active: true } },\n      });\n      // console.log(data, \"cat\");\n      setFeeMaps(data.result.map((f) => ({ label: f.name, value: f._id })));\n      Formik.setFieldValue(\"feeMap\", data.result[0]._id);\n    } catch (error) {}\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      name: \"\",\n      feeMap: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMapCategory.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.feeMapCategory.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      amount: dataToEdit?.amount || \"\",\n      feeMapId: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getReceipts();\n    getFeeMaps();\n  }, []);\n\n  useEffect(() => {\n    if (Formik.values.name) {\n      getFeeMaps();\n    }\n  }, [Formik.values.name]);\n\n  const handleClose = () => {\n    // getData();\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Fee Map Category\" />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"name\"\n            formik={Formik}\n            label=\"Select Receipt Name\"\n            options={receipts}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"feeMap\"\n            formik={Formik}\n            label=\"Select Fee Maps\"\n            // options={\"\"}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setOpen(true)}>\n            Add Fee Category\n          </Button>\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Fee Map Category\"\n        bodyData={data}\n        tableKeys={feeMapCategoryTableKeys}\n        feeMapTableKeys\n      />\n\n      {/* Add/Update Fee map Category ========= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Fee Map Category\" : \"Add Fee Map Category\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if (dep === \"class\") {\n      let newItem = `[${data.class?.className}]-Class`;\n      result.push(newItem);\n    } else if (dep === \"room\") {\n      let newItem = `[${data.room?.hostel.name}]+[${data.room?.totalSeats} Beds]+[${data.room?.type?.name}]-Room`;\n      result.push(newItem);\n    } else if (dep == \"route\") {\n      let newItem = `[${data.route.vehicleNumber.vehicleNumber}]+[${data.route.transportRouteTitle}]+[${data.route.routeStart}-${data.route.routeEnd}]`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nexport default function CollectFees() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [receiptTitles, setReceiptTitles] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectStudent, setSelectStudent] = useState([]);\n  const [feeDetails, setFeeDetails] = useState(null);\n  const [paymentData, setPaymentData] = useState({});\n  const [totalAmountToBePaid, setTotalAmountToBePaid] = useState(0);\n  const [selectedPastDueIds, setSelectedPastDueIds] = useState([]);\n  const [downloadingReceipt, setDownloadingReceipt] = useState(false);\n  const [itemDetails, setItemDetails] = useState([]);\n  const [fetchingStudents, setFetchingStudents] = useState(false);\n\n  // get student fee Details\n  const handleSubmitFind = async (values) => {\n    setFetchingStudents(true);\n\n    try {\n      const { data: feeReceipt, status } = await get(\n        PRIVATE_URLS.receipt.getFeeDetails,\n        {\n          params: {\n            feeMapId: entryFormik.values.feeMap,\n            studentId: selectStudent._id,\n            receiptTitleId: entryFormik.values.receiptName,\n            installmentId:\n              entryFormik.values.installmentId ||\n              feeMaps.filter((f) => f._id == entryFormik.values.feeMap)[0]\n                ?.installments[0]._id,\n          },\n        }\n      );\n      setFeeDetails(feeReceipt.result);\n      setItemDetails(\n        feeReceipt.result.feeMapCategories.map((d) => ({\n          name: d.name,\n          amount: Number(d.amount),\n          description: d.description,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingStudents(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      installmentId: \"\",\n    },\n    onSubmit: handleSubmitFind,\n    enableReinitialize: true,\n  });\n\n  const getAllReceiptTitles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: {\n          search: { active: true },\n        },\n      });\n      setReceiptTitles(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\n        \"receiptName\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllReceiptTitles();\n  }, [selectedSetting._id]);\n\n  const getAllFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: { search: { active: true }, schoolId: selectedSetting._id },\n      });\n      setFeeMaps(\n        data.result.map((d) => ({ ...d, name: showInfo(d), value: d._id }))\n      );\n      entryFormik.setFieldValue(\n        \"feeMap\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.receiptName) {\n      getAllFeeMaps();\n    }\n  }, [entryFormik.values.receiptName, selectedSetting._id]);\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      if (entryFormik.values.feeMap) {\n        let feeMap = feeMaps.filter(\n          (f) => f._id == entryFormik.values.feeMap\n        )[0];\n        if (feeMap.dependencies.includes(\"class\")) {\n          return entryFormik.setFieldValue(\"class\", feeMap.class?._id);\n        }\n      }\n      entryFormik.setFieldValue(\n        \"class\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get all classes\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id, entryFormik.values.feeMap]);\n\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: { search: { class: entryFormik.values.class } },\n      });\n      setSections(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\n        \"section\",\n        data.result[0] ? data.result[0]._id : \"\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  // get all students\n  const getAllStudents = async () => {\n    try {\n      let feeMap = feeMaps.filter((f) => f._id == entryFormik.values.feeMap)[0];\n      let dependencies = feeMap.dependencies;\n      let filter = {};\n      if (dependencies.includes(\"class\")) {\n        filter[\"academicInfo.class\"] = entryFormik.values.class;\n      }\n      if (dependencies.includes(\"room\")) {\n        filter[\"hostelInfo.room\"] = feeMap.room._id;\n      }\n      if (dependencies.includes(\"route\")) {\n        filter[\"transportInfo.route\"] = feeMap.route._id;\n      }\n      if (dependencies.includes(\"pickType\")) {\n        filter[\"transportInfo.pickType\"] = feeMap.pickType;\n      }\n      if (entryFormik.values.section) {\n        filter[\"academicInfo.section\"] = entryFormik.values.section;\n      }\n\n      const { data: students } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          search: filter,\n        },\n        schoolId: selectedSetting._id,\n      });\n      setSelectStudent(null);\n      setStudents(\n        students.result.map((s) => ({\n          ...s,\n          label: s.basicInfo.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      entryFormik.values.feeMap &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      getAllStudents();\n    } else {\n      setStudents([]);\n      setSelectStudent(null);\n    }\n  }, [entryFormik.values.section, entryFormik.values.feeMap]);\n\n  const handleStudentSelect = (e, val) => {\n    setSelectStudent(val);\n    setItemDetails([]);\n    setFeeDetails(null);\n    setPaymentData({});\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.installmentId) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values.installmentId]);\n\n  return (\n    <>\n      <PageHeader title=\"Collect Fees\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receiptTitles}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Students\"\n              // options={}\n            />\n          </Grid>\n\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <LoadingButton\n              loading={fetchingStudents}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","export const balanceFeeReportTableKeys = [\n  {\n    name: \"Receipt\",\n    key: \"receipt\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNo\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Father\",\n    key: \"father\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Concession\",\n    key: \"concession\",\n  },\n  {\n    name: \"Fine\",\n    key: \"fine\",\n  },\n  {\n    name: \"Paid\",\n    key: \"paid\",\n  },\n  {\n    name: \"Balance\",\n    key: \"balance\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { balanceFeeReportTableKeys } from \"../../data/tableKeys/balanceFeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function BalanceFeeReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  return (\n    <>\n      <PageHeader title=\"Balance Fee Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receipts}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              // options={}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Balance Fee Report\"\n        bodyData={data}\n        tableKeys={balanceFeeReportTableKeys}\n      />\n    </>\n  );\n}\n","export const feeOverviewPaymentTableKeys = [\n  {\n    name: \"Payment\",\n    key: \"payment\",\n  },\n  { name: \"Total\", key: \"total\" },\n  { name: \"Cash\", key: \"cash\" },\n  { name: \"Cheque\", key: \"cheque\" },\n  { name: \"DD\", key: \"dd\" },\n  { name: \"Chalan\", key: \"chalan\" },\n  { name: \"NetBanking\", key: \"netBanking\" },\n  { name: \"Online\", key: \"online\" },\n];\n","export const feeOverviewReceiptTableKeys = [\n  {\n    name: \"Receipt No\",\n    key: \"receiptNo\",\n  },\n  { name: \"Paid Date\", key: \"paidDate\" },\n  { name: \"Amount\", key: \"amount\" },\n  { name: \"Payment Mode\", key: \"paymentMode\" },\n  { name: \"Name\", key: \"name\" },\n  { name: \"Class\", key: \"class\" },\n  { name: \"Section\", key: \"section\" },\n  { name: \"Admission No\", key: \"admissionNo\" },\n  { name: \"View\", key: \"view\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { feeOverviewPaymentTableKeys } from \"../../data/tableKeys/feeOverviewPaymentData\";\nimport { feeOverviewReceiptTableKeys } from \"../../data/tableKeys/feeOverviewReceiptData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function FeeOverview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      collected: \"\",\n      feeReceipt: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n  return (\n    <>\n      <PageHeader title=\"Fee Overview\" />\n      <Paper sx={{ padding: 2, marginBottom: 3 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"collected\"\n              formik={entryFormik}\n              label=\"Select Collected By\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeReceipt\"\n              formik={entryFormik}\n              label=\"Select Fee Receipt\"\n              options={receipts}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <Button variant=\"contained\">Find</Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"data\"\n        bodyData={data}\n        tableKeys={feeOverviewPaymentTableKeys}\n      />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", my: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"addmisionNo\"\n            formik={entryFormik}\n            label=\"Select Addmision No\"\n            // options={\"\"}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormInput formik={entryFormik} name=\"search\" label=\"Search...\" />\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"data\"\n        bodyData={data}\n        tableKeys={feeOverviewReceiptTableKeys}\n      />\n    </>\n  );\n}\n","export const reconciliationTableKeys = [\n  {\n    name: \"Receipt Number\",\n    key: \"receipt\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNo\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Bank Name\",\n    key: \"bankName\",\n  },\n  {\n    name: \"Bank Branch\",\n    key: \"branch\",\n  },\n\n  {\n    name: \"Cheque Number\",\n    key: \"chequeNo\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { reconciliationTableKeys } from \"../../data/tableKeys/reconciliationData\";\n\nexport default function Reconciliation() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Fee Reconciliation\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Fee Reconciliation\"\n        bodyData={data}\n        tableKeys={reconciliationTableKeys}\n      />\n    </>\n  );\n}\n","export const manageHostelTableKeys = [\n  {\n    name: \"Hostel Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Hostel Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Address\",\n    key: \"address\",\n  },\n];\n","/** @format */\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function HostelViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.name}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Type{\" \"}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.type}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Address\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.address}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelTableKeys } from \"../../data/tableKeys/manageHostelData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport HostelViewDialog from \"./HostelViewDialog\";\n\nconst hostelType = [\n  { label: \"Boys\", value: \"Boys\" },\n  { label: \"Girls\", value: \"Girls\" },\n  { label: \"Combined\", value: \"Combined\" },\n];\n\nexport default function ManageHostel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getWarden = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const employeeData = data.result.filter((e) => e.role.name === \"WARDEN\");\n      setEmployees(\n        employeeData.map((e) => ({\n          ...e,\n          label: e.basicInfo.name,\n          value: e._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getWarden();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.hostel.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.hostel.create, values);\n      }\n      setDataToEdit(null);\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      type: dataToEdit?.type || \"\",\n      warden: dataToEdit?.warden?._id || \"\",\n      address: dataToEdit?.address || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const handleEdit = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const deleteHostel = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.hostel.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={manageHostelTableKeys}\n        bodyDataModal=\"hostel\"\n        bodyData={data}\n        onDeleteClick={deleteHostel}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Hostel\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Hostel\" : \"Add Hostel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Hostel Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Phone No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Hostel Type\"\n              required={true}\n              options={hostelType}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"warden\"\n              label=\"Select Warden\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"address\"\n              label=\"Address\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <HostelViewDialog\n        title=\"Hostel Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","export const manageHostelRoomTableKeys = [\n  {\n    name: \"Room Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Specification\",\n    key: \"specification\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomTableKeys } from \"../../data/tableKeys/manageHostelRoom\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ManageRoomType() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomTypes();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.roomType.update + \"/\" + dataToEdit._id,\n          values\n        );\n\n        // setDataToEdit(null);\n      } else {\n        const { data } = await post(PRIVATE_URLS.roomType.create, values);\n      }\n      setLoading(false);\n      getRoomTypes();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      specification: dataToEdit?.specification || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const deleteRoomType = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.roomType.delete + \"/\" + id);\n      getRoomTypes();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"iiii\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Room Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={manageHostelRoomTableKeys}\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoomType}\n        onEditClick={handleEdit}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Room Type\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Room Type\" : \"Add Room Type\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"specification\"\n              label=\"Specification\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const manageHostelRoomBedTableKeys = [\n  {\n    name: \"Room no\",\n    key: \"number\",\n  },\n  {\n    name: \"Room Type\",\n    key: \"roomType\",\n  },\n  {\n    name: \"Total Seat\",\n    key: \"totalBeds\",\n  },\n  {\n    name: \"Hostel Name\",\n    key: \"hostelName\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RoomAndBedViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  console.log(tableData, \"tableData\");\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Room No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.number}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Seat Total\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.totalBeds}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Bed\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.beds?.map((s) => (\n                  <Box\n                    sx={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      my: 1,\n                    }}\n                    key={s.name}>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Position\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.position || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: 600, width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Allocated\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.allocated ? \"Yes\" : \"No\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </Box>\n                ))}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomBedTableKeys } from \"../../data/tableKeys/manageHostelRoomBedData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\n// iocons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RoomAndBedViewDialog from \"./RoomAndBedViewDialog\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ManageRoomAndBed() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [roomType, setRoomType] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [updatingBed, setUpdatingBed] = useState(false);\n  const [deletingBed, setDeletingBed] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rooms\n  const getRoomList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list);\n      setData(\n        data.result.map((h) => ({\n          ...h,\n          hostelName: h?.hostel?.name,\n          roomType: h.type?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get room type list\n  const getRoomTypeList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setRoomType(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get hostel list\n  const getHostelList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setHostels(data.result.map((h) => ({ label: h.name, value: h._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomList();\n    getRoomTypeList();\n    getHostelList();\n  }, [selectedSetting]);\n\n  // Add/Update event handle\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        delete values.beds;\n        const { data } = await put(\n          PRIVATE_URLS.room.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        let payload = { ...values, totalBeds: values.beds.length };\n\n        const { data } = await post(PRIVATE_URLS.room.create, payload);\n      }\n      handleClose();\n      getRoomList();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      type: dataToEdit?.type?._id || \"\",\n      totalBeds: dataToEdit?.totalBeds || 0,\n      hostel: dataToEdit?.hostel?._id || \"\",\n      note: dataToEdit?.note || \"\",\n      beds: dataToEdit?.beds || [\n        {\n          id: 1,\n          name: \"\",\n          position: \"\",\n          allocated: false,\n        },\n      ],\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const onAddBedsHandle = () => {\n    let initialBedsData = [...formik.values.beds];\n    let newBedData = {\n      id: initialBedsData.length + 1,\n      name: \"\",\n      position: \"\",\n      allocated: false,\n    };\n    formik.setFieldValue(\"beds\", [...initialBedsData, newBedData]);\n  };\n\n  const removeBed = (index) => {\n    let initialBedsData = [...formik.values.beds];\n    initialBedsData.splice(index, 1);\n    formik.setFieldValue(\"beds\", initialBedsData);\n  };\n\n  const updateBed = async (bedId) => {\n    let bedData = formik.values.beds.find((bed) => bed._id === bedId);\n    try {\n      setUpdatingBed(true);\n      const { data } = await put(\n        PRIVATE_URLS.room.update + \"/\" + bedId,\n        bedData\n      );\n      setUpdatingBed(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingBed(false);\n    }\n  };\n\n  const deleteBed = async (bedId) => {\n    try {\n      setDeletingBed(true);\n      const { data } = await put(PRIVATE_URLS.room.deleteBed + \"/\" + bedId);\n      setDeletingBed(false);\n    } catch (error) {\n      console.log(error);\n      setDeletingBed(false);\n    }\n  };\n\n  const deleteRoom = async (roomId) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.room.delete + \"/\" + roomId);\n      getRoomList();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    // console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    formik.resetForm();\n  };\n\n  const handleCustomInputChange = (event, bed) => {\n    formik.setFieldValue(\n      \"beds\",\n      formik.values.beds.map((b) =>\n        b.id === bed.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getRoomList();\n  };\n\n  const onCloseModal = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel Room & Beds\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={manageHostelRoomBedTableKeys}\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoom}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Room & Bed\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle={dataToEdit ? \"Update Room & Bed\" : \"Add Room & Bed\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"number\"\n              label=\"Room No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"type\"\n              label=\"Room Type\"\n              required={true}\n              options={roomType}\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"totalBeds\"\n              label=\"Total Beds\"\n              required={true}\n              disabled={true}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"hostel\"\n              label=\"Hostel Name\"\n              required={true}\n              options={hostels}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <Box\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                padding: \"10px\",\n                alignItems: \"center\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n              }}>\n              <Typography>Bed Name</Typography>\n              <Typography>Bed Position</Typography>\n              <Typography>Is Alloted</Typography>\n            </Box>\n\n            {/* <AddBedsTable onAddBedsHandle={onAddBedsHandle} formik={formik} /> */}\n            {formik.values.beds.map((b, i) => (\n              <Grid\n                container\n                key={i}\n                gap={1}\n                sx={{\n                  backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                  borderRadius: \"5px\",\n                  padding: \"20px 15px 30px 15px\",\n                  border: \"1px solid lightgrey\",\n                  my: 2,\n                }}>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.name}\n                    name=\"name\"\n                    label=\"Bed Name\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.position}\n                    name=\"position\"\n                    label=\"Bed Position\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid\n                  xs={12}\n                  sm={3}\n                  md={3}\n                  item\n                  sx={{\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}>\n                  <Button onClick={() => onAddBedsHandle(b, i)}>\n                    <AddIcon />\n                  </Button>\n                  <Button color=\"error\" onClick={() => removeBed(i)}>\n                    <RemoveIcon color=\"error\" />\n                  </Button>\n                  {/* <Typography> */}\n                  {/* <Typography color={allocated ? \"green\" : \"red\"}> */}\n                  {/* Not Allotted */}\n                  {/* {allocated ? \"Allotted\" : \"Not Allotted\"} */}\n                  {/* </Typography> */}\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={formik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <RoomAndBedViewDialog\n        title=\"Room Information\"\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n        onClose={onCloseModal}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const hostelMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n  {\n    name: \"Room\",\n    key: \"number\",\n  },\n];\n","/** @format */\n\nexport const hostelNNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { hostelMemberTableKeys } from \"../../data/tableKeys/hostelMemberData\";\nimport { hostelNNonMemberTableKeys } from \"../../data/tableKeys/hostelNonMember\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [hostel, setHostel] = useState([]);\n  const [room, setRoom] = useState([]);\n\n  const getHostel = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n\n      setHostel(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            hostel: entryFormik.values.hostel,\n          },\n        },\n      });\n\n      setRoom(\n        data.result.map((s) => ({\n          ...s,\n          label: String(s.number),\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getHostel();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        hostel: values.hostel,\n        room: values.room,\n        bed: values.bed,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateHostelMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      hostel: \"\",\n      room: \"\",\n      bed: \"\",\n    },\n    onSubmit: addMember,\n  });\n  useEffect(() => {\n    if (entryFormik.values.hostel) {\n      getRoom();\n    }\n  }, [entryFormik.values.hostel, selectedSetting]);\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"hostel\"\n              label=\"Hostel\"\n              required={true}\n              options={hostel}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"room\"\n              label=\"Room No\"\n              required={true}\n              options={room}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"bed\"\n              label=\"Beds\"\n              required={true}\n              options={\n                room\n                  .find((r) => r._id === entryFormik.values.room)\n                  ?.beds.map((bed) => ({\n                    label: bed.name,\n                    value: bed._id,\n                  })) || []\n              }\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function HostelMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [hostelMember, setHostelMember] = useState([]);\n  const [nonHostelMember, setNonHostelMember] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class || entryFormik.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      entryFormik.setFieldValue(\"section\", \"all\");\n      formik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        console.log(data.result, \"=================\");\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class, selectedSetting]);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.removeHostelMember + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"delete\"]}\n          onDeleteClick={handleDelete}\n          tableKeys={hostelMemberTableKeys}\n          bodyData={hostelMember}\n          bodyDataModal=\"hostel member\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={\"custom\"}\n          tableKeys={hostelNNonMemberTableKeys}\n          bodyData={nonHostelMember}\n          bodyDataModal=\"hostel member\"\n          CustomAction={CustomActionAdd}\n          onUpdate={formik.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleTableKeys = [\n  {\n    name: \"Vehicle Number\",\n    key: \"number\",\n  },\n  {\n    name: \"Driver\",\n    key: \"driverName\",\n  },\n  {\n    name: \"Contact\",\n    key: \"driverContactNumber\",\n  },\n  {\n    name: \"Total Passengers\",\n    key: \"totalSeats\",\n  },\n\n  {\n    name: \"Tracking Id\",\n    key: \"trackingId\",\n  },\n  {\n    name: \"Vehicle Model\",\n    key: \"model\",\n  },\n\n  {\n    name: \"Insurance Name\",\n    key: \"insuranceName\",\n  },\n  // {\n  //   name: \"Renewal Date\",\n  //   key: \"renewalDate\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function VehicleViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n  return (\n    <ViewModel title={title} onClose={onClose} open={open}>\n      <Table aria-label=\"customized table\">\n        <TableBody>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              School Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {schoolName}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle Number\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.number}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle Model\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.model}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Driver\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.driverName}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle License\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.licenseNumber}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Driver Contact Number\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.driverContactNumber}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Note\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.note}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Created\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.createdAt}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </ViewModel>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { vehicleTableKeys } from \"../../data/tableKeys/vehicleData\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { Grid } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { get, post, put, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport VehicleViewDialog from \"./VehicleViewDialog\";\n\nexport default function Vehicle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    schoolName: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((v) => ({\n          ...v,\n          driverName: v?.driver?.basicInfo?.name,\n          id: v._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddVehicle = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Driver`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getData();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vehicle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vehicle.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      model: dataToEdit?.model || \"\",\n      driver: dataToEdit?.driver?._id || \"\",\n      licenseNumber: dataToEdit?.licenseNumber || \"\",\n      driverContactNumber: dataToEdit?.driverContactNumber || \"\",\n      trackingId: dataToEdit?.trackingId || \"\",\n      insuranceName: dataToEdit?.insuranceName || \"\",\n      insuranceId: dataToEdit?.insuranceId || \"\",\n      totalSeats: dataToEdit?.totalSeats || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.vehicle.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vehicle\" />\n\n      <CustomTable\n        actions={[\"view\", \"edit\", \"delete\"]}\n        tableKeys={vehicleTableKeys}\n        bodyDataModal=\"vehicle\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* add icon vehicle ==== */}\n      <AddForm title=\"Add Vehicle\" onAddClick={AddVehicle} />\n\n      {/* Add/Update vehicle ==== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Vehicle\" : \"Add Vehicle\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"number\"\n              label=\"Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"driver\"\n              label=\"Driver\"\n              options={employees}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"model\" label=\"Model\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"licenseNumber\"\n              label=\"License Number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"driverContactNumber\"\n              label=\"Driver Contact Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"trackingId\"\n              label=\"Tracking Id\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"insuranceName\"\n              label=\"Insurance Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"insuranceId\"\n              label=\"Insurance Id\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"totalSeats\"\n              label=\"Total Seats\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* view vehicle ========== */}\n      <VehicleViewDialog\n        title=\"Vehicle Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const manageRouteTableKeys = [\n  {\n    name: \"Route Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Route Start\",\n    key: \"routeStart\",\n  },\n  {\n    name: \"Route End\",\n    key: \"routeEnd\",\n  },\n  {\n    name: \"Vehicle For Route\",\n    key: \"vehicleForRoute\",\n  },\n\n  {\n    name: \"Stop Name\",\n    key: \"stopName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RouteAndTripViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <ViewModel title={title} onClose={onClose} open={open}>\n      <Table aria-label=\"customized table\">\n        <TableBody>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              School Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {schoolName || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route Title\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.title || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route Start\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.routeStart || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route End\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.routeEnd || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle For Route{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.vehicle?.number || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Stops\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData.stops?.map((s, index) => (\n                <Table key={index} aria-label=\"stop details\">\n                  <TableBody>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Stop Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Stop KM\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.stopKM || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Pick Start Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.pickTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Pick End Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.pickEndTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Drop Start Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.dropTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Drop End Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.dropEndTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n              ))}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Note\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.note || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </ViewModel>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageRouteTableKeys } from \"../../data/tableKeys/manageRouteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Box, Button, Grid, IconButton, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RouteAndTripViewDialog from \"./RouteAndTripViewDialog\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n  position: \"relative\",\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nexport default function ManageRouteAndTrips() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [updatingStop, setUpdatingStop] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rout\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"herere\");\n      setData(\n        data.result.map((v) => ({\n          ...v,\n          stopName: v.stops?.map((s) => s.name),\n          vehicleForRoute: v.vehicle?.number,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get vehicle\n  const getVehicles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list);\n      setVehicles(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddRouteTrips = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.route.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.route.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      routeStart: dataToEdit?.routeStart || \"\",\n      routeEnd: dataToEdit?.routeEnd || \"\",\n      pickStart: dataToEdit?.pickStart || \"\",\n      pickEnd: dataToEdit?.pickEnd || \"\",\n      dropStart: dataToEdit?.dropStart || \"\",\n      dropEnd: dataToEdit?.dropEnd || \"\",\n      stops: dataToEdit?.stops || [\n        {\n          id: 1,\n          name: \"\",\n          stopKM: \"\",\n          pickTime: \"\",\n          pickEndTime: \"\",\n          dropTime: \"\",\n          dropEndTime: \"\",\n        },\n      ],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const addStop = () => {\n    let initialStopsData = [...entryFormik.values.stops];\n    entryFormik.setFieldValue(\"stops\", [\n      ...entryFormik.values.stops,\n      {\n        id: initialStopsData.length + 1,\n        name: \"\",\n        stopKM: \"\",\n        pickTime: \"\",\n        pickEndTime: \"\",\n        dropTime: \"\",\n        dropEndTime: \"\",\n      },\n    ]);\n  };\n\n  const updateStop = async (stopId) => {\n    console.log(stopId, \"stopId\");\n    let stopData = entryFormik.values.stops.find((stop) => stop._id === stopId);\n    console.log(stopData, \"stopData\");\n\n    try {\n      setUpdatingStop(true);\n      const { data } = await put(\n        PRIVATE_URLS.route.updateStop + \"/\" + stopId,\n        stopData\n      );\n      setUpdatingStop(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingStop(false);\n    }\n  };\n\n  const removeStop = (index) => {\n    let initialBedsData = [...entryFormik.values.stops];\n    initialBedsData.splice(index, 1);\n    entryFormik.setFieldValue(\"stops\", initialBedsData);\n  };\n\n  const deleteRoute = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.route.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  useEffect(() => {\n    getVehicles();\n    getData();\n  }, [selectedSetting]);\n\n  const handleCustomInputChange = (event, stop) => {\n    entryFormik.setFieldValue(\n      \"stops\",\n      entryFormik.values.stops.map((b) =>\n        b.id === stop.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getData();\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Manage Route & Trips\" />\n\n      {/* show data table ============== */}\n      <CustomTable\n        actions={[\"edit\", \"view\", \"delete\"]}\n        tableKeys={manageRouteTableKeys}\n        bodyDataModal=\"route\"\n        bodyData={data}\n        onViewClick={handleClickOpenView}\n        onEditClick={handleEdit}\n        onDeleteClick={deleteRoute}\n      />\n\n      {/* Add icon ============= */}\n      <AddForm title=\"Add Route & Trips\" onAddClick={AddRouteTrips} />\n\n      {/* Add/Update dialog ============= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Route & Trips\" : \"Add Route & Trips\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicles}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"routeStart\"\n              label=\"Route Start\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"routeEnd\"\n              label=\"Route End\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"pickStart\"\n              required={true}\n              label=\"Pick Start\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"pickEnd\"\n              required={true}\n              label=\"Pick End\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"dropStart\"\n              required={true}\n              label=\"Drop Start\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"dropEnd\"\n              required={true}\n              label=\"Drop End\"\n            />\n          </Grid>\n        </Grid>\n        {entryFormik.values.stops.map(\n          (stop, index) => (\n            console.log(stop, \"gg\"),\n            (\n              <FormBox key={index}>\n                <IconButton\n                  color=\"error\"\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\n                  onClick={() => removeStop(index)}>\n                  <CloseIcon />\n                </IconButton>\n                <Grid container spacing={2}>\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.name}\n                      name=\"name\"\n                      label=\"Name\"\n                      required={true}\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.stopKM}\n                      name=\"stopKM\"\n                      label=\"Stop KM\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.pickTime}\n                      name=\"pickTime\"\n                      type=\"time\"\n                      label=\"Pick Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.pickEndTime}\n                      type=\"time\"\n                      name=\"pickEndTime\"\n                      label=\"Pick End Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.dropTime}\n                      type=\"time\"\n                      name=\"dropTime\"\n                      label=\"Drop Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.dropEndTime}\n                      type=\"time\"\n                      name=\"dropEndTime\"\n                      label=\"Drop End Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n                  <Grid xs={12} sm={12} md={6} item>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => updateStop(stop._id)}>\n                      Update\n                    </Button>\n                  </Grid>\n                </Grid>\n              </FormBox>\n            )\n          )\n        )}\n\n        <Button variant=\"contained\" size=\"small\" onClick={addStop}>\n          Add\n        </Button>\n\n        <Grid container spacing={2}>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Route and trip view ============= */}\n      <RouteAndTripViewDialog\n        title=\"Trasport Route Information\"\n        onClose={onClose}\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const transportAddMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n];\n","/** @format */\n\nexport const transportMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Stop Name\",\n    key: \"name\",\n    path: \"stopName\",\n  },\n  {\n    name: \"Pick Type\",\n    key: \"pickType\",\n    path: \"pickType\",\n  },\n\n  {\n    name: \"Route Start\",\n    key: \"routeStart\",\n    path: \"routeStart\",\n  },\n  {\n    name: \"Route End\",\n    key: \"routeEnd\",\n    path: \"routeEnd\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { transportAddMemberTableKeys } from \"../../data/tableKeys/transportAddMemberData\";\nimport { transportMemberTableKeys } from \"../../data/tableKeys/transportMemberData\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, SettingsSharp } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nconst Pick_Type = [\n  { label: \"Pick\", value: \"Pick\" },\n  { label: \"Drop\", value: \"Drop\" },\n  { label: \"Both\", value: \"Both\" },\n];\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [route, setRoute] = useState([]);\n\n  const getRoute = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list);\n\n      setRoute(\n        data.result.map((s) => ({ ...s, label: s.title, value: s._id }))\n      );\n\n      console.log(data.result, \"vvbvbbbbv vbfv vhvbfvvc\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(route, \"mmmmmmmmmmm\");\n  useEffect(() => {\n    getRoute();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        routeId: values.route,\n        stopId: values.stop,\n        pickType: values.type,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateTransportMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      route: \"\",\n      stop: \"\",\n      type: \"\",\n    },\n    onSubmit: addMember,\n  });\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"route\"\n              label=\"Route\"\n              required={true}\n              options={route}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"stop\"\n              label=\"Stop\"\n              required={true}\n              options={\n                route\n                  .find((r) => r._id === entryFormik.values.route)\n                  ?.stops.map((stop) => ({\n                    label: stop.name,\n                    value: stop._id,\n                  })) || []\n              }\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              name=\"type\"\n              formik={entryFormik}\n              label=\"Pick Type\"\n              options={Pick_Type}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function TransportMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [transportMember, setTransportMember] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const [transportMemberList, setTransportMemberList] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik1.setFieldValue(\"academicYear\", data.result[0]?._id);\n      formik2.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik1.setFieldValue(\"class\", data.result[0]?._id);\n      formik2.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik1.values.class || formik2.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      formik1.setFieldValue(\"section\", \"all\");\n      formik2.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            pickType: s.transportInfo,\n            routeStart: s?.transportInfo?.route,\n            routeEnd: s?.transportInfo?.route,\n            stopName: s?.transportInfo?.stop,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            className: s.academicInfo.class,\n            sectionName: s.academicInfo.section,\n          }));\n\n        setTransportMember(filteredDataMember);\n        setTransportMemberList(filteredDataNonMember);\n\n        console.log(filteredDataNonMember, \"kkkkk\");\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            pickType: s.transportInfo,\n            routeStart: s?.transportInfo?.route,\n            routeEnd: s?.transportInfo?.route,\n            stopName: s?.transportInfo?.stop,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            className: s.academicInfo.class,\n            sectionName: s.academicInfo.section,\n          }));\n\n        setTransportMember(filteredDataMember);\n        setTransportMemberList(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik1 = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik2 = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  useEffect(() => {\n    if (formik1.values.class || formik2.values.class) {\n      getSections();\n    }\n  }, [formik2.values.class, formik1.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(\n        PRIVATE_URLS.student.removeTransportMember + \"/\" + id\n      );\n      formik1.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"Transport Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Add Member\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <form onSubmit={formik1.handleSubmit}>\n          {\" \"}\n          <Paper sx={{ padding: 2, marginBottom: 2 }}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik1}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik1}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik1}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n        <CustomTable\n          actions={[\"delete\"]}\n          tableKeys={transportMemberTableKeys}\n          bodyData={transportMember}\n          bodyDataModal=\"transport member\"\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={formik2.handleSubmit}>\n          <Paper sx={{ padding: 2, marginBottom: 2 }}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik2}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik2}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik2}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n        <CustomTable\n          actions={\"custom\"}\n          tableKeys={transportAddMemberTableKeys}\n          bodyData={transportMemberList}\n          bodyDataModal=\"transport member\"\n          CustomAction={CustomActionAdd}\n          onUpdate={formik2.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const routesTableKeys = [\n  {\n    name: \"Vehicle\",\n    key: \"vehicle\",\n  },\n  {\n    name: \"Route\",\n    key: \"route\",\n  },\n  {\n    name: \"Pick Start\",\n    key: \"pickStart\",\n  },\n  {\n    name: \"Pick End\",\n    key: \"pickEnd\",\n  },\n\n  {\n    name: \"Drop Start\",\n    key: \"dropStart\",\n  },\n  {\n    name: \"Drop End\",\n    key: \"dropEnd\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { routesTableKeys } from \"../../data/tableKeys/routesData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Card, Typography } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Routes() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [sumOfSeat, setSumOfSeat] = useState(0);\n\n  // get rout\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      console.log(data, \"herere\");\n      setData(\n        data.result.map((r) => ({\n          ...r,\n          route: `${r.routeStart} - ${r.routeEnd}`,\n          vehicle: r.vehicle?.number,\n          totalSeats: r.vehicle?.totalSeats,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      const totalSeat = data.map((s) => parseInt(s.totalSeats));\n\n      let sum = 0;\n      for (let i = 0; i < totalSeat.length; i++) {\n        sum += totalSeat[i];\n      }\n      setSumOfSeat(sum);\n    }\n  }, [data, selectedSetting]);\n\n  console.log(sumOfSeat, \"sumOfSeat\");\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Trips\" />\n      <Card\n        style={{\n          padding: 10,\n          paddingLeft: \"1rem\",\n          display: \"flex\",\n          gap: \"20px\",\n          borderRadius: 0,\n        }}>\n        <Typography>Vehicle: {data.length}</Typography>\n        <Typography>Total Seats: {sumOfSeat}</Typography>\n      </Card>\n      <CustomTable\n        actions={[]}\n        tableKeys={routesTableKeys}\n        bodyDataModal=\"trips\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleLogTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Departure Time\",\n    key: \"departureTime\",\n  },\n  {\n    name: \"Reading At Departure\",\n    key: \"reading\",\n    path: \"readingAtDepartureReading\",\n  },\n  {\n    name: \"Arrival Time\",\n    key: \"arrivalTime\",\n  },\n  {\n    name: \"Reading At Arrival\",\n    key: \"reading\",\n    path: \"readingAtArrival\",\n  },\n  {\n    name: \"Total KM Run\",\n    key: \"totalDistanceTravelled\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { vehicleLogTableKeys } from \"../../data/tableKeys/vehicleLogData\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, styled } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { downloadFile } from \"../../utils\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nconst Trip_Completed = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function VehicleLog() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [departure, setDeparture] = useState([]);\n  const [arrival, setArrival] = useState([]);\n  const [vehicle, setVehicle] = useState([]);\n  const [route, setRoute] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicleLog.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            route: values.route,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      setData(\n        data.result.map((s) => ({\n          ...s,\n          readingAtDepartureReading: s?.readingAtDeparture,\n          readingAtArrival: s?.readingAtArrival,\n        }))\n      );\n\n      console.log(data.result, \"kkkkkkk\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, [selectedSetting]);\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getLogPdf = await get(PRIVATE_URLS.vehicleLog.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: formik.values.vehicle,\n            route: formik.values.route,\n\n            fromDate: dayjs(formik.values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(formik.values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      downloadFile(\"application/pdf\", getLogPdf.data, \"vehiclelog.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoute = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: formik.values.vehicle || entryFormik.values.vehicle,\n          },\n        },\n      });\n      setRoute(\n        data.result.map((v) => ({\n          ...v,\n          label: v.title,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"route\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n\n      const formDataDeparture = new FormData();\n      const formDataArrival = new FormData();\n\n      formDataDeparture.append(\"schoolId\", selectedSetting._id);\n      formDataDeparture.append(\"route\", values.route);\n      formDataDeparture.append(\"vehicle\", values.vehicle);\n      formDataDeparture.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n\n      formDataDeparture.append(\"departureTime\", values.departureTime);\n      formDataDeparture.append(\"readingAtDeparture\", values.readingAtDeparture);\n      formDataDeparture.append(\n        \"totalDistanceTravelled\",\n        values.totalDistanceTravelled\n      );\n\n      departure.forEach((file) =>\n        formDataDeparture.append(\"departureImage\", file)\n      );\n\n      formDataArrival.append(\"arrivalTime\", values.arrivalTime);\n      formDataArrival.append(\"readingAtArrival\", values.readingAtArrival);\n      formDataArrival.append(\n        \"spareUse\",\n        JSON.stringify({ distance: values.distance, reason: values.reason })\n      );\n      arrival.forEach((file) => formDataArrival.append(\"arrivalImage\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vehicleLog.update + \"/\" + dataToEdit._id,\n          formDataArrival,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.vehicleLog.create,\n          formDataDeparture,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      route: dataToEdit?.route._id || \"\",\n      vehicle: dataToEdit?.vehicle._id || \"\",\n\n      departureTime: dataToEdit?.departureTime || \"\",\n      readingAtDeparture: dataToEdit?.readingAtDeparture?.reading || \"\",\n      arrivalTime: dataToEdit?.arrivalTime || \"\",\n      readingAtArrival: dataToEdit?.readingAtArrival?.reading || \"\",\n      distance: dataToEdit?.spareUse?.distance || \"\",\n      date: dataToEdit?.date || null,\n      reason: dataToEdit?.spareUse?.reason || \"\",\n      totalDistanceTravelled: dataToEdit?.totalDistanceTravelled || 0,\n\n      tripCompleted: dataToEdit?.tripCompleted || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      route: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"departureImage\") {\n        setDeparture(fileList);\n      } else {\n        setArrival(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setDeparture(departure.filter((img) => img.name != fileName));\n    setArrival(arrival.filter((img) => img.name != fileName));\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle || entryFormik.values.vehicle) {\n      getRoute();\n    }\n  }, [formik.values.vehicle, entryFormik.values.vehicle, selectedSetting]);\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.route) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.route, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.vehicleLog.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDownloadDeparture = () => {\n    const downloadUrl = dataToEdit?.readingAtDeparture?.image;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadArrival = async () => {\n    const downloadUrl = dataToEdit?.readingAtArrival?.image;\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vehicle Log\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"route\"\n                formik={formik}\n                label=\"Select Route\"\n                options={route}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n\n              <Button\n                size=\"small\"\n                onClick={handleGetPrintPdf}\n                variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <AddForm title=\"Add Vehicle Log\" onAddClick={AddDepartmentHandel} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Vehicle Log\" : \"Add Vehicle log\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"route\"\n              label=\"Route\"\n              required={true}\n              options={route}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker formik={entryFormik} name=\"date\" label=\"Date\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"departureTime\"\n              label=\"Departure Time\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"totalDistanceTravelled\"\n              label=\"Total Distance Travelled\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"tripCompleted\"\n              label=\"Trip Completed\"\n              options={Trip_Completed}\n            />\n          </Grid>\n        </Grid>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} sm={12} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"readingAtDeparture\"\n                label=\"Reading At Departure\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={6} item>\n              <FileSelect\n                name=\"departureImage\"\n                label=\"Select File\"\n                onChange={(e) => handleChangePhoto(e, \"departureImage\")}\n                customOnChange={true}\n                selectedFiles={departure}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n            {dataToEdit?.readingAtDeparture &&\n            dataToEdit.readingAtDeparture?.image ? (\n              <Grid xs={12} md={6} lg={6} item>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleDownloadDeparture}>\n                  Download File\n                </Button>\n              </Grid>\n            ) : null}\n          </Grid>\n        </FormBox>\n        {dataToEdit ? (\n          <>\n            <Grid container spacing={2}>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  type=\"time\"\n                  name=\"arrivalTime\"\n                  label=\"Arrival Time\"\n                />\n              </Grid>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  name=\"distance\"\n                  label=\"Distance\"\n                />\n              </Grid>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput formik={entryFormik} name=\"reason\" label=\"Reason\" />\n              </Grid>\n            </Grid>\n\n            <FormBox>\n              <Grid container spacing={2}>\n                <Grid xs={12} sm={12} md={6} item>\n                  <FormInput\n                    formik={entryFormik}\n                    name=\"readingAtArrival\"\n                    label=\"Reading At Arrivale\"\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={6} item>\n                  <FileSelect\n                    name=\"arrivalImage\"\n                    label=\"Select File\"\n                    onChange={(e) => handleChangePhoto(e, \"arrivalImage\")}\n                    customOnChange={true}\n                    selectedFiles={arrival}\n                    onRemove={(fileName) => handleRemoveFile(fileName)}\n                    accept=\"image/*,.pdf\"\n                  />\n                </Grid>\n                {dataToEdit?.readingAtArrival &&\n                dataToEdit.readingAtArrival?.image ? (\n                  <Grid xs={12} md={6} lg={6} item>\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={handleDownloadArrival}>\n                      Download File\n                    </Button>\n                  </Grid>\n                ) : null}\n              </Grid>\n            </FormBox>\n          </>\n        ) : null}\n      </FormModal>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={vehicleLogTableKeys}\n        bodyDataModal=\"vehicle log\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n    </>\n  );\n}\n","export const vehicleFirmTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone Number\",\n    key: \"contactNumber\",\n  },\n  {\n    name: \"Email\",\n    key: \"email\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { vehicleFirmTableKeys } from \"../../data/tableKeys/vehcleFirmData\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { Button, Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport { Add } from \"@mui/icons-material\";\n\nexport default function Firm() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.firm.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.firm.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      email: dataToEdit?.email || \"\",\n      GSTNumber: dataToEdit?.GSTNumber || \"\",\n      website: dataToEdit?.website || \"\",\n      address: dataToEdit?.address || \"\",\n      city: dataToEdit?.city || \"\",\n      state: dataToEdit?.state || \"\",\n      zipCode: dataToEdit?.zipCode || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.firm.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        tableKeys={vehicleFirmTableKeys}\n        bodyData={data}\n        bodyDataModal=\"firm\"\n        actions={[\"edit\", \"delete\"]}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Firm\" : \"Add Firm\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Contact Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"email\" label=\"Email\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"GSTNumber\"\n              label=\"GST Number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"website\" label=\"Website\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"address\" label=\"Address\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"city\" label=\"City\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"state\" label=\"State\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"zipCode\" label=\"Zip Code\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleFuelTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Firm\",\n    key: \"name\",\n    path: \"firmName\",\n  },\n  {\n    name: \"Bill No\",\n    key: \"billNo\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Km\",\n    key: \"kiloMeter\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleFuelTableKeys } from \"../../data/tableKeys/vehicleFuelData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nexport default function Fuel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectReceipt, setSelectReceipt] = useState([]);\n  const [vehicle, setVehicle] = useState([]);\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceFuel.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      setData(data.result.map((s) => ({ ...s, firmName: s.firm })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"vehicle\", values.vehicle);\n      formData.append(\"firm\", values.firm);\n      formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n      formData.append(\"billNo\", values.billNo);\n      formData.append(\"fuelQuantity\", values.fuelQuantity);\n      formData.append(\"rate\", values.rate);\n      formData.append(\"amount\", values.amount);\n      formData.append(\"kiloMeter\", values.kiloMeter);\n\n      selectReceipt.forEach((file) => formData.append(\"file\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceFuel.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceFuel.create,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      date: dataToEdit?.date || \"\",\n      billNo: dataToEdit?.billNo || \"\",\n      fuelQuantity: dataToEdit?.fuelQuantity || \"\",\n      rate: dataToEdit?.rate || \"\",\n      amount: dataToEdit?.amount || \"\",\n      kiloMeter: dataToEdit?.kiloMeter || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectReceipt(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectReceipt(selectReceipt.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceFuel.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n\n  const handleDownload = () => {\n    const downloadUrl = dataToEdit?.receipt;\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        tableKeys={vehicleFuelTableKeys}\n        bodyData={data}\n        bodyDataModal=\"fuel\"\n        actions={[\"edit\", \"delete\"]}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Fuel\" : \"Add Fuel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"firm\"\n              label=\"Firm\"\n              required={true}\n              options={firm}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"billNo\"\n              label=\"Bill No\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"fuelQuantity\"\n              label=\"Fuel Quantity\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"rate\"\n              label=\"Rate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kiloMeter\"\n              label=\"Kilo Meter\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FileSelect\n              name=\"receipt\"\n              label=\"Select File\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectReceipt}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          {dataToEdit && dataToEdit?.receipt ? (\n            <Grid xs={12} md={6} lg={6} item>\n              <Button size=\"small\" variant=\"contained\" onClick={handleDownload}>\n                Download File\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleRepairTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Particulars\",\n    key: \"particulars\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleRepairTableKeys } from \"../../data/tableKeys/vehicleRepairData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function Repair() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [vehicle, setVehicle] = useState([]);\n\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceRepair.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n\n      console.log(payload, \"kkkkkk\");\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceRepair.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceRepair.create,\n          payload\n        );\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      date: dataToEdit?.date || \"\",\n      particulars: dataToEdit?.particulars,\n      amount: dataToEdit?.amount,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceRepair.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyData={data}\n        tableKeys={vehicleRepairTableKeys}\n        bodyDataModal=\"Repair Maintenance\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Repair Maintenance\" : \"Add Repair Maintenance\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"vehicle\"\n              formik={entryFormik}\n              label=\"Select Vehicle\"\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"firm\"\n              formik={entryFormik}\n              label=\"Select Firm\"\n              options={firm}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"particulars\"\n              label=\"Particulars\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleTireTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Firm\",\n    key: \"name\",\n    path: \"firmName\",\n  },\n  {\n    name: \"Km Reading\",\n    key: \"kmReading\",\n  },\n  {\n    name: \"Km Run\",\n    key: \"kmRun\",\n  },\n  {\n    name: \"Tyre\",\n    key: \"tyre\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleTireTableKeys } from \"../../data/tableKeys/vehicleTireData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function VehicleTire() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [vehicle, setVehicle] = useState([]);\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceTyre.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result.map((s) => ({ ...s, firmName: s.firm })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceTyre.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceTyre.create,\n          payload\n        );\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      kmReading: dataToEdit?.kmReading || \"\",\n      kmRun: dataToEdit?.kmRun || \"\",\n      tyre: dataToEdit?.tyre || \"\",\n      date: dataToEdit?.date || null,\n      amount: dataToEdit?.amount || \"\",\n      rate: dataToEdit?.rate || \"\",\n      tyreNo: dataToEdit?.tyreNo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceTyre.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={vehicleTireTableKeys}\n        bodyData={data}\n        bodyDataModal=\"tyre/resole\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Vehicle Tyre/Resole\" : \"Add  Vehicle Tyre/Resole\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"vehicle\"\n              formik={entryFormik}\n              label=\"Select Vehicle\"\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"firm\"\n              formik={entryFormik}\n              label=\"Select Firm\"\n              options={firm}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kmReading\"\n              label=\"Km Reading\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kmRun\"\n              label=\"Km Run\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"tyre\"\n              label=\"Tyre\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"rate\"\n              label=\"Rate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"tyreNo\"\n              label=\"Tyre No\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleGreecingTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleGreecingTableKeys } from \"../../data/tableKeys/vehicleGreecingData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function Greecing() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [vehicle, setVehicle] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceGreecing.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"kkkkkkk\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceGreecing.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceGreecing.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      date: dataToEdit?.date || null,\n\n      amount: dataToEdit?.amount,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceGreecing.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyData={data}\n        tableKeys={vehicleGreecingTableKeys}\n        bodyDataModal=\"greecing\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Greecing\" : \"Add Greecing\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport Firm from \"../../components/Transport/Firm\";\nimport Fuel from \"../../components/Transport/Fuel\";\nimport Repair from \"../../components/Transport/Repair\";\nimport VehicleTire from \"../../components/Transport/VehicleTire\";\nimport Greecing from \"../../components/Transport/Greecing\";\n\nexport default function VehicleMaintenance() {\n  const [value, setSelectValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  return (\n    <>\n      <PageHeader title=\"Vehicle Maintenance:\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Firm\",\n          \"Vehicle Fuel\",\n          \"Repair Maintenance\",\n          \"New Tyre/Resole\",\n          \"Greecing\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Firm />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Fuel />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Repair />\n      </TabPanel>\n      <TabPanel index={3} value={value}>\n        <VehicleTire />\n      </TabPanel>\n      <TabPanel index={4} value={value}>\n        <Greecing />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const salaryGradeTableKeys = [\n  {\n    name: \"Grade Id\",\n    key: \"gradeCode\",\n  },\n  {\n    name: \"Grade\",\n    key: \"grade\",\n  },\n  {\n    name: \"From\",\n    key: \"from\",\n  },\n  {\n    name: \"To\",\n    key: \"to\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { salaryGradeTableKeys } from \"../../data/tableKeys/salaryGradeData\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useFormik } from \"formik\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nexport default function SalaryGrade() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddSalaryGrade = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.salaryGrade.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.salaryGrade.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      grade: dataToEdit?.grade || \"\",\n      active: dataToEdit?.active || true,\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      breakups: dataToEdit?.breakups || [\n        {\n          id: 1,\n          name: \"\",\n          percentage: \"\",\n        },\n      ],\n      deduction: dataToEdit?.deduction || [\n        {\n          id: 1,\n          name: \"\",\n          percentage: \"\",\n        },\n      ],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleInputChange = (event, item, type) => {\n    entryFormik.setFieldValue(\n      type,\n      entryFormik.values[type].map((i) =>\n        i.id === item.id ? { ...i, [event.target.name]: event.target.value } : i\n      )\n    );\n  };\n\n  const addItem = (type) => {\n    const initialData = [...entryFormik.values[type]];\n    const newItem = {\n      id: initialData.length + 1,\n      name: \"\",\n      percentage: \"\",\n    };\n    entryFormik.setFieldValue(type, [...initialData, newItem]);\n  };\n\n  const removeItem = (index, type) => {\n    const initialData = [...entryFormik.values[type]];\n    initialData.splice(index, 1);\n    entryFormik.setFieldValue(type, initialData);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.salaryGrade.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Salary Grade\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={salaryGradeTableKeys}\n        bodyDataModal=\"salary grade\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Salary grade\" onAddClick={AddSalaryGrade} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Salary Grade\" : \"Add Salary Grade\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"grade\"\n              label=\"Grade\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"from\" label=\"From\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"to\" label=\"To\" />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"active\"\n              formik={entryFormik}\n              label=\"Status\"\n              options={Active}\n            />\n          </Grid>\n        </Grid>\n\n        {entryFormik.values.breakups.map((b, i) => (\n          <>\n            <Typography fontWeight={\"bold\"} mt={1}>\n              Breakups:\n            </Typography>\n            <Grid\n              container\n              key={i}\n              gap={1}\n              sx={{\n                backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"20px 15px 30px 15px\",\n                border: \"1px solid lightgrey\",\n                my: 1.5,\n              }}>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={b?.name}\n                  name=\"name\"\n                  label=\"Name\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, b, \"breakups\")}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={b?.percentage}\n                  name=\"percentage\"\n                  label=\"Percentage\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, b, \"breakups\")}\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                sm={3}\n                md={3}\n                item\n                sx={{\n                  fontSize: 16,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}>\n                <Button onClick={() => addItem(\"breakups\")}>\n                  <AddIcon />\n                </Button>\n                <Button color=\"error\" onClick={() => removeItem(i, \"breakups\")}>\n                  <RemoveIcon color=\"error\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </>\n        ))}\n\n        {entryFormik.values.deduction.map((d, i) => (\n          <>\n            <Typography fontWeight={\"bold\"} mt={1}>\n              Deduction:\n            </Typography>\n            <Grid\n              container\n              key={i}\n              gap={1}\n              sx={{\n                backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"20px 15px 30px 15px\",\n                border: \"1px solid lightgrey\",\n                my: 1.5,\n              }}>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={d?.name}\n                  name=\"name\"\n                  label=\"Name\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, d, \"deduction\")}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={d?.percentage}\n                  name=\"percentage\"\n                  label=\"Percentage\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, d, \"deduction\")}\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                sm={3}\n                md={3}\n                item\n                sx={{\n                  fontSize: 16,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}>\n                <Button onClick={() => addItem(\"deduction\")}>\n                  <AddIcon />\n                </Button>\n                <Button\n                  color=\"error\"\n                  onClick={() => removeItem(i, \"deduction\")}>\n                  <RemoveIcon color=\"error\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </>\n        ))}\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const paymentHistoryTableKeys = [\n  {\n    name: \"Month\",\n    key: \"month\",\n  },\n  {\n    name: \"Year\",\n    key: \"year\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport { paymentHistoryTableKeys } from \"../../data/tableKeys/paymentHistoryData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function MakePayment() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [processingPayment, setProcessingPayment] = useState(false);\n  const [downloadingDeductions, setDownloadingDeductions] = useState(false);\n  const [deductions, setDeductions] = useState([]);\n\n  const getDeductions = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      let deductionList = [];\n      for (let sg of data.result) {\n        let deductions = sg.deduction.map((d) => ({\n          ...d,\n          label: d.name,\n          value: d.name,\n        }));\n        deductionList = [...deductionList, ...deductions];\n      }\n\n      setDeductions(deductionList);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDeductions();\n  }, [selectedSetting]);\n\n  const handleProcessPayment = async (values) => {\n    setProcessingPayment(true);\n    try {\n      const selectedMonth = dayjs(values.month).format(\"MMMM\");\n\n      const { data } = await get(PRIVATE_URLS.paymentHistory.downloadPdf, {\n        params: {\n          month: selectedMonth,\n          year: values.year,\n          schoolId: selectedSetting._id,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", data, `Salary_Slip_${selectedMonth}`);\n\n      getPaymentHistory();\n    } catch (error) {\n      console.log(error);\n    }\n    setProcessingPayment(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      month: new Date(),\n      year: new Date(),\n    },\n    onSubmit: handleProcessPayment,\n  });\n\n  const handleDownloadDeductions = async (values) => {\n    const month = values.date;\n    const deduction = values.type;\n\n    setDownloadingDeductions(true);\n    try {\n      const selectedMonth = dayjs(values.month).format(\"MMMM\");\n      const { data } = await get(\n        PRIVATE_URLS.paymentHistory.downloadDeductionPdf,\n        {\n          params: {\n            month: selectedMonth,\n            deduction,\n            schoolId: selectedSetting._id,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", data, `Deductions-${selectedMonth}`);\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingDeductions(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      type: new Date(),\n      date: new Date(),\n    },\n    onSubmit: handleDownloadDeductions,\n  });\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getPaymentHistory = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.paymentHistory.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setPaymentHistory(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (value === 1) {\n      getPaymentHistory();\n    }\n  }, [value]);\n\n  const handleDownloadPaymentHistory = (data) => {\n    window.open(data.data);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Salary Sheet\", \"History\", \"Salary Deduction\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Month\"\n                name=\"month\"\n                openTo=\"month\"\n                inputFormat=\"MM\"\n                views={[\"month\"]}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Year\"\n                name=\"year\"\n                openTo=\"year\"\n                inputFormat=\"YYYY\"\n                views={[\"year\"]}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }}>\n              <LoadingButton\n                loading={processingPayment}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Process\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"download\"]}\n          tableKeys={paymentHistoryTableKeys}\n          bodyData={paymentHistory}\n          bodyDataModal=\"history\"\n          onDownloadClick={handleDownloadPaymentHistory}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={formik}\n                label=\"Select Deduction Type\"\n                options={deductions}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"Date\"\n                openTo=\"month\"\n                inputFormat=\"MM/yyyy\"\n                views={[\"month\", \"year\"]}\n                name=\"date\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                onClick={formik.handleSubmit}\n                loading={downloadingDeductions}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const libraryReportTableKeys = [\n  {\n    name: \"Group By Data\",\n    key: \"groupByData\",\n    isDate: true,\n  },\n  {\n    name: \"Issue Total\",\n    key: \"totalIssues\",\n  },\n  {\n    name: \"Return Total\",\n    key: \"totalReturns\",\n  },\n\n  // {\n  //   name: \"Remain Total\",\n  //   key: \"remainTotal\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { libraryReportTableKeys } from \"../../data/tableKeys/libraryTabularData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport dayjs from \"dayjs\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nimport { PieChart, Pie, Tooltip, Cell, Legend } from \"recharts\";\nimport themeData from \"../../data/themeData\";\nimport { downloadFile } from \"../../utils\";\n\nconst graphData = [\n  { name: \"Issue\", value: 400 },\n  { name: \"Return\", value: 300 },\n  { name: \"Remain\", value: 300 },\n];\n\nconst colors = [\"#FFBB28\", \"#00C49F\", \"#32CD32\"];\n\nconst GroupBYData_Options = [\n  {\n    label: \"Daily\",\n    value: \"daily\",\n  },\n  {\n    label: \"Weekly\",\n    value: \"weekly\",\n  },\n  {\n    label: \"Monthly\",\n    value: \"monthly\",\n  },\n  {\n    label: \"Class\",\n    value: \"class\",\n  },\n];\n\nconst HeadingContainer = styled(Grid)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\nconst DataContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"10px\",\n}));\nexport default function LibraryReport() {\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [academicYearGraph, setAcademicYearGraph] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      setAcademicYearGraph(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetDataByGroup = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.report.groupedLibraryData, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupByData: values.groupByData,\n          fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n        },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"data999999999999999999=======\");\n    } catch (error) {}\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleGetDataByGroup,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(PRIVATE_URLS.report.downloadGroupedLibraryData, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYear: entryFormik.values.academicYear,\n\n          groupByData: entryFormik.values.groupByData,\n          fromDate: dayjs(entryFormik.values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(entryFormik.values.toDate).format(\"YYYY/MM/DD\"),\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"libraryReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Library Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Tabular Report\", \"Grapical Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={entryFormik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"To Date\"\n                  name=\"toDate\"\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                alignSelf=\"center\"\n                gap={1}\n                item>\n                <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                  Find\n                </Button>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleGetPrintPdf}>\n                  Print\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          tableKeys={libraryReportTableKeys}\n          bodyData={data}\n          bodyDataModal=\"library report\"\n          actions={[]}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, mb: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearGraph}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              display=\"flex\"\n              alignSelf=\"center\"\n              gap={1}\n              item>\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <HeadingContainer container>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper sx={{ padding: 2, mt: 2 }}>\n              <img\n                src={selectedSetting.logo}\n                height={60}\n                width={60}\n                style={{\n                  display: \"block\",\n                  margin: \"auto\",\n                }}\n              />\n\n              <Typography fontSize={18} textAlign=\"center\">\n                {selectedSetting.name}\n              </Typography>\n              <Typography gutterBottom fontSize={12} textAlign=\"center\">\n                {selectedSetting.address}\n              </Typography>\n\n              <DataContainer>\n                {\" \"}\n                <AssessmentIcon\n                  sx={{ color: themeData.darkPalette.primary.main }}\n                />\n                <Typography textAlign=\"center\" color=\"error\">\n                  Libary Report\n                </Typography>\n              </DataContainer>\n            </Paper>\n          </Grid>\n        </HeadingContainer>\n\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\n          <PieChart width={1000} height={380}>\n            <Legend\n              wrapperStyle={{ textAlign: \"center\" }}\n              formatter={(value) => value}\n            />\n            <Pie\n              dataKey=\"value\"\n              isAnimationActive={false}\n              data={graphData}\n              outerRadius={150}\n              label>\n              {graphData.map((entry, index) => (\n                <Cell key={index} fill={colors[index % colors.length]} />\n              ))}\n            </Pie>\n\n            <Tooltip />\n          </PieChart>\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function StudentYearlyAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getStudentAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            studentId: values.student,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n\n      student: \"\",\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting,\n  ]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Yearly Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            item\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Month</TableCell>\n\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData &&\n            Object.keys(attendanceData).map((month) => (\n              <TableRow key={month}>\n                <TableCell align=\"center\">{month}</TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalWorkingDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalPresentDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalAbsentDays}\n                </TableCell>\n                {numbers.map((num) => (\n                  <TableCell key={num.key} align=\"center\">\n                    {getAttendanceForDay(\n                      attendanceData[month].attendance,\n                      month,\n                      num.key\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeYearlyAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"employee\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getEmployeeAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            employeeId: values.employee,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getEmployees();\n  }, [selectedSetting._id]);\n\n  // useEffect(() => {\n  //   if (entryFormik.values.academicYear && entryFormik.values.employee) {\n  //     handleGetReport(entryFormik.values);\n  //   }\n  // }, [entryFormik.values.academicYear, entryFormik.values.employee]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else if (status === \"late\") {\n      return \"L\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee Yearly Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"employee\"\n              formik={entryFormik}\n              label=\"Select Employee\"\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Month</TableCell>\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData &&\n            Object.keys(attendanceData).map((month) => (\n              <TableRow key={month}>\n                <TableCell align=\"center\">{month}</TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalWorkingDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalPresentDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalAbsentDays}\n                </TableCell>\n                {numbers.map((num) => (\n                  <TableCell key={num.key} align=\"center\">\n                    {getAttendanceForDay(\n                      attendanceData[month].attendance,\n                      month,\n                      num.key\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentActivityReportTableKeys = [\n  {\n    name: \"Student\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Section\",\n    key: \"sectionName\",\n  },\n\n  {\n    name: \"Activity\",\n    key: \"activityName\",\n  },\n  {\n    name: \"Activity Date\",\n    key: \"activityDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { studentActivityReportTableKeys } from \"../../data/tableKeys/studentActivityReportData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function StudentActivityReport() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentActivityReport = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.report.getStudentActivityReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: values.academicYear,\n          studentId: values.student,\n        },\n      });\n      setData(data.result);\n    } catch (error) {}\n  };\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(\n        PRIVATE_URLS.report.getStudentActivityReportPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            studentId: entryFormik.values.student,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getPdf.data, \"studentActivityReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudentActivityReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.academicYear && entryFormik.values.class) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n\n    selectedSetting,\n  ]);\n  return (\n    <>\n      <PageHeader title=\"Student Activity Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"student\"\n                formik={entryFormik}\n                label=\"Select Student\"\n                options={students}\n              />\n            </Grid>\n\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              item\n              display=\"flex\"\n              gap={1}\n              alignSelf=\"center\">\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleGetPrintPdf}>\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentActivityReportTableKeys}\n        bodyDataModal=\"student activity report\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function StudentAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState(\"\");\n\n  const [academicYear, setAcademicYear] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFetchReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getAllStudentsAttendanceReportForParticularMonth,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            month: new Date(entryFormik.values.month).getMonth() + 1,\n            year: new Date(entryFormik.values.month).getFullYear(),\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            sectionId: entryFormik.values.section,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setSelectedMonthYear(dayjs(entryFormik.values.month).format(\"YYYY-MM\"));\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n\n      month: dayjs(new Date()),\n    },\n    onSubmit: handleFetchReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Attendance Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              options={academicYear}\n              label=\"Select Academic Year\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Month\"\n              name=\"month\"\n              openTo=\"month\"\n              inputFormat=\"MM\"\n              views={[\"month\"]}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            item\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Student Name</TableCell>\n\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData.map((student) => (\n            <TableRow key={student.studentId}>\n              <TableCell align=\"center\">{student.studentName}</TableCell>\n              <TableCell align=\"center\">{student.totalWorkingDays}</TableCell>\n              <TableCell align=\"center\">{student.totalPresentDays}</TableCell>\n              <TableCell align=\"center\">{student.totalAbsentDays}</TableCell>\n              {numbers.map((num) => (\n                <TableCell key={num.key} align=\"center\">\n                  {getAttendanceForDay(\n                    student.attendance,\n                    selectedMonthYear,\n                    num.key\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState(\"\");\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFetchReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getAllEmployeesAttendanceReportForParticularMonth,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            month: new Date(entryFormik.values.month).getMonth() + 1,\n            year: new Date(entryFormik.values.month).getFullYear(),\n            academicYearId: entryFormik.values.academicYear,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setSelectedMonthYear(dayjs(entryFormik.values.month).format(\"YYYY-MM\"));\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      month: dayjs(new Date()),\n    },\n    onSubmit: handleFetchReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else if (status === \"late\") {\n      return \"L\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Month\"\n              name=\"month\"\n              openTo=\"month\"\n              inputFormat=\"MM\"\n              views={[\"month\"]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Employee Name</TableCell>\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData.map((employee) => (\n            <TableRow key={employee.employeeId}>\n              <TableCell align=\"center\">{employee.employeeName}</TableCell>\n              <TableCell align=\"center\">{employee.totalWorkingDays}</TableCell>\n              <TableCell align=\"center\">{employee.totalPresentDays}</TableCell>\n              <TableCell align=\"center\">{employee.totalAbsentDays}</TableCell>\n              {numbers.map((num) => (\n                <TableCell key={num.key} align=\"center\">\n                  {getAttendanceForDay(\n                    employee.attendance,\n                    selectedMonthYear,\n                    num.key\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nexport const visitorInfoTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"To Meet\",\n    key: \"toMeetUserName\",\n  },\n  {\n    name: \"ReasonToMeet\",\n    key: \"reasonToMeet\",\n  },\n  {\n    name: \"CheckIn\",\n    key: \"checkIn\",\n  },\n\n  {\n    name: \"Check Out\",\n    key: \"checkOut\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport themeData from \"../../data/themeData\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function VisitorInfoViewModel({\n  open = true,\n  title = \"\",\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table aria-label=\"customized table\">\n            <TableBody>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  School Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.school?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Phone\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.phone || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Coming From\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.comingForm || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  User Type\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.toMeetUserType?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  To Meet\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.toMeetUserName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Reason To Meet\n                </StyledTableCell>\n                <StyledTableCell\n                  align=\"left\"\n                  width={100}\n                  isDarkMode={isDarkMode}>\n                  {tableData?.reasonToMeet?.charAt(0).toUpperCase() +\n                    tableData?.reasonToMeet?.slice(1)}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Check In\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.checkIn || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Check Out\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.checkOut || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Note\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.note || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, TextField } from \"@mui/material\";\nimport { visitorInfoTableKeys } from \"../../data/tableKeys/visitorInfoData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport VisitorInfoViewModel from \"./VisitorInfoViewModel\";\nimport moment from \"moment\";\n\nconst Reason_To_Meet = [\n  { label: \"Vendor\", value: \"vendor\" },\n  { label: \"Relative\", value: \"relative\" },\n  { label: \"Friend\", value: \"friend\" },\n  { label: \"Guardian\", value: \"guardian\" },\n  { label: \"Family\", value: \"family\" },\n  { label: \"Interview\", value: \"interview\" },\n  { label: \"Meeting\", value: \"meeting\" },\n  { label: \"Other\", value: \"other\" },\n];\n\nexport default function VisitorInfo() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  // get Roles\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.visitorInfo.list);\n      // console.log(data, \"hhaha\");\n      setData(\n        data.result.map((r) => ({\n          ...r,\n          toMeetUserName: r.toMeetUser.basicInfo.name,\n          checkIn: new Date(r.checkIn).toLocaleString(),\n          checkOut: r.checkOut ? new Date(r.checkOut).toLocaleString() : \"\",\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Roles\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(\n        data.result.map((r) => ({\n          ...r,\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n    getData();\n  }, [selectedSetting]);\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      // entryFormik.setFieldValue(\"toMeetUser\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // get Employee\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.toMeetUserType,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/update\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.visitorInfo.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.visitorInfo.create, payload);\n      }\n      getData();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // Formik\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      phone: dataToEdit?.phone || \"\",\n      comingForm: dataToEdit?.comingForm || \"\",\n      toMeetUserType: dataToEdit?.toMeetUserType._id || \"\",\n      toMeetUser: dataToEdit?.toMeetUser?._id || \"\",\n      reasonToMeet: dataToEdit?.reasonToMeet || \"\",\n      note: dataToEdit?.note || \"\",\n\n      checkOut: dataToEdit?.checkOut\n        ? moment(dataToEdit.checkOut, \"DD/MM/YYYY, HH:mm:ss\").format(\n            \"YYYY-MM-DDTHH:mm\"\n          )\n        : \"\",\n\n      class: dataToEdit?.class?._id || \"\",\n      section: dataToEdit?.section?._id || \"\",\n      roleName: dataToEdit?.roleName || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    setOpen(false);\n    // getData();\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.toMeetUserType) {\n      let roleName = roles.find(\n        (r) => r._id === entryFormik.values.toMeetUserType\n      )?.name;\n      entryFormik.setFieldValue(\"roleName\", roleName);\n      getEmployees();\n    }\n  }, [entryFormik.values.toMeetUserType]);\n\n  useEffect(() => {\n    if (\n      (entryFormik.values.toMeetUserType,\n      entryFormik.values.class,\n      entryFormik.values.section)\n    ) {\n      let roleName = roles.find(\n        (r) => r._id === entryFormik.values.toMeetUserType\n      )?.name;\n      entryFormik.setFieldValue(\"roleName\", roleName);\n      getStudents();\n    }\n  }, [\n    entryFormik.values.toMeetUserType,\n    entryFormik.values.class,\n    entryFormik.values.section,\n  ]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  console.log(data, \"mmmmmm\");\n\n  return (\n    <>\n      <PageHeader title=\"Visitor Info\" />\n      <Grid container mb={1}>\n        <Grid\n          xs={12}\n          md={12}\n          lg={12}\n          item\n          display=\"flex\"\n          justifyContent=\"flex-start\"\n          gap={1}>\n          <Button size=\"small\" variant=\"contained\">\n            Excel\n          </Button>\n          <Button size=\"small\" variant=\"contained\">\n            Print\n          </Button>\n        </Grid>\n      </Grid>\n\n      <CustomTable\n        actions={[\"view\", \"edit\"]}\n        tableKeys={visitorInfoTableKeys}\n        bodyDataModal=\"visitor info\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* view visitor info ============= */}\n      <VisitorInfoViewModel\n        title=\"Visitor Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        onClose={onCloseViewModel}\n      />\n\n      {/* Add visitor info ============== */}\n      <AddForm title=\"Add visitor info\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Visitor Info\" : \"Add Visitor Info\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"phone\"\n              label=\"Phone\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"comingForm\"\n              label=\"Coming Form\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              required={true}\n              name=\"toMeetUserType\"\n              formik={entryFormik}\n              label=\"Select To Meet User Type\"\n              options={roles}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n\n          {entryFormik.values.roleName === \"STUDENT\" && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                  disabled={dataToEdit != null}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                  disabled={dataToEdit != null}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              required={true}\n              name=\"toMeetUser\"\n              formik={entryFormik}\n              label=\"Select To Meet User\"\n              options={\n                entryFormik.values.roleName === \"STUDENT\" ? students : employees\n              }\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"reasonToMeet\"\n              formik={entryFormik}\n              label=\"Select Reason To Meet\"\n              options={Reason_To_Meet}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          {dataToEdit != null && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <TextField\n                  value={dataToEdit?.checkIn.toLocaleString()}\n                  fullWidth\n                  label=\"Check In\"\n                  name=\"checkIn\"\n                  disabled={dataToEdit != null}\n                  sx={{\n                    mt: 2,\n                    borderWidth: 1,\n                    borderRadius: (theme) => theme.shape.borderRadius,\n                  }}\n                  InputProps={{\n                    style: {\n                      borderWidth: 1,\n                      height: \"42px\",\n                      borderRadius: (theme) => theme.shape.borderRadius,\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  label=\"Check Out\"\n                  name=\"checkOut\"\n                  type=\"datetime-local\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const studentCheckOutTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n\n  {\n    name: \"Check Out\",\n    key: \"checkOut\",\n  },\n  {\n    name: \"Parent Name\",\n    key: \"parentName\",\n  },\n  {\n    name: \"Relation\",\n    key: \"relation\",\n  },\n  { name: \"Visitor Contact Number\", key: \"visitorContactNumber\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentCheckOutTableKeys } from \"../../data/tableKeys/studentCheckoutData\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\n\nconst Relation_With_Student = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nexport default function StudentCheckout() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingPdf, setLoadingPdf] = useState(false);\n  const [loadingExcel, setLoadingExce] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentCheckout.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddStudentCheckoutHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: formik.values.academicYear,\n            \"academicInfo.class\": formik.values.class,\n            \"academicInfo.section\": formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n\n      formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    // onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.academicYear) {\n      getData();\n    }\n  }, [formik.values.academicYear]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        student: formik.values.student,\n      };\n\n      setLoading(true);\n\n      const { data } = await put(PRIVATE_URLS.studentCheckout.update, payload);\n      getData();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      student:\n        students.find((student) => student._id === formik.values.student)\n          ?.basicInfo.name || \"\",\n      relationship: \"\",\n      reason: \"\",\n      visitorName: \"\",\n      visitorContactNumber: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleGetPrintPdf = async () => {\n    try {\n      setLoadingPdf(true);\n      const getStudentCheckoutPdf = await get(\n        PRIVATE_URLS.studentCheckout.downloadPdf,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/pdf\",\n        getStudentCheckoutPdf.data,\n        \"student_checkout.pdf\"\n      );\n\n      setLoadingPdf(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingPdf(false);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.studentCheckout.donwloadExcel, {\n        params: { schoolId: selectedSetting._id },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_checkout.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Checkout\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"student\"\n                formik={formik}\n                label=\"Select Student\"\n                options={students}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap={1}>\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loadingPdf}\n                onClick={handleGetPrintPdf}\n                variant=\"contained\">\n                Print\n              </LoadingButton>\n\n              <Button\n                size=\"small\"\n                onClick={handleGetDownloadExcel}\n                variant=\"contained\">\n                Excel\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <AddForm\n        title=\"Student Checkout\"\n        onAddClick={AddStudentCheckoutHandel}\n        disabled={!formik.values.student}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Checkout\" : \"Add Student Checkout\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Student Name\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              name=\"relationship\"\n              formik={entryFormik}\n              label=\"Relation With Student\"\n              options={Relation_With_Student}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"reason\"\n              formik={entryFormik}\n              label=\"Enter Reason\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"visitorName\"\n              formik={entryFormik}\n              label=\"Enter Visitor Name\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"visitorContactNumber\"\n              formik={entryFormik}\n              label=\"Enter Visitor Phone\"\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 2,\n            }}>\n            <Button size=\"small\" variant=\"contained\" sx={{ color: \"#fff\" }}>\n              Send OTP\n            </Button>\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput name=\"otp\" formik={entryFormik} label=\"Enter Otp\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n      <CustomTable\n        actions={[\"view\"]}\n        tableKeys={studentCheckOutTableKeys}\n        bodyDataModal=\"student checkout\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","export const ticketTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  {\n    name: \"Status\",\n    key: \"status\",\n  },\n];\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { ticketTableKeys } from \"../data/tableKeys/ticketData\";\nimport AddForm from \"../forms/AddForm\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormModal from \"../forms/FormModal\";\nimport FormInput from \"../forms/FormInput\";\n\nexport default function HelpDesk() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [reportImg, setReportImg] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const handelExamTerm = () => {\n    setOpen(true);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      examType: dataToEdit?.examType || \"\",\n      marksAssignmentAllowed: dataToEdit?.marksAssignmentAllowed || false,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: console.log(\"lll\"),\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setReportImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setReportImg(reportImg.filter((img) => img.name != fileName));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Tickets\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Tickets\"\n        bodyData={data}\n        tableKeys={ticketTableKeys}\n      />\n\n      <AddForm title=\"Add Tickets\" onAddClick={handelExamTerm} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Report Problem\" : \"Add Report Problem\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Subject\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name=\"receipt\"\n              label=\"Select Files\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={reportImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              multi={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const guardianFeedbackTableKeys = [\n  {\n    name: \"Parent Name\",\n    key: \"parentName\",\n  },\n  {\n    name: \"Student Name\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Feedback\",\n    key: \"feedback\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport { guardianFeedbackTableKeys } from \"../data/tableKeys/guardianFeedbackData\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { get, put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ViewModel from \"../forms/ViewModel\";\nimport themeData from \"../data/themeData\";\n\nconst MuiBox = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nconst CustomActionComponent = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n\n  const updateStatus = async (status) => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.guardianFeedback.update + \"/\" + data._id, {\n        status,\n      });\n      setLoading(false);\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      <Stack direction=\"row\" spacing={2}>\n        {[\"pending\", \"approved\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"rejected\")}\n            disableElevation\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        )}\n        {[\"pending\", \"rejected\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"approved\")}\n            disableElevation\n            size=\"small\"\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default function GuardianFeedback() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState(\"pending\");\n\n  const [modalData, setModalData] = useState({\n    open: false,\n    contents: \"\",\n    action: () => {},\n  });\n\n  const getFeebacks = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.guardianFeedback.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n      setFilteredData(data.result.filter((f) => f.status === selectedStatus));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFeebacks();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    setFilteredData(data.filter((f) => f.status === selectedStatus));\n  }, [selectedStatus]);\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.guardianFeedback.delete + \"/\" + _id\n      );\n      getFeebacks();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      contents: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Guardian Feedback\" />\n      <MuiBox>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          {[\"pending\", \"approved\", \"rejected\"].map((status) => (\n            <Button\n              key={status}\n              variant=\"outlined\"\n              sx={{\n                background:\n                  selectedStatus === status\n                    ? themeData.lightPalette.primary.main\n                    : \"\",\n\n                \":hover\": {\n                  background:\n                    selectedStatus === status\n                      ? themeData.darkPalette.primary.main\n                      : \"\",\n                },\n                color:\n                  selectedStatus === status\n                    ? \"#fff\"\n                    : (theme) =>\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#18488\",\n              }}\n              onClick={() => {\n                setSelectedStatus(status);\n              }}>\n              {status}:{data.filter((f) => f.status === status).length}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </MuiBox>\n      <CustomTable\n        actions={[\"custom\", \"delete\", \"view\"]}\n        bodyDataModal=\"feedback\"\n        bodyData={filteredData}\n        tableKeys={guardianFeedbackTableKeys}\n        onDeleteClick={handleDelete}\n        CustomAction={CustomActionComponent}\n        onUpdate={getFeebacks}\n        onViewClick={handleClickOpenView}\n      />\n      {/* ==== view feedback ==== */}\n      <ViewModel\n        title=\"Guardian Feedback\"\n        open={modalData?.open}\n        tableData={modalData?.contents}\n        onClose={onCloseViewModel}>\n        <Box\n          sx={{\n            minWidth: 300,\n            p: 1,\n          }}>\n          <Typography\n            id=\"modal-modal-description\"\n            sx={{ wordBreak: \"break-word\" }}>\n            {modalData?.contents?.feedback}\n          </Typography>\n        </Box>\n      </ViewModel>\n    </>\n  );\n}\n","export const studentBulkPhotoTableKeys = [\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n\n  {\n    name: \"File\",\n    key: \"file\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentBulkPhotoTableKeys } from \"../../data/tableKeys/studentBulkPhotoData\";\n\nexport default function StudentBulkPhoto() {\n  const [data, setDate] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Student Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"sectiion\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentBulkPhotoTableKeys}\n        bodyDataModal=\"student bulk photo\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst HeadingContainer = styled(Grid)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst DataContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"10px\",\n}));\n\nconst GroupBYData_Options = [\n  {\n    label: \"Gender\",\n    value: \"gender\",\n  },\n  {\n    label: \"Vehicle\",\n    value: \"vehicle\",\n  },\n  {\n    label: \"Library\",\n    value: \"library\",\n  },\n  {\n    label: \"Hostel\",\n    value: \"hostel\",\n  },\n  {\n    label: \"Class\",\n    value: \"class\",\n  },\n];\n\nconst classCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.className,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst genderCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: \"gender\",\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst libraryCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: \"library\",\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst vehcileCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.vehicleNumber,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst hostelCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.hostelName,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\n\nexport default function StudentReport() {\n  const componentRef = useRef();\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classBar, setClassBar] = useState([]);\n  const [genderBar, setGenderBar] = useState([]);\n  const [libraryBar, setLibraryBar] = useState([]);\n  const [vehicleBar, setVehicleBar] = useState([]);\n  const [hostelBar, setHostelBar] = useState([]);\n  const [groupData, setGroupdata] = useState(\"\");\n  const [groupDataGraph, setGroupdataGraph] = useState(\"\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const classCombinedData = classCombineData(classBar);\n  const genderCombinedData = genderCombineData(genderBar);\n  const libraryCombinedData = libraryCombineData(libraryBar);\n  const vehicleCombinedData = vehcileCombineData(vehicleBar);\n  const hostelCombinedData = hostelCombineData(hostelBar);\n\n  const [loading, setLoading] = useState(false);\n\n  const [loadingGraph, setLoadingGraph] = useState(false);\n\n  let totalMaleStudents = 0;\n  let totalFemaleStudents = 0;\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.report.getStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: values.groupByData,\n          academicYearId: values.academicYear,\n        },\n      });\n      setData(data.result);\n      setGroupdata(values.groupByData);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetStudentReportByGraph = async (values) => {\n    try {\n      setLoadingGraph(true);\n      const { data } = await get(PRIVATE_URLS.report.getStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: values.groupByData,\n          academicYearId: values.academicYear,\n        },\n      });\n\n      setGroupdataGraph(values.groupByData);\n      if (values.groupByData === \"class\") {\n        setClassBar(data.result);\n      }\n      if (values.groupByData === \"gender\") {\n        setGenderBar(data.result);\n      }\n      if (values.groupByData === \"library\") {\n        setLibraryBar(data.result);\n      }\n      if (values.groupByData === \"vehicle\") {\n        setVehicleBar(data.result);\n      }\n      if (values.groupByData === \"hostel\") {\n        setHostelBar(data.result);\n      }\n      setLoadingGraph(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingGraph(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n    },\n    onSubmit: handleGetStudentReport,\n  });\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n    },\n    onSubmit: handleGetStudentReportByGraph,\n  });\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  return (\n    <>\n      <PageHeader title=\"Student Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Tabular Report\", \"Grapical Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={entryFormik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                alignSelf=\"center\"\n                display=\"flex\"\n                gap={1}\n                item>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Find\n                </LoadingButton>\n                <Button size=\"small\" variant=\"contained\">\n                  Print\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n        <TableContainer component={Paper}>\n          {groupData === \"class\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Class</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.className}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    align=\"start\"\n                    colSpan={2}\n                    sx={{ fontWeight: \"bold\" }}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"gender\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n\n                    <TableCell align=\"center\">{data.maleCount}</TableCell>\n                    <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                    <TableCell align=\"center\">{data.totalCount}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"vehicle\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Vehicle Number</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.vehicleNumber}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    sx={{ fontWeight: \"bold\" }}\n                    align=\"start\"\n                    colSpan={2}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"library\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\"> {index + 1}</TableCell>\n\n                    <TableCell align=\"center\">{data.maleCount}</TableCell>\n                    <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                    <TableCell align=\"center\">{data.totalCount}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"hostel\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Hostel Name</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.hostelName}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    align=\"start\"\n                    colSpan={2}\n                    sx={{ fontWeight: \"bold\" }}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={data ? (data.length ? data.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={formik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                alignSelf=\"center\"\n                display=\"flex\"\n                gap={1}\n                item>\n                <LoadingButton\n                  loading={loadingGraph}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Find\n                </LoadingButton>\n                <ReactToPrint\n                  trigger={() => (\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={handlePrint}>\n                      Print\n                    </Button>\n                  )}\n                  content={() => componentRef.current}\n                />\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <Box ref={componentRef}>\n          <HeadingContainer container>\n            <Grid item xs={12} sm={12} md={6} lg={4}>\n              <Paper sx={{ padding: 2, mt: 2 }}>\n                <img\n                  src={selectedSetting.logo}\n                  height={60}\n                  width={60}\n                  style={{\n                    display: \"block\",\n                    margin: \"auto\",\n                  }}\n                />\n\n                <Typography fontSize={18} textAlign=\"center\">\n                  {selectedSetting.name}\n                </Typography>\n                <Typography gutterBottom fontSize={12} textAlign=\"center\">\n                  {selectedSetting.address}\n                </Typography>\n\n                <DataContainer>\n                  {\" \"}\n                  <AssessmentIcon\n                    sx={{ color: themeData.darkPalette.primary.main }}\n                  />\n                  <Typography textAlign=\"center\" color=\"error\">\n                    Student Report\n                  </Typography>\n                </DataContainer>\n              </Paper>\n            </Grid>\n          </HeadingContainer>\n          {groupDataGraph === \"class\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={classCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"gender\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={genderCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"vehicle\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={vehicleCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"hostel\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={hostelCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"library\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={libraryCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Library_Member = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function AddEmployee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [selectedPhoto, setSelectedPhoto] = useState([]);\n  const [resume, setResume] = useState([]);\n\n  const [salaryGrade, setSalaryGrade] = useState([]);\n\n  const getEmployeeDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.getEmpById + \"/\" + id);\n\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getEmployeeDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSalaryGrade = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setSalaryGrade(\n        data.result.map((s) => ({\n          label: s.grade,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n    getSalaryGrade();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: values.dob,\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n          responsibility: values.responsibility,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: values.joiningDate,\n          resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public || false,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        photo: values.photo,\n        libraryMember: values.libraryMember,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedPhoto.forEach((file) => formData.append(\"employeePhoto\", file));\n      resume.forEach((file) => formData.append(\"resume\", file));\n\n      console.log(formData, \"mmmmmmm\");\n\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.employee.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        console.log(formData, \"mmmmmmm111\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.employee.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      navigate(\"/sch/human-resource/employee\");\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.basicInfo.name || \"\",\n      empId: dataToEdit?.basicInfo.empId || \"\",\n      responsibility: dataToEdit?.basicInfo.responsibility || \"\",\n      designation: dataToEdit?.basicInfo.designation._id || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      secMobileNo: dataToEdit?.basicInfo.secMobileNo || \"\",\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      presentAddress: dataToEdit?.basicInfo.presentAddress || \"\",\n      permanentAddress: dataToEdit?.basicInfo.permanentAddress || \"\",\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      fatherName: dataToEdit?.basicInfo.fatherName || \"\",\n      spouseName: dataToEdit?.basicInfo.spouseName || \"\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      fatherOccupation: dataToEdit?.basicInfo.fatherOccupation || \"\",\n      spouseOccupation: dataToEdit?.basicInfo.spouseOccupation || \"\",\n      qualification: dataToEdit?.academicInfo.qualification || \"\",\n      workExperience: dataToEdit?.academicInfo.workExperience || \"\",\n      salaryGrade: dataToEdit?.academicInfo.salaryGrade || \"\",\n      email: dataToEdit?.academicInfo.email || \"\",\n      salaryType: dataToEdit?.academicInfo.salaryType || \"\",\n      role: dataToEdit?.role._id || \"\",\n      department: dataToEdit?.academicInfo.department._id || \"\",\n      joiningDate: dataToEdit?.academicInfo?.joiningDate\n        ? dayjs(dataToEdit.academicInfo.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      libraryMember: dataToEdit?.libraryMember || false,\n      username: dataToEdit?.username || \"\",\n      password: dataToEdit?.otherInfo.password || \"\",\n      public: dataToEdit?.otherInfo.public || false,\n      showDetailsForWeb: dataToEdit?.otherInfo.showDetailsForWeb || false,\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"resume\") {\n        setResume(fileList);\n      } else {\n        setSelectedPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedPhoto(selectedPhoto.filter((img) => img.name != fileName));\n    setResume(resume.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={\n              selectedPhoto.length > 0\n                ? URL.createObjectURL(selectedPhoto[0])\n                : dataToEdit?.photo\n                ? dataToEdit?.photo\n                : avatar\n            }\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"photo\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FileSelect\n              name=\"employeePhoto\"\n              multi={false}\n              label=\"Select Photo\"\n              onChange={(e) => handleChangePhoto(e, \"employeePhoto\")}\n              customOnChange={true}\n              selectedFiles={selectedPhoto}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/jpeg, image/png\"\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  options={salaryGrade}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"resume\"\n                  label=\"Select File\"\n                  onChange={(e) => handleChangePhoto(e, \"resume\")}\n                  customOnChange={true}\n                  selectedFiles={resume}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n\n              {!dataToEdit && (\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormInput\n                    required={true}\n                    name=\"password\"\n                    formik={entryFormik}\n                    label=\"Password\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"Is public\"\n                  options={Is_Public}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Library Member\"\n                  options={Library_Member}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","export const manageInstituteTableKeys = [\n  {\n    name: \"School Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Logo\",\n    type: \"image\",\n    key: \"logo\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageInstituteTableKeys } from \"../../data/tableKeys/manageInstituteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function ManageInstitute() {\n  const [data, setData] = useState();\n  const navigate = useNavigate();\n  const handleAddClick = (e) => {\n    navigate(\"/sch/manage-institute/add-institute\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleToggleSwitch = async (school) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.toggleActiveStatus + \"/\" + school._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    navigate(`/sch/manage-institute/edit-institute/${data._id}`);\n  };\n  return (\n    <>\n      <PageHeader title=\"Manage Institute\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        bodyDataModal=\"manage institute\"\n        bodyData={data}\n        tableKeys={manageInstituteTableKeys}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleSwitch}\n        onEditClick={handleEdit}\n      />\n      <AddForm title=\"Add Institute\" onAddClick={handleAddClick} />\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { Close } from \"@mui/icons-material\";\nimport { put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\n\nexport default function AddOrUpdateFiles({\n  dataToEdit,\n  title,\n  onUpdate = () => {},\n  styles = {},\n}) {\n  const [open, setOpen] = useState(false);\n  const [updatingFiles, setUpdatingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClose = () => setOpen(false);\n  const handleOpenDialog = () => setOpen(true);\n\n  const handleSelectFile = (e) => {\n    const selectedFiles = e.target.files;\n\n    if (selectedFiles.length > 0) {\n      let fileList = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n\n        fileList.push(file);\n      }\n      setSelectedFiles([...fileList]);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  const handleRemoveFile = (i) => {\n    setSelectedFiles(selectedFiles.filter((f, index) => index !== i));\n  };\n\n  const handleUpdateItem = async (e) => {\n    e.preventDefault();\n\n    try {\n      setUpdatingFiles(true);\n      const formData = new FormData();\n      selectedFiles.forEach((f) => formData.append(\"bannerImages\", f));\n      console.log(selectedFiles, \"imageeeee\");\n      const { data } = await put(\n        PRIVATE_URLS.school.addFiles + \"/\" + dataToEdit._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      onUpdate(data.result);\n      handleClose();\n\n      setSelectedFiles([]);\n      setUpdatingFiles(false);\n    } catch (error) {\n      setUpdatingFiles(false);\n\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        fullWidth\n        onClick={handleOpenDialog}\n        size=\"small\"\n        variant=\"contained\"\n        sx={{ mt: 2 }}>\n        {title}\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n        }}>\n        <DialogTitle>Add/Update Banner images</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Box sx={{ margin: \"20px 0\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}>\n              <Typography sx={{ fontWeight: \"bold\" }}>Add Files</Typography>\n              <TextField\n                name=\"images\"\n                label=\"Select files\"\n                fullWidth\n                onChange={handleSelectFile}\n                sx={{\n                  borderWidth: 1,\n                  borderRadius: theme.shape.borderRadius,\n                  maxWidth: \"300px\",\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{ type: \"file\", multiple: true }}\n                InputProps={{\n                  style: {\n                    borderWidth: 1,\n                    height: \"40px\",\n                    borderRadius: theme.shape.borderRadius,\n                  },\n                }}\n              />\n            </Box>\n            {selectedFiles.map((f, i) => (\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: \"10px\",\n\n                  background: \"#5fa5f661\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n                key={f.name + i.toString()}>\n                <Typography>{f.name}</Typography>\n                <IconButton onClick={(e) => handleRemoveFile(i)}>\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            disabled={!selectedFiles.length}\n            size=\"small\"\n            loading={updatingFiles}\n            variant=\"contained\"\n            onClick={handleUpdateItem}>\n            Add\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TimezoneSelect from \"react-timezone-select\";\nimport currencyCodes from \"currency-codes\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport AddOrUpdateFiles from \"../../forms/AddOrUpdateFiles\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport currencyToSymbolMap from \"currency-symbol-map/map\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst RollNumber_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto ascending name\",\n    value: \"autoAscendingName\",\n  },\n  {\n    label: \"Auto ascending name female\",\n    value: \"autoAscendingNameFemale\",\n  },\n];\nconst Attendence_Type = [\n  {\n    label: \"Class wise\",\n    value: \"classWise\",\n  },\n  {\n    label: \"Subject wise\",\n    value: \"subjectWise\",\n  },\n  {\n    label: \"Session wise\",\n    value: \"sessionWise\",\n  },\n];\nconst Admission_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto Ascending No.\",\n    value: \"autoAscendingNo\",\n  },\n];\nexport default function AddInstitute({ initialValue = null }) {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const symbol = Object.keys(currencyToSymbolMap);\n  const [dataToEdit, setDataToEdit] = useState(initialValue);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n  const [bannerImages, setBannerImages] = useState([]);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const getSchoolDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.details + \"/\" + id);\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getSchoolDetails();\n    }\n  }, [id]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"logo\") {\n        setLogo(fileList);\n      } else if (type === \"bannerImages\") {\n        setBannerImages(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n    setBannerImages(bannerImages.filter((img) => img.name != fileName));\n  };\n\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const currencies = currencyCodes.data.map((currency) => ({\n    label: `${currency.currency} - ${currency.code}`,\n    value: currency.code,\n  }));\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      logo.forEach((f) => formData.append(\"logo\", f));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.school.update + \"/\" + dataToEdit._id,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n\n        console.log(data.result, \"updateschool\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.school.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      entryFormik.resetForm();\n      setLogo([]);\n      navigate(-1);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      address: dataToEdit?.address || \"\",\n      phone: dataToEdit?.phone || \"\",\n\n      regDate: dataToEdit?.regDate\n        ? dayjs(dataToEdit.regDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      email: dataToEdit?.email || \"\",\n      fax: dataToEdit?.fax || \"\",\n      websiteFooter: dataToEdit?.websiteFooter || \"\",\n      description: dataToEdit?.description || \"\",\n      currency: dataToEdit?.currency || \"\",\n      currencySymbol: dataToEdit?.currencySymbol || \"\",\n      sessionStartMonth:\n        dataToEdit && dataToEdit.sessionStartMonth\n          ? dataToEdit.sessionStartMonth\n          : null,\n      sessionEndMonth:\n        dataToEdit && dataToEdit.sessionEndMonth\n          ? dataToEdit.sessionEndMonth\n          : null,\n      rollNumberType: dataToEdit?.rollNumberType || \"\",\n      studentAttendenceType: dataToEdit?.studentAttendenceType || \"\",\n      admissionNo: dataToEdit?.admissionNo || \"\",\n      latitude: dataToEdit?.latitude || \"\",\n      longitude: dataToEdit?.longitude || \"\",\n      defaultTimeZone: dataToEdit?.defaultTimeZone || \"\",\n      googleAnalyticsId: dataToEdit?.googleAnalyticsId || \"\",\n      teacherActivityFeedbackEnabled:\n        dataToEdit?.teacherActivityFeedbackEnabled || false,\n      facebookUrl: dataToEdit?.facebookUrl || \"\",\n      twitterUrl: dataToEdit?.twitterUrl || \"\",\n      linkedinUrl: dataToEdit?.linkedinUrl || \"\",\n      gplusUrl: dataToEdit?.gplusUrl || \"\",\n      youtubeUrl: dataToEdit?.youtubeUrl || \"\",\n      instagramUrl: dataToEdit?.instagramUrl || \"\",\n      pinterestUrl: dataToEdit?.pinterestUrl || \"\",\n      location: dataToEdit?.location || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.removeFile + \"/\" + dataToEdit._id,\n        {\n          file: img,\n        }\n      );\n      getSchoolDetails();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Institute\" showTextField={false} />\n\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          {/* <MuiBox>\n            <img\n              src={dataToEdit?.logo || avatar}\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"Preview\"\n            />\n          </MuiBox> */}\n          <MuiBox>\n            <img\n              src={\n                logo.length > 0\n                  ? URL.createObjectURL(logo[0])\n                  : dataToEdit?.logo\n                  ? dataToEdit?.logo\n                  : avatar\n              }\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"loogo\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"logo\"\n                label=\"Select Logo\"\n                onChange={(e) => handleChangePhoto(e, \"logo\")}\n                customOnChange={true}\n                selectedFiles={logo}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox style={{ position: \"relative\", zIndex: \"1\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"School Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"address\"\n                  formik={entryFormik}\n                  label=\"Address\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"phone\"\n                  formik={entryFormik}\n                  label=\"Phone number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Registration Date\"\n                  name=\"regDate\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"fax\" formik={entryFormik} label=\"Fax\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"location\"\n                  formik={entryFormik}\n                  label=\"Location\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"websiteFooter\"\n                  formik={entryFormik}\n                  label=\"Website Footer\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  name=\"description\"\n                  formik={entryFormik}\n                  label=\"Note\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Settings */}\n        <FormBox sx={{ overflow: \"visible\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Setting Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"currency\"\n                  formik={entryFormik}\n                  label=\"Currency\"\n                  options={currencies}\n                  onChange={(event) => {\n                    const selectedCurrency = event.target.value;\n                    entryFormik.setFieldValue(\"currency\", selectedCurrency);\n                    entryFormik.setFieldValue(\n                      \"currencySymbol\",\n                      currencyToSymbolMap[selectedCurrency]\n                    );\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"currencySymbol\"\n                  formik={entryFormik}\n                  label=\"Currency Symbol\"\n                  disabled\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session Start Month\"\n                  name=\"sessionStartMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session End Month\"\n                  name=\"sessionEndMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rollNumberType\"\n                  formik={entryFormik}\n                  label=\"Roll Number\"\n                  options={RollNumber_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"studentAttendenceType\"\n                  formik={entryFormik}\n                  label=\"Attendence Type \"\n                  options={Attendence_Type}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"admissionNo\"\n                  formik={entryFormik}\n                  label=\"Admission Number\"\n                  options={Admission_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"latitude\"\n                  formik={entryFormik}\n                  label=\"Latitude\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"longitude\"\n                  formik={entryFormik}\n                  label=\"Longitude\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item mt={2}>\n                <TimezoneSelect\n                  styles={{\n                    control: (baseStyle, state) => ({\n                      ...baseStyle,\n                      height: \"42px\",\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                    }),\n                    menu: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                    }),\n\n                    option: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                      color: isDarkMode ? \"white\" : \"black\",\n                      \"&:hover\": {\n                        backgroundColor: isDarkMode ? \"lightgray\" : \"white\",\n                        color: isDarkMode ? \"black\" : \"\",\n                      },\n                    }),\n                  }}\n                  placeholder=\"Default Timezone\"\n                  name=\"defaultTimeZone\"\n                  value={entryFormik.values.defaultTimeZone}\n                  onChange={(value) =>\n                    entryFormik.setFieldValue(\"defaultTimeZone\", value)\n                  }\n                  label=\"Time Zone\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"googleAnalyticsId\"\n                  formik={entryFormik}\n                  label=\"Google Analytics Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"teacherActivityFeedbackEnabled\"\n                  formik={entryFormik}\n                  label=\"Teacher Activity Feedack Enable\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox sx={{ marginBottom: !dataToEdit ? \"60px\" : \"20px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Social Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"TwitterURL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"gplusUrl\"\n                  formik={entryFormik}\n                  label=\"Google Plus Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Banner Images */}\n        {dataToEdit ? (\n          <FormBox sx={{ marginBottom: \"60px\" }}>\n            <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Banner Image\n            </Title>\n\n            <Grid container spacing={2}>\n              <Grid\n                container\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                justifyContent=\"flex-end\">\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginRight: \"10px\",\n                  }}>\n                  <AddOrUpdateFiles\n                    dataToEdit={dataToEdit}\n                    title={\"Upload Banner\"}\n                    onUpdate={getSchoolDetails}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.bannerImages?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"150px\",\n                        height: \"100px\",\n\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <CloseIcon color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n          </FormBox>\n        ) : null}\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport themeData from \"../../data/themeData\";\nimport { Padding } from \"@mui/icons-material\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"#44628561\",\n    // width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: 200,\n  padding: \"13px 5px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function FormTable({ employee }) {\n  const handleLinkClick = (url) => {\n    window.open(url, \"_blank\");\n  };\n\n  return (\n    <>\n      {employee?.photo ? (\n        <img\n          src={employee.photo}\n          height={75}\n          width={75}\n          style={{ borderRadius: \"50%\", alignSelf: \"center\" }}\n          alt=\"Employee Photo\"\n        />\n      ) : (\n        <Avatar sx={{ height: 75, width: 75 }} src=\"/broken-image.jpg\" />\n      )}\n\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: 660,\n          my: 2,\n          display: {\n            xs: \"none\",\n            sm: \"block\",\n            md: \"block\",\n            lg: \"block\",\n          },\n          borderRadius: \"5px\",\n        }}\n      >\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n\n      {/* ======== Mobile view table ============ */}\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: \"100%\",\n          mx: 2,\n          my: 2,\n          display: {\n            xs: \"visible\",\n            sm: \"none\",\n            md: \"none\",\n            lg: \"none\",\n          },\n        }}\n      >\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n      {/* )} */}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"50px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nexport default function ProfileUpdate({\n  handleCreateOrUpdate = () => {},\n  employee = \"\",\n  setSelectValue = 0,\n}) {\n  const navigate = useNavigate();\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const [designations, setDesignations] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getDesignation = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesignations(\n        data.result.map((m) => ({ label: m.name, value: m._id }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEmpPhoto = async (e) => {\n    const formData = new FormData();\n    console.log(e, \"hawa\");\n    formData.append(\"files\", e.target.files[0]);\n    try {\n      const res = await post(PRIVATE_URLS.fileUpload.create, formData);\n      console.log(res, \"fafa\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignation();\n  }, []);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: employee?.basicInfo?.name || \"\",\n      aadharNo: employee.basicInfo.aadharNo || \"\",\n      designation: employee.basicInfo?.designation?._id || \"\",\n      gender: employee?.basicInfo.gender || \"\",\n      bloodGroup: employee?.basicInfo.bloodGroup || \"\",\n      religion: employee?.basicInfo.religion || \"\",\n      dob: employee?.basicInfo.dob ? dayjs(employee.dob) : null,\n      presentAddress: employee?.basicInfo.presentAddress || \"\",\n      permanentAddress: employee?.basicInfo.permanentAddress || \"\",\n      email: employee?.academicInfo.email || \"\",\n      joiningDate: employee.academicInfo.joiningDate\n        ? dayjs(employee.academicInfo.joiningDate)\n        : null,\n      resume: employee?.academicInfo.resume || \"\",\n      facebookUrl: employee?.otherInfo.facebookUrl || \"\",\n      twitterUrl: employee?.otherInfo.twitterUrl || \"\",\n      linkedinUrl: employee?.otherInfo.linkedinUrl || \"\",\n      gplusUrl: employee?.otherInfo.gplusUrl || \"\",\n      youtubeUrl: employee?.otherInfo.youtubeUrl || \"\",\n      instagramUrl: employee?.otherInfo.instagramUrl || \"\",\n      pinterestUrl: employee?.otherInfo.pinterestUrl || \"\",\n      username: employee?.username || \"\",\n      contactNumber: employee?.contactNumber || \"\",\n      photo: employee?.photo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: false,\n  });\n\n  console.log(entryFormik.values, \"entryFormik\");\n\n  return (\n    <>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          <MuiBox>\n            <img\n              src={previewCreateUrl || avatar}\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"Preview\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                // required={true}\n                name=\"logo\"\n                formik={entryFormik}\n                label=\"Logo\"\n                type=\"file\"\n                onChange={(e) => handleEmpPhoto(e)}\n                inputProps={{\n                  accept: \"image/*\",\n                }}\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"National Id\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designations}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Phone No.\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Gender\"\n                  options={Gender}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Settings */}\n\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Joining\"\n                  name=\"joiningDate\"\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"resume\"\n                  formik={entryFormik}\n                  label=\"Upload Resume\"\n                  type=\"file\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"TwitterURL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"gplusUrl\"\n                  formik={entryFormik}\n                  label=\"Google Plus Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        <StyledBox>\n          <Stack spacing={2} direction=\"row\" justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setSelectValue(0)}\n            >\n              Cancel\n            </Button>\n            <LoadingButton\n              loading={loading}\n              type=\"submit\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Update\n            </LoadingButton>\n          </Stack>\n        </StyledBox>\n      </form>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport themeData from \"../../data/themeData\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormTable from \"./FormTable\";\nimport ProfileUpdate from \"./ProfileUpdate\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Profile() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  // const [dataToEdit, setDataToEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState(null);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  console.log(selectedSetting, \"selectedSetting\");\n  console.log(employee, \"employee\");\n\n  const getEmployees = async () => {\n    const user = window.localStorage.getItem(\"current_ecs_user\");\n    setEmployee(JSON.parse(user));\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        basicInfo: {\n          name: values.name,\n          designation: values.designation,\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          dob: values.dob,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          aadharNo: values.aadharNo,\n        },\n        academicInfo: {\n          email: values.email,\n          joiningDate: values.joiningDate,\n          resume: values.resume,\n        },\n        otherInfo: {\n          facebookUrl: values?.facebookUrl,\n          twitterUrl: values?.twitterUrl,\n          linkedinUrl: values?.linkedinUrl,\n          googlePlusUrl: values?.googlePlusUrl,\n          youtubeUrl: values?.youtubeUrl,\n          instagramUrl: values?.instagramUrl,\n          pinterestUrl: values?.pinterestUrl,\n        },\n        username: values.username,\n        photo: values.photo,\n        contactNumber: values.contactNumber,\n      };\n      setLoading(true);\n      if (employee) {\n        const { data } = await put(\n          PRIVATE_URLS.employee.update + \"/\" + employee._id,\n          payload\n        );\n        getEmployees();\n      } else {\n        const { data } = await post(PRIVATE_URLS.employee.create, payload);\n        console.log(data, \"gg\");\n        getEmployees();\n      }\n      // handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  if (!employee) {\n    return null;\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Profile\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Profile\", \"Update Profile\"]}\n      />\n      <TabPanel index={0} value={value}>\n        {/* {employee && ( */}\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            mt: 3,\n          }}\n        >\n          <FormTable employee={employee} />\n        </Box>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <ProfileUpdate\n          handleCreateOrUpdate={handleCreateOrUpdate}\n          employee={employee}\n          setSelectValue={setSelectValue}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function UpdateEmployee() {\n  const location = useLocation();\n  const empData = location.state && location.state.data;\n  const { selectedSetting } = useContext(SettingContext);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const navigate = useNavigate();\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n  }, []);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: dayjs(values.dob),\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: dayjs(values.joiningDate),\n          resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        schoolId: selectedSetting._id,\n      };\n\n      const { data } = await put(\n        PRIVATE_URLS.employee.update + \"/\" + empData._id,\n        payload\n      );\n\n      console.log(data, \"erttfyuygiu\");\n\n      navigate(\"/sch/human-resource/employee\");\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: empData ? empData.basicInfo.name : \"\",\n      empId: empData ? empData.basicInfo.empId : \"\",\n      responsibility: empData ? empData.basicInfo.responsibility : \"\",\n      designation: empData ? empData.basicInfo.designation._id : \"\",\n      contactNumber: empData ? empData.contactNumber : \"\",\n      secMobileNo: empData ? empData.basicInfo.secMobileNo : \"\",\n      gender: empData ? empData.basicInfo.gender : \"\",\n      bloodGroup: empData ? empData.basicInfo.bloodGroup : \"\",\n      religion: empData ? empData.basicInfo.religion : \"\",\n      presentAddress: empData ? empData.basicInfo.presentAddress : \"\",\n      permanentAddress: empData ? empData.basicInfo.permanentAddress : \"\",\n      dob: empData ? dayjs(empData.basicInfo.dob) : dayjs(new Date()),\n      fatherName: empData ? empData.basicInfo.fatherName : \"\",\n      spouseName: empData ? empData.basicInfo.spouseName : \"\",\n      aadharNo: empData ? empData.basicInfo.aadharNo : \"\",\n      fatherOccupation: empData ? empData.basicInfo.fatherOccupation : \"\",\n      spouseOccupation: empData ? empData.basicInfo.spouseOccupation : \"\",\n      qualification: empData ? empData.academicInfo.qualification : \"\",\n      workExperience: empData ? empData.academicInfoworkExperience : \"\",\n      salaryGrade: empData ? empData.academicInfosalaryGrade : \"\",\n      email: empData ? empData.academicInfo.email : \"\",\n      salaryType: empData ? empData.academicInfo.salaryType : \"\",\n      role: empData ? empData.role._id : \"\",\n      department: empData ? empData.academicInfo.department._id : \"\",\n      joiningDate: empData\n        ? dayjs(empData.academicInfo.joiningDate)\n        : dayjs(new Date()),\n      resume: empData ? empData.resume : \"\",\n      username: empData ? empData.username : \"\",\n      password: empData ? empData.password : \"\",\n      public: empData ? empData.public : \"\",\n      showDetailsForWeb: empData ? empData.showDetailsForWeb : false,\n      photo: empData ? empData.photo : \"\",\n      active: empData ? empData.active : \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreviewCreateUrl(imageUrl);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Update Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={previewCreateUrl || avatar}\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"Preview\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              // required={true}\n              name=\"photo\"\n              formik={entryFormik}\n              label=\"Photo\"\n              type=\"file\"\n              onChange={handleImageChange}\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  // options={\"\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"resume\"\n                  formik={entryFormik}\n                  label=\"Resume\"\n                  type=\"file\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"password\"\n                  formik={entryFormik}\n                  label=\"Password\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"Is public\"\n                  options={Is_Public}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"photo\"\n                  formik={entryFormik}\n                  label=\"Photo\"\n                  type=\"file\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}\n                >\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\"\n                >\n                  Update\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender_Options = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nconst Relation_With_Guardian = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nconst RTE_Options = [\n  { label: \"Yes\", value: \"yes\" },\n  { label: \"No\", value: \"no\" },\n];\n\nexport default function AddStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedStudentPhoto, setSelectedStuentPhoto] = useState([]);\n  const [selectedMotherPhoto, setSelectedMotherPhoto] = useState([]);\n  const [selectedFatherPhoto, setSelectedFatherPhoto] = useState([]);\n  const [transferCertificate, setTransperCertificate] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const { id } = useParams();\n  const getStudentDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.details + \"/\" + id);\n      console.log(data.result, \"==========\");\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getStudentDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          rte: values.rte || \"no\",\n          caste: values.caste,\n          motherTongue: values.motherTongue,\n          birthPlace: values.birthPlace,\n          aadharNo: values.aadharNo,\n          cicn: values.cicn,\n          satNo: values.satNo,\n          grNo: values.grNo,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n          education: values.motherEdu,\n          profession: values.motherProfession,\n          designation: values.motherDesignation,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n          education: values.fatherEdu,\n          profession: values.fatherProfession,\n          designation: values.fatherDesignation,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        otherInfo: {\n          email: values.email,\n          healthCondition: values.healthCondition,\n          hostelMember: values.hostelMember || false,\n          transportMember: values.transportMember || false,\n          libraryMember: values.libraryMember || false,\n          busStop: values.busStop,\n          extraInfo: values.extraInfo,\n        },\n        contactInfo: {\n          guardianName: values.guardianName,\n          guardianContactNumber: values.guardianContactNumber,\n          guardianContactNumberSecondary: values.guardianContactNumberSecondary,\n          guardianRelation: values.guardianRelation,\n          nationId: values.nationId,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n        },\n        prevSchInfo: {\n          name: values.prevSchName,\n          tcNo: values.tcNo,\n          prevClass: values.prevClass,\n        },\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n        contactNumber: values.contactNumber,\n        active: values.active || true,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedStudentPhoto.forEach((file) =>\n        formData.append(\"studentPhoto\", file)\n      );\n      selectedFatherPhoto.forEach((file) =>\n        formData.append(\"fatherPhoto\", file)\n      );\n      selectedMotherPhoto.forEach((file) =>\n        formData.append(\"motherPhoto\", file)\n      );\n      transferCertificate.forEach((file) =>\n        formData.append(\"transferCertificate\", file)\n      );\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.student.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        console.log(formData, \"kkkkkk\");\n        navigate(\"/sch/student/admit-student\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.student.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        navigate(\"/sch/student/admit-student\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      name: dataToEdit?.basicInfo.name || \"\",\n\n      admissionDate: dataToEdit?.basicInfo?.admissionDate\n        ? dayjs(dataToEdit.basicInfo.admissionDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      motherTongue: dataToEdit?.basicInfo.motherTongue || \"\",\n\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      cicn: dataToEdit?.basicInfo.cicn || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      caste: dataToEdit?.basicInfo.caste || \"\",\n      rte: dataToEdit?.basicInfo.rte || \"\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      satNo: dataToEdit?.basicInfo.satNo || \"\",\n      grNo: dataToEdit?.basicInfo.grNo || \"\",\n      birthPlace: dataToEdit?.basicInfo.birthPlace || \"\",\n\n      class: dataToEdit?.academicInfo?.class?._id || \"\",\n      section: dataToEdit?.academicInfo?.section?._id || \"\",\n      rollNumber: dataToEdit?.academicInfo?.rollNumber || \"\",\n      admissionNumber: dataToEdit?.academicInfo?.admissionNumber || \"\",\n\n      contactNumber: dataToEdit?.contactNumber || \"\",\n\n      guardianName: dataToEdit?.contactInfo?.guardianName || \"\",\n      guardianContactNumber:\n        dataToEdit?.contactInfo?.guardianContactNumber || \"\",\n      guardianContactNumberSecondary:\n        dataToEdit?.contactInfo?.guardianContactNumberSecondary || \"\",\n      guardianRelation: dataToEdit?.contactInfo?.guardianRelation || \"\",\n      nationId: dataToEdit?.contactInfo?.nationId || \"\",\n      presentAddress: dataToEdit?.contactInfo?.presentAddress || \"\",\n      permanentAddress: dataToEdit?.contactInfo?.permanentAddress || \"\",\n\n      prevSchName: dataToEdit?.prevSchInfo?.name || \"\",\n      tcNo: dataToEdit?.prevSchInfo?.tcNo || \"\",\n      prevClass: dataToEdit?.prevSchInfo?.prevClass || \"\",\n\n      email: dataToEdit?.otherInfo?.email || \"\",\n      healthCondition: dataToEdit?.otherInfo?.healthCondition || \"\",\n      transportMember: dataToEdit?.otherInfo?.transportMember || \"\",\n      hostelMember: dataToEdit?.otherInfo?.hostelMember || \"\",\n      libraryMember: dataToEdit?.otherInfo?.libraryMember || \"\",\n      busStop: dataToEdit?.otherInfo?.busStop || \"\",\n      extraInfo: dataToEdit?.otherInfo?.extraInfo || \"\",\n      active: dataToEdit?.active || true,\n\n      fatherName: dataToEdit?.fatherInfo.name || \"\",\n      fatherPhone: dataToEdit?.fatherInfo.contactNumber || \"\",\n      fatherEdu: dataToEdit?.fatherInfo.education || \"\",\n      fatherProfession: dataToEdit?.fatherInfo.profession || \"\",\n      fatherDesignation: dataToEdit?.fatherInfo.designation || \"\",\n\n      motherName: dataToEdit?.motherInfo.name || \"\",\n      motherPhone: dataToEdit?.motherInfo.contactNumber || \"\",\n      motherEdu: dataToEdit?.motherInfo.education || \"\",\n      motherProfession: dataToEdit?.motherInfo.profession || \"\",\n      motherDesignation: dataToEdit?.motherInfo.designation || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"fatherPhoto\") {\n        setSelectedFatherPhoto(fileList);\n      } else if (type === \"motherPhoto\") {\n        setSelectedMotherPhoto(fileList);\n      } else if (type === \"transferCertificate\") {\n        setTransperCertificate(fileList);\n      } else {\n        setSelectedStuentPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedStuentPhoto(\n      selectedStudentPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedFatherPhoto(\n      selectedFatherPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedMotherPhoto(\n      selectedMotherPhoto.filter((img) => img.name != fileName)\n    );\n\n    setTransperCertificate(\n      transferCertificate.filter((img) => img.name != fileName)\n    );\n  };\n\n  const handleDownloadFatherPhoto = () => {\n    const downloadUrl = dataToEdit?.fatherInfo?.photo;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadMotherPhoto = () => {\n    const downloadUrl = dataToEdit?.motherInfo?.photo;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadStudentPhoto = () => {\n    const downloadUrl = dataToEdit?.photo;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  const handleDownloadTransferCertificate = () => {\n    const downloadUrl = dataToEdit?.prevSchInfo.transferCertificate;\n\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  console.log(selectedSetting, \"sssssssssssss\");\n\n  return (\n    <>\n      <PageHeader title=\"Admit Student\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"admissionNumber\"\n                  formik={entryFormik}\n                  label=\"Admission No.\"\n                  disabled={selectedSetting?.admissionNo !== \"manual\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"admissionDate\"\n                  formik={entryFormik}\n                  label=\"Admission Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"dob\"\n                  formik={entryFormik}\n                  label=\"Date Of Birth\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rte\"\n                  formik={entryFormik}\n                  label=\"Select RTE\"\n                  options={RTE_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"caste\" formik={entryFormik} label=\"Cast\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"cicn\"\n                  formik={entryFormik}\n                  label=\"Cast Income Certificate No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherTongue\"\n                  formik={entryFormik}\n                  label=\"Mother Tongue\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"birthPlace\"\n                  formik={entryFormik}\n                  label=\"Birth Place\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"satNo\" formik={entryFormik} label=\"SAT No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"grNo\" formik={entryFormik} label=\"GR No.\" />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* contact Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Contact Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianName\"\n                  formik={entryFormik}\n                  label=\"Guardian Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumber\"\n                  formik={entryFormik}\n                  label=\"Guardian Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumberSecondary\"\n                  formik={entryFormik}\n                  label=\"Alternate Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"guardianRelation\"\n                  formik={entryFormik}\n                  label=\"Select Relation With Guardian\"\n                  options={Relation_With_Guardian}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"nationId\"\n                  formik={entryFormik}\n                  label=\"Select National Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Academic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classData}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sectionData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"rollNumber\"\n                  formik={entryFormik}\n                  label=\"Roll No\"\n                  disabled={selectedSetting?.rollNumberType !== \"manual\"}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Previous school Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Previous School Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevSchName\"\n                  formik={entryFormik}\n                  label=\"Previous School\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevClass\"\n                  formik={entryFormik}\n                  label=\"Previous Class\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"tcNo\" formik={entryFormik} label=\"TC No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"transferCertificate\"\n                  label=\"Select File\"\n                  onChange={(e) => handleChangePhoto(e, \"transferCertificate\")}\n                  customOnChange={true}\n                  selectedFiles={transferCertificate}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n\n              {dataToEdit?.prevSchInfo &&\n              dataToEdit.prevSchInfo?.transferCertificate ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadTransferCertificate}>\n                    Download File\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Father Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Father Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherPhone\"\n                  formik={entryFormik}\n                  label=\"Father Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherEdu\"\n                  formik={entryFormik}\n                  label=\"Father Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherProfession\"\n                  formik={entryFormik}\n                  label=\"Father Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherDesignation\"\n                  formik={entryFormik}\n                  label=\"Father Designation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"fatherPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"fatherPhoto\")}\n                  customOnChange={true}\n                  selectedFiles={selectedFatherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n              {dataToEdit?.fatherInfo && dataToEdit.fatherInfo?.photo ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadFatherPhoto}>\n                    Download Photo\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Mother Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Mother Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherName\"\n                  formik={entryFormik}\n                  label=\"Mother Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherPhone\"\n                  formik={entryFormik}\n                  label=\"Mother Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherEdu\"\n                  formik={entryFormik}\n                  label=\"Mother Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherProfession\"\n                  formik={entryFormik}\n                  label=\"Mother Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherDesignation\"\n                  formik={entryFormik}\n                  label=\"Mother Designation\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  label=\"Select Photo\"\n                  multi={false}\n                  name=\"motherPhoto\"\n                  onChange={(e) => handleChangePhoto(e, \"motherPhoto\")}\n                  customOnChange={true}\n                  selectedFiles={selectedMotherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n\n              {dataToEdit?.motherInfo && dataToEdit.motherInfo?.photo ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadMotherPhoto}>\n                    Download Photo\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Other Information*/}\n        <FormBox\n          sx={{\n            marginBottom: \"60px\",\n          }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"email\" formik={entryFormik} label=\"Email\" />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"healthCondition\"\n                  formik={entryFormik}\n                  label=\"Health Condition\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Select Status\"\n                  options={[\n                    { label: \"Inactive\", value: false },\n                    { label: \"Active\", value: true },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"hostelMember\"\n                  formik={entryFormik}\n                  label=\"Select Hostel Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"transportMember\"\n                  formik={entryFormik}\n                  label=\"Select Transport Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Select Library Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"busStop\"\n                  formik={entryFormik}\n                  label=\"Bus Stop\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"extraInfo\"\n                  formik={entryFormik}\n                  label=\"Other Info\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"studentPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"studentPhoto\")}\n                  customOnChange={true}\n                  selectedFiles={selectedStudentPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n\n              {dataToEdit && dataToEdit?.photo ? (\n                <Grid xs={12} md={6} lg={6} item sx={{ alignSelf: \"center\" }}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleDownloadStudentPhoto}>\n                    Download Photo\n                  </Button>\n                </Grid>\n              ) : null}\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  styled,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Tooltip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nexport default function AddCourse() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const [classData, setClassData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const navigate = useNavigate();\n\n  const [inputlist, setInputList] = useState(\n    dataToEdit?.benefits || [{ point: \"\" }]\n  );\n  const [inputlistBenifits, setInputListBenifits] = useState(\n    dataToEdit?.benefits || [{ point: \"\" }]\n  );\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        description: values.description,\n        classIds: values.class,\n        subject: values.subject,\n        title: values.title,\n        isTrending: values.isTrending,\n\n        courseDetails: {\n          overview: inputlist,\n          benefits: inputlistBenifits,\n        },\n      };\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      formData.append(\"schoolId\", selectedSetting._id);\n      selectImg.forEach((file) => formData.append(\"file\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.course.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.course.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        navigate(\"/sch/lms/courses\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: [],\n      subject: \"\",\n      title: \"\",\n      description: \"\",\n      isTrending: false,\n      overview: [],\n      benefits: [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleAddClick = () => {\n    setInputList([...inputlist, { point: \"\" }]);\n  };\n\n  const handleAddClickBenifites = () => {\n    setInputListBenifits([...inputlistBenifits, { point: \"\" }]);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { value } = e.target;\n    const overviewList = [...inputlist];\n\n    let newList = overviewList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputList(newList);\n  };\n\n  const handleInputChangeBenifits = (e, index) => {\n    const { value } = e.target;\n    const benifitsList = [...inputlistBenifits];\n    let newList = benifitsList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputListBenifits(newList);\n  };\n\n  const handleRemoveClick = (i) => {\n    const list = [...inputlist];\n    list.splice(i, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClickBenifits = (i) => {\n    const list = [...inputlistBenifits];\n    list.splice(i, 1);\n    setInputListBenifits(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Course\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                multiple={true}\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n            {entryFormik.values.class.length <= 1 && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select Subject\"\n                  options={subject}\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Enter Course Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"thumbnailImage\"\n                label=\"Select Thumbnail Image\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Enter  Description\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlist.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter Overview\"\n                    label=\"Enter Overview\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                      mb: \"5px\",\n                      mt: 1,\n                    }}\n                    value={data.point || \"\"}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    name=\"overview\"\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      onClick={() => handleRemoveClick(i)}\n                      color=\"error\"\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClick}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlistBenifits.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter What You Will Learn\"\n                    label=\"Enter What You Will Learn\"\n                    variant=\"outlined\"\n                    sx={{ mb: \"5px\", mt: 1 }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    name=\"benefits\"\n                    value={data.point || \"\"}\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChangeBenifits(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      sx={{ cursor: \"pointer\" }}\n                      fontSize=\"small\"\n                      color=\"error\"\n                      onClick={() => handleRemoveClickBenifits(i)}\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClickBenifites}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n\n        <Grid item xs={12} sm={12} md={12} sx={{ marginBottom: \"60px\" }}>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked={entryFormik.values.isTrending} />}\n              name=\"isTrending\"\n              onChange={(e) => {\n                entryFormik.setFieldValue(\"isTrending\", e.target.checked);\n              }}\n              label=\"This course is trending?\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <StickyBar\n          content={\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"5px\",\n              }}>\n              <Button\n                variant=\"contained\"\n                onClick={() => navigate(-1)}\n                color=\"error\"\n                size=\"small\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={entryFormik.handleSubmit}>\n                Submit\n              </Button>\n            </Grid>\n          }\n        />\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  styled,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Tooltip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n  backgroundColor: \"whitesmoke\",\n}));\n\nexport default function UpdateCourse() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classData, setClassData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const course = (location.state && location.state.courseData) || null;\n\n  console.log(course, \"mmmmmmmmm==============\");\n\n  const [inputlist, setInputList] = useState(\n    course?.courseDetails?.overview || [{ point: \"\" }]\n  );\n  const [inputlistBenifits, setInputListBenifits] = useState(\n    course?.courseDetails?.benefits || [{ point: \"\" }]\n  );\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        description: values.description,\n        classIds: values.class,\n        subject: values.subject,\n        title: values.title,\n        isTrending: values.isTrending,\n\n        courseDetails: {\n          overview: inputlist,\n          benefits: inputlistBenifits,\n        },\n      };\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      formData.append(\"schoolId\", selectedSetting._id);\n      selectImg.forEach((file) => formData.append(\"thumbnailImage\", file));\n\n      const { data } = await put(\n        PRIVATE_URLS.course.update + \"/\" + course._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n\n      navigate(\"/sch/lms/courses\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: course ? course.class?.map((s) => s._id) : [],\n      subject: \"\",\n      title: course ? course.title : \"\",\n      description: course ? course.description : \"\",\n      isTrending: course?.isTrending || false,\n      overview: course?.courseDetails.overview || [],\n      benefits: course?.courseDetails.benefits || [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleAddClick = () => {\n    setInputList([...inputlist, { point: \"\" }]);\n  };\n\n  const handleAddClickBenifites = () => {\n    setInputListBenifits([...inputlistBenifits, { point: \"\" }]);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { value } = e.target;\n    const overviewList = [...inputlist];\n\n    let newList = overviewList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputList(newList);\n  };\n\n  const handleInputChangeBenifits = (e, index) => {\n    const { value } = e.target;\n    const benifitsList = [...inputlistBenifits];\n    let newList = benifitsList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputListBenifits(newList);\n  };\n\n  const handleRemoveClick = (i) => {\n    const list = [...inputlist];\n    list.splice(i, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClickBenifits = (i) => {\n    const list = [...inputlistBenifits];\n    list.splice(i, 1);\n    setInputListBenifits(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Course\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                multiple={true}\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n            {entryFormik.values.class.length <= 1 && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select Subject\"\n                  options={subject}\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Enter Course Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"thumbnailImage\"\n                label=\"Select Thumbnail Image\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <img\n                src={course?.thumbnailImage}\n                style={{ maxHeight: \"100px\" }}\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Enter  Description\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlist.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter Overview\"\n                    label=\"Enter Overview\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                      mb: \"5px\",\n                      mt: 1,\n                    }}\n                    value={data.point || \"\"}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    name=\"overview\"\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      onClick={() => handleRemoveClick(i)}\n                      color=\"error\"\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClick}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlistBenifits.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter What You Will Learn\"\n                    label=\"Enter What You Will Learn\"\n                    variant=\"outlined\"\n                    sx={{ mb: \"5px\", mt: 1 }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    name=\"benefits\"\n                    value={data.point || \"\"}\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChangeBenifits(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      color=\"error\"\n                      onClick={() => handleRemoveClickBenifits(i)}\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClickBenifites}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n\n        <Grid item xs={12} sm={12} md={12} sx={{ marginBottom: \"60px\" }}>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked={entryFormik.values.isTrending} />}\n              name=\"isTrending\"\n              onChange={(e) => {\n                entryFormik.setFieldValue(\"isTrending\", e.target.checked);\n              }}\n              label=\"This course is trending?\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <StickyBar\n          content={\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"5px\",\n              }}>\n              <Button\n                variant=\"contained\"\n                onClick={() => navigate(-1)}\n                color=\"error\"\n                size=\"small\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={entryFormik.handleSubmit}>\n                Submit\n              </Button>\n            </Grid>\n          }\n        />\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function LoadingScreen({ message = \"Loading... Please wait!\" }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        height: \"90vh\",\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}>\n      <Typography sx={{ fontWeight: \"bold\", fontSize: \"14px\" }}>\n        {message}\n      </Typography>\n    </Box>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  styled,\n} from \"@mui/material\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nimport { useContext } from \"react\";\n\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport UserContext from \"../../context/UserContext\";\nimport LoadingScreen from \"../../components/LoaddingScreen\";\n\nconst Wrapper = styled(Container)(({ theme }) => ({\n  display: \"flex\",\n  height: \"90vh\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  width: \"100%\",\n  marginTop: \"10px\",\n}));\n\nconst VideoContainer = styled(Box)(() => ({\n  display: \"flex\",\n  flex: 1,\n  width: \"100%\",\n  height: \"100%\",\n}));\n\nconst TYPE = [\"OneONoneCall\", \"GroupCall\", \"LiveStreaming\"];\n\nconst CREDENTIAL = {\n  OneONoneCall: {\n    appId: 914808192,\n    serverSecret: \"6f4bc5c4a35f3979a591bf2c534f335a\",\n  },\n  GroupCall: {\n    appId: 914808192,\n    serverSecret: \"6f4bc5c4a35f3979a591bf2c534f335a\",\n  },\n  LiveStreaming: {\n    appId: 206971782,\n    serverSecret: \"212d4d9408c30ced21273b86754371f2\",\n  },\n};\n\nexport default function Room() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { roomID } = useParams();\n\n  console.log(roomID, \"rooooooommmmmmmmmmmid\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isReady, setIsReady] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [zpost, setZpost] = React.useState(null);\n  const { state } = location;\n\n  console.log(state, \"ssssssssssssssssssssssssssssssssssssssssssssssssss\");\n\n  const getRoomDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.meeting.join, {\n        params: {\n          schoolId: selectedSetting._id,\n          roomID: roomID,\n        },\n      });\n    } catch (error) {\n      setError(\"Invalid meeting link!\");\n      setOpen(true);\n    }\n    setIsReady(true);\n  };\n\n  React.useEffect(() => {\n    getRoomDetails();\n  }, [selectedSetting, roomID]);\n\n  let myMeeting = async (element) => {\n    // generate Kit Token\n\n    let meetingType = state ? state.meetingType : TYPE[0];\n\n    const appID = CREDENTIAL[meetingType]?.appId;\n    const serverSecret = CREDENTIAL[meetingType]?.serverSecret;\n\n    console.log(\n      appID,\n      serverSecret,\n      \"==============================================\"\n    );\n    let currentUserStringified =\n      window.localStorage.getItem(\"current_ecs_user\");\n\n    console.log(currentUserStringified);\n\n    let currentUser = JSON.parse(currentUserStringified);\n    console.log(currentUser);\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n      appID,\n      serverSecret,\n      roomID,\n      currentUser._id,\n      currentUser.basicInfo.name\n    );\n    try {\n      // Create instance object from Kit Token.\n      const zp = ZegoUIKitPrebuilt.create(kitToken);\n\n      // start the call\n\n      zp.joinRoom({\n        container: element,\n        autoHideFooter: true,\n        layout: \"Auto\",\n        enableUserSearch: true,\n        showMyMicrophoneToggleButton: true,\n        showRoomTimer: true,\n        showRemoveUserButton: true,\n        scenario: {\n          config: {\n            role: ZegoUIKitPrebuilt.Host,\n          },\n          mode: ZegoUIKitPrebuilt[meetingType], // To implement 1-on-1 calls, modify the parameter here to [ZegoUIKitPrebuilt.OneONoneCall].\n        },\n      });\n\n      setZpost(zp);\n    } catch (error) {\n      ZegoUIKitPrebuilt.ConsoleError();\n      console.log(error, \"Error while joining room\");\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (zpost) {\n        try {\n          zpost.destroy();\n        } catch (error) {\n          console.log(error, \"error while stopping zegocloud\");\n        }\n      }\n    };\n  }, [zpost]);\n\n  const handleBackPress = () => {\n    navigate(\"/live\", { replace: true });\n  };\n\n  if (!isReady)\n    return <LoadingScreen message=\"Getting room details..., Please wait!\" />;\n\n  return (\n    <>\n      <Wrapper maxWidth={\"xl\"}>\n        <VideoContainer component={\"div\"} ref={myMeeting}></VideoContainer>\n      </Wrapper>\n\n      <Dialog\n        open={open}\n        onClose={handleBackPress}\n        aria-labelledby=\"alert-live-session-error\"\n        aria-describedby=\"alert-live-session-error-dialog-description\">\n        <DialogTitle id=\"alert-live-session-error\">{error}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-live-session-error-dialog-description\">\n            The link you are trying to access either expired || does not exist\n            || you are not permitted to see the link\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"small\" onClick={handleBackPress} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  Box,\n  Card,\n  FormControl,\n  Grid,\n  InputLabel,\n  LinearProgress,\n  linearProgressClasses,\n  MenuItem,\n  Select,\n  styled,\n  TextareaAutosize,\n  TextField,\n  Switch,\n  Button,\n  Checkbox,\n  ListItemText,\n  Autocomplete,\n  InputBase,\n  Popper,\n  InputAdornment,\n  Typography,\n} from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useLocation } from \"react-router-dom\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 25,\n  borderRadius: 15,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 800 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 15,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#f42323\" : \"#308fe8\",\n  },\n}));\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n  borderBottom: `1px solid ${\n    theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n  }`,\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\n\nconst Compose = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { state } = useLocation();\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [receiverType, setReceiverType] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n\n  const [smsFrom, setSmsFrom] = useState({\n    sms: state\n      ? state.message\n      : `Dear {{VAR}}, We would like to inform you {{VAR1}},{{VAR2}},{{VAR3}},{{VAR4}},{{VAR5}} Regards EXCELLENT SCHOOL VIJAYAPURA.`,\n  });\n\n  const [contacts, setContacts] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [notifyChecked, setNotifyChecked] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n\n  const [balance, setBalance] = useState(\"\");\n\n  const handleEmployeeAuto = (event, val) => {\n    setEmployeeAutoSelect(val);\n    if (val.filter((v) => v._id == \"all\").length) {\n      setSelectEmployee(\"All\");\n      setSelectedEmployeeCount(employees.length);\n      return;\n    }\n    const selectedEmployees = val.filter((emp) => emp._id !== \"all\");\n\n    setSelectedEmployeeCount(selectedEmployees.length);\n\n    if (selectedEmployees.length === employees.length) {\n      setSelectEmployee(\"All\");\n    } else {\n      setSelectEmployee(\n        selectedEmployees.map((emp) => emp.basicInfo.name).join(\", \")\n      );\n    }\n\n    setEmployeeAutoSelect(val);\n  };\n\n  useEffect(() => {\n    setSectionAutoSelect([]);\n    setSelectSection(\"\");\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [classAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [sectionAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSelectRoleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setSmsFrom({ ...smsFrom, [name]: value });\n  };\n\n  const handleRoleChange = async (e) => {\n    try {\n      const {\n        target: { value },\n      } = e;\n      setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: value,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      const allStudentsContacts = students.map((student) => student._id);\n      setContacts(allStudentsContacts);\n      setSelectedStudentCount(students.length);\n      setSelectContacts(\"All\");\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n    }\n\n    setContactsAutoSelect(val);\n  };\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n      } else {\n        setSections([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNotifiy = (e) => {\n    setNotifyChecked(e.target.checked);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Compose\" />\n\n      <form>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box\n            sx={{\n              paddingLeft: \"1rem\",\n              display: \"flex\",\n              gap: \"5px\",\n            }}>\n            <Box>\n              Total SMS :{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                79875\n              </Typography>\n            </Box>\n            <Box>\n              Consumed SMS :{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {79875 - balance}\n              </Typography>\n            </Box>\n            <Box>\n              Balance SMS :{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {balance}\n              </Typography>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              padding: \"1rem\",\n            }}>\n            <BorderLinearProgress\n              variant=\"determinate\"\n              value={((79875 - balance) * 100) / 79875}\n            />\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box sx={{ flexFlow: 1 }}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <FormControl size=\"small\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-filrlccled-label\">\n                    Receiver Type\n                  </InputLabel>\n                  <Select\n                    label=\"Receiver Type\"\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"receiverType\"\n                    value={receiverType}\n                    onChange={(e) => setReceiverType(e.target.value)}>\n                    <MenuItem\n                      value={\"role\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Role\n                    </MenuItem>\n                    <MenuItem\n                      value={\"user\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      User\n                    </MenuItem>\n                    <MenuItem\n                      value={\"students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"All Students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      All Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"file\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      File\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              {receiverType === \"file\" && (\n                <>\n                  <Grid\n                    item\n                    xs={12}\n                    md={8}\n                    sx={{\n                      alignSelf: \"center\",\n                      display: \"flex\",\n                      justifyContent: \"flex-start\",\n                    }}>\n                    <Button size=\"small\" variant=\"contained\">\n                      Sample File\n                    </Button>\n\n                    <FileSelect\n                      name=\"file\"\n                      onChange={(e) => handleChangeFiles(e)}\n                      customOnChange={true}\n                      label=\"Select File\"\n                      selectedFiles={selectFile}\n                    />\n                  </Grid>\n                </>\n              )}\n              {receiverType === \"students\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Popper\n                      id={\"classPopper\"}\n                      open={!!classPopper}\n                      anchorEl={classPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          onBlur={() => setClassPopper(null)}\n                          open={true}\n                          value={classAutoSelect}\n                          multiple\n                          onChange={handleClassSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={classes}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => `${option.name}`}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option.name}`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Class\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Popper\n                      id={\"sectionPopper\"}\n                      open={!!sectionPopper}\n                      anchorEl={sectionPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setSectionPopper(null)}\n                          open={true}\n                          value={sectionAutoSelect}\n                          onChange={handleSectionSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={sections.sort((a, b) =>\n                            a.class.name.localeCompare(b.class.name)\n                          )}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option.name}(class:${option.class.name})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {`${option.name}(class:${option.class.name})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Section\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    <Popper\n                      id={\"contactsPopper\"}\n                      open={!!contactsPopper}\n                      anchorEl={contactsPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: \"All\",\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? \"All\"\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n\n                              {`${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Students\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n\n              {receiverType === \"role\" && (\n                <Grid item xs={12} md={3} lg={3}>\n                  <FormControl size=\"small\" fullWidth>\n                    <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n                    <Select\n                      label=\"Role\"\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={selectRoles}\n                      onChange={handleSelectRoleChange}\n                      multiple\n                      renderValue={(selected) => selected.join(\", \")}\n                      MenuProps={MenuProps}>\n                      {roles &&\n                        roles.map((row, index) => (\n                          <MenuItem\n                            key={row._id}\n                            value={row.name}\n                            sx={{ fontSize: 12 }}>\n                            <Checkbox\n                              checked={selectRoles.indexOf(row.name) > -1}\n                            />\n                            <ListItemText primary={row.name} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {receiverType === \"user\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <FormControl size=\"small\" fullWidth>\n                      <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n\n                      <Select\n                        labelId=\"demo-simple-select-filled-label\"\n                        id=\"demo-simple-select-filled\"\n                        name=\"role\"\n                        sx={{ marginBottom: \"15px\" }}\n                        multiple\n                        label=\"Role\"\n                        size=\"small\"\n                        onChange={handleRoleChange}\n                        value={selectRoles}>\n                        {roles &&\n                          roles.map((row, index) => (\n                            <MenuItem\n                              key={row._id}\n                              value={row._id}\n                              sx={{ fontSize: 12, fontWeight: 500 }}>\n                              {row.name}\n                            </MenuItem>\n                          ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Popper\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Employees\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={6} lg={4}>\n              <FormControl required={true} size=\"small\" fullWidth>\n                <InputLabel sx={{ fontSize: 12 }}>SMS Type</InputLabel>\n                <Select\n                  label=\"SMS Type\"\n                  id=\"demo-simple-select-filled\"\n                  name=\"smsType\"\n                  value={smsFrom.smsType || \"\"}\n                  onChange={handleFormChange}>\n                  <MenuItem\n                    value={\"general\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    General\n                  </MenuItem>\n                  <MenuItem\n                    value={\"attendance\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Attendence\n                  </MenuItem>\n                  <MenuItem\n                    value={\"fee\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Fee\n                  </MenuItem>\n                  <MenuItem\n                    value={\"credential\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Credential\n                  </MenuItem>\n                  <MenuItem\n                    value={\"exam\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Exam\n                  </MenuItem>\n                  <MenuItem\n                    value={\"leave\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Leave\n                  </MenuItem>\n                  <MenuItem\n                    value={\"library\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Library\n                  </MenuItem>\n                  <MenuItem\n                    value={\"transport\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Transport\n                  </MenuItem>\n                  <MenuItem\n                    value={\"hostel\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Hostel\n                  </MenuItem>\n                  <MenuItem\n                    value={\"preaddmission\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Preaddmission\n                  </MenuItem>\n                  <MenuItem\n                    value={\"parentMeeting\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Parent Meeting\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolTiming\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Timing\n                  </MenuItem>\n                  <MenuItem\n                    value={\"notice\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Notice\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolOpen\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Open\n                  </MenuItem>\n                  <MenuItem\n                    value={\"education\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Education\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              <TextField\n                required={true}\n                size=\"small\"\n                label=\"Subject\"\n                fullWidth\n                name=\"subject\"\n                value={smsFrom.subject || \"\"}\n                onChange={handleFormChange}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={12} lg={12}>\n              <Box style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                <Typography component={\"span\"}>Dynamic Tag: </Typography>\n\n                <Box>\n                  [name],[school_name] - wil get autoreplaced,\n                  <Typography component={\"span\"} color=\"error\">\n                    replace - {\"{{var}}\"} with your content, variable fields may\n                    vary in length. Space consumed for 1 variable is 30 char and\n                    avoid double space.\n                  </Typography>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TextareaAutosize\n                maxRows={4}\n                aria-label=\"maximum height\"\n                placeholder=\"Text Message\"\n                style={{\n                  width: \"100%\",\n                  height: \"120px\",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}\n                name=\"sms\"\n                fullWidth\n                value={smsFrom.sms}\n                onChange={handleFormChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <span>Click here to Notify Via SMS</span>\n              <Switch onChange={handleNotifiy} checked={notifyChecked} />\n            </Grid>\n          </Grid>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={12}\n                lg={12}\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <LoadingButton\n                  loading={sendingMessage}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Submit\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </Box>\n        </Card>\n      </form>\n    </>\n  );\n};\n\nexport default Compose;\n","/** @format */\n\nexport const communicatonReportTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n\n  {\n    name: \"Message\",\n    key: \"message\",\n  },\n\n  {\n    name: \"Total SMS\",\n    key: \"totalSms\",\n  },\n  {\n    name: \"Time/Date\",\n    key: \"createdAt\",\n  },\n];\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Button, Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { communicatonReportTableKeys } from \"../../data/tableKeys/communicationReportData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nconst Type_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Automatic\",\n    value: \"automatic\",\n  },\n];\n\nexport default function Report() {\n  const [data, setdData] = useState([]);\n  const getList = async (values) => {\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      type: \"\",\n      fromDate: null,\n      toDate: null,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n  return (\n    <>\n      <PageHeader title=\"Report\" />\n      <Grid container spacing={2}>\n        <Grid xs={12} md={3} item>\n          <FormSelect\n            required={true}\n            name=\"type\"\n            formik={entryFormik}\n            label=\"Type\"\n            options={Type_Options}\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker\n            formik={entryFormik}\n            label=\"From Date\"\n            name=\"fromDate\"\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker formik={entryFormik} label=\"To Date\" name=\"toDate\" />\n        </Grid>\n        <Grid item xs={12} md={3} lg={3} display=\"flex\" alignSelf=\"center\">\n          <Button size=\"small\" type=\"submit\" variant=\"contained\">\n            Find\n          </Button>\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[\"delete\"]}\n        bodyData={data}\n        bodyDataModal=\"report\"\n        tableKeys={communicatonReportTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Grid,\n  Card,\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  Autocomplete,\n  Popper,\n  Checkbox,\n  styled,\n  InputBase,\n  InputAdornment,\n  Button,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport PageHeader from \"../../components/PageHeader\";\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n\n  borderBottom: `1px solid ${\n    theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n  }`,\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst Credentails = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [classes, setClasses] = useState([]);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n      } else {\n        setSections([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      const allStudentsContacts = students.map((student) => student._id);\n      setContacts(allStudentsContacts);\n      setSelectedStudentCount(students.length);\n      setSelectContacts(\"All\");\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n    }\n\n    setContactsAutoSelect(val);\n  };\n\n  const handleRoleChange = async (e) => {\n    try {\n      const {\n        target: { value },\n      } = e;\n      setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: value,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleEmployeeAuto = (event, val) => {\n    setEmployeeAutoSelect(val);\n    if (val.filter((v) => v._id == \"all\").length) {\n      setSelectEmployee(\"All\");\n      setSelectedEmployeeCount(employees.length);\n      return;\n    }\n    const selectedEmployees = val.filter((emp) => emp._id !== \"all\");\n\n    setSelectedEmployeeCount(selectedEmployees.length);\n\n    if (selectedEmployees.length === employees.length) {\n      setSelectEmployee(\"All\");\n    } else {\n      setSelectEmployee(\n        selectedEmployees.map((emp) => emp.basicInfo.name).join(\", \")\n      );\n    }\n\n    setEmployeeAutoSelect(val);\n  };\n\n  const isStudentRoleSelected = selectRoles.some((roleId) => {\n    const role = roles.find((r) => r._id === roleId);\n    return role && role.name.includes(\"STUDENT\");\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Card\n          sx={{\n            padding: \"15px\",\n            width: { xs: \"100%\", sm: \"100%\", md: \"70%\", lg: \"50%\" },\n          }}>\n          <form>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12} lg={12}>\n                <FormControl variant=\"outlined\" fullWidth required>\n                  <InputLabel\n                    id=\"demo-simple-select-filled-label\"\n                    sx={{ fontSize: 12 }}>\n                    User Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"role\"\n                    sx={{ marginBottom: \"15px\" }}\n                    multiple\n                    label=\"User Type\"\n                    size=\"small\"\n                    onChange={handleRoleChange}\n                    value={selectRoles}>\n                    {roles &&\n                      roles.map((row, index) => (\n                        <MenuItem\n                          key={row._id}\n                          value={row._id}\n                          sx={{ fontSize: 12, fontWeight: 500 }}>\n                          {row.name}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                {selectRoles.some((roleId) => {\n                  const role = roles.find((r) => r._id === roleId);\n                  return role && role.name.includes(\"STUDENT\");\n                }) && selectRoles.length == 1 ? (\n                  <>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectClass}\n                        fullWidth\n                        sx={{ marginBottom: \"15px\" }}\n                        aria-describedby={\"classPopper\"}\n                        onFocus={(e) => {\n                          setClassPopper(classPopper ? null : e.currentTarget);\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Class\"\n                      />\n                      <Popper\n                        style={{ width: \"70%\" }}\n                        id={\"classPopper\"}\n                        open={!!classPopper}\n                        anchorEl={classPopper}>\n                        <FormControl\n                          variant=\"outlined\"\n                          size=\"small\"\n                          fullWidth\n                          sx={{ m: 1, width: \"100%\" }}>\n                          <Autocomplete\n                            onBlur={() => setClassPopper(null)}\n                            open={true}\n                            value={classAutoSelect}\n                            multiple\n                            onChange={handleClassSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            options={classes}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) => `${option.name}`}\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  checked={selected}\n                                />\n                                {`${option.name}`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Class\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectSection}\n                        aria-describedby={\"sectionPopper\"}\n                        sx={{ marginBottom: \"15px\" }}\n                        fullWidth\n                        onFocus={(e) => {\n                          setSectionPopper(\n                            sectionPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Section\"\n                      />\n                      <Popper\n                        style={{ width: \"70%\" }}\n                        id={\"sectionPopper\"}\n                        open={!!sectionPopper}\n                        anchorEl={sectionPopper}>\n                        <FormControl\n                          variant=\"outlined\"\n                          size=\"small\"\n                          fullWidth\n                          sx={{ m: 1, width: \"100%\" }}>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setSectionPopper(null)}\n                            open={true}\n                            value={sectionAutoSelect}\n                            onChange={handleSectionSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={sections.sort((a, b) =>\n                              a.class.name.localeCompare(b.class.name)\n                            )}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              `${option.name}(class:${option.class.name})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n                                {`${option.name}(class:${option.class.name})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Section\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectContacts}\n                        aria-describedby={\"contactsPopper\"}\n                        fullWidth\n                        onFocus={(e) => {\n                          setContactsPopper(\n                            contactsPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Students\"\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              All Total-{selectedStudentCount}\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n\n                      <Popper\n                        style={{ width: \"70%\" }}\n                        id={\"contactsPopper\"}\n                        open={!!contactsPopper}\n                        anchorEl={contactsPopper}>\n                        <FormControl\n                          variant=\"outlined\"\n                          size=\"small\"\n                          sx={{ m: 1, width: \"100%\" }}>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setContactsPopper(null)}\n                            open={true}\n                            value={contactsAutoSelect}\n                            onChange={handleContactsList}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={[\n                              {\n                                _id: \"all\",\n                                basicInfo: {\n                                  name: \"All\",\n                                },\n                                contactNumber: \"\",\n                              },\n                              ...students,\n                            ]}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              option._id === \"all\"\n                                ? \"All\"\n                                : `${option.basicInfo.name} (${option.contactNumber})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n\n                                {`${option.basicInfo.name} (${option.contactNumber})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Students\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n              {!isStudentRoleSelected ? (\n                <Grid item xs={12} md={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    value={selectEmployee}\n                    aria-describedby={\"employeePopper\"}\n                    onFocus={(e) => {\n                      setEmployeeListPopper(\n                        employeeListPopper ? null : e.currentTarget\n                      );\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Employees\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          All Total- {selectedEmployeeCount}\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <Popper\n                    style={{ width: \"70%\" }}\n                    id={\"employeePopper\"}\n                    open={!!employeeListPopper}\n                    anchorEl={employeeListPopper}>\n                    <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                      <Autocomplete\n                        onBlur={() => setEmployeeListPopper(null)}\n                        open={true}\n                        value={employeeAutoSelect}\n                        multiple\n                        onChange={handleEmployeeAuto}\n                        isOptionEqualToValue={(option, value) =>\n                          option._id === value._id\n                        }\n                        options={[\n                          {\n                            _id: \"all\",\n                            basicInfo: { name: \"All\" },\n                          },\n                          ...employees,\n                        ]}\n                        disableCloseOnSelect\n                        getOptionLabel={(option) =>\n                          `${option?.basicInfo.name} (${option?.contactNumber})`\n                        }\n                        renderOption={(props, option, { selected }) => (\n                          <li {...props}>\n                            <Checkbox\n                              icon={icon}\n                              checkedIcon={checkedIcon}\n                              checked={selected}\n                            />\n                            {`${option?.basicInfo.name} (${option?.contactNumber})`}\n                          </li>\n                        )}\n                        renderInput={(params) => (\n                          <StyledInput\n                            ref={params.InputProps.ref}\n                            inputProps={params.inputProps}\n                            placeholder=\"Employees\"\n                            autoFocus\n                          />\n                        )}\n                      />\n                    </FormControl>\n                  </Popper>\n                </Grid>\n              ) : null}\n\n              {selectRoles.length >= 2 &&\n              selectRoles.some((roleId) => {\n                const role = roles.find((r) => r._id === roleId);\n                return role && role.name.includes(\"STUDENT\");\n              }) ? (\n                <>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"classPopper\"}\n                      open={!!classPopper}\n                      anchorEl={classPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          onBlur={() => setClassPopper(null)}\n                          open={true}\n                          value={classAutoSelect}\n                          multiple\n                          onChange={handleClassSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={classes}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => `${option.name}`}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option.name}`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Class\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"sectionPopper\"}\n                      open={!!sectionPopper}\n                      anchorEl={sectionPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setSectionPopper(null)}\n                          open={true}\n                          value={sectionAutoSelect}\n                          onChange={handleSectionSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={sections.sort((a, b) =>\n                            a.class.name.localeCompare(b.class.name)\n                          )}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option.name}(class:${option.class.name})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {`${option.name}(class:${option.class.name})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Section\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"contactsPopper\"}\n                      open={!!contactsPopper}\n                      anchorEl={contactsPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: \"All\",\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? \"All\"\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n\n                              {`${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Students\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Popper\n                      style={{ width: \"70%\" }}\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Employees\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              ) : (\n                \"\"\n              )}\n\n              <Grid item xs={12} md={12} lg={6} container>\n                <Button variant=\"contained\" size=\"small\" type=\"submit\">\n                  Send Credentials\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default Credentails;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nexport default function BulkPhoto() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudents(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getStudents,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section\n    ) {\n      getStudents(formik.values);\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  const handleNavigateStudent = (student) => {\n    navigate(`/sch/student/edit-student/${student._id}`);\n  };\n\n  const handleChangeFiles = async (e, studentId) => {\n    const { files } = e.target;\n    if (files.length > 0) {\n      const formData = new FormData();\n      formData.append(\"photo\", files[0]);\n\n      try {\n        await put(\n          PRIVATE_URLS.student.updatePhoto + \"/\" + studentId,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        getStudents(formik.values);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"div\"\n            onSubmit={formik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Photo</TableCell>\n              <TableCell align=\"center\">File</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {students.map((student, index) => (\n              <TableRow key={student._id}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">\n                  {student.academicInfo.rollNumber}\n                </TableCell>\n                <TableCell align=\"center\">{student.basicInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  <Avatar src={student.photo} sx={{ margin: \"auto\" }} />\n                </TableCell>\n                <TableCell align=\"center\" sx={{ maxWidth: \"100px\" }}>\n                  {/* <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    style={{ display: \"block\", margin: \"auto\" }}\n                  /> */}\n\n                  <FileSelect\n                    multi={false}\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    customOnChange={true}\n                    label=\"Select Image\"\n                  />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton onClick={() => handleNavigateStudent(student)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport {\n  Avatar,\n  Collapse,\n  Menu,\n  MenuItem,\n  Stack,\n  Switch,\n  Tooltip,\n} from \"@mui/material\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { Route, Routes } from \"react-router-dom\";\n// icons\nimport CircleNotificationsIcon from \"@mui/icons-material/CircleNotifications\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport LockResetIcon from \"@mui/icons-material/LockReset\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nimport menu from \"../data/menu\";\nimport Dashboard from \"../pages/Dashboard\";\n\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport LOGO from \"../assets/images/deleteicon.png\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport ThemeModeContext from \"../context/ThemeModeContext\";\nimport AcademicYear from \"../pages/Administrator/AcademicYear\";\nimport ManageDesignation from \"../pages/HumanResource/ManageDesignation\";\nimport ManageDepartment from \"../pages/HumanResource/ManageDepartment\";\nimport Employee from \"../pages/HumanResource/Employee\";\nimport OfferLetter from \"../pages/HumanResource/OfferLetter\";\nimport RelievingLetter from \"../pages/HumanResource/RelievingLetter\";\nimport OffBoarding from \"../pages/HumanResource/OffBoarding\";\nimport ExperienceLetter from \"../pages/HumanResource/ExperienceLetter\";\nimport TeacherActivity from \"../pages/HumanResource/TeacherActivity\";\nimport RolePermission from \"../pages/Administrator/RolePermission\";\nimport UserRole from \"../pages/Administrator/UserRole\";\nimport ResetPassword from \"../pages/Administrator/ResetPassword\";\nimport Enquiries from \"../pages/Pre-Admission/Enquiries\";\nimport Exams from \"../pages/Pre-Admission/Exams\";\nimport ExamSchedules from \"../pages/Pre-Admission/ExamSchedules\";\nimport Result from \"../pages/Pre-Admission/Result\";\nimport Class from \"../pages/Academic/Class\";\nimport Section from \"../pages/Academic/Section\";\nimport Subject from \"../pages/Academic/Subject\";\nimport StudentAttendance from \"../pages/Attendance/StudentAttendance\";\nimport EmployeeAttendance from \"../pages/Attendance/EmployeeAttendance\";\nimport ClassRoutine from \"../pages/ClassRoutine\";\nimport Overview from \"../pages/Student/Overview\";\nimport AdmitStudent from \"../pages/Student/AdmitStudent\";\nimport Reshuffle from \"../pages/Student/Reshuffle\";\nimport Promotion from \"../pages/Student/Promotion\";\nimport BulkAdmission from \"../pages/Student/BulkAdmission\";\nimport Credential from \"../pages/Student/Credential\";\nimport QuickAdmit from \"../pages/Student/QuickAdmit\";\nimport StudentActivity from \"../pages/Student/StudentActivity\";\nimport Assignment from \"../pages/Assignment\";\nimport Notice from \"../pages/Announcement/Notice\";\nimport News from \"../pages/Announcement/News\";\nimport Holiday from \"../pages/Announcement/Holiday\";\nimport AwardsAndAchievements from \"../pages/Announcement/AwardsAndAchievements\";\nimport SplashNews from \"../pages/Announcement/SplashNews\";\nimport Gallery from \"../pages/Gallery\";\nimport Notifications from \"../pages/Notifications\";\nimport Event from \"../pages/Event\";\nimport ExamGrade from \"../pages/Exam/ExamGrade\";\nimport ExamTerm from \"../pages/Exam/ExamTerm\";\nimport ExamSchedule from \"../pages/Exam/ExamSchedule\";\nimport ExamHallTicket from \"../pages/Exam/ExamHallTicket\";\nimport DivisionWiseReport from \"../pages/ExamMark/DivisionWiseReport\";\nimport SubjectWiseReport from \"../pages/ExamMark/SubjectWiseReport\";\nimport ConsolidatedMarkSheet from \"../pages/ExamMark/ConsolidatedMarkSheet\";\nimport Markscard from \"../pages/ExamMark/Markscard\";\nimport ExamResult from \"../pages/ExamMark/ExamResult\";\nimport ManageMark from \"../pages/ExamMark/ManageMark\";\nimport ExamAttendance from \"../pages/ExamMark/ExamAttendance\";\nimport Courses from \"../pages/LMS/Courses\";\nimport CourseContent from \"../pages/LMS/CourseContent\";\nimport Live from \"../pages/LMS/Live\";\nimport Storage from \"../pages/LMS/Storage\";\nimport Books from \"../pages/Library/Books\";\nimport Periodical from \"../pages/Library/Periodical\";\nimport StudentLibraryMember from \"../pages/Library/StudentLibraryMember\";\nimport StudentIssueReturn from \"../pages/Library/StudentIssueReturn\";\nimport EmployeeLibraryMember from \"../pages/Library/EmployeeLibraryMember\";\nimport EmployeeIssueReturn from \"../pages/Library/EmployeeIssueReturn\";\nimport LeaveType from \"../pages/LeaveManagement/LeaveType\";\nimport StudentsLeave from \"../pages/LeaveManagement/StudentsLeave\";\nimport EmployeeLeave from \"../pages/LeaveManagement/EmployeeLeave\";\nimport LeaveReport from \"../pages/LeaveManagement/LeaveReport\";\nimport Item from \"../pages/Inventory/Item\";\nimport Vendor from \"../pages/Inventory/Vendor\";\nimport InOutTransaction from \"../pages/Inventory/InOutTransaction\";\nimport StockList from \"../pages/Inventory/StockList\";\nimport Issue from \"../pages/Inventory/Issue\";\nimport Sell from \"../pages/Inventory/Sell\";\nimport StudyCertificate from \"../pages/Certificate/StudyCertificate\";\nimport TransferCertificate from \"../pages/Certificate/TransferCertificate\";\nimport ReceiptBook from \"../pages/Fees/ReceiptBook\";\nimport FeeMapCategory from \"../pages/Fees/FeeMapCategory\";\nimport CollectFees from \"../pages/Fees/CollectFees\";\nimport BalanceFeeReport from \"../pages/Fees/BalanceFeeReport\";\nimport FeeOverview from \"../pages/Fees/FeeOverview\";\nimport Reconciliation from \"../pages/Fees/Reconciliation\";\nimport ManageHostel from \"../pages/Hostel/ManageHostel\";\nimport ManageRoomType from \"../pages/Hostel/ManageRoomType\";\nimport ManageRoomAndBed from \"../pages/Hostel/ManageRoomAndBed\";\nimport HostelMember from \"../pages/Hostel/HostelMember\";\nimport Vehicle from \"../pages/Transport/Vehicle\";\nimport ManageRouteAndTrips from \"../pages/Transport/ManageRouteAndTrips\";\nimport TransportMember from \"../pages/Transport/TransportMember\";\nimport VehicleRoutes from \"../pages/Transport/Routes\";\nimport VehicleLog from \"../pages/Transport/VehicleLog\";\nimport VehicleMaintenance from \"../pages/Transport/VehicleMaintenance\";\nimport SalaryGrade from \"../pages/PayRoll/SalaryGrade\";\nimport MakePayment from \"../pages/PayRoll/MakePayment\";\nimport LibraryReport from \"../pages/Report/LibraryReport\";\nimport StudentYearlyAttendance from \"../pages/Report/StudentYearlyAttendance\";\nimport EmployeeYearlyAttendance from \"../pages/Report/EmployeeYearlyAttendance\";\nimport StudentActivityReport from \"../pages/Report/StudentActivityReport\";\nimport StudentAttendanceReport from \"../pages/Report/StudentAttendance\";\nimport EmployeeAttendanceReport from \"../pages/Report/EmployeeAttendance\";\nimport VisitorInfo from \"../pages/VisitorInfo/VisitorInfo\";\nimport StudentCheckout from \"../pages/VisitorInfo/StudentCheckout\";\nimport HelpDesk from \"../pages/HelpDesk\";\nimport GuardianFeedback from \"../pages/GuardianFeedback\";\nimport StudentBulkPhoto from \"../pages/Student/StudentBulkPhoto\";\nimport StudentReport from \"../pages/Report/StudentReport\";\nimport AddForm from \"../forms/AddForm\";\nimport AddEmployee from \"../pages/HumanResource/AddEmployee\";\nimport ManageInstitute from \"../pages/ManageInstitute/ManageInstitute\";\nimport AddInstitute from \"../pages/ManageInstitute/AddInstitute\";\nimport themeData from \"../data/themeData\";\nimport Profile from \"../pages/AccountSettings/Profile\";\nimport UpdateEmployee from \"../pages/HumanResource/UpdateEmployee\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport SettingContext from \"../context/SettingsContext\";\nimport AddStudent from \"../pages/Student/AddStudent\";\nimport AddCourse from \"../pages/LMS/AddCourse\";\nimport UpdateCourse from \"../pages/LMS/UpdateCourse\";\nimport Room from \"../pages/LMS/Room\";\nimport Compose from \"../pages/Communication/Compose\";\nimport Report from \"../pages/Communication/Report\";\nimport Credentials from \"../pages/Communication/Credentials\";\nimport BulkPhoto from \"../pages/Student/BulkPhoto\";\n\n// exlnt_70471681\n// 9538063455\n\nconst drawerWidth = 250;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst DrawerFooter = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-start\",\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nexport default function NavDrawer() {\n  const theme = useTheme();\n  const { selectedSetting } = React.useContext(SettingContext);\n  const [open, setOpen] = React.useState(true);\n  // const { setUser, user } = React.useContext(UserContext);\n  const [sideMenuData, setSideMenuData] = React.useState([]);\n\n  const navigate = useNavigate();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const openProfile = Boolean(anchorEl);\n  const [activeYear, setActiveYear] = React.useState([]);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { isDarkMode, setIsDarkMode } = React.useContext(ThemeModeContext);\n  const [selecteSubMenu, setSelectedSubMenu] = React.useState(\"\");\n  const [selectedMenu, setSelectedMenu] = React.useState(null);\n  const { SIDE_MENU_DATA } = menu;\n\n  React.useEffect(() => {\n    setSideMenuData(SIDE_MENU_DATA);\n    getActiveAcademicYear();\n  }, []);\n\n  //get academic year\n  const getActiveAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setActiveYear(data.result[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // on load if any selected sub-menu was there then open\n  React.useEffect(() => {\n    const openPreviousMenu = () => {\n      let path = window.location.pathname;\n      let menuIndex = null;\n\n      for (let menu of SIDE_MENU_DATA) {\n        if (menu.subMenus.length) {\n          let pathNames = menu.subMenus.map((s) => s.path);\n          if (pathNames.includes(path)) {\n            menuIndex = SIDE_MENU_DATA.indexOf(menu);\n          }\n        }\n      }\n\n      if (menuIndex) {\n        setSelectedMenu(menuIndex);\n        setOpen(true);\n      }\n    };\n\n    openPreviousMenu();\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleModeChange = () => {\n    setIsDarkMode(!isDarkMode);\n    window.localStorage.setItem(\"isDarkMode\", !isDarkMode);\n  };\n\n  const handleToggleMenuOpen = (index) => {\n    if (selectedMenu === index) {\n      return setSelectedMenu(null);\n    }\n    setSelectedMenu(index);\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(\"access_token\");\n    window.localStorage.removeItem(\"current_ecs_user\");\n    window.localStorage.removeItem(\"refresh_token\");\n    window.localStorage.removeItem(\"userType\");\n    navigate(\"/\");\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: 5,\n              ...(open && { display: \"none\" }),\n            }}>\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            color=\"white\"\n            textAlign=\"center\"\n            fontSize=\"18px\"\n            sx={{ display: { xs: \"none\", md: \"block\" } }}>\n            {selectedSetting?.name} [{activeYear ? activeYear?.from : \"-\"} -{\" \"}\n            {activeYear ? activeYear?.to : \"-\"}]\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              width: \"100%\",\n              flex: 1,\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}>\n            <Stack\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              spacing={1}\n              direction=\"row\">\n              <Tooltip title=\"Notification\">\n                <Link to=\"/sch/notifications\">\n                  <IconButton>\n                    <NotificationsIcon\n                      sx={{ width: 26, height: 26, color: \"#BDBDBD\" }}\n                    />\n                  </IconButton>\n                </Link>\n              </Tooltip>\n              <Tooltip title=\"Account Settings\">\n                <IconButton\n                  onClick={handleClick}\n                  // size=\"small\"\n                  // sx={{ ml: 2 }}\n                  aria-controls={openProfile ? \"account-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={openProfile ? \"true\" : undefined}>\n                  <Avatar sx={{ width: 26, height: 26 }} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"websites\">\n                <Link to=\"/\">\n                  <IconButton>\n                    <Avatar\n                      src=\"/world-wide-web.png\"\n                      alt=\"loading...\"\n                      sx={{ width: 26, height: 26 }}\n                    />\n                  </IconButton>\n\n                  {/* <img\n                  src=\"/world-wide-web.png\"\n                  alt=\"loading...\"\n                  width={30}\n                  height={30}\n                  color=\"#fff\"\n                /> */}\n                </Link>\n              </Tooltip>\n            </Stack>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={openProfile}\n        onClose={handleClose}\n        onClick={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: \"visible\",\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n            mt: 1.5,\n            \"& .MuiAvatar-root\": {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            \"&::before\": {\n              content: '\"\"',\n              display: \"block\",\n              position: \"absolute\",\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: \"background.paper\",\n              transform: \"translateY(-50%) rotate(45deg)\",\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/profile\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <PersonIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>Profile</ListItemText>\n          </Link>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/administrator/reset-password\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <LockResetIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>\n              Reset Password\n            </ListItemText>\n          </Link>\n        </MenuItem>\n      </Menu>\n\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"sticky\",\n            top: 0,\n            zIndex: 1,\n            backgroundColor: isDarkMode ? \"#000\" : \"#fff\",\n            overflow: \"hidden\",\n          }}>\n          <Box></Box>\n          <img\n            style={{\n              height: \"50px\",\n              width: \"80px\",\n\n              objectFit: \"contain\",\n            }}\n            src={selectedSetting?.logo}\n          />\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon color=\"primary\" />\n            ) : (\n              <ChevronLeftIcon color=\"primary\" />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {sideMenuData.map((m, index) =>\n            !m.subMenus.length ? (\n              <div key={m.path}>\n                <ListItem disablePadding>\n                  <Link\n                    to={m.path}\n                    style={{\n                      textDecoration: \"none\",\n                      display: \"flex\",\n                      flex: 1,\n                    }}>\n                    <ListItemButton\n                      onClick={() => setSelectedMenu(index)}\n                      selected={\n                        selectedMenu === index ||\n                        window.location.pathname === m.path\n                      }>\n                      <ListItemIcon>{m.icon}</ListItemIcon>\n                      <ListItemText primary={m.name} />\n                    </ListItemButton>\n                  </Link>\n                </ListItem>\n                {/* <Divider /> */}\n              </div>\n            ) : (\n              <div key={m.path + m.name}>\n                <ListItem key={m.path} sx={{ padding: 0 }}>\n                  <ListItemButton\n                    selected={\n                      selectedMenu === index ||\n                      window.location.pathname === m.path\n                    }\n                    onClick={() => handleToggleMenuOpen(index)}>\n                    <ListItemIcon>{m.icon}</ListItemIcon>\n                    <ListItemText primary={m.name} />\n\n                    {selectedMenu === index ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                </ListItem>\n                <Collapse\n                  timeout=\"auto\"\n                  unmountOnExit\n                  in={selectedMenu === index}\n                  sx={{ width: \"100%\" }}>\n                  <List>\n                    {m.subMenus.map((sub) => (\n                      <ListItem sx={{ width: \"100%\" }} key={sub.name}>\n                        <Link\n                          to={sub.path}\n                          style={{\n                            textDecoration: \"none\",\n                            display: \"flex\",\n                            flex: 1,\n                            color: \"red\",\n                          }}>\n                          <ListItemButton\n                            onClick={() => setSelectedSubMenu(sub.path)}\n                            sx={{\n                              \"& .MuiListItemText-root\": {\n                                whiteSpace: \"normal\",\n                                wordWrap: \"wrap\",\n                              },\n                              \"& .MuiListItemIcon-root\": {\n                                // This ensures the ListItemIcon doesn't use the default minimum width\n                                // Adjust this value to decrease the space\n                              },\n                            }}\n                            selected={\n                              selecteSubMenu === sub.path ||\n                              window.location.pathname === sub.path\n                            }>\n                            <ListItemIcon>{sub.icon}</ListItemIcon>\n                            <ListItemText primary={sub.name} />\n                          </ListItemButton>\n                        </Link>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n                {/* <Divider /> */}\n              </div>\n            )\n          )}\n        </List>\n        <Divider />\n        <ListItem disablePadding>\n          <ListItemButton\n            sx={{\n              paddingLeft: 0,\n              \"& .MuiListItemText-root\": {\n                whiteSpace: \"normal\",\n                wordWrap: \"wrap\",\n              },\n              \"& .MuiListItemIcon-root\": {\n                // This ensures the ListItemIcon doesn't use the default minimum width\n                // Adjust this value to decrease the space\n              },\n            }}>\n            <Switch\n              sx={{ marginRight: \"20px\" }}\n              checked={isDarkMode}\n              onChange={handleModeChange}\n            />\n            <ListItemText primary={isDarkMode ? \"Dark Mode\" : \"Light Mode\"} />\n          </ListItemButton>\n        </ListItem>\n        <Divider sx={{ marginBottom: \"20px\" }} />\n        <DrawerFooter>\n          <List sx={{ width: \"100%\" }}>\n            {/* <ListItem disablePadding>\n              <Link\n                to={\"/settings\"}\n                style={{ textDecoration: \"none\", display: \"flex\", flex: 1 }}>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <SettingsIcon fontSize=\"small\" color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Settings\"} />\n                </ListItemButton>\n              </Link>\n            </ListItem> */}\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  \"& .MuiListItemText-root\": {\n                    whiteSpace: \"normal\",\n                    wordWrap: \"wrap\",\n                  },\n                  \"& .MuiListItemIcon-root\": {\n                    // This ensures the ListItemIcon doesn't use the default minimum width\n                    // Adjust this value to decrease the space\n                  },\n                }}\n                onClick={handleLogout}>\n                <ListItemIcon>\n                  <LogoutIcon fontSize=\"small\" color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary={\"Logout\"} />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </DrawerFooter>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n\n          overflowX: \"hidden\",\n          overflowY: \"auto\",\n        }}>\n        <DrawerHeader />\n\n        <Routes>\n          <Route path=\"dashboard\" element={<Dashboard />} />\n          <Route path=\"manage-institute\" element={<ManageInstitute />} />\n          <Route path=\"administrator/academicYear\" element={<AcademicYear />} />\n          <Route\n            path=\"administrator/role-permission\"\n            element={<RolePermission />}\n          />\n          <Route path=\"administrator/user-role\" element={<UserRole />} />\n          <Route\n            path=\"administrator/reset-password\"\n            element={<ResetPassword />}\n          />\n          <Route\n            path=\"human-resource/manage-designation\"\n            element={<ManageDesignation />}\n          />\n          <Route\n            path=\"human-resource/manage-department\"\n            element={<ManageDepartment />}\n          />\n          <Route path=\"human-resource/employee\" element={<Employee />} />\n          <Route\n            path=\"human-resource/update-employee/:id\"\n            element={<UpdateEmployee />}\n          />\n          <Route path=\"human-resource/offer-letter\" element={<OfferLetter />} />\n          <Route\n            path=\"human-resource/relieving-letter\"\n            element={<RelievingLetter />}\n          />\n\n          <Route path=\"human-resource/off-boarding\" element={<OffBoarding />} />\n          <Route\n            path=\"human-resource/experience-letter\"\n            element={<ExperienceLetter />}\n          />\n\n          <Route\n            path=\"human-resource/teacher-activity\"\n            element={<TeacherActivity />}\n          />\n\n          <Route path=\"pre-admission/enquiries\" element={<Enquiries />} />\n          <Route path=\"pre-admission/exams\" element={<Exams />} />\n          <Route\n            path=\"pre-admission/exam-schedules\"\n            element={<ExamSchedules />}\n          />\n          <Route path=\"pre-admission/result\" element={<Result />} />\n\n          <Route path=\"academic/class\" element={<Class />} />\n          <Route path=\"academic/section\" element={<Section />} />\n          <Route path=\"academic/subject\" element={<Subject />} />\n\n          <Route\n            path=\"attendence/student-attendance\"\n            element={<StudentAttendance />}\n          />\n          <Route\n            path=\"attendence/employee-attendance\"\n            element={<EmployeeAttendance />}\n          />\n\n          <Route path=\"class-routine\" element={<ClassRoutine />} />\n          <Route path=\"student/overview\" element={<Overview />} />\n          <Route path=\"student/admit-student\" element={<AdmitStudent />} />\n          <Route path=\"student/add-student\" element={<AddStudent />} />\n          <Route path=\"student/edit-student/:id\" element={<AddStudent />} />\n          <Route path=\"student/reshuffle\" element={<Reshuffle />} />\n          <Route path=\"student/promotion\" element={<Promotion />} />\n          <Route path=\"student/bulk-admission\" element={<BulkAdmission />} />\n          <Route path=\"student/credential\" element={<Credential />} />\n          <Route path=\"student/quick-admit\" element={<QuickAdmit />} />\n\n          <Route path=\"student/bulk-photo\" element={<BulkPhoto />} />\n          <Route\n            path=\"student/student-activity\"\n            element={<StudentActivity />}\n          />\n          <Route\n            path=\"student/student-bulk-photo\"\n            element={<StudentBulkPhoto />}\n          />\n\n          <Route path=\"assignment\" element={<Assignment />} />\n\n          <Route path=\"announcement/notice\" element={<Notice />} />\n          <Route path=\"announcement/news\" element={<News />} />\n          <Route path=\"announcement/holiday\" element={<Holiday />} />\n          <Route\n            path=\"announcement/awardsAndAchievements\"\n            element={<AwardsAndAchievements />}\n          />\n          <Route path=\"announcement/splashNews\" element={<SplashNews />} />\n\n          <Route path=\"gallery\" element={<Gallery />} />\n          <Route path=\"notifications\" element={<Notifications />} />\n          <Route path=\"event\" element={<Event />} />\n\n          <Route path=\"exam/exam-grade\" element={<ExamGrade />} />\n          <Route path=\"exam/exam-term\" element={<ExamTerm />} />\n          <Route path=\"exam/exam-schedule\" element={<ExamSchedule />} />\n          <Route path=\"exam/exam-hall-ticket\" element={<ExamHallTicket />} />\n          <Route\n            path=\"exam-Mark/exam-Attendance\"\n            element={<ExamAttendance />}\n          />\n          <Route path=\"exam-Mark/manage-mark\" element={<ManageMark />} />\n          <Route path=\"exam-Mark/exam-result\" element={<ExamResult />} />\n          <Route path=\"exam-Mark/marks-card\" element={<Markscard />} />\n          <Route\n            path=\"exam-Mark/consolidated-marks-sheet\"\n            element={<ConsolidatedMarkSheet />}\n          />\n          <Route\n            path=\"exam-Mark/subject-wise-report\"\n            element={<SubjectWiseReport />}\n          />\n          <Route\n            path=\"exam-Mark/division-wise-report\"\n            element={<DivisionWiseReport />}\n          />\n\n          <Route path=\"lms/storage\" element={<Storage />} />\n          <Route path=\"lms/courses\" element={<Courses />} />\n          <Route path=\"lms/add-courses\" element={<AddCourse />} />\n          <Route path=\"lms/edit-courses/:id\" element={<UpdateCourse />} />\n          <Route path=\"lms/course-content\" element={<CourseContent />} />\n          <Route path=\"lms/live\" element={<Live />} />\n          <Route path=\"lms/room/:roomID\" element={<Room />} />\n\n          <Route path=\"library/books\" element={<Books />} />\n          <Route path=\"library/periodical\" element={<Periodical />} />\n          <Route\n            path=\"library/student-library-member\"\n            element={<StudentLibraryMember />}\n          />\n          <Route\n            path=\"library/student-issue-return\"\n            element={<StudentIssueReturn />}\n          />\n          <Route\n            path=\"library/employee-library-member\"\n            element={<EmployeeLibraryMember />}\n          />\n          <Route\n            path=\"library/employee-issue-return\"\n            element={<EmployeeIssueReturn />}\n          />\n\n          <Route path=\"leave-management/leave-type\" element={<LeaveType />} />\n          <Route\n            path=\"leave-management/student-leave\"\n            element={<StudentsLeave />}\n          />\n          <Route\n            path=\"leave-management/employee-leave\"\n            element={<EmployeeLeave />}\n          />\n          <Route\n            path=\"leave-management/leave-report\"\n            element={<LeaveReport />}\n          />\n\n          <Route path=\"inventory/item\" element={<Item />} />\n          <Route path=\"inventory/vendor\" element={<Vendor />} />\n          <Route path=\"inventory/transaction\" element={<InOutTransaction />} />\n          <Route path=\"inventory/stockList\" element={<StockList />} />\n          <Route path=\"inventory/issue\" element={<Issue />} />\n          <Route path=\"inventory/sell\" element={<Sell />} />\n          <Route\n            path=\"certificate/study-certificate\"\n            element={<StudyCertificate />}\n          />\n          <Route\n            path=\"certificate/transfer-certificate\"\n            element={<TransferCertificate />}\n          />\n          <Route path=\"fees/receipt-book\" element={<ReceiptBook />} />\n          <Route path=\"fees/feeMap-category\" element={<FeeMapCategory />} />\n          <Route path=\"fees/collect-fees\" element={<CollectFees />} />\n          <Route path=\"fees/balance-fee\" element={<BalanceFeeReport />} />\n          <Route path=\"fees/fee-overview\" element={<FeeOverview />} />\n          <Route path=\"fees/re-conciliation\" element={<Reconciliation />} />\n\n          <Route path=\"hostel/manage-hostel\" element={<ManageHostel />} />\n          <Route path=\"hostel/manage-room-type\" element={<ManageRoomType />} />\n          <Route path=\"hostel/manage-room-bed\" element={<ManageRoomAndBed />} />\n          <Route path=\"hostel/hostel-member\" element={<HostelMember />} />\n\n          <Route path=\"transport/vehicle\" element={<Vehicle />} />\n          <Route\n            path=\"transport/manage-route\"\n            element={<ManageRouteAndTrips />}\n          />\n          <Route path=\"transport/routes\" element={<VehicleRoutes />} />\n          <Route\n            path=\"transport/trasport-member\"\n            element={<TransportMember />}\n          />\n\n          <Route path=\"transport/vehicle-log\" element={<VehicleLog />} />\n          <Route\n            path=\"transport/vehicle-maintenance\"\n            element={<VehicleMaintenance />}\n          />\n\n          <Route path=\"payroll/salary-grade\" element={<SalaryGrade />} />\n          <Route path=\"payroll/make-payment\" element={<MakePayment />} />\n\n          <Route path=\"report/library-report\" element={<LibraryReport />} />\n          <Route\n            path=\"report/student-attendance\"\n            element={<StudentAttendanceReport />}\n          />\n          <Route\n            path=\"report/student-yearly-attendane\"\n            element={<StudentYearlyAttendance />}\n          />\n          <Route\n            path=\"report/employee-attendance\"\n            element={<EmployeeAttendanceReport />}\n          />\n          <Route\n            path=\"report/employee-yearly-attendance\"\n            element={<EmployeeYearlyAttendance />}\n          />\n          <Route path=\"report/student-report\" element={<StudentReport />} />\n          <Route\n            path=\"report/student-activity-report\"\n            element={<StudentActivityReport />}\n          />\n\n          <Route path=\"visitorInfo/visitor-info\" element={<VisitorInfo />} />\n          <Route\n            path=\"visitorInfo/student-checkout\"\n            element={<StudentCheckout />}\n          />\n\n          <Route path=\"help-desk\" element={<HelpDesk />} />\n          <Route path=\"guardian-feedback\" element={<GuardianFeedback />} />\n          <Route path=\"human-resource/add-employee\" element={<AddEmployee />} />\n\n          <Route path=\"communication_compose\" element={<Compose />} />\n          <Route path=\"communication_report\" element={<Report />} />\n          <Route path=\"communication_credentials\" element={<Credentials />} />\n\n          <Route\n            path=\"human-resource/edit-employee/:id\"\n            element={<AddEmployee />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/edit-institute/:id\"\n            element={<AddInstitute />}\n          />\n          <Route path=\"profile\" element={<Profile />} />\n        </Routes>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n}\n","/** @format */\n\nimport { Box, Paper } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport SettingContext from \"../context/SettingsContext\";\n\nconst Wrapper = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  marginBottom: \"20px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: theme.palette.primary.light,\n}));\n\nexport default function PageHeader({ title = \"\", showTextField = true }) {\n  const { settings, setSettings, selectedSetting, setSelectedSetting } =\n    useContext(SettingContext);\n\n  const handleSettingChange = (e) => {\n    const { name, value } = e.target;\n    setSelectedSetting({ ...settings.filter((s) => s._id == value)[0] });\n  };\n\n  return (\n    <Wrapper>\n      <Typography component=\"h1\" sx={{ fontWeight: \"bold\" }}>\n        {title}\n      </Typography>\n      {showTextField && (\n        <Stack direction=\"row\" spacing={2}>\n          <FormControl fullWidth size=\"small\" sx={{ minWidth: \"200px\" }}>\n            <InputLabel id=\"demo-simple-select-label\">Select School</InputLabel>\n            <Select\n              labelId=\"demo-simpless-select-filled-label\"\n              id=\"demo-simple-select-filled-l\"\n              value={selectedSetting?._id}\n              name=\"setting\"\n              onChange={handleSettingChange}\n              IconComponent={(props) => (\n                <KeyboardArrowDownIcon {...props} fontSize=\"medium\" />\n              )}\n              label=\"Select school\">\n              {settings?.map((set) => (\n                <MenuItem key={set._id} value={set._id}>\n                  {set.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      )}\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport NoTableData from \"./NoTableData\";\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\nimport { PuffLoader } from \"react-spinners\";\nimport image from \"../../assets/images/deleteicon.png\";\nimport { Download } from \"@mui/icons-material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 350,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n\n  boxShadow: 24,\n  p: 2,\n};\n\nconst getDataValue = (data, k) => {\n  if (typeof data[k.key] === \"boolean\") {\n    return data[k.key] === true ? \"Yes\" : \"No\";\n  }\n  if (k.path) {\n    if (Object.keys(data[k.path] || {}).length > 0) {\n      return data[k.path][k.key] || \"NA\";\n    }\n  }\n\n  if (k.isDate) {\n    return data[k.key] ? new Date(data[k.key]).toDateString() : \"NA\";\n  } else {\n    return data[k.key];\n  }\n};\n\nexport default function CustomTable({\n  bodyData = [],\n  bodyDataModal = \"\",\n  tableKeys = [],\n  actions = [\"edit\", \"delete\", \"view\", \"card\", \"switch\"],\n  onEditClick = () => {},\n  onDeleteClick = () => {},\n  onViewClick = () => {},\n  onCardClick = () => {},\n  onNavigateFeeMap = () => {},\n  onToggleSwitch = () => {},\n  toggleStatus = false,\n  isDataReady = true,\n  module = \"\",\n  CustomAction = () => {},\n  onUpdate = () => {},\n  onDownloadClick = () => {},\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const handleDeleteClick = (data) => {\n    setSelectedItem(data);\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    onDeleteClick(selectedItem._id);\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              {tableKeys.map((r, i) => (\n                <TableCell\n                  sx={{ fontWeight: \"bold\" }}\n                  key={i + r.name}\n                  align=\"center\">\n                  {r.name}\n                </TableCell>\n              ))}\n              {actions.length ? (\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Action\n                </TableCell>\n              ) : null}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length && isDataReady\n              ? bodyData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((data, index) => (\n                    <TableRow key={data._id || index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n                      {tableKeys.map((k, i) =>\n                        k.type === \"image\" ? (\n                          <TableCell key={i} align=\"center\">\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                              }}>\n                              <Avatar\n                                sx={{\n                                  alignSelf: \"center\",\n                                  objectFit: \"contain\",\n                                }}\n                                src={data[k.key]}\n                              />\n                            </Box>\n                          </TableCell>\n                        ) : (\n                          <TableCell key={i} align=\"center\">\n                            {getDataValue(data, k)}\n                          </TableCell>\n                        )\n                      )}\n                      {actions.length ? (\n                        <TableCell\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            columnGap: \"5px\",\n                          }}>\n                          {actions.includes(\"edit\") && (\n                            <Tooltip title=\"Edit\">\n                              <IconButton onClick={() => onEditClick(data)}>\n                                <EditIcon color=\"primary\" fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n\n                          {actions.includes(\"delete\") && (\n                            <Tooltip title=\"Delete\">\n                              <IconButton\n                                onClick={() => handleDeleteClick(data)}>\n                                <DeleteIcon fontSize=\"small\" color=\"error\" />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n\n                          {actions.includes(\"view\") && (\n                            <Tooltip title=\"View\">\n                              <IconButton onClick={() => onViewClick(data)}>\n                                <RemoveRedEyeRoundedIcon\n                                  fontSize=\"small\"\n                                  color=\"primary\"\n                                />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"card\") && (\n                            <Tooltip title=\"Unbundle\">\n                              <Button\n                                size=\"small\"\n                                variant=\"contained\"\n                                onClick={() => onCardClick(data)}>\n                                Card\n                              </Button>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"switch\") && (\n                            <Tooltip title={toggleStatus}>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => onToggleSwitch(data)}>\n                                <Switch\n                                  size=\"small\"\n                                  checked={data[toggleStatus] === true}\n                                />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n\n                          {actions.includes(\"custom\") && (\n                            <CustomAction\n                              onEditClick={onEditClick}\n                              data={data}\n                              onUpdate={onUpdate}\n                              onNavigateFeeMap={onNavigateFeeMap}\n                            />\n                          )}\n                          {actions.includes(\"download\") && (\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => onDownloadClick(data)}>\n                              <Download fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                        </TableCell>\n                      ) : null}\n                    </TableRow>\n                  ))\n              : null}\n          </TableBody>\n        </Table>\n        {!isDataReady ? (\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingTop: \"20px\",\n            }}>\n            <PuffLoader size={30} color=\"dodgerblue\" />\n          </Box>\n        ) : null}\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={bodyData ? (bodyData.length ? bodyData.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TableContainer>\n\n      {/* === Delete modal === */}\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Are you sure want to delete this item?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleSubmit}>\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function NoTableData({ dataPresent, title }) {\n  if (dataPresent) return null;\n  return (\n    <Typography\n      variant=\"h6\"\n      sx={{\n        textAlign: \"center\",\n        margin: \"5px\",\n        padding: \"5px\",\n      }}\n    >\n      {title.charAt(0).toUpperCase() + title.slice(1)} not found!\n    </Typography>\n  );\n}\n","import { Box } from \"@mui/material\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import { Box, Paper, Tab, Tabs } from \"@mui/material\";\nimport React from \"react\";\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function TabList({\n  labels = [],\n  onChange = () => {},\n  value = 0,\n}) {\n  return (\n    <Box\n      component={Paper}\n      sx={{\n        marginBottom: \"10px\",\n      }}\n    >\n      <Tabs\n        value={value}\n        onChange={onChange}\n        aria-label=\"basic tabs example\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        allowScrollButtonsMobile\n      >\n        {labels.map((l, index) => {\n          return (\n            <Tab\n              sx={{ fontWeight: \"bold\", fontSize: \"12px\" }}\n              key={l}\n              label={l}\n              {...a11yProps(index)}\n            />\n          );\n        })}\n      </Tabs>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport {\n  Box,\n  Divider,\n  IconButton,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function FileListModal({\n  open = false,\n  onClose = () => {},\n  styles = {},\n  selectedFiles = [],\n  setSelectFiles = () => {},\n  customOnChage = false,\n  onRemove = () => {},\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleRemoveImage = (fileName) => {\n    setSelectFiles(selectedFiles.filter((f) => f.name !== fileName));\n  };\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: \"100%\",\n          maxWidth: 650,\n          ...styles,\n        },\n      }}\n    >\n      <DialogTitle>\n        {selectedFiles.length > 1 ? \"Selected files\" : \"Selected file\"}\n      </DialogTitle>\n      <Divider />\n      <DialogContent\n        sx={{\n          padding: \"10px\",\n        }}\n      >\n        {selectedFiles.map(\n          (f, i) => (\n            console.log(f.name, \"gg\"),\n            (\n              <Box\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography>{f.name}</Typography>\n                <IconButton\n                  size=\"small\"\n                  onClick={\n                    customOnChage\n                      ? () => onRemove(f.name)\n                      : () => handleRemoveImage(f.name)\n                  }\n                >\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            )\n          )\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} size=\"small\" variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport FileListModal from \"./FileListModal\";\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  columnGap: \"5px\",\n}));\n\nexport default function FileSelect({\n  name,\n  multi = true,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  selectedFiles = [],\n  disabled = false,\n  setSelectedFiles = () => {},\n  customOnChange = false,\n  onRemove = () => {},\n  accept = \"\",\n  ...rest\n}) {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleModalClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper mt={1}>\n        <Box\n          component=\"div\"\n          onClick={() => setOpen(true)}\n          sx={{\n            borderRadius: \"5px\",\n            padding: \"5px\",\n            backgroundColor: \"white\",\n            border: \"1px solid lightgray\",\n            height: \"30px\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\",\n          }}>\n          <Typography\n            component=\"div\"\n            onClick={() => setOpen(true)}\n            sx={{\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n              backgroundColor: \"white\",\n              color: \"black\",\n              height: \"30px\",\n              width: \"30px\",\n              textAlign: \"center\",\n            }}>\n            {selectedFiles.length}\n          </Typography>\n\n          <RemoveRedEyeRoundedIcon fontSize=\"small\" />\n        </Box>\n\n        <Button fullWidth component=\"label\" size=\"small\" variant=\"outlined\">\n          <input\n            type=\"file\"\n            multiple={multi}\n            accept={accept}\n            // style={{ visibility: \"hidden\" }}\n            hidden\n            onChange={\n              customOnChange\n                ? (e) => onChange(e)\n                : (e) => {\n                    const selectedFiles = e.target.files;\n\n                    if (selectedFiles.length > 0) {\n                      let fileList = [];\n                      for (let i = 0; i < selectedFiles.length; i++) {\n                        const file = selectedFiles[i];\n\n                        fileList.push(file);\n                      }\n                      setSelectedFiles([...fileList]);\n                    } else {\n                      console.log(\"No files selected\");\n                    }\n                  }\n            }\n          />\n          {label}\n        </Button>\n      </Wrapper>\n      <FileListModal\n        open={open}\n        selectedFiles={selectedFiles}\n        setSelectFiles={setSelectedFiles}\n        onClose={handleModalClose}\n        customOnChage={customOnChange}\n        onRemove={onRemove}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport dayjs from \"dayjs\";\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\n\nfunction FormDatePicker({\n  name,\n  label,\n  formik,\n  openTo = \"day\",\n  inputFormat = \"DD-MM-YYYY\",\n  views = [\"year\", \"month\", \"day\"],\n  disabled = false,\n  disableFutureDates = false,\n}) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePicker\n        disableFuture={disableFutureDates}\n        sx={{\n          \"& .MuiInputBase-input\": {\n            // Target the input element\n            height: \"8px\",\n          },\n          marginTop: \"16px\",\n          width: \"100%\",\n        }}\n        // disablePast={true}\n        name={name}\n        variant=\"outlined\"\n        size=\"small\"\n        label={label}\n        disabled={disabled}\n        slotProps={{ textField: { InputLabelProps: { fontSize: \"90px\" } } }}\n        openTo={openTo}\n        closeOnSelect\n        views={views}\n        inputFormat={inputFormat}\n        value={dayjs(formik.values[name]) || null}\n        onChange={(value) => formik.setFieldValue(name, dayjs(value))}\n        // renderInput={(params) => (\n        //   <TextField\n        //     InputLabelProps={{ sx: { fontSize: \"80px\" } }}\n        //     size=\"small\"\n        //     margin=\"normal\"\n        //     required\n        //     {...params}\n        //   />\n        // )}\n      />\n    </LocalizationProvider>\n  );\n}\n\nexport default FormDatePicker;\n"],"names":["SIDE_MENU_DATA","name","path","renderName","subMenus","icon","_jsx","DashboardRoundedIcon","color","fontSize","SettingsSuggest","Person","SubdirectoryArrowRightOutlinedIcon","Diversity2Icon","ManIcon","AccountBalance","CheckBox","AccessTime","Groups","AssignmentRoundedIcon","InstallMobileRounded","CampaignRounded","PhotoRoundedIcon","NotificationsActiveRoundedIcon","TextSnippet","SchoolRounded","LibraryBooksIcon","InventoryIcon","CardMembershipRounded","CurrencyRupee","GiteIcon","DirectionsBusIcon","CurrencyRupeeIcon","BarChart","WcIcon","FeedbackIcon","ChartBar","selectedSetting","useContext","SettingContext","classes","setClasses","useState","uniqueSections","setUniqueSections","ref","width","useResizeObserver","useEffect","async","data","get","PRIVATE_URLS","student","getDashboardStudentDetails","params","schoolId","_id","transformedData","result","map","classItem","transformedItem","className","Object","keys","sections","forEach","section","Set","add","error","console","log","getData","Box","sx","display","flex","children","ResponsiveContainer","height","Paper","_jsxs","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","sectionName","Bar","fill","Math","floor","random","toString","stackId","OuterCard","styled","Card","_ref","theme","marginBottom","padding","alignItems","justifyContent","breakpoints","down","flexDirection","InnerBox","_ref2","alignSelf","Content","_ref3","fontWeight","Data","_ref4","textAlign","Count","_ref5","paddingTop","Attendance","_studentData$data","_employeeData$data","studentData","employeeData","Promise","all","studentAttendance","getAttendanceSummaryForToday","employeeAttendance","getEmployeeAttendanceSummaryForToday","getStudentAttendanceSummary","_Fragment","Grid","container","spacing","item","xs","sm","md","lg","Typography","style","DataContainer","StyledFab","Fab","background","QuickLinks","Link","to","textDecoration","size","FindInPage","CardMembership","Message","ScrollContainer","borderRadius","transform","animation","animationPlayState","from","DashboardScorlText","NoDataFound","DashboardNewsConent","marginLeft","marginRight","paddingBottom","position","BoldTrigger","cursor","borderLeft","paddingLeft","NoticeItem","_ref6","themeData","darkPalette","primary","main","Events","notice","setNotice","holidays","setHolidays","list","getNotice","holiday","getHolidays","mt","Calendar","tileClassName","_ref7","date","today","Date","toDateString","minHeight","Collapsible","open","concat","length","Divider","maxHeight","overflow","elevation","index","component","variant","marginTop","title","FilterStudent","navigate","useNavigate","setSections","students","setStudents","entryFormik","useFormik","initialValues","class","onSubmit","values","enableReinitialize","search","d","label","value","setFieldValue","getSections","_data$result$","basicInfo","getStudents","getClasses","rowSpacing","columnSpacing","handleSubmit","FormSelect","required","formik","options","Button","type","Dashboard","PageHeader","AddForm","disabled","onAddClick","onClick","AddIcon","FormModal","formTitle","onClose","submitButtonTitle","styles","adding","useTheme","fullScreen","useMediaQuery","Dialog","PaperProps","maxWidth","DialogTitle","DialogContent","DialogActions","LoadingButton","loading","academicYearTableKeys","key","AcademicYear","setData","setOpen","dataToEdit","setDataToEdit","setLoading","academicYear","handleClose","note","payload","put","update","post","create","CustomTable","actions","bodyDataModal","bodyData","tableKeys","onEditClick","toggleStatus","onToggleSwitch","toggleActiveStatus","AddDepartmentHandel","FormInput","designationTableKeys","ManageDesignation","designation","orderSequence","onDeleteClick","del","delete","id","AddDesigationHandel","departmentTableKeys","ManageDepartment","department","overviewTableKeys","employeeTableKeys","inactiveTableKeys","Employee","setSelectValue","activeData","setActiveData","InactiveData","setInactiveData","overviewData","setOverviewData","allEmployee","setAllEmployee","searchFilter","setSearchFilter","setSearch","employee","filter","active","s","academicInfo","inactiveData","maleCount","emp","gender","femaleCount","totalCount","male","female","total","getDataDepartment","handleDelete","handeleClickEdit","handleSearch","e","target","trim","ele","toLowerCase","includes","TabList","onChange","handleTabChange","newValue","labels","TabPanel","gap","TextField","ml","placeholder","InputProps","endAdornment","InputAdornment","IconButton","edge","Search","p","Print","ListAlt","offerLetterTableKeys","isDate","LetterViewModal","content","onPrintClick","contentRef","useRef","m","CloseIcon","gutterBottom","dangerouslySetInnerHTML","__html","ReactToPrint","trigger","startIcon","PrintIcon","current","OfferLetter","componentRef","handlePrint","useReactToPrint","modalData","setModalData","containt","offerLetter","joiningDate","dayjs","format","resetForm","onViewClick","FormDatePicker","ReactQuill","relievingLetterDataTableKeys","RelievingLetter","relievingLetter","offBoardingDataTableKeys","Gender_Options","BloodGroup_Options","OffBoarding","formFields","setFormFields","file","userType","user","bloodGroup","dob","resignDate","relivingDate","contactNumber","status","feedback","field","splice","handleRemove","ClearIcon","handleAddRow","experienceTableKeys","ExperienceLetter","experienceLetter","onBlur","handleBlur","teacherActivityTableKeys","TeacherActivity","loadingFind","setLoadingFind","setAcademicYear","subjects","setSubjects","employees","setEmployees","currentUserStringified","window","localStorage","getItem","currentUser","JSON","parse","teacherActivity","teacher","subject","fromDate","toDate","classId","getSubject","_data$result","role","match","RegExp","empOption","getEmployees","getAcademicYear","topic","rolePermissionTableKeys","ROLE_PERMISSIONS","module","subModule","permissions","toggleItemInArray","array","indexOf","push","removeFromArray","arr","str","StyledBox","zIndex","CRUD_OPERATIONS","RolePermission","setValue","React","roles","setRoles","roleToEdit","setRoleToEdit","roleKeys","setRoleKeys","allPermissionUpdate","setAllPermissionUpdate","getRoleKeys","allKeys","find","k","handleAddOrUpdate","r","formikUpdate","handleUpdateAll","permission","allPermissions","co","every","handleChange","event","openRoleAddUpdateModal","handleModalClose","TableContainer","Table","TableHead","TableRow","TableCell","palette","mode","align","Checkbox","checked","TableBody","roleModule","i","colSpan","backgroundColor","grey","o","_roleKeys$find","_roleKeys$find$permis","handleChangePermission","Stack","direction","handleCancelClick","userRoleTableKeys","UserRole","ResetPassword","setEmployee","employeeId","password","account","changePasswordForUser","_r$name","getRoles","enquriesTableKeys","ViewModel","Close","MuiBUtton","StyledTableRow","StyledTableCell","border","tableCellClasses","head","body","CustomActionComponent","onUpdate","updateStatus","preadmissionEnqiry","Enquiries","_modalData$contents","_modalData$contents$s","_modalData$contents$s2","_modalData$contents$s3","_modalData$contents2","_modalData$contents2$","_modalData$contents2$2","_modalData$contents2$3","_modalData$contents3","_modalData$contents4","_modalData$contents4$","_modalData$contents4$2","_modalData$contents5","_modalData$contents5$","_modalData$contents5$2","_modalData$contents6","_modalData$contents6$","_modalData$contents6$2","_modalData$contents6$3","_modalData$contents7","_modalData$contents7$","_modalData$contents7$2","_modalData$contents8","_modalData$contents8$","_modalData$contents8$2","_modalData$contents9","_modalData$contents9$","_modalData$contents9$2","_modalData$contents10","_modalData$contents11","_modalData$contents12","_modalData$contents13","_modalData$contents14","_modalData$contents15","_modalData$contents16","_modalData$contents17","_modalData$contents18","_modalData$contents19","_modalData$contents20","_modalData$contents21","_modalData$contents22","_modalData$contents23","_modalData$contents24","_modalData$contents25","_modalData$contents26","_modalData$contents27","_modalData$contents28","_modalData$contents29","_modalData$contents30","_modalData$contents31","_modalData$contents32","_modalData$contents33","_modalData$contents34","_modalData$contents35","_modalData$contents36","_modalData$contents37","_modalData$contents38","_modalData$contents39","_modalData$contents40","_modalData$contents41","_modalData$contents42","_modalData$contents43","_modalData$contents44","_modalData$contents45","_modalData$contents46","_modalData$contents47","_modalData$contents48","_modalData$contents49","_modalData$contents50","_modalData$contents51","_modalData$contents52","_modalData$contents53","_modalData$contents54","_modalData$contents55","_modalData$contents56","_modalData$contents57","_modalData$contents58","_modalData$contents59","_modalData$contents60","_modalData$contents61","_modalData$contents62","_modalData$contents63","_modalData$contents64","_modalData$contents65","_modalData$contents66","_modalData$contents67","_modalData$contents68","_modalData$contents69","_modalData$contents70","_modalData$contents71","_modalData$contents72","_modalData$contents73","_modalData$contents74","_modalData$contents75","_modalData$contents76","_modalData$contents77","_modalData$contents78","_modalData$contents79","_modalData$contents80","_modalData$contents81","_modalData$contents82","_modalData$contents83","_modalData$contents84","_modalData$contents85","_modalData$contents86","_modalData$contents87","_modalData$contents88","_modalData$contents89","_modalData$contents90","_modalData$contents91","_modalData$contents92","_modalData$contents93","_modalData$contents94","_modalData$contents95","_modalData$contents96","_modalData$contents97","_modalData$contents98","_modalData$contents99","_modalData$contents100","_modalData$contents101","_modalData$contents102","_modalData$contents103","_modalData$contents104","_modalData$contents105","_modalData$contents106","_modalData$contents107","_modalData$contents108","_modalData$contents109","_modalData$contents110","_modalData$contents111","_modalData$contents112","_modalData$contents113","_modalData$contents114","_modalData$contents115","_modalData$contents116","_modalData$contents117","_modalData$contents118","_modalData$contents119","_modalData$contents120","_modalData$contents121","_modalData$contents122","_modalData$contents123","_modalData$contents124","_modalData$contents125","_modalData$contents126","_modalData$contents127","_modalData$contents128","_modalData$contents129","_modalData$contents130","_modalData$contents131","_modalData$contents132","_modalData$contents133","_modalData$contents134","_modalData$contents135","_modalData$contents136","_modalData$contents137","_modalData$contents138","_modalData$contents139","_modalData$contents140","_modalData$contents141","_modalData$contents142","_modalData$contents143","_modalData$contents144","_modalData$contents145","_modalData$contents146","_modalData$contents147","_modalData$contents148","_modalData$contents149","_modalData$contents150","_modalData$contents151","_modalData$contents152","_modalData$contents153","_modalData$contents154","_modalData$contents155","_modalData$contents156","_modalData$contents157","_modalData$contents158","_modalData$contents159","_modalData$contents160","_modalData$contents161","_modalData$contents162","_modalData$contents163","_modalData$contents164","_modalData$contents165","_modalData$contents166","_modalData$contents167","_modalData$contents168","_modalData$contents169","_modalData$contents170","_modalData$contents171","_modalData$contents172","_modalData$contents173","_modalData$contents174","_modalData$contents175","_modalData$contents176","_modalData$contents177","_modalData$contents178","_modalData$contents179","_modalData$contents180","_modalData$contents181","_modalData$contents182","_modalData$contents183","_modalData$contents184","_modalData$contents185","_modalData$contents186","_modalData$contents187","_modalData$contents188","_modalData$contents189","_modalData$contents190","_modalData$contents191","_modalData$contents192","_modalData$contents193","_modalData$contents194","_modalData$contents195","_modalData$contents196","_modalData$contents197","_modalData$contents198","_modalData$contents199","activeButton","setActiveButton","filteredData","setFilteredData","contents","action","c","getEnquiries","tableData","_d$studentDetails","_d$studentDetails$bas","_d$studentDetails2","_d$studentDetails2$ac","_d$studentDetails2$ac2","studentName","studentDetails","basicDetails","submittedOn","createdAt","academicDetails","ButtonGroup","v","textTransform","CustomAction","dividers","mb","toUpperCase","caste","casteIncomeCertificateNumber","motherTongue","birthPlace","aadharNumber","contactDetails","guardianName","guardianContactNumber","alternateNumber","relationWithGuardian","nationalId","presentAddress","permanentAddress","previousSchoolDetails","schoolName","tcNumber","fatherDetails","education","profession","motherDetails","otherDetails","healthCondition","email","hostelRequired","transportRequired","examsTableKeys","inputProps","Wrapper","InputLabels","InputLabel","RadioButtons","Radio","QuizQuestion","quiz","questionIndex","quizData","setQuizData","question","fullWidth","maxRows","multiline","handleQuestionChange","q","prevQuizData","_","handleRemoveQuestion","DeleteIcon","rowGap","correctOption","handleSetCorrectOption","handleOptionChange","optionIndex","newOptions","AddOrUpdateExamModal","dataToUpdate","academicYears","setAcademicYears","addForm","setAddForm","markForm","setMarkForm","submiload","setSubmitload","additionalInstructions","setAdditionalInstructions","negativeMarking","setNegativeMarking","_academicYearData$dat","_classData$data","academicYearData","classData","handleOnChangeForm","hanleMarkChange","prev","preventDefault","toast","some","option","playload","schoolClass","examName","passingPercentage","passingMark","negativeMarkingPerQuestion","marksPerQuestion","mark","point","preadmissionExam","FormControl","Select","labelId","varient","row","MenuItem","handleAddQuizs","handleAddInstruction","instruction","handleAdditionalInstructionChange","updatedInstructions","handleDeleteInstruction","RadioGroup","FormControlLabel","control","InputLabelProps","Exams","gettingList","setGettingList","openQuestionModel","setOpenQuestionModel","getExamList","handleOpenQuestionModel","handleCloseQuestionModel","AddOrUpdateExamSchedule","exams","setExams","examId","startTime","endTime","roomNumber","dateOfExam","preadmissionExamSchedule","bgcolor","boxShadow","DeleteModal","props","Modal","deleteModal","setDeleteModal","src","image","my","routineIndex","ExamSchedules","page","setPage","rowsPerPage","setRowsPerPage","exam","AddExamSchedules","dark","light","_data$exam","academicYearFrom","academicYearTo","examLinkEnabled","Switch","enableExamLink","handleUpdateLink","defaultChecked","handleCopyLink","copylink","examLink","copy","success","ContentCopyIcon","EditIcon","Delete","sendVenueDetailsToStudents","handleSubmitNotify","notified","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","resultTableKeys","Result","academicClassTableKeys","Active","IS_PUBLIC","Class","_dataToEdit$classTeac","classTeachers","isPublic","numericName","showSearch","multiple","academicSectionTableKeys","CustomSelect","isSearch","blurred","setBlurred","inputRef","undefined","isDarkMode","ThemeModeContext","searchText","setSearchText","displayedOptions","useMemo","containsText","text","labelColor","shrink","notched","onAnimationEnd","_inputRef$current","focus","MenuProps","autoFocus","ListSubheader","startAdornment","SearchIcon","onKeyDown","stopPropagation","memo","Section","_dataToEdit$class","_dataToEdit$sectionTe","selectedClass","setSelectedClass","_data$result2","sectionTeacher","academicSubjectTableKeys","Subject_Type","Subject_Group","Subject","_dataToEdit$subjectTe","code","subjectType","subjectGroup","subjectTeachers","t","studentAttendanceReportTableKeys","StudentAttendanceTable","now","setBodyData","isDataReady","updating","setUpdating","updateAttendance","empId","attendanceStatus","a","_data$student","_data$student$basicIn","_data$student2","_data$student2$academ","rollNumber","_data$student3","_data$student4","NoTableData","dataPresent","attendanceData","downloadFile","filename","arguments","blob","Blob","saveAs","hasAllValues","obj","exceptions","showToast","allValuesPresent","StudentAttendance","reportData","setReportData","overViewData","setOverViewData","academicYearList","setAcademicYearList","fetchingAttendanceData","setFetchingAttendanceData","setAttendanceData","downloadingAbsent","setDownloadingAbsent","fetchingreport","setFetchingReport","attendanceFormik","sectionId","getStudentAttendanceOverview","getAttendanceOverview","overviewFormik","reportFormik","month","getAttendanceReport","academicYearId","year","_data$result$4","_data$result$5","_data$result$2","_data$result$3","disableFutureDates","attendanceStudent","sectionInfo","totalPresent","totalAbsent","donwloadAbsentReport","responseType","downloadAbsentStudentsReport","percentage","openTo","inputFormat","views","employeeAttendanceReportTableKeys","EmployeeAttendanceTable","_data$employee","_data$employee$basicI","_data$employee2","_data$employee2$basic","_data$employee3","_data$employee4","_data$employee5","EmployeeAttendance","fetchingAttendanceReport","setFetchingAttendanceReport","roleId","ClassRoutine","roomNo","AddClassRoutine","TitleContainer","ValueContainer","StudentCount","showTitle","columnGap","TableHeader","borderRight","TableDivider","borderBottomColor","DataContiner","Overview","_overviewDetails$data","selectAcademicYear","setSelectAcademicYear","overviewDetails","setOverviewDetails","totalStudents","setTotalStudents","totalMaleStudents","setTotalMaleStudents","totalFemaleStudents","setTotalFemaleStudents","overView","totalStudentsCount","totalMaleStudentsCount","totalFemaleStudentsCount","academicYearChanged","downloadAllStudentsExcel","overview","maleStudents","femaleStudents","admitStudentTableKeys","Status_Options","AdmitStudent","navigation","setClassData","sectionData","setSectionData","openModal","setOpenModal","openModalAdmit","setOpenModalAdmit","loader","setLoader","setFile","fileAdmit","setFileAdmit","handleChangeFiles","files","fileList","getClass","sectionAllOption","getSection","downloadStudentsExcel","DownloadForOfflineSharpIcon","downloadStudentsPdf","PrintSharp","handleNavigate","formData","FormData","append","f","bulkStudentAdmit","headers","endIcon","DownloadIcon","getBulkStudentAdmitSheet","FileSelect","customOnChange","selectedFiles","multi","handleCloseAdmitModal","bulkUpdate","bulkUpdateSheet","handleCloseUpdateModal","isBottom","setIsBottom","Reshuffle","studentReshuffle","setStudentReshuffle","checkBox","setCheckBox","reshuffle","setReshuffle","newSection","ids","fatherInfo","handleReshffleCheckBox","StickyBar","currentSectionId","studentIds","resuffle","Promotion","activeAcademicYear","setActiveAcademicYear","promoting","setPromoting","promoteAcademicYearId","currentClassId","promoteClassId","promoteSectionId","slice","handlePromotionCheckBox","promote","MuiTypography","BulkAdmission","visibility","studentCrendentialsTableKeys","Credential","username","fatherName","STATUS_OPTIONS","QuickAdmit","setSettings","setSelectedSetting","admissionNumber","admissionDate","fatherContactNumber","motherName","motherContactNumber","motherInfo","motherPhone","fatherPhone","stringify","admissionNo","rollNumberType","studentActivityTableKeys","StudentActivity","setDate","setFormData","studentActivity","Formik","description","assignmentTableKeys","AddEditAssignment","_entryFormik$values","_entryFormik$values2","onUpdateFormik","setSubject","selectFile","setSelectFile","assignmentType","deadline","attachmentType","isPublish","link","assignment","headerd","Assignment","Section_Options","responseCode","subjectName","noticeTableKeys","Is_Public","Notice","rolesData","setRolesData","rolesAllOption","noticeFor","AddNotice","newsTableKeys","News","selectImg","setSelectImg","news","shortNews","AddNews","onRemove","fileName","handleRemoveFile","img","alt","holidayTableKeys","Holiday","setChecked","AddHoliday","awardAchievementTableKeys","AwardsAndAchievements","awards","location","hostedBy","headlines","AddAwardsAchievement","horizontalSplashNewsTableKeys","AddHorizontalSplash","splashNews","horizontalvalues","newitem","toggle","AddHorizontalSplashNews","popupSplashNewsTableKeys","Content_Type_Options","AddPopup","selectDocument","setSelectdocument","popupvalues","contentType","document","doc","accept","SplashNews","galleryListTableKeys","Gallery","_dataToEdit$images","gallery","overflowX","images","backgroundSize","objectFit","removeFile","handleRemoveImg","notificationsTableKeys","Notifications","eventTableKeys","Event","eventFor","video","shortEvent","getRole","examGradeTableKeys","Grade_Options","ExamGrade","setloading","examGrade","grade","group","gradePoint","markFrom","markTo","AddExamGrade","examTermTableKeys","Is_Assignment_Allowed","Exam_Types","ExamTerm","examTerm","examType","marksAssignmentAllowed","handelExamTerm","examListTableKeys","scheduleListTableKeys","ShowIn_HallTick","ShowIn_Exam_Results","Pratical_Marks","ExamSchedule","examtitle","setExamTitle","examSchedule","examDate","marksFreezDate","maximumMarks","pratical","minimumMarks","praticalMarks","showInHallTick","showInExamResults","obtainedMarks","getExamTerm","handelExamSchedule","ExamHallTicket","setSection","DivisionWiseReport","getExams","SubjectWiseReport","consolidateMarksTableKeys","ConsolidatedMarkSheet","consolidated","setConsolidated","marksCardTableKeys","Markscard","examResultTableKeys","ExamResultViewModel","_tableData$subjects","_tableData$subjects2","_d$subject","totalMarks","toFixed","ExamResult","uploadLoader","setUploadLoader","downloadLoader","setDownloadLoader","allDownloadLoading","setAllDownloadLoading","openBulk","setOpenBulk","studentMarks","getExamResult","_d$student$basicInfo","_d$student$academicIn","_d$student","roleNumber","photo","CustomInput","rest","borderWidth","shape","modalStyle","ManageMark","setStudentMarks","updatingMarks","setUpdatingMarks","fetchingMarks","setFetchingMarks","fileChoosen","setFileChoosen","listStudentMarks","subjectId","previousValues","_s$studentMarks","_s$studentMarks2","_s$studentMarks3","_s$studentMarks3$grad","studentId","obtainedWrittenMarks","comment","handleCustomInputChange","updatedMarks","updateStudentsMarks","_m$grade","bulkUpdateStudentMarks","getbulkUpdateStudentMarks","examTermId","examAttendanceTableKeys","ExamAttendance","Heading","DownloadBox","Courses","courseId","setCourseId","materialURL","setMaterialURL","material","setMaterial","uploadLoad","setUploadLoad","getCourse","course","classIds","join","courseHours","selectedCourse","selectedCourseTitle","state","selectedCourseIds","handleNavigateCourse","handleClickOpen","materialURLs","URL","decodeURIComponent","pathname","split","pop","FileUploadIcon","courseData","DialogContentText","selectedFile","px","py","handleDownload","Download","deleteMaterial","uploadCourseMaterial","MuiTableCell","CourseContentTable","_chapter$contents","chapter","handelOpenDelModel","handleDeleteChapter","_item$title","pr","YouTubeIcon","QuizIcon","ViewAgendaIcon","InsertDriveFileIcon","QuestionAnswerIcon","substring","ArrowDownward","ArrowUpward","VideoDialog","setOpenVideo","contentHours","chapterId","courseContent","updateContent","addContentToChapter","maxLength","createObjectURL","controls","Boxes","QuizDialog","setOpenQuiz","FlashcardDialog","setOpenFlashcard","cardType","flashCard","MaterialsDialog","setOpenMaterial","AddChapterDialog","setOpenChaper","setChapterData","chapterData","CourseContext","updateChapterDetails","createContext","Contents","ShowCourseContent","handleEditChapter","ContentContext","openVideo","openQuiz","openFlashcard","openMaterial","openCodepractice","setOpenCodepractice","openDeleteModel","setOpenDeleteModel","deleteChapter","OuterGrid","CourseContent","_courseDetails$chapte","courses","setCourses","openChapter","courseDetails","setCourseDetails","chapters","getDetailsTeachers","Provider","TableData","TableBodydata","Label","FilterBox","getDateWithTime","dateTimeComponents","dateComponents","yearExtracted","parseInt","monthExtracted","dayExtracted","timeComponents","hoursExtracted","minutesExtracted","getStatus","startDate","expiryDate","expiryTime","currentDate","startDataTimestring","moment","expiryDateTimeString","currentDateTimeString","meetingDate","meetingExpiryDate","currentDateAndTime","User_Type","Participant_Type","Meeting_Type","Live","filterMeeting","setFilterMeeting","selectClasses","setSelectClasses","selectedPartcipatType","setSelectedParticipatType","meeting","createdBy","meetingType","participantType","userTypes","participants","employeeParticipants","studentParticipants","_s$academicInfo","_s$academicInfo$class","_s$academicInfo2","_s$academicInfo2$sect","$in","getEmployee","minWidth","FilterListIcon","listData","getMeetingId","roomId","handleJoinClick","meetingData","stupar","handleUpdateModelOpen","AddMeeting","StorageText","StorageContainer","Storage","storageDetails","setStorageDetails","totalStorage","usedStorage","storage","details","libraryBookTableKeys","BookViewModal","author","language","quantity","price","almiraNo","Books","book","cellNumber","isbnNo","edison","AddBooks","periodicalTableKeys","Periodical","periodical","issueNumber","volumeNumber","entryDate","handleGetDownloadSheet","AddFormHandel","studentMemberTableKeys","studentNonMemberTableKeys","StudentMemberAction","actionType","updateLibraryMember","removeLibraryMember","actionTitle","actionDescription","Add","RemoveIcon","StudentLibraryMember","nonMember","setNonMember","_d$otherInfo","otherInfo","libraryMember","rollNo","filteredNonMemberData","_d$otherInfo2","studentLibraryDueTableKeys","studentLibraryHistoryTableKeys","studentLibraryIssueTableKeys","BookDetailed","Issued_To_Type_Option","bookIssue","submit","StudentIssueReturn","setBook","dueList","setDueList","history","setHistory","filteredIssueData","submissionDate","bookName","bookId","issuedName","issuedTo","filtereDueData","dueDate","getBooks","issueDate","issuedToType","reduce","leftInStock","downloadPdf","downloadExcel","employeeLibraryMemberTableKeys","employeeLibraryNonMemberTableKeys","EmployeeMemberAction","EmployeeLibraryMember","empName","employeeLibraryHistoryTableKeys","employeeLibraryDueTableKeys","employeeLibraryIssueTableKeys","EmployeeIssueReturn","leaveTypeTableKeys","ListContainer","flexWrap","overflowY","ListItem","paddingRight","ListItemContainer","LeaveType","selectDepartments","setSelectDepartments","multipleDepartments","setMultipleDepartments","setState","leaveTypeFor","departments","autoEarned","isSpecial","canResetCarryForward","carryForwardCount","autoEarnCount","leaveType","departmentName","getDepartments","AddLeaveType","_selectDepartments$fi","newList","handleRemoveDepartments","CloseRounded","FormLabel","studentLeaveTableKeys","StudentsLeave","employeeLeaveManageTableKeys","employeeLeaveTableKeys","LeaveData","Leave_Options","loadingApprove","setLoadingApprove","leaveStatus","leaveApplication","approveLeave","rejectLeave","EmployeeLeave","totalDays","setotalDays","leaveTypes","setLeaveTypes","setLeaveApplication","leaveEmployeeApplication","setLeaveEmployeeApplications","range","setRange","eployeeLeaveCredits","setEployeeLeaveCredits","getLeaveApplication","leaveTypeName","getLeaveEmployeeApplications","listEmployeeApplications","getLeaveType","employeeLeaveCredits","geteEployeeLeaveCredits","endDate","number","start","end","newItem","toLocaleDateString","getDate","totalTaken","AddLeave","handleNumberOfDay","indexOfV","updatedList","Type_Options","LeaveReport","loadingPdf","setLoadingPdf","loadingExcel","setLoadingExcel","handleGetPrintPdf","handleGetDownloadExcel","_data$result$7","_data$result$8","_data$result$6","_data$result$9","_data$result$10","itemTableKeys","Item","setDepartments","PdfLoading","setPdfLoading","excelLoading","setExcelLoading","_data$department","brand","itemId","response","uri","url","createElement","href","setAttribute","appendChild","click","removeChild","revokeObjectURL","alert","VendorTableKeys","Vendor","_dataToEdit$basicInfo","_dataToEdit$basicInfo2","_dataToEdit$basicInfo3","_dataToEdit$basicInfo4","_dataToEdit$basicInfo5","_dataToEdit$basicInfo6","_dataToEdit$basicInfo7","_dataToEdit$basicInfo8","_dataToEdit$addressIn","_dataToEdit$addressIn2","_dataToEdit$addressIn3","_dataToEdit$addressIn4","_dataToEdit$bankInfo","_dataToEdit$bankInfo2","_dataToEdit$bankInfo3","_dataToEdit$bankInfo4","logo","setLogo","vendor","_data$addedBy","_data$addedBy$basicIn","addedBy","category","phone","gstNumber","dealerName","dealerPhoneNumber","website","address","addressInfo","city","zipCode","bankName","bankInfo","accountNumber","ifscCode","branchName","handleChangePhoto","TransactionTableKeys","paymenyModes","types","purposes","fromTypes","toTypes","InOutTransaction","settings","items","setItems","selectInvoice","setSelectInvoice","vendors","setVendors","selectSchool","setSelectSchool","pricePerItem","trasactionMode","purpose","fromType","toType","school","getItems","_d$addedBy","_d$addedBy$basicInfo","getVendors","_emp$basicInfo","stockListTableKeys","hover","common","black","white","OverviewTable","StockList","mr","issueDetailTableKeys","Issue","issueStatus","employeeName","sellDetailTableKeys","Sell","SellStatus","fontFamily","Container","MuiBox","DateContaner","TextOuterContent","textIndent","StudyCertificate","selectedData","setSelectedData","openBulkIssue","setOpenBulkIssue","loadingDownload","setLoadingDownload","setFromDate","setToDate","handleSubmitCertificate","_values$student","_values$student$fathe","_values$student2","_values$student2$acad","_values$student3","_values$student3$acad","_values$student4","_values$student5","_values$student6","_values$student7","_values$student8","_values$student9","_values$student10","_values$student10$sch","_values$student11","_values$student11$sch","_values$student12","_values$student12$sch","_values$student13","_values$student14","academicId","currentClass","grNo","studentPhoto","schoolAddress","schoolLogo","contactInfo","handleBulkIssueOpen","certificate","getStudyCertificate","Header","Signature","Title","TransferCertificate","receiptBookTableKeys","feeMapTableKeys","LABEL","route","pickType","stop","room","roomType","hostel","addedAfter","addedBefore","installmentsType","AddUpdateFeeMap","selectedReceipt","routes","setRoutes","stops","setStops","hostels","setHostels","roomTypes","setRoomTypes","rooms","setRooms","dependencies","setDependencies","installments","setInstallments","setAddedAfter","setAddedBefore","academicData","getAcademicYears","_r$vehicle","vehicle","routeStart","routeEnd","_route$stops$","_route$stops$2","getRoutes","h","getHostels","getRoomTypes","getRoom","handleAddForm","ceil","handleAddInstallments","fee","installmentsData","monthlyAmount","missing","Array","amount","quarterlyAmount","halfYearlyAmount","othersAmount","others","handleInstallmentChange","val","changeIndex","installment","diffInMonths","updatedDueDate","elementToRemove","removeElementFromArray","receiptTitleId","collectedFrom","routeId","roomTypeId","hostelId","stopId","feeMap","Chip","onDelete","chipToDelete","chips","chip","_s$route","picktype","_r$hostel","_r$type","_r$hostel2","_r$type2","_room$hostel","_room$type","totalBeds","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","enabled","form","showInfo","dep","_data$class","_data$hostel","_data$room","_data$room2","_data$room3","_data$room3$type","CustomActionFee","onNavigateFeeMap","receiptTitle","ReceiptBook","feeMaps","setFeeMaps","receipts","setReceipts","openFeeMap","setOpenFeeMap","selectedReceiptId","setSelectedReceiptId","selectReceipt","setSelectReceipt","detail","getFeeMaps","getReceipts","receipt","handleOpenFeeMap","handleFeeMapEdit","feeMapCategoryTableKeys","FeeMapCategory","setReceips","feeMapId","feeMapCategory","totalSeats","vehicleNumber","transportRouteTitle","CollectFees","receiptTitles","setReceiptTitles","selectStudent","setSelectStudent","feeDetails","setFeeDetails","paymentData","setPaymentData","totalAmountToBePaid","setTotalAmountToBePaid","selectedPastDueIds","setSelectedPastDueIds","downloadingReceipt","setDownloadingReceipt","itemDetails","setItemDetails","fetchingStudents","setFetchingStudents","receiptName","installmentId","_feeMaps$filter$","feeReceipt","getFeeDetails","feeMapCategories","Number","getAllReceiptTitles","getAllFeeMaps","_feeMap$class","getAllStudents","balanceFeeReportTableKeys","BalanceFeeReport","feeOverviewPaymentTableKeys","feeOverviewReceiptTableKeys","FeeOverview","collected","reconciliationTableKeys","Reconciliation","manageHostelTableKeys","HostelViewDialog","hostelType","ManageHostel","_dataToEdit$warden","getWarden","warden","manageHostelRoomTableKeys","ManageRoomType","specification","manageHostelRoomBedTableKeys","RoomAndBedViewDialog","_tableData$beds","beds","allocated","ManageRoomAndBed","_dataToEdit$type","_dataToEdit$hostel","setRoomType","updatingBed","setUpdatingBed","deletingBed","setDeletingBed","getRoomList","_h$hostel","_h$type","hostelName","getRoomTypeList","getHostelList","bed","b","onAddBedsHandle","initialBedsData","newBedData","removeBed","onCloseModal","hostelMemberTableKeys","hostelNNonMemberTableKeys","CustomActionAdd","_data$basicInfo","_room$find","setHostel","setRoom","getHostel","updateHostelMember","String","HostelMember","hostelMember","setHostelMember","nonHostelMember","setNonHostelMember","getDataMemberList","filteredDataMember","_s$otherInfo","admission","filteredDataNonMember","_s$otherInfo2","_s$otherInfo3","_s$otherInfo4","removeHostelMember","vehicleTableKeys","VehicleViewDialog","model","driverName","licenseNumber","driverContactNumber","Vehicle","_dataToEdit$driver","_v$driver","_v$driver$basicInfo","driver","trackingId","insuranceName","insuranceId","AddVehicle","manageRouteTableKeys","RouteAndTripViewDialog","_tableData$vehicle","_tableData$stops","stopKM","pickTime","pickEndTime","dropTime","dropEndTime","FormBox","ManageRouteAndTrips","vehicles","setVehicles","updatingStop","setUpdatingStop","_v$stops","_v$vehicle","stopName","vehicleForRoute","pickStart","pickEnd","dropStart","dropEnd","getVehicles","AddRouteTrips","removeStop","stopData","updateStop","addStop","initialStopsData","transportAddMemberTableKeys","transportMemberTableKeys","Pick_Type","_route$find","setRoute","getRoute","updateTransportMember","TransportMember","transportMember","setTransportMember","transportMemberList","setTransportMemberList","_s$transportInfo","_s$transportInfo2","_s$transportInfo3","transportInfo","_s$transportInfo4","_s$transportInfo5","_s$transportInfo6","formik1","formik2","removeTransportMember","routesTableKeys","Routes","sumOfSeat","setSumOfSeat","totalSeat","sum","_r$vehicle2","vehicleLogTableKeys","Trip_Completed","VehicleLog","_dataToEdit$readingAt","_dataToEdit$readingAt2","_dataToEdit$spareUse","_dataToEdit$spareUse2","_dataToEdit$readingAt5","_dataToEdit$readingAt6","departure","setDeparture","arrival","setArrival","setVehicle","getVehicle","departureTime","readingAtDeparture","reading","arrivalTime","readingAtArrival","distance","spareUse","reason","totalDistanceTravelled","tripCompleted","formDataDeparture","formDataArrival","vehicleLog","readingAtDepartureReading","handleDownloadDeparture","_dataToEdit$readingAt3","downloadUrl","_dataToEdit$readingAt4","vehicleFirmTableKeys","Firm","firm","GSTNumber","vehicleFuelTableKeys","Fuel","setFirm","maintenanceFuel","firmName","getFirm","billNo","fuelQuantity","rate","kiloMeter","vehicleRepairTableKeys","Repair","maintenanceRepair","particulars","vehicleTireTableKeys","VehicleTire","maintenanceTyre","kmReading","kmRun","tyre","tyreNo","vehicleGreecingTableKeys","Greecing","maintenanceGreecing","VehicleMaintenance","salaryGradeTableKeys","SalaryGrade","salaryGrade","breakups","deduction","handleInputChange","addItem","initialData","removeItem","AddSalaryGrade","paymentHistoryTableKeys","MakePayment","paymentHistory","setPaymentHistory","processingPayment","setProcessingPayment","downloadingDeductions","setDownloadingDeductions","deductions","setDeductions","deductionList","sg","getDeductions","selectedMonth","getPaymentHistory","downloadDeductionPdf","onDownloadClick","libraryReportTableKeys","graphData","colors","GroupBYData_Options","HeadingContainer","LibraryReport","academicYearGraph","setAcademicYearGraph","groupByData","report","groupedLibraryData","downloadGroupedLibraryData","AssessmentIcon","PieChart","wrapperStyle","formatter","Pie","isAnimationActive","outerRadius","entry","Cell","StudentYearlyAttendance","getStudentAttendanceReport","numbers","getAttendanceForDay","attendance","yearMonth","day","padStart","num","totalWorkingDays","totalPresentDays","totalAbsentDays","EmployeeYearlyAttendance","getEmployeeAttendanceReport","studentActivityReportTableKeys","StudentActivityReport","getStudentActivityReport","getStudentActivityReportPdf","selectedMonthYear","setSelectedMonthYear","getAllStudentsAttendanceReportForParticularMonth","getMonth","getFullYear","getAllEmployeesAttendanceReportForParticularMonth","visitorInfoTableKeys","VisitorInfoViewModel","_tableData$school","_tableData$toMeetUser","_tableData$reasonToMe","_tableData$reasonToMe2","comingForm","toMeetUserType","toMeetUserName","reasonToMeet","charAt","checkIn","checkOut","Reason_To_Meet","VisitorInfo","_dataToEdit$toMeetUse","_dataToEdit$section","visitorInfo","toMeetUser","toLocaleString","roleName","_roles$find","_roles$find2","studentCheckOutTableKeys","Relation_With_Student","StudentCheckout","_students$find","setLoadingExce","studentCheckout","relationship","visitorName","visitorContactNumber","donwloadExcel","AddStudentCheckoutHandel","ticketTableKeys","HelpDesk","reportImg","setReportImg","guardianFeedbackTableKeys","guardianFeedback","disableElevation","GuardianFeedback","selectedStatus","setSelectedStatus","getFeebacks","lightPalette","wordBreak","studentBulkPhotoTableKeys","StudentBulkPhoto","classCombineData","genderCombineData","libraryCombineData","vehcileCombineData","hostelCombineData","StudentReport","classBar","setClassBar","genderBar","setGenderBar","libraryBar","setLibraryBar","vehicleBar","setVehicleBar","hostelBar","setHostelBar","groupData","setGroupdata","groupDataGraph","setGroupdataGraph","classCombinedData","genderCombinedData","libraryCombinedData","vehicleCombinedData","hostelCombinedData","loadingGraph","setLoadingGraph","getStudentReport","groupBy","layout","borderColor","borderBottom","secondary","backgroundPosition","BasicData","View_Web","Library_Member","Salary_Type","AddEmployee","_dataToEdit$academicI","useParams","designationData","setDesgnationData","departmentData","setDepartmentData","selectedPhoto","setSelectedPhoto","resume","setResume","setSalaryGrade","getEmpById","getEmployeeDetails","getDesignationData","getDepartmentData","getSalaryGrade","responsibility","secMobileNo","religion","spouseName","aadharNo","fatherOccupation","spouseOccupation","qualification","workExperience","salaryType","public","showDetailsForWeb","showTextField","avatar","manageInstituteTableKeys","ManageInstitute","AddOrUpdateFiles","updatingFiles","setUpdatingFiles","setSelectedFiles","handleOpenDialog","addFiles","RollNumber_Options","Attendence_Type","Admission_Options","AddInstitute","_dataToEdit$bannerIma","initialValue","currencyToSymbolMap","bannerImages","setBannerImages","getSchoolDetails","previewCreateUrl","setPreviewCreateUrl","currencies","currencyCodes","currency","regDate","fax","websiteFooter","currencySymbol","sessionStartMonth","sessionEndMonth","studentAttendenceType","latitude","longitude","defaultTimeZone","googleAnalyticsId","teacherActivityFeedbackEnabled","facebookUrl","twitterUrl","linkedinUrl","gplusUrl","youtubeUrl","instagramUrl","pinterestUrl","selectedCurrency","TimezoneSelect","baseStyle","menu","provided","FormTable","handleLinkClick","Avatar","FileDownloadIcon","mx","Gender","Blood_Group","ProfileUpdate","_employee$basicInfo","_employee$basicInfo2","_employee$basicInfo2$","handleCreateOrUpdate","designations","setDesignations","getDesignation","res","fileUpload","handleEmpPhoto","Profile","googlePlusUrl","UpdateEmployee","useLocation","empData","academicInfoworkExperience","academicInfosalaryGrade","imageUrl","Relation_With_Guardian","RTE_Options","AddStudent","_dataToEdit$academicI2","_dataToEdit$academicI3","_dataToEdit$academicI4","_dataToEdit$academicI5","_dataToEdit$academicI6","_dataToEdit$contactIn","_dataToEdit$contactIn2","_dataToEdit$contactIn3","_dataToEdit$contactIn4","_dataToEdit$contactIn5","_dataToEdit$contactIn6","_dataToEdit$contactIn7","_dataToEdit$prevSchIn","_dataToEdit$prevSchIn2","_dataToEdit$prevSchIn3","_dataToEdit$otherInfo","_dataToEdit$otherInfo2","_dataToEdit$otherInfo3","_dataToEdit$otherInfo4","_dataToEdit$otherInfo5","_dataToEdit$otherInfo6","_dataToEdit$otherInfo7","_dataToEdit$prevSchIn4","_dataToEdit$fatherInf2","_dataToEdit$motherInf2","selectedStudentPhoto","setSelectedStuentPhoto","selectedMotherPhoto","setSelectedMotherPhoto","selectedFatherPhoto","setSelectedFatherPhoto","transferCertificate","setTransperCertificate","getStudentDetails","cicn","rte","satNo","guardianContactNumberSecondary","guardianRelation","nationId","prevSchName","prevSchInfo","tcNo","prevClass","busStop","extraInfo","fatherEdu","fatherProfession","fatherDesignation","motherEdu","motherProfession","motherDesignation","handleDownloadTransferCertificate","handleDownloadFatherPhoto","_dataToEdit$fatherInf","handleDownloadMotherPhoto","_dataToEdit$motherInf","handleDownloadStudentPhoto","AddCourse","inputlist","setInputList","benefits","inputlistBenifits","setInputListBenifits","isTrending","KeyboardDoubleArrowRightIcon","l","handleRemoveClick","handleAddClick","handleInputChangeBenifits","handleRemoveClickBenifits","handleAddClickBenifites","FormGroup","UpdateCourse","_course$courseDetails","_course$courseDetails2","_course$class","thumbnailImage","LoadingScreen","message","VideoContainer","TYPE","CREDENTIAL","OneONoneCall","appId","serverSecret","GroupCall","LiveStreaming","Room","roomID","isReady","setIsReady","setError","zpost","setZpost","getRoomDetails","destroy","handleBackPress","replace","_CREDENTIAL$meetingTy","_CREDENTIAL$meetingTy2","appID","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","zp","joinRoom","element","autoHideFooter","enableUserSearch","showMyMicrophoneToggleButton","showRoomTimer","showRemoveUserButton","scenario","config","Host","ConsoleError","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","ITEM_HEIGHT","BorderLinearProgress","LinearProgress","linearProgressClasses","colorPrimary","bar","StyledInput","InputBase","transition","transitions","Compose","sendingMessage","setSendingMessage","receiverType","setReceiverType","selectRoles","setSelectRoles","smsFrom","setSmsFrom","sms","contacts","setContacts","classPopper","setClassPopper","sectionPopper","setSectionPopper","contactsPopper","setContactsPopper","notifyChecked","setNotifyChecked","selectClass","setSelectClass","selectSection","setSelectSection","selectContacts","setSelectContacts","selectedStudentCount","setSelectedStudentCount","selectEmployee","setSelectEmployee","classAutoSelect","setClassAutoSelect","sectionAutoSelect","setSectionAutoSelect","contactsAutoSelect","setContactsAutoSelect","employeeListPopper","setEmployeeListPopper","selectedEmployeeCount","setSelectedEmployeeCount","employeeAutoSelect","setEmployeeAutoSelect","balance","setBalance","handleFormChange","flexFlow","onFocus","currentTarget","Popper","anchorEl","Autocomplete","schclass","classNames","sortedSections","sort","localeCompare","isOptionEqualToValue","disableCloseOnSelect","getOptionLabel","renderOption","selected","sectionIds","sectionNames","handleContactsList","allStudentsContacts","studentNames","renderValue","ListItemText","handleEmployeeAuto","selectedEmployees","smsType","TextareaAutosize","flexGrow","communicatonReportTableKeys","Report","setdData","Credentails","handleClassSelect","handleSectionSelect","isStudentRoleSelected","_ref8","_ref9","BulkPhoto","updatePhoto","handleNavigateStudent","drawerWidth","openedMixin","easing","sharp","duration","enteringScreen","closedMixin","leavingScreen","up","DrawerHeader","mixins","toolbar","DrawerFooter","AppBar","MuiAppBar","shouldForwardProp","prop","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","NavDrawer","sideMenuData","setSideMenuData","setAnchorEl","openProfile","Boolean","activeYear","setActiveYear","setIsDarkMode","selecteSubMenu","setSelectedSubMenu","selectedMenu","setSelectedMenu","getActiveAcademicYear","openPreviousMenu","menuIndex","CssBaseline","Toolbar","handleDrawerOpen","MenuIcon","NotificationsIcon","Menu","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","ListItemIcon","PersonIcon","LockResetIcon","handleDrawerClose","ChevronRightIcon","ChevronLeftIcon","List","ListItemButton","handleToggleMenuOpen","ExpandLess","ExpandMore","Collapse","timeout","unmountOnExit","in","sub","wordWrap","disablePadding","handleModeChange","setItem","handleLogout","LogoutIcon","Route","VehicleRoutes","StudentAttendanceReport","EmployeeAttendanceReport","Credentials","Outlet","IconComponent","KeyboardArrowDownIcon","set","getDataValue","onCardClick","selectedItem","setSelectedItem","handleDeleteClick","RemoveRedEyeRoundedIcon","PuffLoader","other","hidden","a11yProps","Tabs","scrollButtons","allowScrollButtonsMobile","Tab","FileListModal","setSelectFiles","customOnChage","handleRemoveImage","disableFuture","slotProps","textField","closeOnSelect"],"sourceRoot":""}