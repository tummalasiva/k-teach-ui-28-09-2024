{"version":3,"file":"static/js/2580.b71ca73f.chunk.js","mappings":"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","sources":["data/menu.js","components/Dashboard/ChartBar.jsx","components/Dashboard/Attendance.jsx","components/Dashboard/QuickLinks.jsx","components/Dashboard/Events.jsx","components/Dashboard/FilterStudent.jsx","pages/Dashboard.jsx","forms/AddForm.jsx","forms/FormModal.jsx","data/tableKeys/academicYearData.js","pages/Administrator/AcademicYear.jsx","data/tableKeys/designation.js","pages/HumanResource/ManageDesignation.jsx","data/tableKeys/departmentData.js","pages/HumanResource/ManageDepartment.jsx","data/tableKeys/overviewData.js","data/tableKeys/employeeData.js","data/tableKeys/inactiveEmployee.js","pages/HumanResource/Employee.jsx","data/tableKeys/offerLetterData.js","forms/LetterViewModal.jsx","pages/HumanResource/OfferLetter.jsx","data/tableKeys/relievingLetterData.js","pages/HumanResource/RelievingLetter.jsx","data/tableKeys/offBoardingData.js","pages/HumanResource/OffBoarding.jsx","data/tableKeys/experienceLetterData.js","pages/HumanResource/ExperienceLetter.jsx","data/tableKeys/teacherActivityData.js","pages/HumanResource/TeacherActivity.jsx","data/tableKeys/rolePermissionData.js","data/roleData.js","pages/Administrator/RolePermission.jsx","data/tableKeys/userRoleData.js","pages/Administrator/UserRole.jsx","pages/Administrator/ResetPassword.jsx","data/tableKeys/enquiries.js","forms/ViewModel.jsx","pages/Pre-Admission/Enquiries.jsx","data/tableKeys/exams.js","pages/Pre-Admission/QuizQuestion.jsx","pages/Pre-Admission/AddOrUpdateExamModal.jsx","pages/Pre-Admission/Exams.jsx","pages/Pre-Admission/AddOrUpdateExamSchedule.jsx","forms/DeleteModal.jsx","pages/Pre-Admission/ExamSchedules.jsx","data/tableKeys/result.js","pages/Pre-Admission/Result.jsx","data/tableKeys/academicClassData.js","pages/Academic/Class.jsx","data/tableKeys/academicSectionData.js","forms/CustomSelect.jsx","pages/Academic/Section.jsx","data/tableKeys/academicSubjectData.js","pages/Academic/Subject.jsx","data/tableKeys/studentAttendanceReportData.js","pages/Attendance/StudentAttendanceTable.jsx","utils.js","pages/Attendance/StudentAttendance.jsx","data/tableKeys/employeeReportData.js","pages/Attendance/EmployeeAttendanceTable.jsx","pages/Attendance/EmployeeAttendance.jsx","pages/ClassRoutine.jsx","components/Student/StudentCount.jsx","pages/Student/Overview.jsx","data/tableKeys/admitStudentData.js","pages/Student/AdmitStudent.jsx","components/StickyBar.jsx","pages/Student/Reshuffle.jsx","pages/Student/Promotion.jsx","pages/Student/BulkAdmission.jsx","data/tableKeys/studentCredentials.js","pages/Student/Credential.jsx","pages/Student/QuickAdmit.jsx","data/tableKeys/studentActivity.js","pages/Student/StudentActivity.jsx","data/tableKeys/noticeData.js","pages/Announcement/Notice.jsx","data/tableKeys/newsData.js","pages/Announcement/News.jsx","data/tableKeys/holidayData.js","pages/Announcement/Holiday.jsx","data/tableKeys/awardAchievementsData.js","pages/Announcement/AwardsAndAchievements.jsx","data/tableKeys/horizontalSplashNewsData.js","pages/Announcement/AddHorizontalSplash.jsx","data/tableKeys/popupSplashNewsData.js","pages/Announcement/AddPopup.jsx","pages/Announcement/SplashNews.jsx","data/tableKeys/galleryListData.js","pages/Gallery.jsx","data/tableKeys/notificationsData.js","pages/Notifications.jsx","data/tableKeys/eventData.js","pages/Event.jsx","data/tableKeys/examGradeData.js","pages/Exam/ExamGrade.jsx","data/tableKeys/examTermData.js","pages/Exam/ExamTerm.jsx","data/tableKeys/examListData.js","data/tableKeys/ScheduleListData.js","pages/Exam/ExamSchedule.jsx","pages/Exam/ExamHallTicket.jsx","pages/ExamMark/DivisionWiseReport.jsx","pages/ExamMark/SubjectWiseReport.jsx","data/tableKeys/consolidateMarksCardData.js","pages/ExamMark/ConsolidatedMarkSheet.jsx","data/tableKeys/marksCardData.js","pages/ExamMark/Markscard.jsx","data/tableKeys/examResultData.js","pages/ExamMark/ExamResultViewModel.jsx","pages/ExamMark/ExamResult.jsx","forms/CustomInput.jsx","pages/ExamMark/ManageMark.jsx","data/tableKeys/examAttendanceData.js","pages/ExamMark/ExamAttendance.jsx","pages/LMS/Courses.jsx","context/ContentContext.js","pages/LMS/CourseContentTable.jsx","pages/LMS/CourseDialogs/VideoDialog.jsx","pages/LMS/CourseDialogs/QuizDialog.jsx","pages/LMS/CourseDialogs/FlashcardDialog.jsx","pages/LMS/CourseDialogs/MaterialsDialog.jsx","pages/LMS/CourseDialogs/AddChapterDialog.jsx","pages/LMS/ShowCourseContent.jsx","pages/LMS/CourseContent.jsx","pages/LMS/Live.jsx","pages/LMS/Storage.jsx","data/tableKeys/libraryBooksData.js","pages/Library/BookViewModal.jsx","pages/Library/Books.jsx","data/tableKeys/periodicalData.js","pages/Library/Periodical.jsx","data/tableKeys/studentMember.js","data/tableKeys/studentNonMember.js","pages/Library/StudentLibraryMember.jsx","data/tableKeys/studentLibraryDueData.js","data/tableKeys/studentLibraryHistoryData.js","data/tableKeys/studentlibraryIssueData.js","pages/Library/StudentIssueReturn.jsx","data/tableKeys/employeeLibraryNonMemberData.js","data/tableKeys/employeeLibraryMemberData.js","pages/Library/EmployeeLibraryMember.jsx","data/tableKeys/employeeLibraryHistroyData.js","data/tableKeys/employeeLibraryDueData.js","data/tableKeys/employeeLibraryIssueData.js","pages/Library/EmployeeIssueReturn.jsx","data/tableKeys/leaveTypeData.js","pages/LeaveManagement/LeaveType.jsx","data/tableKeys/studentLeaveData.js","pages/LeaveManagement/StudentsLeave.jsx","data/tableKeys/employeeLeaveManageData.js","data/tableKeys/employeeLeaveListData.js","pages/LeaveManagement/EmployeeLeave.jsx","pages/LeaveManagement/LeaveReport.jsx","data/tableKeys/itemData.js","pages/Inventory/Item.jsx","data/tableKeys/vendorData.js","pages/Inventory/Vendor.jsx","data/tableKeys/transactionData.js","pages/Inventory/InOutTransaction.jsx","data/tableKeys/stockListData.js","pages/Inventory/OverviewTable.jsx","pages/Inventory/StockList.jsx","data/tableKeys/issueDetailData.js","pages/Inventory/Issue.jsx","data/tableKeys/sellDetailData.js","pages/Inventory/Sell.jsx","pages/Certificate/StudyCertificate.jsx","pages/Certificate/TransferCertificate.jsx","data/tableKeys/receiptBookData.js","data/tableKeys/feeMapData.js","pages/Fees/AddUpdateFeeMap.jsx","pages/Fees/ViewInstallments.jsx","pages/Fees/ReceiptBook.jsx","data/tableKeys/feeMapCategoryData.js","pages/Fees/AddFeeMapCategory.jsx","pages/Fees/FeeMapCategory.jsx","pages/Fees/QuickFeeConcessionModal.jsx","pages/Fees/QuickFeeCollectModal.jsx","pages/Fees/CollectFees.jsx","data/tableKeys/balanceFeeReportData.js","pages/Fees/BalanceFeeReport.jsx","data/tableKeys/feeOverviewPaymentData.js","data/tableKeys/feeOverviewReceiptData.js","pages/Fees/FeeOverview.jsx","data/tableKeys/reconciliationData.js","pages/Fees/Reconciliation.jsx","data/tableKeys/manageHostelData.js","pages/Hostel/HostelViewDialog.jsx","pages/Hostel/ManageHostel.jsx","data/tableKeys/manageHostelRoom.js","pages/Hostel/ManageRoomType.jsx","data/tableKeys/manageHostelRoomBedData.js","pages/Hostel/RoomAndBedViewDialog.jsx","pages/Hostel/ManageRoomAndBed.jsx","data/tableKeys/hostelMemberData.js","data/tableKeys/hostelNonMember.js","pages/Hostel/HostelMember.jsx","data/tableKeys/vehicleData.js","pages/Transport/VehicleViewDialog.jsx","pages/Transport/Vehicle.jsx","data/tableKeys/manageRouteData.js","pages/Transport/RouteAndTripViewDialog.jsx","pages/Transport/ManageRouteAndTrips.jsx","data/tableKeys/transportAddMemberData.js","data/tableKeys/transportMemberData.js","pages/Transport/TransportMember.jsx","data/tableKeys/routesData.js","pages/Transport/Routes.jsx","data/tableKeys/vehicleLogData.js","pages/Transport/VehicleLog.jsx","data/tableKeys/vehcleFirmData.js","components/Transport/Firm.jsx","data/tableKeys/vehicleFuelData.js","components/Transport/Fuel.jsx","data/tableKeys/vehicleRepairData.js","components/Transport/Repair.jsx","data/tableKeys/vehicleTireData.js","components/Transport/VehicleTire.jsx","data/tableKeys/vehicleGreecingData.js","components/Transport/Greecing.jsx","pages/Transport/VehicleMaintenance.jsx","data/tableKeys/salaryGradeData.js","pages/PayRoll/SalaryGrade.jsx","data/tableKeys/paymentHistoryData.js","pages/PayRoll/MakePayment.jsx","data/tableKeys/libraryTabularData.js","pages/Report/LibraryReport.jsx","pages/Report/StudentYearlyAttendance.jsx","pages/Report/EmployeeYearlyAttendance.jsx","data/tableKeys/studentActivityReportData.js","pages/Report/StudentActivityReport.jsx","pages/Report/StudentAttendance.jsx","pages/Report/EmployeeAttendance.jsx","data/tableKeys/visitorInfoData.js","pages/VisitorInfo/VisitorInfoViewModel.jsx","pages/VisitorInfo/VisitorInfo.jsx","data/tableKeys/studentCheckoutData.js","pages/VisitorInfo/StudentCheckout.jsx","data/tableKeys/ticketData.js","pages/HelpDesk.jsx","data/tableKeys/guardianFeedbackData.js","pages/GuardianFeedback.jsx","data/tableKeys/studentBulkPhotoData.js","pages/Student/StudentBulkPhoto.jsx","pages/Report/StudentReport.jsx","pages/HumanResource/AddEmployee.jsx","data/tableKeys/manageInstituteData.js","pages/ManageInstitute/ManageInstitute.jsx","forms/AddOrUpdateFiles.jsx","pages/ManageInstitute/AddInstitute.jsx","pages/AccountSettings/FormTable.jsx","pages/AccountSettings/ProfileUpdate.jsx","pages/AccountSettings/Profile.jsx","pages/HumanResource/UpdateEmployee.jsx","pages/Student/AddStudent.jsx","pages/LMS/AddCourse.jsx","pages/LMS/UpdateCourse.jsx","components/LoaddingScreen.jsx","pages/LMS/Room.jsx","pages/Communication/Compose.jsx","pages/Communication/Report.jsx","pages/Communication/Credentials.jsx","pages/Student/BulkPhoto.jsx","pages/Student/IdCard.jsx","data/tableKeys/assignmentData.js","pages/Assignment/AddEditAssignment.jsx","pages/Assignment/AssignmentViewModal.jsx","pages/Assignment/Assignment.jsx","components/NavDrawer.jsx","components/PageHeader.jsx","components/Tables/CustomTable.jsx","components/Tables/NoTableData.jsx","components/Tabs/TabPanel.jsx","components/Tabs/Tablist.jsx","components/ThemeSelector.jsx","forms/FileListModal.jsx","forms/FileSelect.jsx","forms/FormDatePicker.jsx"],"sourcesContent":["/** @format */\n\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\n\nimport React from \"react\";\nimport GiteIcon from \"@mui/icons-material/Gite\";\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\";\nimport DirectionsBusIcon from \"@mui/icons-material/DirectionsBus\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\nimport ManIcon from \"@mui/icons-material/Man\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport FeedbackIcon from \"@mui/icons-material/Feedback\";\nimport PhotoRoundedIcon from \"@mui/icons-material/PhotoRounded\";\nimport WcIcon from \"@mui/icons-material/Wc\";\nimport SubdirectoryArrowRightOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowRightOutlined\";\n\nimport {\n  SettingsSuggest,\n  AccountBalance,\n  AccessTime,\n  Groups,\n  CheckBox,\n  TextSnippet,\n  SchoolRounded,\n  CardMembershipRounded,\n  CampaignRounded,\n  Person,\n  CurrencyRupee,\n  BarChart,\n  InstallMobileRounded,\n} from \"@mui/icons-material\";\n\nimport NotificationsActiveRoundedIcon from \"@mui/icons-material/NotificationsActiveRounded\";\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\n\nimport Diversity2Icon from \"@mui/icons-material/Diversity2\";\n\nconst SIDE_MENU_DATA = [\n  {\n    name: \"Dashboard\",\n    path: \"/sch/dashboard\",\n    renderName: [],\n    subMenus: [],\n    icon: <DashboardRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Manage Institute\",\n    path: \"/sch/manage-institute\",\n    renderName: [\"\"],\n    subMenus: [],\n    icon: <SettingsSuggest color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Administrator\",\n    path: \"\",\n    renderName: [\n      \"academicYear\",\n      \"userRole\",\n      \"rolePermission\",\n      \"userPasswordReset\",\n    ],\n\n    icon: <Person color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Academic Year\",\n        renderName: \"academicYear\",\n        path: \"/sch/administrator/academicYear\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      // {\n      //   name: \"User Role(ACL)\",\n      //   renderName: \"userRole\",\n      //   path: \"/sch/administrator/user-role\",\n      //   icon: (\n      //     <SubdirectoryArrowRightOutlinedIcon\n      //       color=\"primary\"\n      //       fontSize=\"small\"\n      //     />\n      //   ),\n      // },\n      {\n        name: \"Roles & Permissions\",\n        renderName: \"rolePermission\",\n        path: \"/sch/administrator/role-permission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"User Password Reset\",\n        renderName: \"userPasswordReset\",\n        path: \"/sch/administrator/reset-password\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Human Resource\",\n    path: \"\",\n    renderName: [\n      \"manageDesignation\",\n      \"manageDepartment\",\n      \"employee\",\n      \"offerLetter\",\n      \"relievingLetter\",\n      \"offBoarding\",\n      \"experienceLetter\",\n      \"teacherActivity\",\n    ],\n    icon: <Diversity2Icon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Designation\",\n        renderName: \"manageDesignation\",\n        path: \"/sch/human-resource/manage-designation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Department\",\n        renderName: \"manageDepartment\",\n        path: \"/sch/human-resource/manage-department\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee\",\n        renderName: \"employee\",\n        path: \"/sch/human-resource/employee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Offer-Letter\",\n        renderName: \"offerLetter\",\n        path: \"/sch/human-resource/offer-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Relieving Letter\",\n        renderName: \"relievingLetter\",\n        path: \"/sch/human-resource/relieving-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Off Boarding\",\n        renderName: \"offBoarding\",\n        path: \"/sch/human-resource/off-boarding\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Experience Letter\",\n        renderName: \"experienceLetter\",\n        path: \"/sch/human-resource/experience-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Teacher Activity\",\n        renderName: \"teacherActivity\",\n        path: \"/sch/human-resource/teacher-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Pre-Admission\",\n    path: \"\",\n    renderName: [\"enquiries\", \"enquiries\", \"examSchedules\", \"result\"],\n    icon: <ManIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Enquiries\",\n        renderName: \"enquiries\",\n        path: \"/sch/pre-admission/enquiries\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exams\",\n        renderName: \"exams\",\n        path: \"/sch/pre-admission/exams\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Schedules\",\n        renderName: \"examSchedules\",\n        path: \"/sch/pre-admission/exam-schedules\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Result\",\n        renderName: \"result\",\n        path: \"/sch/pre-admission/result\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Academic\",\n    path: \"\",\n    renderName: [\"class\", \"section\", \"subject\"],\n    icon: <AccountBalance color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Class\",\n        renderName: \"class\",\n        path: \"/sch/academic/class\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Section\",\n        renderName: \"section\",\n        path: \"/sch/academic/section\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject\",\n        renderName: \"subject\",\n        path: \"/sch/academic/subject\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Attendance\",\n    path: \"\",\n    renderName: [\"studentAttendance\", \"employeeAttendance\"],\n    icon: <CheckBox color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Student Attendance\",\n        renderName: \"studentAttendance\",\n        path: \"/sch/attendence/student-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Attendance\",\n        renderName: \"employeeAttendance\",\n        path: \"/sch/attendence/employee-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Class Routine\",\n    path: \"/sch/class-routine\",\n    renderName: [\"class-routine\"],\n    subMenus: [],\n    icon: <AccessTime color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Student\",\n    path: \"\",\n    renderName: [\n      \"overview\",\n      \"admitStudent\",\n      \"reshuffle\",\n      \"promotion\",\n      \"bulkAdmission\",\n      \"credential\",\n      \"quickAdmit\",\n      \"studentActivity\",\n    ],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Overview\",\n        renderName: \"overview\",\n        path: \"/sch/student/overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Admit Student\",\n        renderName: \"admitStudent\",\n        path: \"/sch/student/admit-student\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reshuffle\",\n        renderName: \"reshuffle\",\n        path: \"/sch/student/reshuffle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Promotion\",\n        renderName: \"promotion\",\n        path: \"/sch/student/promotion\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Bulk Admission\",\n        renderName: \"bulkAdmission\",\n        path: \"/sch/student/bulk-admission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credential\",\n        renderName: \"credential\",\n        path: \"/sch/student/credential\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Quick Admit\",\n        renderName: \"quickAdmit\",\n        path: \"/sch/student/quick-admit\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Id Card\",\n        renderName: \"id_card\",\n        path: \"/sch/student/id-card\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Activity\",\n        renderName: \"studentActivity\",\n        path: \"/sch/student/student-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Assignment\",\n    path: \"/sch/assignment\",\n    renderName: [\"assgnment\"],\n    subMenus: [],\n    icon: <AssignmentRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Communication\",\n    path: \"\",\n    renderName: [\"compose\", \"report\", \"credentials\"],\n    icon: <InstallMobileRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Compose\",\n        renderName: \"compose\",\n        path: \"/sch/communication_compose\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Report\",\n        renderName: \"report\",\n        path: \"/sch/communication_report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credentials\",\n        renderName: \"credentials\",\n        path: \"/sch/communication_credentials\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Announcement\",\n    path: \"\",\n    renderName: [\n      \"notice\",\n      \"news\",\n      \"holiday\",\n      \"awardsAndAchievements\",\n      \"splashNews\",\n    ],\n    icon: <CampaignRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Notice\",\n        renderName: \"notice\",\n        path: \"/sch/announcement/notice\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"News\",\n        renderName: \"news\",\n        path: \"/sch/announcement/news\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Holiday\",\n        renderName: \"holiday\",\n        path: \"/sch/announcement/holiday\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Awards And Achievements\",\n        renderName: \"awardsAndAchievements\",\n        path: \"/sch/announcement/awardsAndAchievements\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Splash News\",\n        renderName: \"splashNews\",\n        path: \"/sch/announcement/splashNews\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Gallery\",\n    path: \"/sch/gallery\",\n    renderName: [\"gallery\"],\n    subMenus: [],\n    icon: <PhotoRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Notifications\",\n    path: \"/sch/notifications\",\n    renderName: [\"notifications\"],\n    subMenus: [],\n    icon: <NotificationsActiveRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Event\",\n    path: \"/sch/event\",\n    renderName: [\"event\"],\n    subMenus: [],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Exam\",\n    path: \"\",\n    renderName: [\"examGrade\", \"examTerm\", \"examSchedule\", \"examHallTicket\"],\n    icon: <TextSnippet color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Exam Grade\",\n        renderName: \"examGrade\",\n        path: \"/sch/exam/exam-grade\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Term\",\n        renderName: \"examTerm\",\n        path: \"/sch/exam/exam-term\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Schedule\",\n        renderName: \"examSchedule\",\n        path: \"/sch/exam/exam-schedule\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Hall Ticket\",\n        renderName: \"examHallTicket\",\n        path: \"/sch/exam/exam-hall-ticket\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Exam Mark\",\n    path: \"\",\n    renderName: [\n      \"examAttendance\",\n      \"manageMark\",\n      \"examResult\",\n      \"marksCard\",\n      \"consolidatedMarksSheet\",\n      \"subjectWiseReport\",\n      \"divisionWiseReport\",\n    ],\n    icon: <SchoolRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Exam Attendance\",\n        renderName: \"examAttendance\",\n        path: \"/sch/exam-Mark/exam-Attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Mark\",\n        renderName: \"manageMark\",\n        path: \"/sch/exam-Mark/manage-mark\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Exam Result\",\n        renderName: \"examResult\",\n        path: \"/sch/exam-Mark/exam-result\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Marks Card\",\n        renderName: \"marksCard\",\n        path: \"/sch/exam-Mark/marks-card\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Consolidated Marks Sheet\",\n        renderName: \"consolidatedMarksSheet\",\n        path: \"/sch/exam-Mark/consolidated-marks-sheet\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject Wise Report\",\n        renderName: \"subjectWiseReport\",\n        path: \"/sch/exam-Mark/subject-wise-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Division Wise Report\",\n        renderName: \"divisionWiseReport\",\n        path: \"/sch/exam-Mark/division-wise-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"LMS\",\n    path: \"\",\n    renderName: [\"storage\", \"courses\", \"courseContent\", \"live\"],\n    icon: <LibraryBooksIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Storage\",\n        renderName: \"storage\",\n        path: \"/sch/lms/storage\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Courses\",\n        renderName: \"courses\",\n        path: \"/sch/lms/courses\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Course Content\",\n        renderName: \"courseContent\",\n        path: \"/sch/lms/course-content\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Live\",\n        renderName: \"live\",\n        path: \"/sch/lms/live\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Library\",\n    path: \"\",\n    renderName: [\n      \"books\",\n      \"periodical\",\n      \"studentLibraryMember\",\n      \"employeeLibraryMember\",\n      \"studentIssueReturn\",\n    ],\n    icon: <LibraryBooksIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Books\",\n        renderName: \"books\",\n        path: \"/sch/library/books\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Periodical\",\n        renderName: \"periodical\",\n        path: \"/sch/library/periodical\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Library Member\",\n        renderName: \"studentLibraryMember\",\n        path: \"/sch/library/student-library-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Library Member\",\n        renderName: \"employeeLibraryMember\",\n        path: \"/sch/library/employee-library-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Issue & Return\",\n        renderName: \"studentIssueReturn\",\n        path: \"/sch/library/student-issue-return\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Leave Management\",\n    path: \"\",\n    renderName: [\"leaveType\", \"employeeLeave\", \"studentLeave\", \"leaveReport\"],\n    icon: <CheckBox color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Leave Type\",\n        renderName: \"leaveType\",\n        path: \"/sch/leave-management/leave-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Leave\",\n        renderName: \"employeeLeave\",\n        path: \"/sch/leave-management/employee-leave\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Students Leave\",\n        renderName: \"studentLeave\",\n        path: \"/sch/leave-management/student-leave\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Leave Report\",\n        renderName: \"leaveReport\",\n        path: \"/sch/leave-management/leave-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Inventory\",\n    path: \"\",\n    renderName: [\"item\", \"vendor\", \"transaction\", \"stockList\", \"issue\", \"sell\"],\n    icon: <InventoryIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Item\",\n        renderName: \"item\",\n        path: \"/sch/inventory/item\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vendor\",\n        renderName: \"vendor\",\n        path: \"/sch/inventory/vendor\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"In/Out Transaction\",\n        renderName: \"transaction\",\n        path: \"/sch/inventory/transaction\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Stock List\",\n        renderName: \"stockList\",\n        path: \"/sch/inventory/stockList\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Issue\",\n        renderName: \"issue\",\n        path: \"/sch/inventory/issue\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Sell\",\n        renderName: \"sell\",\n        path: \"/sch/inventory/sell\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Certificate\",\n    path: \"\",\n    renderName: [\"studyCertificate\", \"transferCertificate\"],\n    icon: <CardMembershipRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Study Certificate\",\n        renderName: \"studyCertificate\",\n        path: \"/sch/certificate/study-certificate\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Transfer Certificate\",\n        renderName: \"transferCertificate\",\n        path: \"/sch/certificate/transfer-certificate\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Fees\",\n    path: \"\",\n    renderName: [\n      \"receiptBook\",\n      \"feeMapCategory\",\n      \"collectFees\",\n      \"balanceFee\",\n      \"feeOverview\",\n      \"reconciliation\",\n    ],\n    icon: <CurrencyRupee color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Receipt Book\",\n        renderName: \"receiptBook\",\n        path: \"/sch/fees/receipt-book\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Map Category\",\n        renderName: \"feeMapCategory\",\n        path: \"/sch/fees/feeMap-category\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Collect Fees\",\n        renderName: \"collectFees\",\n        path: \"/sch/fees/collect-fees\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Balance Fee\",\n        renderName: \"balanceFee\",\n        path: \"/sch/fees/balance-fee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Overview\",\n        renderName: \"feeOverview\",\n        path: \"/sch/fees/fee-overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reconciliation\",\n        renderName: \"reconciliation\",\n        path: \"/sch/fees/re-conciliation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Hostel\",\n    path: \"\",\n    renderName: [\n      \"manageHostel\",\n      \"manageRoomType\",\n      \"manageRoomBed\",\n      \"hostelMember\",\n    ],\n    icon: <GiteIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Hostel\",\n        renderName: \"manageHostel\",\n        path: \"/sch/hostel/manage-hostel\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Type\",\n        renderName: \"manageRoomType\",\n        path: \"/sch/hostel/manage-room-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Bed\",\n        renderName: \"manageRoomBed\",\n        path: \"/sch/hostel/manage-room-bed\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Hostel Member\",\n        renderName: \"hostelMember\",\n        path: \"/sch/hostel/hostel-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Transport\",\n    path: \"\",\n    renderName: [\n      \"vehicle\",\n      \"manageRoute\",\n      \"routes\",\n      \"trasportMember\",\n      \"vehicleLog\",\n      \"vehicleMaintenance\",\n    ],\n    icon: <DirectionsBusIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Vehicle\",\n        renderName: \"vehicle\",\n        path: \"/sch/transport/vehicle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Route & Trips\",\n        renderName: \"manageRoute\",\n        path: \"/sch/transport/manage-route\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Routes\",\n        renderName: \"routes\",\n        path: \"/sch/transport/routes\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Trasport Member\",\n        renderName: \"trasportMember\",\n        path: \"/sch/transport/trasport-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vehicle Log\",\n        renderName: \"vehicleLog\",\n        path: \"/sch/transport/vehicle-log\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Vehicle Maintenance\",\n        renderName: \"vehicleMaintenance\",\n        path: \"/sch/transport/vehicle-maintenance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Payroll\",\n    path: \"\",\n    renderName: [\"salaryGrade\", \"makePayment\"],\n    icon: <CurrencyRupeeIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Salary Grade\",\n        renderName: \"salaryGrade\",\n        path: \"/sch/payroll/salary-grade\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Make Payment\",\n        renderName: \"makePayment\",\n        path: \"/sch/payroll/make-payment\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Report\",\n    path: \"\",\n    renderName: [\n      \"libraryReport\",\n      \"studentAttendance\",\n      \"studentYearlyAttendane\",\n      \"employeeAttendance\",\n      \"employeeYearlyAttendance\",\n      \"studentReport\",\n      \"studentActivityReport\",\n    ],\n    icon: <BarChart color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Library Report\",\n        renderName: \"libraryReport\",\n        path: \"/sch/report/library-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Attendance\",\n        renderName: \"studentAttendance\",\n        path: \"/sch/report/student-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Yearly Attendane\",\n        renderName: \"studentYearlyAttendaneroutes\",\n        path: \"/sch/report/student-yearly-attendane\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Attendance\",\n        renderName: \"employeeAttendance\",\n        path: \"/sch/report/employee-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee Yearly Attendance\",\n        renderName: \"employeeYearlyAttendance\",\n        path: \"/sch/report/employee-yearly-attendance\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Student Report\",\n        renderName: \"studentReport\",\n        path: \"/sch/report/student-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Activity Report\",\n        renderName: \"studentActivityReport\",\n        path: \"/sch/report/student-activity-report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Visitor Info\",\n    path: \"\",\n    renderName: [\"visitorInfo\", \"studentCheckout\"],\n    icon: <WcIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Visitor Info\",\n        renderName: \"visitorInfo\",\n        path: \"/sch/visitorInfo/visitor-info\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Student Checkout\",\n        renderName: \"studentCheckout\",\n        path: \"/sch/visitorInfo/student-checkout\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n  {\n    name: \"Help Desk\",\n    path: \"/sch/help-desk\",\n    renderName: [\"Help desk\"],\n    subMenus: [],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n  },\n  {\n    name: \"Guardian Feedback\",\n    path: \"/sch/guardian-feedback\",\n    renderName: [\"guardianFeedback\"],\n    subMenus: [],\n    icon: <FeedbackIcon color=\"primary\" fontSize=\"small\" />,\n  },\n];\n\nexport default {\n  SIDE_MENU_DATA,\n};\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Box, Paper } from \"@mui/material\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst ChartBar = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [uniqueSections, setUniqueSections] = useState([]);\n  const { ref, width } = useResizeObserver();\n\n  const getRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getDashboardStudentDetails,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      const transformedData = data.result.map((classItem) => {\n        const transformedItem = { className: classItem.className };\n        Object.keys(classItem.sections).forEach((section) => {\n          transformedItem[section] = classItem.sections[section];\n        });\n        return transformedItem;\n      });\n\n      setClasses(transformedData);\n\n      const sections = new Set();\n      data.result.forEach((classItem) => {\n        Object.keys(classItem.sections).forEach((section) => {\n          sections.add(section);\n        });\n      });\n\n      setUniqueSections([...sections]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <Box sx={{ display: \"flex\", flex: 1 }} ref={ref}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Paper sx={{ width: \"100%\", height: \"100%\" }}>\n          <BarChart\n            width={width ? width - 10 : 700}\n            height={373}\n            data={classes}\n            margin={{ top: 20, right: 5, left: 0, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"className\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {uniqueSections.map((sectionName) => (\n              <Bar\n                key={sectionName}\n                dataKey={sectionName}\n                fill={getRandomColor()}\n                stackId=\"stack\"\n              />\n            ))}\n          </BarChart>\n        </Paper>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ChartBar;\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Groups } from \"@mui/icons-material\";\nimport ChartBar from \"./ChartBar\";\nimport { Link } from \"react-router-dom\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst OuterCard = styled(Card)(({ theme }) => ({\n  marginBottom: \"15px\",\n  padding: \"20px 0\",\n  height: \"auto\",\n  width: \"100%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n}));\n\nconst InnerBox = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\",\n}));\n\nconst Content = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  fontSize: \"16px\",\n  fontWeight: 600,\n}));\n\nconst Data = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  textAlign: \"center\",\n}));\n\nconst Count = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"3px\",\n}));\n\nexport default function Attendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [studentAttendence, setStudentAttendence] = useState([]);\n  const [employeeAttendence, setEmployeeAttendence] = useState([]);\n\n  const getStudentAttendanceSummary = async () => {\n    try {\n      const [studentData, employeeData] = await Promise.all([\n        get(PRIVATE_URLS.studentAttendance.getAttendanceSummaryForToday, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }),\n        get(\n          PRIVATE_URLS.employeeAttendance.getEmployeeAttendanceSummaryForToday,\n          {\n            params: {\n              schoolId: selectedSetting._id,\n            },\n          }\n        ),\n      ]);\n\n      // console.log(studentData.data?.result, \"student attendance data\");\n      // console.log(employeeData?.data?.result, \"employee attendance data\");\n      setStudentAttendence(studentData.data?.result);\n      setEmployeeAttendence(employeeData?.data?.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudentAttendanceSummary();\n  }, [selectedSetting._id]);\n\n  const darkMode = window.localStorage.getItem(\"isDarkMode\");\n\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: { xs: 2, sm: 2, md: \"0px 15px\", lg: \"0px 15px\" },\n          margin: \"20px 0px\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\"\n              ? \"rgba(255,255,255,0.5)\"\n              : \"whitesmoke\",\n        }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={4} lg={4}>\n            <OuterCard>\n              <InnerBox>\n                <Groups\n                  sx={{\n                    width: \"80px\",\n                    height: \"70px\",\n                    color: darkMode === \"true\" ? \"#fff\" : \"#1b3779\",\n                  }}\n                />\n              </InnerBox>\n              {/* <Content> */}\n              <Data>\n                <Typography sx={{ fontWeight: 600 }}>\n                  Students Attendance\n                </Typography>\n                <Count>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#FF8042\" }}>Total Students: </span>\n                      {studentAttendence?.totalStudents}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#00C49F\" }}>Not Taken: </span>\n                      {studentAttendence?.attendanceNotTaken}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#0088FE\" }}>Total Present: </span>\n                      {studentAttendence?.totalPresent}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"red\" }}>Total Absent: </span>\n                      {studentAttendence?.totalAbsent}\n                    </Typography>\n                  </Stack>\n                </Count>\n              </Data>\n              {/* </Content> */}\n            </OuterCard>\n            <OuterCard>\n              <InnerBox>\n                <Groups\n                  sx={{\n                    width: \"80px\",\n                    height: \"70px\",\n                    color: darkMode === \"true\" ? \"#fff\" : \"#1b3779\",\n                  }}\n                />\n              </InnerBox>\n\n              {/* <Content> */}\n              <Data>\n                <Typography sx={{ fontWeight: 600 }}>\n                  Employees Attendance\n                </Typography>\n                <Count>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#FF8042\" }}>\n                        Total Employees:{\" \"}\n                      </span>\n                      {employeeAttendence?.totalEmployees}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#00C49F\" }}>Not Taken: </span>\n                      {employeeAttendence?.attendanceNotTaken}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#0088FE\" }}>Total Present: </span>\n                      {employeeAttendence?.totalPresent}\n                    </Typography>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"red\" }}>Total Absent: </span>\n                      {employeeAttendence?.totalAbsent}\n                    </Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Typography fontSize=\"12px\" fontWeight={600}>\n                      <span style={{ color: \"#FFBB28\" }}>Total Late: </span>\n                      {employeeAttendence?.totalLate}\n                    </Typography>\n                  </Stack>\n                </Count>\n              </Data>\n              {/* </Content> */}\n            </OuterCard>\n          </Grid>\n          <Grid item xs={12} sm={12} md={8} lg={8}>\n            <ChartBar />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Card, Fab, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nimport {\n  CardMembership,\n  FindInPage,\n  Groups,\n  Message,\n} from \"@mui/icons-material\";\nimport { Link } from \"react-router-dom\";\n\nconst DataContainer = styled(Card)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  justifyContent: \"space-evenly\",\n  padding: \"25px 0px\",\n  flexDirection: \"column\",\n}));\nconst StyledFab = styled(Fab)(({ theme }) => ({\n  background: \"#1b3779\",\n  color: \"#fff\",\n  \"&:hover\": {\n    color: \"#1b3779\",\n  },\n}));\nexport default function QuickLinks() {\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: 2,\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\"\n              ? \"rgba(255,255,255,0.5)\"\n              : \"whitesmoke\",\n        }}>\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"center\">\n            <Typography\n              sx={{\n                fontSize: 18,\n                fontWeight: \"bold\",\n                color: (theme) =>\n                  theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n              }}>\n              Quick Links\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/student/add-student\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Groups />\n                  </StyledFab>\n                </Box>\n                <Box>Admit Students</Box>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/human-resource/add-employee\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Groups />\n                  </StyledFab>\n                </Box>\n                <Box>Admit Employee</Box>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/exam-Mark/exam-result\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <FindInPage />\n                  </StyledFab>\n                </Box>\n\n                <Typography> Exam Results</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/exam-Mark/marks-card\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <CardMembership />\n                  </StyledFab>\n                </Box>\n                <Typography>Marks Cards</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n          <Grid item xs={12} sm={12} md={2.4} lg={2.4}>\n            <Link\n              to=\"/sch/communication_compose\"\n              style={{ textDecoration: \"none\" }}>\n              <DataContainer>\n                <Box>\n                  <StyledFab size=\"small\">\n                    <Message />\n                  </StyledFab>\n                </Box>\n                <Typography>Communication</Typography>\n              </DataContainer>\n            </Link>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Collapsible from \"react-collapsible\";\n\nimport dayjs from \"dayjs\";\nimport \"../Styles/Dashboard.css\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\n\nconst ScrollContainer = styled(Box)(({ theme }) => ({\n  borderRadius: \"5px\",\n  margin: \"18px\",\n  transform: \"translateY(0%)\",\n  animation: \"scroll 15s linear infinite\",\n  animationPlayState: \"running\",\n\n  \"&:hover\": {\n    animationPlayState: \"paused\",\n  },\n\n  \"@keyframes scroll\": {\n    from: {\n      transform: \"translateY(50%)\",\n    },\n    to: {\n      transform: \"translateY(-100%)\",\n    },\n  },\n}));\n\nconst DashboardScorlText = styled(Card)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"10px 0px\",\n\n  height: \"100%\",\n}));\n\nconst NoDataFound = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"5px\",\n  padding: \"5px\",\n  fontWeight: 700,\n}));\n\nconst DashboardNewsConent = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  height: \"auto\",\n  width: \"95%\",\n  marginLeft: \"1rem\",\n  marginRight: \"2rem\",\n  paddingBottom: \"5px\",\n  position: \"relative\",\n}));\n\nconst BoldTrigger = styled(Typography)(({ theme }) => ({\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  fontSize: \"18px\",\n  borderLeft: \"7px solid #ffeb3b\",\n  paddingLeft: theme.spacing(1),\n}));\n\nconst NoticeItem = styled(Typography)(({ theme }) => ({\n  fontWeight: 700,\n  \"&:hover\": {\n    color: themeData.darkPalette.primary.main,\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Events() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [notice, setNotice] = useState([]);\n  const [holidays, setHolidays] = useState([]);\n  // console.log(notice?.length, \"resss\");\n\n  const getNotice = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setNotice(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getHolidays = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setHolidays(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getNotice();\n    getHolidays();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: 2,\n          mt: 2,\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\"\n              ? \"rgba(255,255,255,0.5)\"\n              : \"whitesmoke\",\n        }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Calendar\n              tileClassName={({ date }) => {\n                const today = new Date();\n                if (date.toDateString() === today.toDateString()) {\n                  return \"blue-day\";\n                }\n                return \"\";\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <Card sx={{ minHeight: \"200px\", padding: \"15px\" }}>\n              <Collapsible open={true}>\n                <BoldTrigger>{`Notices: (${notice?.length})`}</BoldTrigger>\n                <Divider sx={{ width: \"100%\", mt: 1 }} />\n                <Box\n                  sx={{\n                    height: \"140px\",\n                    maxHeight: \"140px\",\n                    overflow: \"auto\",\n                  }}>\n                  <DashboardScorlText elevation={0}>\n                    <ScrollContainer>\n                      {notice?.map((data, index) => (\n                        <DashboardNewsConent key={index}>\n                          <NoticeItem component=\"li\">{data.notice}</NoticeItem>\n                        </DashboardNewsConent>\n                      ))}\n                    </ScrollContainer>\n                    {!notice?.length && (\n                      <NoDataFound variant=\"h6\">No data found</NoDataFound>\n                    )}\n                  </DashboardScorlText>\n                </Box>\n              </Collapsible>\n            </Card>\n\n            <Card\n              sx={{ minHeight: \"200px\", padding: \"15px\", marginTop: \"10px\" }}>\n              <Collapsible open={true}>\n                <BoldTrigger>{`Holidays: (${holidays?.length})`}</BoldTrigger>\n                <Divider sx={{ width: \"100%\", mt: 1 }} />\n                <Box\n                  sx={{\n                    height: \"140px\",\n                    maxHeight: \"140px\",\n                    overflow: \"auto\",\n                  }}>\n                  <DashboardScorlText elevation={0}>\n                    <ScrollContainer>\n                      {holidays?.map((data, index) => (\n                        <DashboardNewsConent key={index}>\n                          <NoticeItem component=\"li\">{data.title}</NoticeItem>\n                        </DashboardNewsConent>\n                      ))}\n                    </ScrollContainer>\n                    {!holidays?.length && (\n                      <NoDataFound variant=\"h6\">No data found</NoDataFound>\n                    )}\n                  </DashboardScorlText>\n                </Box>\n              </Collapsible>\n            </Card>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function FilterStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const classes = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const classesAllOption = [{ label: \"All\", value: \"all\" }, ...classes];\n      setClasses(classesAllOption);\n\n      entryFormik.setFieldValue(\"class\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      if (entryFormik.values.class === \"all\") {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        const sectionAllOption = [{ label: \"All\", value: \"all\" }];\n        setSections(sectionAllOption);\n        entryFormik.setFieldValue(\"section\", \"all\");\n      } else {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: entryFormik.values.class,\n            },\n          },\n        });\n\n        const section = data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }));\n        const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n        setSections(sectionAllOption);\n        entryFormik.setFieldValue(\"section\", \"all\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async (values) => {\n    try {\n      if (values.class !== \"all\" && values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n        setStudents(\n          data.result.map((d) => ({\n            ...d,\n            label: `${d.basicInfo.name}  | ${d.academicInfo.rollNumber} | ${d.contactNumber} `,\n            value: d._id,\n          }))\n        );\n      } else if (values.class === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n\n        setStudents(\n          data.result.map((d) => ({\n            ...d,\n            label: `${d.basicInfo.name}  | ${d.academicInfo.rollNumber} | ${d.contactNumber} `,\n            value: d._id,\n          }))\n        );\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n        setStudents(\n          data.result.map((d) => ({\n            ...d,\n            label: `${d.basicInfo.name}  | ${d.academicInfo.rollNumber} | ${d.contactNumber} `,\n            value: d._id,\n          }))\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudent = (values) => {\n    if (values.student) navigate(`/sch/student/edit-student/${values.student}`);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudent,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getStudents(entryFormik.values);\n    }\n  }, [\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n              showSearch={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\n\nimport Attendance from \"../components/Dashboard/Attendance\";\nimport QuickLinks from \"../components/Dashboard/QuickLinks\";\nimport Events from \"../components/Dashboard/Events\";\nimport FilterStudent from \"../components/Dashboard/FilterStudent\";\n\nexport default function Dashboard() {\n  return (\n    <>\n      <PageHeader title=\"Welcome To School ERP \" />\n      <FilterStudent />\n      <Attendance />\n      <QuickLinks />\n      <Events />\n    </>\n  );\n}\n","import { Box, Fab, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport themeData from \"../data/themeData\";\nexport default function AddForm({ disabled, title, onAddClick = () => {} }) {\n  return (\n    <>\n      <Box\n        sx={{\n          position: \"fixed\",\n          width: \"-moz-fit-content\",\n          width: \"fit-content\",\n          right: \"70px\",\n          bottom: \"20px\",\n        }}\n      >\n        <Tooltip title={title}>\n          <Fab\n            variant=\"contained\"\n            onClick={onAddClick}\n            disabled={disabled}\n            sx={{\n              color: \"#ffff\",\n              background: themeData.darkPalette.primary.main,\n              \":hover\": { background: themeData.darkPalette.primary.main },\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </Tooltip>\n      </Box>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Divider,\n  useMediaQuery,\n  useTheme,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function FormModal({\n  formTitle = \"\",\n  children,\n  formik,\n  open = false,\n  onClose = () => {},\n  submitButtonTitle = \"\",\n  styles = {},\n  adding = false,\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n          component: \"form\",\n          onSubmit: formik.handleSubmit,\n        }}\n      >\n        <DialogTitle sx={{ fontWeight: 600 }}>{formTitle}</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}\n        >\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={onClose}\n          >\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={adding}\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {submitButtonTitle}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nexport const academicYearTableKeys = [\n  {\n    name: \"Academic Year\",\n    key: \"academicYear\",\n  },\n\n  {\n    name: \"Active\t\",\n    key: \"active\",\n  },\n  {\n    name: \"Note\t\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\n\n// custom components\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicYearTableKeys } from \"../../data/tableKeys/academicYearData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\n\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useContext } from \"react\";\n\nexport default function AcademicYear() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((d) => ({ ...d, academicYear: `${d.from}-${d.to}` }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.academicYear.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.academicYear.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  console.log(selectedSetting, \"0000000\");\n  // get data on page load\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleToggleActiveStatus = async (academicYear) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.academicYear.toggleActiveStatus + \"/\" + academicYear._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Academic Year\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        bodyDataModal=\"academic year\"\n        bodyData={data}\n        tableKeys={academicYearTableKeys}\n        onEditClick={handleEditClick}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleActiveStatus}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Academic Year\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Academic Year\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"from\"\n              label=\"From Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"to\"\n              label=\"To Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const designationTableKeys = [\n  {\n    name: \"Designation\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { designationTableKeys } from \"../../data/tableKeys/designation\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nexport default function ManageDesignation() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDesigationHandel = () => {\n    setOpen(true);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.designation.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.designation.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.designation.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Designation\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={designationTableKeys}\n        bodyDataModal=\"designation\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Add form fab button =======*/}\n      <AddForm title=\"Add Desigation\" onAddClick={AddDesigationHandel} />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Desigation\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n      >\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Desigation\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const departmentTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { departmentTableKeys } from \"../../data/tableKeys/departmentData\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function ManageDepartment() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setData(data.result);\n\n      // console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.department.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.department.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name ? dataToEdit?.name : \"\",\n      orderSequence: dataToEdit?.orderSequence\n        ? dataToEdit?.orderSequence\n        : data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.department.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Department\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={departmentTableKeys}\n        bodyDataModal=\"department\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Department\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Department\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          {/* {dataToEdit && ( */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          {/* )} */}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n      {/* =========================== */}\n    </>\n  );\n}\n","export const overviewTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Male\",\n    key: \"male\",\n  },\n  {\n    name: \"Female\",\n    key: \"female\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","export const employeeTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","export const inactiveTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { overviewTableKeys } from \"../../data/tableKeys/overviewData\";\nimport { employeeTableKeys } from \"../../data/tableKeys/employeeData\";\nimport { inactiveTableKeys } from \"../../data/tableKeys/inactiveEmployee\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, del, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, Delete, Edit, ListAlt, Print, Search } from \"@mui/icons-material\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\n\nexport default function Employee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [value, setSelectValue] = useState(0);\n  const [activeData, setActiveData] = useState([]);\n  const [InactiveData, setInactiveData] = useState([]);\n  const [overviewData, setOverviewData] = useState([]);\n  const [allEmployee, setAllEmployee] = useState([]);\n  const [searchFilter, setSearchFilter] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const AddEmployeeHandle = (e) => {\n    navigate(\"/sch/human-resource/add-employee\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // console.log(data.result, \"employyeee\");\n      setAllEmployee(data.result);\n\n      const activeData = data.result\n        .filter((item) => item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      const inactiveData = data.result\n        .filter((item) => !item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      setActiveData(activeData);\n      setInactiveData(inactiveData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataDepartment = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const overviewData = data.result.map((department) => {\n        const maleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"male\" &&\n              emp.active === true &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const femaleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"female\" &&\n              emp.active === true &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const totalCount = maleCount + femaleCount;\n        return {\n          ...department,\n          male: maleCount,\n          female: femaleCount,\n          total: totalCount,\n        };\n      });\n\n      setOverviewData(overviewData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDataDepartment();\n  }, [allEmployee, selectedSetting._id]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.employee.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/human-resource/edit-employee/${data._id}`);\n  };\n\n  const handleSearch = (e) => {\n    const { value } = e.target;\n    setSearch(value.trim());\n    if (value.trim() !== \"\") {\n      activeData.length > 0 &&\n        setSearchFilter(\n          activeData.filter((ele) =>\n            ele.basicInfo.name\n              .toLowerCase()\n              .includes(value.toLowerCase().trim())\n          )\n        );\n    } else {\n      setSearchFilter([]);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Employee List\", \"Inactive Employee List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={\"\"}\n          tableKeys={overviewTableKeys}\n          bodyData={overviewData}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={employeeTableKeys}\n          bodyData={search ? searchFilter : activeData}\n          bodyDataModal=\"employee\"\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={inactiveTableKeys}\n          bodyDataModal=\"employee\"\n          bodyData={search ? searchFilter : InactiveData}\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n\n      {/* == Fab button component =========== */}\n      <AddForm title=\"Add Employee\" onAddClick={AddEmployeeHandle} />\n    </>\n  );\n}\n","export const offerLetterTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useRef } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ReactToPrint from \"react-to-print\";\n\nexport default function LetterViewModal({\n  open,\n  content,\n  onClose,\n  onPrintClick,\n  title,\n}) {\n  const contentRef = useRef(null);\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}>\n      <DialogTitle\n        sx={{ m: 0, p: 2, fontWeight: 600 }}\n        id=\"customized-dialog-title\">\n        {title}\n      </DialogTitle>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: \"absolute\",\n          right: 8,\n          top: 8,\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent>\n        <Typography gutterBottom>\n          <div\n            class=\"printContainer\"\n            ref={contentRef}\n            dangerouslySetInnerHTML={{ __html: content }}></div>\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <ReactToPrint\n          trigger={() => (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \":hover\": { background: \"#1b3779\" },\n              }}\n              onClick={onPrintClick}\n              startIcon={<PrintIcon />}>\n              Print\n            </Button>\n          )}\n          content={() => contentRef.current}\n        />\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { offerLetterTableKeys } from \"../../data/tableKeys/offerLetterData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function OfferLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.offerLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.offerLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.offerLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      offerLetter:\n        dataToEdit?.offerLetter ||\n        ` <strong>Congratulations! You've Been Selected for the Role of [Job Title]</strong>\n          <p>[Company Name]</p>\n          <p>[Address eg. Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103]</p>\n          <p>[City, State, ZIP Code]</p>\n          <p>Date: [DD, MM, YY]</p>\n          <strong>Dear [Candidate's Full Name],</strong>\n          <p>We are thrilled to offer you the position of [Job Title] at [Company Name]. After careful consideration, we believe your skills, experience, and vision make you the perfect fit for our team.</p>\n          <strong>Position Details:</strong>\n            <p><strong>- Job Title:</strong> [Job Title]</p>\n            <p><strong>- Department:</strong> [Department]</p>\n            <p><strong>- Supervisor:</strong> [Supervisor/Manager Name]</p>\n            <p><strong>- Start Date:</strong> [Start Date]</p>\n            <p><strong>- Compensation:</strong> [Salary or Compensation Details]</p>\n        <strong>Work Hours:</strong>\n        <p>[Regular work hours, any flexible schedule options, etc.]</p>\n        <p>We believe that [Company Name] is a place where you can grow and thrive. Your role as [Job Title] will be pivotal in driving our company's success and we look forward to the innovative contributions you will bring to our team.</p>\n        <p>Please indicate your acceptance of this offer by signing and returning a copy of this letter by <strong>[Acceptance Deadline]</strong>. Should you have any questions or need further clarification, feel free to reach out to <strong>[HR Contact Name]</strong> at <strong>[HR Contact Email]</strong> or <strong>[HR Contact Phone Number]</strong>.</p>\n        <p>We eagerly await your positive response and look forward to welcoming you to the [Company Name] family.</p>\n        <p>Warm Regards,</p>\n        <p>[HR, Manager Name]</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p style=\"text-align:\"center;\">&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.offerLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.offerLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Offer Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\"Offer letter list\", \"Add offer letter\", \"Edit offer letter\"]\n            : [\"Offer letter list\", \"Add offer Letter\"]\n        }\n      />\n\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={offerLetterTableKeys}\n          bodyDataModal=\"offer letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Offer Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                value={entryFormik.values.offerLetter}\n                required\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.offerLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const relievingLetterDataTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { relievingLetterDataTableKeys } from \"../../data/tableKeys/relievingLetterData\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { Button, Grid } from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function RelievingLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n  const componentRef = useRef();\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.relievingLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.relievingLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.relievingLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      relievingLetter:\n        dataToEdit?.relievingLetter ||\n        `<strong>Relieving Letter</strong>\n        <p>[Company Name]</p>\n        <p>Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n        <p>Date: DD, MM, YY\t</p>\n        <p>Dear [Employee's Full Name],</p>\n        <p>We hereby acknowledge receipt of your resignation letter dated <strong>[Resignation Date]</strong>, in which you requested to be relieved from your position as <strong>[Employee's Designation]</strong> at <strong>[Company Name]</strong>. We are pleased to provide you with your relieving letter.</p>\n        <p>This is to inform you that you <strong>[Employee ID]</strong> will be relieved after careful consideration and necessary formalities.</p>\n        <p>You have successfully completed your tenure at <strong>[Company Name]</strong> as <strong>[Job Title]</strong> from <strong>[Joining Date]</strong> to <strong>[Last Working Date]</strong>. We appreciate your dedicated service and commitment during your time with us.</p>\n        <p>Sincerely,</p>\n        <p>HR, Manager</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.relievingLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.relievingLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Relieving letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Relieving letter list\",\n                \"Add relieving letter\",\n                \"Edit relieving letter\",\n              ]\n            : [\"Relieving letter list\", \"Add relieving letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={relievingLetterDataTableKeys}\n          bodyDataModal=\"relieving letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Relieving  Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              gap={1}\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","export const offBoardingDataTableKeys = [\n  {\n    name: \"Employee name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joininng Date\",\n    key: \"date\",\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\n\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { offBoardingDataTableKeys } from \"../../data/tableKeys/offBoardingData\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\nexport default function OffBoarding() {\n  const [value, setSelectValue] = useState(0);\n  const [formFields, setFormFields] = useState([{ name: \"\", file: null }]);\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      user: \"\",\n      name: \"\",\n      bloodGroup: \"\",\n      dob: dayjs(new Date()),\n      joiningDate: dayjs(new Date()),\n      resignDate: dayjs(new Date()),\n      relivingDate: dayjs(new Date()),\n      gender: \"\",\n      contactNumber: \"\",\n      status: \"\",\n      feedback: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  const handleAddRow = () => {\n    setFormFields([...formFields, { name: \"\", file: \"\" }]);\n  };\n  const handleRemove = (index) => {\n    const list = [...formFields];\n    list.splice(index, 1);\n    setFormFields(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Off-Boarding letter list\", \"Add Off-Boarding\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\"]}\n          tableKeys={offBoardingDataTableKeys}\n          bodyDataModal=\"Off-Boarding letter\"\n          bodyData={data}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"Select User Type\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"user\"\n                formik={entryFormik}\n                label=\"Select User\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Basic Information\n              </Typography>\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"gender\"\n                formik={entryFormik}\n                label=\"Select Gender\"\n                options={Gender_Options}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"bloodGroup\"\n                formik={entryFormik}\n                label=\"Select Blood Group\"\n                options={BloodGroup_Options}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"dob\"\n                formik={entryFormik}\n                label=\"DOB\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Working Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"joiningDate\"\n                formik={entryFormik}\n                label=\"Joining Date\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"resignDate\"\n                formik={entryFormik}\n                label=\"Resign Date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"relivingDate\"\n                formik={entryFormik}\n                label=\"RelivingD ate\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Profile Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Select Status\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={9} item>\n              <FormInput\n                required={true}\n                name=\"feedback\"\n                formik={entryFormik}\n                label=\"Feedback\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Additional Document Information\n              </Typography>\n            </Grid>\n            {formFields.map((field, index) => (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormInput\n                    required={true}\n                    name=\"name\"\n                    formik={entryFormik}\n                    label=\"Name\"\n                  />\n                </Grid>\n\n                <Grid xs={12} md={12} lg={4} item>\n                  <FormInput\n                    required={true}\n                    name=\"file\"\n                    formik={entryFormik}\n                    label=\"Select Image\"\n                    type=\"file\"\n                  />\n                </Grid>\n                <Grid item xs={1} md={1} lg={3} mt={1} alignSelf=\"center\">\n                  <Button onClick={() => handleRemove(index)}>\n                    <ClearIcon color=\"error\" />\n                  </Button>\n                </Grid>\n              </>\n            ))}\n            <Grid xs={12} md={12} lg={12} item>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={handleAddRow}\n                startIcon={<AddIcon />}\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Box display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n          <Button size=\"small\" color=\"error\" variant=\"contained\">\n            Cancel\n          </Button>\n          <Button size=\"small\" variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","export const experienceTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { experienceTableKeys } from \"../../data/tableKeys/experienceLetterData\";\nimport { Button, Grid } from \"@mui/material\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useReactToPrint } from \"react-to-print\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\n\nexport default function ExperienceLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.experienceLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.experienceLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.experienceLetter.create, payload);\n        getData();\n      }\n\n      setSelectValue(0);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      experienceLetter:\n        dataToEdit?.experienceLetter ||\n        ` <strong>Experience Letter</strong>\n          <p>Webpruce Company</p>\n          <p>Date: 12, January 2024</p>\n          <p>Place: Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n          <p>To Whom It May Concern,</p>\n          <p>This is to certify that <strong>[Employee's Full Name]</strong> was employed with us as a <strong>[Job Title]</strong> in the <strong>[Department]</strong> department from <strong>[Start Date]</strong> to <strong>[End Date]</strong>.</p>\n          <p>During their tenure with us, [Employee's Full Name] was responsible for:</p>\n          <p>- Key Responsibility 1</p>\n          <p>- Key Responsibility 2</p>\n          <p>We found [Employee's Full Name] to be a dedicated and reliable employee who consistently showed a high level of professionalism. They are leaving us due to [reason for leaving, if appropriate], and we wish them all the best in their future endeavors.</p>\n          <p>We highly recommend [Employee's Full Name] for any future employment opportunities and are confident that they will be an asset to any organization they join.</p>\n          <p>If you require any further information, please do not hesitate to contact us.</p>\n          <p>Warm Regards,</p>\n          <p><strong>[Your Name]</strong></p>\n          <p><strong>[Your Job Title]</strong></p>\n          <p><strong>[Contact Information]</strong></p>\n          <br/>\n          <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n        `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.experienceLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.experienceLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Experience Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Experience letter list\",\n                \"Add experience letter\",\n                \"Edit experience letter\",\n              ]\n            : [\"Experience letter list\", \"Add experience Letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          tableKeys={experienceTableKeys}\n          bodyDataModal=\"experience  letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n\n        <LetterViewModal\n          title={\"Experience Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              gap={1}\n              item\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const teacherActivityTableKeys = [\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Topic\",\n    key: \"topic\",\n  },\n];\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { teacherActivityTableKeys } from \"../../data/tableKeys/teacherActivityData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nexport default function TeacherActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingFind, setLoadingFind] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  let currentUserStringified = window.localStorage.getItem(\"current_ecs_user\");\n\n  let currentUser = JSON.parse(currentUserStringified);\n\n  const getData = async (values) => {\n    try {\n      setLoadingFind(true);\n      const { data } = await get(PRIVATE_URLS.teacherActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            teacher: values.teacher,\n            class: values.class,\n            section: values.section,\n            subject: values.subject,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n      setLoadingFind(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingFind(false);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const emp = data.result\n        ?.filter((e) =>\n          e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n        )\n        .map((d) => ({ label: d.basicInfo.name, value: d._id }));\n\n      const empOption = [{ label: \"Me\", value: currentUser._id }, ...emp];\n      setEmployees(empOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    if (newValue !== 1) {\n      setDataToEdit(null);\n    }\n    setSelectValue(newValue);\n  };\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      // formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSections = async (classId) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: classId,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      // formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n      // formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.teacherActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.teacherActivity.create,\n          payload\n        );\n      }\n      formik.handleSubmit();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      section: dataToEdit?.section._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      topic: dataToEdit?.topic || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      teacher: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections(entryFormik.values.class);\n      getSubject();\n      formik.resetForm();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections(formik.values.class);\n      getSubject();\n      entryFormik.resetForm();\n    }\n  }, [formik.values.class]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.teacherActivity.delete + \"/\" + id);\n\n      getData();\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Teacher Activity\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"All Activity\", dataToEdit ? \"Edit Activity\" : \"Add Activity\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"teacher\"\n                  formik={formik}\n                  label=\"Select Teacher\"\n                  options={employees}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={formik}\n                  label=\"Subject\"\n                  options={subjects}\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                item\n                display={\"flex\"}\n                justifyContent={\"flex-end\"}>\n                <LoadingButton\n                  loading={loadingFind}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  Find\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          tableKeys={teacherActivityTableKeys}\n          bodyDataModal=\"teacher activity\"\n          bodyData={data}\n          onDeleteClick={handleDelete}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select subject\"\n                  options={subjects}\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  required={true}\n                  name=\"topic\"\n                  formik={entryFormik}\n                  label=\"Topic covered\"\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                mt={1}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}\n                item>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleClose}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const rolePermissionTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nexport const ROLE_PERMISSIONS = [\n  {\n    module: \"Institute Selector\",\n    subModule: [\n      {\n        module: \"Institute Selector\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Dashboard\",\n    subModule: [\n      {\n        module: \"Dashboard\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Institute\",\n    subModule: [\n      {\n        module: \"Institute\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Administrator\",\n    subModule: [\n      {\n        module: \"Academic Year\",\n        permissions: [],\n      },\n      {\n        module: \"Roles and Permissions\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Human Resources\",\n    subModule: [\n      {\n        module: \"Designation\",\n        permissions: [],\n      },\n      {\n        module: \"Department\",\n        permissions: [],\n      },\n      {\n        module: \"Employee\",\n        permissions: [],\n      },\n      {\n        module: \"Offer Letter\",\n        permissions: [],\n      },\n      {\n        module: \"Relieving Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Off Boarding\",\n        permissions: [],\n      },\n\n      {\n        module: \"Experience Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Teacher Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Pre-Admission\",\n    subModule: [\n      {\n        module: \"Enquiries\",\n        permissions: [],\n      },\n      {\n        module: \"Exams\",\n        permissions: [],\n      },\n      {\n        module: \"Exam Schedules\",\n        permissions: [],\n      },\n      {\n        module: \"Result\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Academic\",\n    subModule: [\n      {\n        module: \"Class\",\n        permissions: [],\n      },\n      {\n        module: \"Section\",\n        permissions: [],\n      },\n      {\n        module: \"Subject\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Attendance\",\n    subModule: [\n      {\n        module: \"Student Attendance\",\n        permissions: [],\n      },\n      {\n        module: \"Employee Attendance\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Class Routine\",\n    subModule: [\n      {\n        module: \"Class Routine\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Student\",\n    subModule: [\n      {\n        module: \"Overview\",\n        permissions: [],\n      },\n      {\n        module: \"Admit Student\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reshuffle\",\n        permissions: [],\n      },\n\n      {\n        module: \"Promotion\",\n        permissions: [],\n      },\n      {\n        module: \"Bulk Admission\",\n        permissions: [],\n      },\n      {\n        module: \"Credential\",\n        permissions: [],\n      },\n      {\n        module: \"Quick Admit\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Assignment\",\n    subModule: [\n      {\n        module: \"Assignment\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Communication\",\n    subModule: [\n      {\n        module: \"Compose\",\n        permissions: [],\n      },\n      {\n        module: \"Report\",\n        permissions: [],\n      },\n      {\n        module: \"Credential\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Announcement\",\n    subModule: [\n      {\n        module: \"Notice\",\n        permissions: [],\n      },\n      {\n        module: \"News\",\n        permissions: [],\n      },\n\n      {\n        module: \"Holiday\",\n        permissions: [],\n      },\n\n      {\n        module: \"Awards And Achievement\",\n        permissions: [],\n      },\n      {\n        module: \"Splash News\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Gallery\",\n    subModule: [\n      {\n        module: \"Gallery\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Notification\",\n    subModule: [\n      {\n        module: \"Notification\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Event\",\n    subModule: [\n      {\n        module: \"Event\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Exam\",\n    subModule: [\n      {\n        module: \"Exam Grade\",\n        permissions: [],\n      },\n      {\n        module: \"Exam Term\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Schedule\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Hall Ticket\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Exam Mark\",\n    subModule: [\n      {\n        module: \"Exam Attendance\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Mark\",\n        permissions: [],\n      },\n\n      {\n        module: \"Exam Result\",\n        permissions: [],\n      },\n\n      {\n        module: \"Marks Card\",\n        permissions: [],\n      },\n\n      {\n        module: \"Consolidated Marks Sheet\",\n        permissions: [],\n      },\n\n      {\n        module: \"Subject Wise Report\",\n        permissions: [],\n      },\n\n      {\n        module: \"Division Wise Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"LMS\",\n    subModule: [\n      {\n        module: \"Storage\",\n        permissions: [],\n      },\n      {\n        module: \"Courses\",\n        permissions: [],\n      },\n\n      {\n        module: \"Course Content\",\n        permissions: [],\n      },\n\n      {\n        module: \"Live\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Library\",\n    subModule: [\n      {\n        module: \"Books\",\n        permissions: [],\n      },\n      {\n        module: \"Periodical\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Library Member\",\n        permissions: [],\n      },\n\n      {\n        module: \"Employee Library Member\",\n        permissions: [],\n      },\n      {\n        module: \"Issue and Returns\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Leave Management\",\n    subModule: [\n      {\n        module: \"Leave Type\",\n        permissions: [],\n      },\n      {\n        module: \"Employee Leave\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Leave\",\n        permissions: [],\n      },\n\n      {\n        module: \"Leave Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Inventory\",\n    subModule: [\n      {\n        module: \"Item\",\n        permissions: [],\n      },\n      {\n        module: \"Vendor\",\n        permissions: [],\n      },\n\n      {\n        module: \"In/Out Transaction\",\n        permissions: [],\n      },\n\n      {\n        module: \"Stock ist\",\n        permissions: [],\n      },\n\n      {\n        module: \"Issue\",\n        permissions: [],\n      },\n\n      {\n        module: \"Sell\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Certificate\",\n    subModule: [\n      {\n        module: \"Study Certificate\",\n        permissions: [],\n      },\n      {\n        module: \"Transfer Certificate\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Fees\",\n    subModule: [\n      {\n        module: \"Receipt Book\",\n        permissions: [],\n      },\n      {\n        module: \"Fee Map Category\",\n        permissions: [],\n      },\n\n      {\n        module: \"Collect Fees\",\n        permissions: [],\n      },\n\n      {\n        module: \"Balance Fee\",\n        permissions: [],\n      },\n\n      {\n        module: \"Fee Overview\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reconciliation\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Hostel\",\n    subModule: [\n      {\n        module: \"Manage Hostel\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Room Type\",\n        permissions: [],\n      },\n\n      {\n        module: \"Manage Room Bed\",\n        permissions: [],\n      },\n\n      {\n        module: \"Hostel Member\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Transport\",\n    subModule: [\n      {\n        module: \"Vehicle\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Route And Trips\",\n        permissions: [],\n      },\n\n      {\n        module: \"Routes\",\n        permissions: [],\n      },\n\n      {\n        module: \"Transport Member\",\n        permissions: [],\n      },\n\n      {\n        module: \"Vehicle Log\",\n        permissions: [],\n      },\n\n      {\n        module: \"Vehicle Maintenance\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Payroll\",\n    subModule: [\n      {\n        module: \"Salary Grade\",\n        permissions: [],\n      },\n      {\n        module: \"Make Payment\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Report\",\n    subModule: [\n      {\n        module: \"Library Report\",\n        permissions: [],\n      },\n      {\n        module: \"Student Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Studnet Yearly Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Emplyee Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Employee Yearly Attendance\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Report\",\n        permissions: [],\n      },\n\n      {\n        module: \"Student Activity Report\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Visitor Info\",\n    subModule: [\n      {\n        module: \"Visitor Info\",\n        permissions: [],\n      },\n      {\n        module: \"Student Checkout\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Help Desk\",\n    subModule: [\n      {\n        module: \"Help Desk\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Guardian Feedback\",\n    subModule: [\n      {\n        module: \"Guardian Feedback\",\n        permissions: [],\n      },\n    ],\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { rolePermissionTableKeys } from \"../../data/tableKeys/rolePermissionData\";\nimport { ROLE_PERMISSIONS } from \"../../data/roleData\";\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nfunction toggleItemInArray(array, item) {\n  const index = array.indexOf(item);\n\n  if (index === -1) {\n    // Item not present, add it to the array\n    array.push(item);\n  } else {\n    // Item present, remove it from the array\n    array.splice(index, 1);\n  }\n\n  return array;\n}\n\nfunction addIfNotPresent(arr, str) {\n  if (!arr.includes(str)) {\n    arr.push(str);\n  }\n  return arr;\n}\n\nfunction removeFromArray(arr, str) {\n  const index = arr.indexOf(str);\n  if (index !== -1) {\n    arr.splice(index, 1);\n  }\n  return arr;\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst CRUD_OPERATIONS = [\"view\", \"add\", \"update\", \"delete\"];\n\nexport default function RolePermission() {\n  const [value, setValue] = React.useState(0);\n  const [roles, setRoles] = useState([]);\n  const [roleToEdit, setRoleToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [roleKeys, setRoleKeys] = useState([]);\n  const [allPermissionUpdate, setAllPermissionUpdate] = useState([\n    \"view\",\n    \"add\",\n    \"update\",\n    \"delete\",\n  ]);\n\n  const getRoleKeys = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.getRoleKeys);\n\n      if (roleToEdit) {\n        let allKeys = [...roleToEdit.permissions];\n        for (let key of data.result) {\n          if (!allKeys.find((k) => k.module == key.module)) {\n            allKeys.push(key);\n          }\n        }\n        setRoleKeys(allKeys);\n      } else {\n        setRoleKeys(data.result);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getRoleKeys();\n    if (value == 0) {\n      setRoleToEdit(null);\n    }\n  }, [value]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleRoleEditClick = (data) => {\n    setRoleToEdit(data);\n    setValue(1);\n  };\n  const handleCancelClick = () => {\n    setValue(0);\n  };\n  const openRoleAddUpdateModal = () => {\n    setValue(0);\n    setOpen(true);\n  };\n\n  const handleModalClose = () => setOpen(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleAddOrUpdate = async (values) => {\n    let payload = {\n      ...values,\n      permissions: roleKeys,\n    };\n\n    if (!roleToEdit) {\n      payload[\"permissions\"] = roleKeys.map((r) => ({ ...r, permissions: [] }));\n    }\n\n    try {\n      if (roleToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.role.update + \"/\" + roleToEdit._id,\n          payload\n        );\n        setValue(0);\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.role.create, payload);\n        setValue(0);\n        getData();\n      }\n\n      formik.resetForm();\n      setOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formikUpdate = useFormik({\n    initialValues: {\n      name: roleToEdit?.name || \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePermission = (module, permission) => {\n    setRoleKeys(\n      roleKeys.map((k) =>\n        k.module === module\n          ? {\n              ...k,\n              permissions: toggleItemInArray(\n                k.permissions,\n                permission.toLowerCase()\n              ),\n            }\n          : k\n      )\n    );\n  };\n\n  const handleUpdateAll = (permission) => {\n    setRoleKeys(\n      roleKeys.map((r) => ({\n        ...r,\n        permissions: allPermissionUpdate.includes(permission)\n          ? removeFromArray(r.permissions, permission)\n          : addIfNotPresent(r.permissions, permission),\n      }))\n    );\n  };\n\n  useEffect(() => {\n    let allPermissions = [];\n\n    for (let co of CRUD_OPERATIONS) {\n      if (\n        roleKeys.every((module) =>\n          module.permissions.includes(co.toLowerCase())\n        )\n      ) {\n        allPermissions.push(co.toLowerCase());\n      } else {\n        allPermissions.filter((p) => p !== co);\n      }\n    }\n\n    setAllPermissionUpdate(allPermissions);\n  }, [roleKeys]);\n\n  const handleDeleteRole = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.role.delete + \"/\" + id);\n      setRoles(roles.filter((r) => r._id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Role Permission\" />\n\n      <TabList\n        onChange={handleChange}\n        value={value}\n        labels={roleToEdit && value === 1 ? [\"List\", \"Edit\"] : [\"List\"]}\n      />\n      <TabPanel value={value} index={0}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"role permission\"\n          bodyData={roles}\n          onEditClick={handleRoleEditClick}\n          tableKeys={rolePermissionTableKeys}\n          onDeleteClick={handleDeleteRole}\n        />\n        <AddForm title=\"Add Role\" onAddClick={openRoleAddUpdateModal} />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle=\"Create Role\"\n        onClose={handleModalClose}\n        submitButtonTitle=\"Create\">\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={formik}\n              name=\"name\"\n              label=\"Role Name\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {roleToEdit && value == 1 && (\n        <TabPanel value={value} index={1}>\n          <Grid container rowSpacing={1} columnSpacing={2}>\n            <Grid item xs={12} sm={12} md={12}>\n              <FormInput\n                required={true}\n                name=\"name\"\n                type=\"text\"\n                formik={formikUpdate}\n                label=\"Role Name\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <Typography\n                sx={{\n                  margin: \"10px 0px\",\n                  fontWeight: \"500\",\n                  fontSize: \"16px\",\n                  fontWeight: 700,\n                }}>\n                {\" \"}\n                Set permission for this role\n              </Typography>\n            </Grid>\n          </Grid>\n          <TableContainer\n            component={Paper}\n            sx={{ marginBottom: \"60px\", maxHeight: 650 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                      paddingLeft: \"15px\",\n                    }}>\n                    Module Name\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    View\n                    <Checkbox\n                      onChange={() => handleUpdateAll(\"view\")}\n                      name=\"view\"\n                      checked={allPermissionUpdate.includes(\"view\")}\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Add{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"add\")}\n                      onChange={() => handleUpdateAll(\"add\")}\n                      name=\"add\"\n                    />{\" \"}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Update{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"update\")}\n                      onChange={() => handleUpdateAll(\"update\")}\n                      name=\"update\"\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Delete{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"delete\")}\n                      onChange={() => handleUpdateAll(\"delete\")}\n                      name=\"delete\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ROLE_PERMISSIONS.map((roleModule, i) => {\n                  const { module, subModule } = roleModule;\n\n                  return (\n                    <>\n                      <TableRow key={i}>\n                        <TableCell\n                          colSpan={5}\n                          sx={{\n                            backgroundColor: (theme) =>\n                              theme.palette.mode === \"dark\"\n                                ? \"rgba(32,33,32,1)\"\n                                : theme.palette.grey[100],\n                          }}>\n                          <Typography fontWeight={\"bold\"} paddingLeft={\"10px\"}>\n                            {module}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                      {subModule.map((m, i) => (\n                        <TableRow k={m.module + i.toString()}>\n                          <TableCell align=\"center\">{m.module}</TableCell>\n\n                          {CRUD_OPERATIONS.map((o) => (\n                            <TableCell align=\"center\" key={o}>\n                              <Checkbox\n                                onChange={() =>\n                                  handleChangePermission(m.module, o)\n                                }\n                                checked={\n                                  roleKeys\n                                    .find((role) => role.module === m.module)\n                                    ?.permissions?.includes(o) || false\n                                }\n                              />\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      ))}\n                    </>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <StyledBox\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? \"rgba(32,33,32,1)\"\n                      : theme.palette.grey[100],\n                }}>\n                <Stack spacing={2} direction=\"row\">\n                  <Button\n                    onClick={handleCancelClick}\n                    variant=\"contained\"\n                    color=\"error\"\n                    size=\"small\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={formikUpdate.handleSubmit}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Update\n                  </Button>\n                </Stack>\n              </StyledBox>\n            </Grid>\n          </Grid>\n        </TabPanel>\n      )}\n    </>\n  );\n}\n","export const userRoleTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"role\",\n  },\n];\n","import React, { useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { userRoleTableKeys } from \"../../data/tableKeys/userRoleData\";\n\nexport default function UserRole() {\n  const [data, setData] = useState([]);\n\n  return (\n    <>\n      <PageHeader title=\"User Role\" />\n      <CustomTable\n        actions={[\"edit\"]}\n        bodyDataModal=\"user role\"\n        bodyData={data}\n        tableKeys={userRoleTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Paper, Grid, Button } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst Type_Options = [\n  {\n    label: \"Student\",\n    value: \"student\",\n  },\n  {\n    label: \"Employee\",\n    value: \"employee\",\n  },\n];\n\nexport default function ResetPassword() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [students, setStudents] = useState([]);\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    console.log(values.userType, \"kkkkk\");\n\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        userType: values.userType,\n        employeeId: values.employeeId,\n        studentId: values.student,\n        password: values.password,\n      };\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.account.changePasswordForUser,\n        payload\n      );\n      resetForm();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      employeeId: \"\",\n      password: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.class &&\n      entryFormik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"User Password Reset\" />\n      <Paper sx={{ padding: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"User Type\"\n                options={Type_Options}\n              />\n            </Grid>\n\n            {entryFormik.values.userType === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={entryFormik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {entryFormik.values.userType === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Role\"\n                    options={roles}\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employeeId\"\n                    formik={entryFormik}\n                    label=\"Employees\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} sm={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                formik={entryFormik}\n                label=\"Password\"\n                name=\"password\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Change Password\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nexport const enquriesTableKeys = [\n  {\n    name: \"Student Name\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Submitted On\",\n    key: \"submittedOn\",\n    isDate: true,\n  },\n  // {\n  //   name: \"Approval Status\",\n  //   key: \"status\",\n  // },\n];\n","/** @format */\n\nimport React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ViewModel({ open, onClose, title, children }) {\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{ m: 0, p: 2, fontWeight: 600 }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { enquriesTableKeys } from \"../../data/tableKeys/enquiries\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  DialogContent,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  tableCellClasses,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport { Box, ButtonGroup, styled } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ViewModel from \"../../forms/ViewModel\";\n\nconst MuiBUtton = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"blue\",\n    color: \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nconst CustomActionComponent = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const updateStatus = async (status) => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.preadmissionEnqiry.update + \"/\" + data._id, {\n        status,\n      });\n      setLoading(false);\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      {/* <Stack direction=\"row\" spacing={2}>\n        {[\"Pending\", \"approved\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"rejected\")}\n            disableElevation\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        )}\n        {[\"Pending\", \"rejected\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"approved\")}\n            disableElevation\n            size=\"small\"\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        )}\n      </Stack> */}\n\n      <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\n        {[\"Approved\", \"Pending\"].includes(data.status) ? (\n          <LoadingButton\n            variant=\"contained\"\n            size=\"small\"\n            loading={loading == \"Rejected\"}\n            onClick={() => updateStatus(\"Rejected\")}\n            color=\"error\">\n            Reject\n          </LoadingButton>\n        ) : null}\n\n        {[\"Rejected\", \"Pending\"].includes(data.status) ? (\n          <LoadingButton\n            size=\"small\"\n            variant=\"contained\"\n            loading={loading == \"Approved\"}\n            onClick={() => updateStatus(\"Approved\")}\n            color=\"success\">\n            Approve\n          </LoadingButton>\n        ) : null}\n      </Stack>\n    </>\n  );\n};\n\nexport default function Enquiries() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [activeButton, setActiveButton] = useState(\"Pending\");\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    contents: \"\",\n    action: () => {},\n  });\n\n  const handleButtonClick = (status) => {\n    setActiveButton(status);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const getEnquiries = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionEnqiry.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"studentDetails.academicDetails.academicYear\": values.academicYear,\n            \"studentDetails.academicDetails.class\": values.class,\n            fromDate: values.fromDate,\n            toDate: values.toDate,\n          },\n        },\n      });\n      let tableData = data.result.map((d) => ({\n        ...d,\n        studentName: d.studentDetails?.basicDetails?.name,\n        submittedOn: d.createdAt,\n        class: d.studentDetails?.academicDetails?.class?.name,\n      }));\n      setData(tableData);\n      setFilteredData(tableData.filter((d) => d.status === activeButton));\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getEnquiries,\n  });\n\n  useEffect(() => {\n    if (!activeButton) {\n      return setFilteredData(data);\n    }\n    setFilteredData(data.filter((e) => e.status === activeButton));\n  }, [activeButton]);\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      contents: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.preadmissionEnqiry.delete + \"/\" + _id\n      );\n      getEnquiries();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Enquiries\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              loading={loading}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <MuiBUtton>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          {[\"Pending\", \"Approved\", \"Rejected\"].map((v, i) => (\n            <Button\n              key={i}\n              variant=\"outlined\"\n              onClick={() => {\n                handleButtonClick(v);\n              }}\n              style={{\n                backgroundColor: activeButton === v ? \"#1b3779\" : \"\",\n                color: activeButton === v ? \"white\" : \"black\",\n                textTransform: \"capitalize\",\n              }}>\n              {v}:{data.filter((item) => item.status === v).length}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </MuiBUtton>\n\n      <CustomTable\n        actions={[\"custom\", \"delete\", \"view\"]}\n        tableKeys={enquriesTableKeys}\n        bodyDataModal=\"enquiries\"\n        bodyData={filteredData}\n        onUpdate={entryFormik.handleSubmit}\n        CustomAction={CustomActionComponent}\n        onViewClick={handleClickOpenView}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ==== view enquery ===== */}\n      <ViewModel\n        title=\"Enquiry Details\"\n        open={modalData?.open}\n        tableData={modalData?.contents}\n        onClose={onCloseViewModel}>\n        {/* ======== Desktop view table ============ */}\n        <DialogContent\n          dividers\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"block\",\n              md: \"block\",\n              lg: \"block\",\n            },\n          }}>\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Academic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents.class || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Academic Year\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {`${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.from} - ${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.to}` ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Basic Information\n          </Typography>\n\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Student Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentName || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Date Of Birth\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {dayjs(\n                    modalData?.contents?.studentDetails?.basicDetails?.dob ||\n                      \"NA\"\n                  ).format(\"DD-MM-YYYY\")}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Gender\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.gender ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Blood Group\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.bloodGroup?.toUpperCase() ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Religion\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.caste ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Caste Income Certificate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.casteIncomeCertificateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Mother Tongue\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.motherTongue || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Birth Place\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.birthPlace || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Aadhar Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.aadharNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Contact Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianContactNumber || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Alternate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.alternateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Relation With Guardian\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.relationWithGuardian || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  National Id\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.nationalId || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Present Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.presentAddress || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Permanent Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.permanentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Previous School Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow width={200}>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous School Name\n                </StyledTableCell>\n                <StyledTableCell>\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.schoolName || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  TC Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.tcNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Father Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Mother Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Other Information:\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Health Condition\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.healthCondition || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Email\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails?.email ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Hostel Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.hostelRequired || \"NA\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Transport Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.transportRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n\n        {/* ======== Mobile view table ============ */}\n        <DialogContent\n          dividers\n          sx={{\n            display: {\n              xs: \"block\",\n              sm: \"none\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}>\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Academic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Academic Year\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {`${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.from} - ${modalData?.contents?.studentDetails?.academicDetails?.academicYear?.to}` ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Basic Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Student Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Date Of Birth\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {dayjs(\n                    modalData?.contents?.studentDetails?.basicDetails?.dob ||\n                      \"NA\"\n                  ).format(\"DD-MM-YYYY\")}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Gender\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.gender ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Blood Group\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.bloodGroup?.toUpperCase() ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Religion\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails?.caste ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Caste Income Certificate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.casteIncomeCertificateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Mother Tongue\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.motherTongue || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Birth Place\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.birthPlace || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Aadhar Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.basicDetails\n                    ?.aadharNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Contact Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Guardian Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.guardianContactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Alternate Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.alternateNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Relation With Guardian\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.relationWithGuardian || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  National Id\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.nationalId || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Present Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.presentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Permanent Address\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.contactDetails\n                    ?.permanentAddress || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Previous School Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow width={200}>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous School Name\n                </StyledTableCell>\n                <StyledTableCell>\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.schoolName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Previous Class\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.class || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  TC Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.previousSchoolDetails\n                    ?.tcNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Father Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.fatherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Mother Information\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails?.name ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Contact Number\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.contactNumber || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Education\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.education || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Profession\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.profession || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Designation\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.motherDetails\n                    ?.designation || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n\n          <Typography variant=\"body\" fontSize=\"16px\" fontWeight={600}>\n            Other Information:\n          </Typography>\n          <Table\n            aria-label=\"customized table\"\n            className=\"profile-table\"\n            sx={{\n              mb: 2,\n            }}>\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Health Condition\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.healthCondition || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Email\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails?.email ||\n                    \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Hostel Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.hostelRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow>\n                <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                  Transport Required\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {modalData?.contents?.studentDetails?.otherDetails\n                    ?.transportRequired || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nexport const examsTableKeys = [\n  {\n    name: \"Exam Name\",\n    key: \"examName\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  // {\n  //   name: \"Question\",\n  //   key: \"question\",\n  // },\n];\n","/** @format */\n\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px\",\n}));\n\nconst Question = styled(Typography)(() => ({\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n}));\n\nconst Option = styled(Typography)(() => ({\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n}));\n\nconst InputLabels = styled(InputLabel)(() => ({\n  fontSize: \"12px\",\n  fontWeight: 580,\n  color: \"#616161\",\n  paddingLeft: \"10px\",\n}));\n\nconst RadioButtons = styled(Radio)(() => ({\n  marginTop: \"-10px\",\n}));\n\nexport default function QuizQuestion({\n  quiz = {},\n  questionIndex,\n  quizData,\n  setQuizData,\n}) {\n  const handleQuestionChange = (e, i) => {\n    setQuizData(\n      quizData.map((q, index) =>\n        index === i ? { ...q, question: e.target.value } : q\n      )\n    );\n  };\n\n  const handleRemoveQuestion = (questionIndex) => {\n    setQuizData((prevQuizData) =>\n      prevQuizData.filter((_, index) => index !== questionIndex)\n    );\n  };\n\n  const handleSetCorrectOption = (o, questionIndex) => {\n    setQuizData(\n      quizData.map((q, i) =>\n        i === questionIndex ? { ...q, correctOption: o } : q\n      )\n    );\n  };\n\n  const handleOptionChange = (e, questionIndex, optionIndex) => {\n    let questionToUpdate = quizData.filter((q, i) => i === questionIndex)[0];\n    let options = questionToUpdate.options;\n    let newOptions = options.map((o, i) =>\n      i === optionIndex ? e.target.value : o\n    );\n    setQuizData(\n      quizData.map((q, i) =>\n        i === questionIndex ? { ...q, options: newOptions } : q\n      )\n    );\n  };\n  return (\n    <Wrapper>\n      <InputLabels\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n        {questionIndex + 1}.{\" \"}\n        {quiz.question ? \"Update Your Question!\" : \"Write your question\"}\n      </InputLabels>\n\n      <TextField\n        fullWidth\n        size=\"small\"\n        name=\"question\"\n        maxRows={3}\n        multiline\n        value={quiz.question}\n        placeholder=\"Type here...\"\n        onChange={(e) => handleQuestionChange(e, questionIndex)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              {questionIndex > 0 ? (\n                <IconButton\n                  color=\"error\"\n                  size=\"small\"\n                  onClick={() => handleRemoveQuestion(questionIndex)}>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </IconButton>\n              ) : null}\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Grid\n        sx={{\n          marginBottom: \"10px\",\n          backgroundColor: (theme) => theme.palette.grey[100],\n          borderRadius: \"5px\",\n          padding: \"20px\",\n          border: \"1px solid lightgrey\",\n          marginTop: \"10px\",\n        }}\n        container\n        rowGap={2}>\n        {quiz.options.map((o, i) => (\n          <Grid key={i} item xs={12} md={6} sx={{ padding: \"0 10px\" }}>\n            <Box\n              sx={{\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                display: \"flex\",\n              }}>\n              <RadioButtons\n                size=\"small\"\n                {...label}\n                color=\"default\"\n                checked={quiz.correctOption && quiz.correctOption === o}\n                onChange={(e) => handleSetCorrectOption(o, questionIndex)}\n                value={o}\n                type=\"radio\"\n              />\n              <InputLabels>Option {i + 1}</InputLabels>\n            </Box>\n            <TextField\n              multiline\n              maxRows={3}\n              fullWidth\n              size=\"small\"\n              name={`option${i + 1}`}\n              value={o}\n              onChange={(e) => handleOptionChange(e, questionIndex, i)}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useMediaQuery,\n  Button,\n  IconButton,\n  InputAdornment,\n  FormControlLabel,\n  Checkbox,\n  Radio,\n  RadioGroup,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useTheme } from \"@mui/material\";\nimport QuizQuestion from \"./QuizQuestion\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { toast } from \"react-toastify\";\n\nexport default function AddOrUpdateExamModal({\n  open = false,\n  onClose = () => {},\n  dataToUpdate = null,\n}) {\n  const theme = useTheme();\n  const { selectedSetting } = useContext(SettingContext);\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYears, setAcademicYears] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [markForm, setMarkForm] = useState({});\n  const [submiload, setSubmitload] = useState(false);\n  const [quizData, setQuizData] = useState([\n    {\n      question: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: \"\",\n    },\n  ]);\n  const [additionalInstructions, setAdditionalInstructions] = useState([\"\"]);\n  const [negativeMarking, setNegativeMarking] = useState(false);\n\n  const getData = async () => {\n    try {\n      const [academicYearData, classData] = await Promise.all([\n        get(PRIVATE_URLS.academicYear.list),\n        get(PRIVATE_URLS.class.list, {\n          params: { schoolId: selectedSetting._id },\n        }),\n      ]);\n\n      setAcademicYears(academicYearData.data?.result);\n      setClasses(classData.data?.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleOnChangeForm = (e) => {\n    const { name, value } = e.target;\n    setAddForm({\n      ...addForm,\n      [name]: value,\n    });\n  };\n\n  const handleAddQuizs = () => {\n    setQuizData([\n      ...quizData,\n      {\n        question: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctOption: \"\",\n      },\n    ]);\n  };\n\n  const handleAddInstruction = () => {\n    setAdditionalInstructions([...additionalInstructions, \"\"]);\n  };\n\n  const handleAdditionalInstructionChange = (e, index) => {\n    const updatedInstructions = [...additionalInstructions];\n    updatedInstructions[index] = e.target.value;\n    setAdditionalInstructions(updatedInstructions);\n  };\n\n  const handleDeleteInstruction = (index) => {\n    const updatedInstructions = [...additionalInstructions];\n    updatedInstructions.splice(index, 1);\n    setAdditionalInstructions(updatedInstructions);\n  };\n\n  const hanleMarkChange = (e) => {\n    const { name, value } = e.target;\n    setMarkForm((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleCheckboxChange = (event) => {\n    setNegativeMarking(event.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const quiz = quizData.map((q, index) => {\n        return {\n          question: q.question,\n          options: [\n            { value: q.options[0] },\n            { value: q.options[1] },\n            { value: q.options[2] },\n            { value: q.options[3] },\n          ],\n\n          correctOption: q.correctOption,\n        };\n      });\n      if (quiz.filter((q) => !q.question || !q.options).length)\n        return toast.error(\"Question cannot be empty\");\n      if (quiz.some((q) => q.options.some((option) => option.name === \"\")))\n        return toast.error(\"Option cannot be empty\");\n\n      if (quiz.filter((q) => !q.correctOption).length)\n        return toast.error(\"Please select a correct option\");\n      setSubmitload(true);\n      let playload = {\n        schoolId: selectedSetting._id,\n        academicYear: addForm.academicYear,\n        classId: addForm.schoolClass,\n        examName: addForm.examName,\n        passingPercentage: markForm.passingMark,\n        quiz: quiz,\n        negativeMarking: negativeMarking,\n        negativeMarkingPerQuestion: markForm.negativeMarking,\n        marksPerQuestion: markForm.mark,\n        additionalInstructions: additionalInstructions.map((add) => ({\n          point: add,\n        })),\n      };\n\n      const { data } = await post(\n        PRIVATE_URLS.preadmissionExam.create,\n        playload\n      );\n      handleClose();\n      // handleEditClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setSubmitload(false);\n  };\n\n  const handleClose = () => {\n    // setEditId(null);\n    setQuizData([\n      {\n        question: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctOption: \"\",\n      },\n    ]);\n    setAddForm({});\n    setMarkForm({});\n    setNegativeMarking(false);\n    setAdditionalInstructions([]);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullScreen={fullScreen}\n      maxWidth=\"md\"\n      fullWidth\n      aria-labelledby=\"responsive-dialog-title\">\n      <Box component=\"form\" sx={{ padding: 2 }} onSubmit={handleSubmit}>\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              fontWeight=\"bold\">\n              {dataToUpdate ? \"Update Exam\" : \"Add Exam\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <FormControl size=\"small\" fullWidth required>\n              <InputLabel>Academic Year</InputLabel>\n              <Select\n                labelId=\"demo-simpless-select-filled-label\"\n                id=\"demo-simple-select-filled-l\"\n                varient=\"outlined\"\n                label=\"academic year\"\n                name=\"academicYear\"\n                value={addForm.academicYear || \"\"}\n                onChange={handleOnChangeForm}>\n                {academicYears &&\n                  academicYears.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {row.from} - {row.to}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            <FormControl size=\"small\" fullWidth required>\n              <InputLabel>Class</InputLabel>\n              <Select\n                variant=\"outlined\"\n                label=\"class\"\n                labelId=\"demo-simple-select-filled-label\"\n                id=\"demo-simple-select-filled\"\n                name=\"schoolClass\"\n                value={addForm.schoolClass || \"\"}\n                onChange={handleOnChangeForm}>\n                {classes &&\n                  classes.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {row.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} lg={4} sx={{ mt: 0.2 }}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              required\n              size=\"small\"\n              label=\"Exam name\"\n              name=\"examName\"\n              id=\"filled-required\"\n              value={addForm.examName || \"\"}\n              onChange={handleOnChangeForm}\n            />\n          </Grid>\n        </Grid>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            padding: \"10px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mt: 4,\n            mb: 2,\n            border: \"1px solid lightgray\",\n            borderRadius: \"5px\",\n          }}>\n          <Typography sx={{ textAlign: \"left\", fontWeight: \"bold\" }}>\n            Add Questions:\n          </Typography>\n\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleAddQuizs}\n            startIcon={<AddIcon />}>\n            ADD\n          </Button>\n        </Box>\n\n        {quizData?.map((q, questionIndex) => (\n          <QuizQuestion\n            quiz={q}\n            questionIndex={questionIndex}\n            key={questionIndex}\n            quizData={quizData}\n            setQuizData={setQuizData}\n          />\n        ))}\n\n        <Box sx={{ mt: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              padding: \"10px\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mt: 4,\n              mb: 2,\n              border: \"1px solid lightgray\",\n              borderRadius: \"5px\",\n            }}>\n            <Typography sx={{ fontWeight: \"bold\" }}>\n              Additional Instruction:\n            </Typography>\n\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={handleAddInstruction}>\n              Add\n            </Button>\n          </Box>\n\n          {additionalInstructions.map((instruction, index) => (\n            <Grid container key={index} sx={{ mt: 1 }}>\n              <Grid item xs={12} md={12} lg={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  size=\"small\"\n                  multiline\n                  value={instruction}\n                  onChange={(e) => handleAdditionalInstructionChange(e, index)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          color=\"error\"\n                          size=\"small\"\n                          onClick={() => handleDeleteInstruction(index)}>\n                          <DeleteIcon fontSize=\"small\" color=\"error\" />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ))}\n        </Box>\n\n        <Grid container spacing={2} sx={{ mt: 1.5 }}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                gap: \"4px\",\n              }}>\n              <Typography sx={{ fontSize: \"16px\" }}>\n                Negative Marking:{\" \"}\n              </Typography>\n\n              <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n                value={negativeMarking}\n                onChange={handleCheckboxChange}\n                sx={{ mt: 1 }}>\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n\n              {/* <Typography sx={{ fontSize: \"16px\" }}>\n                Negative Marking:{\" \"}\n              </Typography>\n              <Box>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      fontSize=\"small\"\n                      checked={negativeMarking}\n                      onChange={handleCheckboxChange}\n                    />\n                  }\n                  label={\n                    <Typography style={{ fontSize: \"15px\" }}>Yes</Typography>\n                  }\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      fontSize=\"small\"\n                      checked={negativeMarking}\n                      onChange={(event) =>\n                        setNegativeMarking(event.target.checked)\n                      }\n                    />\n                  }\n                  label={\n                    <Typography style={{ fontSize: \"15px\" }}>No</Typography>\n                  }\n                />\n              </Box> */}\n            </Box>\n          </Grid>\n          {negativeMarking === \"true\" && (\n            <Grid item xs={12} md={12} lg={4}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                required\n                label=\"Negative Marks Per Question\"\n                type=\"number\"\n                name=\"negativeMarking\"\n                value={markForm.negativeMarking || \"\"}\n                onChange={hanleMarkChange}\n                InputLabelProps={{ style: { fontSize: 12 } }}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12} md={12} lg={4}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              required\n              label=\"Marks Per Question\"\n              type=\"number\"\n              name=\"mark\"\n              value={markForm.mark || \"\"}\n              onChange={hanleMarkChange}\n              InputLabelProps={{ style: { fontSize: 12 } }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12} lg={4}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Pass percentage (%)\"\n              size=\"small\"\n              required\n              type=\"number\"\n              name=\"passingMark\"\n              value={markForm.passingMark || \"\"}\n              onChange={hanleMarkChange}\n              InputLabelProps={{ style: { fontSize: 12 } }}\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: \"3%\",\n              mt: 3,\n            }}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"error\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n\n            <LoadingButton\n              loading={submiload}\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \"&:hover\": {\n                  background: \"#1b3779\",\n                },\n              }}>\n              Submit\n            </LoadingButton>\n          </Box>\n        </Grid>\n      </Box>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { examsTableKeys } from \"../../data/tableKeys/exams\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddForm from \"../../forms/AddForm\";\nimport AddOrUpdateExamModal from \"./AddOrUpdateExamModal\";\n\nexport default function Exams() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [gettingList, setGettingList] = useState(false);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  // question model;\n  const [openQuestionModel, setOpenQuestionModel] = useState(false);\n  const handleCloseQuestionModel = () => setOpenQuestionModel(false);\n  const handleOpenQuestionModel = () => setOpenQuestionModel(true);\n\n  // get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  // get exam list\n  const getExamList = async (values) => {\n    try {\n      setGettingList(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            class: values.class,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setData(data.result.map((d) => ({ ...d, class: d.class.name })));\n    } catch (error) {\n      console.log(error);\n    }\n    setGettingList(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n    },\n    onSubmit: getExamList,\n  });\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.preadmissionExam.delete + \"/\" + _id\n      );\n\n      getExamList();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exams\" />\n\n      <AddForm title=\"Add Exam\" onAddClick={handleOpenQuestionModel} />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              loading={gettingList}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={examsTableKeys}\n        bodyDataModal=\"exams\"\n        bodyData={data}\n        onDeleteClick={handleDelete}\n      />\n      <AddOrUpdateExamModal\n        open={openQuestionModel}\n        onClose={handleCloseQuestionModel}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Grid } from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function AddOrUpdateExamSchedule({\n  open,\n  selectedSetting,\n  handleClose = () => {},\n}) {\n  const [dataToEdit, setDataToEdit] = useState();\n  const [loading, setLoading] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [exams, setExams] = useState([]);\n\n  // get years\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"classId\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik?.values.academicYear,\n            class: entryFormik?.values.classId,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setExams(data.result.map((d) => ({ label: d.examName, value: d._id })));\n      entryFormik.setFieldValue(\"examId\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        dateOfExam: dayjs(values.dateOfExam).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n\n      console.log(payload, \"ppppppp\");\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.preadmissionExamSchedule.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.preadmissionExamSchedule.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      classId: \"\",\n      examId: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      roomNumber: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik?.values.academicYear && entryFormik?.values.classId) {\n      getExamList();\n    }\n  }, [\n    entryFormik?.values.academicYear,\n    entryFormik?.values.classId,\n    selectedSetting,\n  ]);\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Schedules\" : \"Add Exam Schedules\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"classId\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"examId\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"dateOfExam\"\n              label=\"Date of Exam\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"time\"\n              name=\"startTime\"\n              label=\"Start Time\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              type=\"time\"\n              name=\"endTime\"\n              label=\"End Time\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"roomNumber\"\n              label=\"Room No.\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"address\" label=\"Address\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport image from \"../assets/images/deleteicon.png\";\nimport { Box, Button, Modal, Typography } from \"@mui/material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 350,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  p: 2,\n};\nexport default function DeleteModal(props) {\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        open={props.deleteModal}\n        onClose={() => props.setDeleteModal(false)}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Are you sure want to delete this item?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => props.setDeleteModal(false)}>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                props.handleDelete(props.id);\n                props.setDeleteModal(false);\n              }}\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\">\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddOrUpdateExamSchedule from \"./AddOrUpdateExamSchedule\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport copy from \"clipboard-copy\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { toast } from \"react-toastify\";\nimport { Delete } from \"@mui/icons-material\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nexport default function ExamSchedules() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // get years\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.preadmissionExam.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik?.values.academicYear,\n            class: entryFormik?.values.class,\n          },\n        },\n      });\n      // console.log(data.result, \"exam list\");\n      setExams(data.result.map((d) => ({ label: d.examName, value: d._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExamSchedules = async (values) => {\n    console.log(values, \"exam values\");\n\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.preadmissionExamSchedule.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            class: values.class,\n            exam: values.exam,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      console.log(data.result, \"exam list\");\n      setData(data.result.map((d) => ({ ...d, class: d.class.name })));\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      exam: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getExamSchedules,\n  });\n\n  useEffect(() => {\n    if (entryFormik?.values.academicYear && entryFormik?.values.class) {\n      getExamList();\n    }\n  }, [\n    entryFormik?.values.academicYear,\n    entryFormik?.values.class,\n    selectedSetting,\n  ]);\n\n  const AddExamSchedules = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // setDataToEdit(null);\n  };\n\n  const handleCopyLink = (copylink) => {\n    console.log(copylink, \"copylink\");\n    copy(`${copylink}`);\n    toast.success(\"Exam Link Copied successfully\");\n  };\n\n  const handleUpdateLink = async (id) => {\n    try {\n      const res = await put(\n        `${PRIVATE_URLS.preadmissionExamSchedule.enableExamLink}${id}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitNotify = async (e, id) => {\n    e.preventDefault();\n    try {\n      const res = await post(\n        `${PRIVATE_URLS.preadmissionExamSchedule.sendVenueDetailsToStudents}/${id}`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(\n        PRIVATE_URLS.preadmissionExamSchedule.delete + \"/\" + id\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Schedules\" />\n\n      <AddForm title=\"Add Exam Schedules\" onAddClick={AddExamSchedules} />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Academic Year</TableCell>\n\n              <TableCell align=\"center\">Class</TableCell>\n              <TableCell align=\"center\">Exam</TableCell>\n              <TableCell align=\"center\">Exam Link</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          {data.map((data, index) => (\n            <TableRow>\n              <TableCell align=\"center\">\n                {page * rowsPerPage + index + 1}\n              </TableCell>\n              <TableCell align=\"center\">\n                {data.academicYear.academicYearFrom}-\n                {data.academicYear.academicYearTo}\n              </TableCell>\n\n              <TableCell align=\"center\">{data.class.name}</TableCell>\n              <TableCell align=\"center\">{data.exam?.examName}</TableCell>\n              <TableCell align=\"center\">\n                <Tooltip\n                  title={`${\n                    data.examLinkEnabled === true ? \"Enable\" : \"Disable\"\n                  }`}>\n                  <Switch\n                    key={data._id}\n                    onClick={() => handleUpdateLink(data._id)}\n                    defaultChecked={data.examLinkEnabled ? true : false}\n                  />\n                </Tooltip>\n\n                <Tooltip title=\"Copy Link\">\n                  <IconButton\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => handleCopyLink(data?.examLink)}>\n                    <ContentCopyIcon fontSize=\"small\" color=\"primary\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n\n              <TableCell>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    gap: 2,\n                  }}>\n                  <Tooltip title=\"Update\">\n                    <IconButton\n                      style={{\n                        color: \"#1b3779\",\n                      }}\n                      size=\"small\">\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={() => setDeleteModal(data._id)}>\n                      <Delete color=\"error\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <DeleteModal\n                    deleteModal={deleteModal}\n                    handleDelete={handleDelete}\n                    id={data._id}\n                    setDeleteModal={setDeleteModal}\n                  />\n\n                  <Button\n                    size=\"small\"\n                    onClick={(e) => handleSubmitNotify(e, data._id)}\n                    disabled={data.notified === true}\n                    variant=\"contained\">\n                    {data.notified === true ? \"Notified\" : \"Notify\"}\n                  </Button>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      {/* ==== add/edit exam schedules ======== */}\n      <AddOrUpdateExamSchedule\n        open={open}\n        handleClose={handleClose}\n        selectedSetting={selectedSetting}\n      />\n    </>\n  );\n}\n","export const resultTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Max marks\",\n    key: \"maxMarks\",\n  },\n  {\n    name: \"Passing marks \",\n    key: \"passingMarks\",\n  },\n  {\n    name: \"Obtained marks\",\n    key: \"obtainedMarks\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { resultTableKeys } from \"../../data/tableKeys/result\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { Box, ButtonGroup, styled } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\n\nconst MuiBUtton = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nexport default function Result() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [classes, setClasses] = useState([]);\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Result\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <MuiBUtton>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          <Button variant=\"contained\">Pending:56</Button>\n          <Button>Approved: 100</Button>\n\n          <Button>Rejected:0</Button>\n        </ButtonGroup>\n      </MuiBUtton>\n\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={resultTableKeys}\n        bodyDataModal=\"result\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const academicClassTableKeys = [\n  {\n    name: \"Class\",\n    key: \"name\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport { academicClassTableKeys } from \"../../data/tableKeys/academicClassData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Class() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getEmployees();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.class.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.class.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      classTeachers: dataToEdit?.classTeachers?.map((c) => c._id) || [],\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      numericName: dataToEdit?.numericName || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.class.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Classes\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicClassTableKeys}\n        bodyDataModal=\"class\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Class\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class\" : \"Add Class\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Class Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"classTeachers\"\n              label={`Class Teachers - (${entryFormik.values.classTeachers.length})`}\n              required={false}\n              showSearch={true}\n              multiple={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"View On Web\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"numericName\"\n              label=\"Numeric Name\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const academicSectionTableKeys = [\n  { name: \"Section Name\", key: \"name\" },\n  // {\n  //   name: \"Class\",\n  //   path: \"class\",\n  //   key: \"name\",\n  // },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  ListSubheader,\n  TextField,\n  InputAdornment,\n} from \"@mui/material\";\nimport React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ThemeModeContext from \"../context/ThemeModeContext\";\n\nconst containsText = (text, searchText) =>\n  text?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1;\n\nfunction CustomSelect({\n  value,\n  name = \"\",\n  label = \"\",\n  options = [],\n  onChange = () => {},\n  disabled = false,\n  required = false,\n  multiple = false,\n  isSearch = true,\n}) {\n  const [blurred, setBlurred] = useState(false);\n\n  var inputRef = useRef(undefined);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const displayedOptions = useMemo(\n    () => options.filter((option) => containsText(option.label, searchText)),\n    [searchText, options, blurred]\n  );\n\n  useEffect(() => {\n    setSearchText(\"\");\n  }, [blurred]);\n\n  const labelColor =\n    disabled && !isDarkMode\n      ? \"gray\"\n      : !disabled && isDarkMode\n      ? \"white\"\n      : !disabled && !isDarkMode\n      ? \"black\"\n      : disabled && isDarkMode\n      ? \"gray\"\n      : \"inherit\";\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n      sx={{ top: \"4px\" }}>\n      <InputLabel sx={{ color: labelColor }} shrink={true} id={label}>\n        {label}\n      </InputLabel>\n      <Select\n        disabled={disabled}\n        notched\n        name={name}\n        multiple={multiple}\n        labelId={label}\n        value={value || \"\"}\n        label={label}\n        onChange={onChange}\n        onAnimationEnd={() => inputRef?.current?.focus()}\n        MenuProps={{ autoFocus: false }}\n        onBlur={() => setBlurred(!blurred)}>\n        {isSearch && (\n          <ListSubheader>\n            <TextField\n              onBlur={() => setBlurred(!blurred)}\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={(e) => setSearchText(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n\n        {displayedOptions.map((s, i) => (\n          <MenuItem key={i} value={s.value}>\n            {s.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default memo(CustomSelect);\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSectionTableKeys } from \"../../data/tableKeys/academicSectionData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Section() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [subject, setSubject] = useState([]);\n  const [subjectTeachers, setSubjectTeachers] = useState([]);\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result);\n\n      console.log(data.result, \"rrrrrrrrr\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n      if (!payload.sectionTeacher) {\n        delete payload.sectionTeacher;\n      }\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.section.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.section.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      sectionTeacher: dataToEdit?.sectionTeacher?._id || \"\",\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (selectedClass) {\n      getData();\n    }\n  }, [selectedClass, selectedSetting]);\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.section.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Section\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicSectionTableKeys}\n        bodyDataModal=\"section\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Section\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit sections ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Section\" : \"Add Section\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Section Name\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"class\"\n              label=\"Select Class\"\n              required={true}\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"sectionTeacher\"\n              label=\"Section Teacher\"\n              options={employees}\n              showSearch={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"View On Web\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n\n        <Box\n          sx={{\n            padding: \"10px\",\n            border: \"1px solid lightgray\",\n            borderRadius: \"5px\",\n          }}>\n          <Typography>Select subject teachers</Typography>\n\n          {subject.map((sub, index) => (\n            <Grid\n              container\n              spacing={2}\n              key={sub._id}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}>\n              <Grid item xs={12} md={3}>\n                {\" \"}\n                <Typography sx={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\n                  {sub.name}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={8}>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"subjectTeacher\"\n                  label=\"Select Teacher\"\n                  options={employees}\n                  showSearch={true}\n                />\n              </Grid>\n            </Grid>\n          ))}\n        </Box>\n      </FormModal>\n    </>\n  );\n}\n","export const academicSubjectTableKeys = [\n  { name: \"Subject Name\", key: \"name\" },\n  {\n    name: \"Subject Code\",\n    key: \"code\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSubjectTableKeys } from \"../../data/tableKeys/academicSubjectData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Subject_Type = [\n  { label: \"Mandatory\", value: \"mandatory\" },\n  { label: \"Optional\", value: \"optional\" },\n];\n\nconst Subject_Group = [\n  { label: \"Scholastic\", value: \"scholastic\" },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function Subject() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n      console.log(data.result, \"rrrrrrrrr\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting, selectedSetting._id]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.subject.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.subject.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      code: dataToEdit?.code || \"\",\n      subjectType: dataToEdit?.subjectType || \"\",\n      subjectGroup: dataToEdit?.subjectGroup || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      subjectTeachers: dataToEdit?.subjectTeachers?.map((t) => t._id) || [],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    console.log(selectedClass, \"000000\");\n    if (selectedClass) {\n      setData([]);\n      getData();\n    } else {\n      setData([]);\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.subject.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={academicSubjectTableKeys}\n        bodyDataModal=\"subject\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Subject\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit Subjects ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update\" : \"Add Subject\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Subject Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"code\"\n              label=\"Subject Code\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectType\"\n              label=\"Subject Type\"\n              options={Subject_Type}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectGroup\"\n              label=\"Group\"\n              options={Subject_Group}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              showSearch={true}\n              multiple={true}\n              formik={entryFormik}\n              name=\"subjectTeachers\"\n              label={`Subject Teachers-(${entryFormik.values.subjectTeachers.length})`}\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentAttendanceReportTableKeys = [\n  {\n    name: \"Student\",\n    key: \"student\",\n  },\n  {\n    name: \"Working Days\",\n    key: \"workingDays\",\n  },\n  {\n    name: \"Present Days\",\n    key: \"presentDays\",\n  },\n\n  {\n    name: \"Percentage\",\n    key: \"percentagePresent\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\n\nimport NoTableData from \"../../components/Tables/NoTableData\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function StudentAttendanceTable({\n  bodyData = [],\n  date = new Date(Date.now()),\n  setBodyData = () => {},\n  bodyDataModal = \"Attendance data\",\n  isDataReady = true,\n  classId,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateAttendance = (empId, status) => {\n    setBodyData(\n      bodyData.map((d) =>\n        d.student._id == empId ? { ...d, attendanceStatus: status } : d\n      )\n    );\n  };\n\n  const handleUpdateAll = (status) => {\n    setBodyData(\n      bodyData.map((d) => ({\n        ...d,\n        attendanceStatus: status,\n      }))\n    );\n  };\n\n  const handleUpdateAttendance = async () => {\n    try {\n      setUpdating(true);\n      const { data } = await put(PRIVATE_URLS.studentAttendance.update, {\n        attendanceData: bodyData.map((d) => ({\n          ...d,\n          student: d.student._id,\n        })),\n        date,\n        schoolId: selectedSetting._id,\n        classId,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setUpdating(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                S.No\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Roll Number\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Present All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"absent\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"present\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Absent All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"absent\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length\n              ? bodyData.map((data, index) => (\n                  <TableRow key={data._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {data.student?.basicInfo?.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {data.student?.academicInfo?.rollNumber}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"present\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.student?._id, \"present\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"absent\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.student?._id, \"absent\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        {!bodyData.length ? null : (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px 10px\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={updating}\n              onClick={handleUpdateAttendance}\n              size=\"small\">\n              Update\n            </LoadingButton>\n          </Box>\n        )}\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport { toast } from \"react-toastify\";\nimport { saveAs } from \"file-saver\";\n\nexport function downloadFile(\n  contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  data,\n  filename\n) {\n  // Convert the buffer data to a Blob\n  const blob = new Blob([data], {\n    type: contentType,\n  });\n\n  // Save the Blob as a file using FileSaver.js\n  saveAs(blob, filename);\n}\n\nexport function hasAllValues(obj, exceptions = [], showToast = true) {\n  let allValuesPresent = true;\n  for (const key in obj) {\n    if (!exceptions.includes(key) && !obj[key]) {\n      allValuesPresent = false;\n      if (showToast) {\n        toast.error(`Value for \"${key}\" is missing!`);\n      }\n    }\n  }\n  return allValuesPresent;\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { studentAttendanceReportTableKeys } from \"../../data/tableKeys/studentAttendanceReportData\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport StudentAttendanceTable from \"./StudentAttendanceTable\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function StudentAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [reportData, setReportData] = useState([]);\n  const [overViewData, setOverViewData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [fetchingAttendanceData, setFetchingAttendanceData] = useState(false);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [downloadingAbsent, setDownloadingAbsent] = useState(false);\n  const [fetchingreport, setFetchingReport] = useState(false);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const downloadAbsentStudentsReport = async (values) => {\n    try {\n      setDownloadingAbsent(true);\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.donwloadAbsentReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            date: dayjs(attendanceFormik.values.date).format(\"YYYY-MM-DD\"),\n            classId: values.sectionInfo.class,\n            sectionId: values.section,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", data, \"student-absent-list\");\n      setDownloadingAbsent(false);\n    } catch (error) {\n      setDownloadingAbsent(false);\n    }\n  };\n\n  const handleFindClick = async (values) => {\n    try {\n      setFetchingAttendanceData(true);\n      const { data } = await get(PRIVATE_URLS.studentAttendance.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          date: dayjs(values.date).format(\"YYYY-MM-DD\"),\n        },\n      });\n\n      setAttendanceData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceData(false);\n  };\n\n  const attendanceFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      date: dayjs(new Date()).format(\"YYYY/MM/DD\"),\n    },\n    onSubmit: handleFindClick,\n  });\n\n  useEffect(() => {\n    setAttendanceData([]);\n  }, [attendanceFormik.values]);\n\n  const getStudentAttendanceOverview = async (values) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.getAttendanceOverview,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n            classId: values.class,\n          },\n        }\n      );\n      setOverViewData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const overviewFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      date: dayjs(new Date()).format(\"YYYY/MM/DD\"),\n    },\n    onSubmit: getStudentAttendanceOverview,\n  });\n\n  // useEffect(() => {\n  //   if (overviewFormik.values.class && overviewFormik.values.date) {\n  //     overviewFormik.handleSubmit();\n  //   }\n  // }, [overviewFormik.values.class, overviewFormik.values.date]);\n\n  useEffect(() => {\n    if (overviewFormik.values.class && overviewFormik.values.date) {\n      getStudentAttendanceOverview(overviewFormik.values);\n    }\n  }, [overviewFormik.values.class, overviewFormik.values.date]);\n\n  const getAttendanceReport = async (values) => {\n    try {\n      setFetchingReport(true);\n      const { data } = await get(\n        PRIVATE_URLS.studentAttendance.getAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            classId: values.class,\n            sectionId: values.section,\n            month: dayjs(new Date(values.month)).get(\"month\") + 1,\n            year: dayjs(new Date(values.month)).get(\"year\"),\n          },\n        }\n      );\n      setReportData(data.result);\n      setFetchingReport(false);\n    } catch (error) {\n      console.log(error);\n      setFetchingReport(false);\n    }\n  };\n\n  const reportFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      month: null,\n    },\n    onSubmit: getAttendanceReport,\n    enableReinitialize: true,\n  });\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      reportFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      overviewFormik.setFieldValue(\"class\", data.result[0]?._id);\n      attendanceFormik.setFieldValue(\"class\", data.result[0]?._id);\n      reportFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class:\n              overviewFormik.values.class ||\n              attendanceFormik.values.class ||\n              reportFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n\n      attendanceFormik.setFieldValue(\"section\", data.result[0]?._id);\n      reportFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      overviewFormik.values.class ||\n      attendanceFormik.values.class ||\n      reportFormik.values.class\n    ) {\n      getSections();\n    }\n  }, [\n    overviewFormik.values.class,\n    attendanceFormik.values.class,\n    reportFormik.values.class,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    attendanceFormik.resetForm();\n    reportFormik.resetForm();\n    overviewFormik.resetForm();\n  }, [value]);\n\n  return (\n    <>\n      <PageHeader title=\"Student Attedance\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Attedance\", \"Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={overviewFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={overviewFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                  Section\n                </TableCell>\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                  Present\n                </TableCell>\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                  Absent\n                </TableCell>\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                  Percentage\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {overViewData\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((attendanceStudent, index) => (\n                  <TableRow key={attendanceStudent._id}>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.sectionInfo.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.totalPresent}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.totalAbsent}\n                      <LoadingButton\n                        size=\"small\"\n                        loading={downloadingAbsent}\n                        variant=\"contained\"\n                        sx={{ ml: 1 }}\n                        onClick={() =>\n                          downloadAbsentStudentsReport(attendanceStudent)\n                        }>\n                        Download\n                      </LoadingButton>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {attendanceStudent.percentage}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          {!overViewData.length && (\n            <Typography\n              variant=\"h6\"\n              sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n              No data found\n            </Typography>\n          )}\n\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50]}\n            component=\"div\"\n            count={overViewData.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </TableContainer>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={attendanceFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={attendanceFormik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={attendanceFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n            <Grid xs={12} md={3} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <LoadingButton\n                loading={fetchingAttendanceData}\n                onClick={attendanceFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <StudentAttendanceTable\n          date={attendanceFormik.values.date}\n          bodyData={attendanceData}\n          setBodyData={setAttendanceData}\n          classId={attendanceFormik.values.class}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={reportFormik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={reportFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={reportFormik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"Month\"\n                name=\"month\"\n                openTo=\"month\"\n                inputFormat=\"MMM\"\n                views={[\"month\"]}\n                required={true}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              display={\"flex\"}\n              gap={1}\n              justifyContent={\"flex-end\"}>\n              <LoadingButton\n                loading={fetchingreport}\n                onClick={reportFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"reports\"\n          bodyData={reportData}\n          tableKeys={studentAttendanceReportTableKeys}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeAttendanceReportTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"employee\",\n  },\n  {\n    name: \"Working Days\",\n    key: \"workingDays\",\n  },\n  {\n    name: \"Present Days\",\n    key: \"presentDays\",\n  },\n\n  {\n    name: \"Percentage\",\n    key: \"percentagePresent\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\n\nimport NoTableData from \"../../components/Tables/NoTableData\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function EmployeeAttendanceTable({\n  bodyData = [],\n  date = new Date(Date.now()),\n  setBodyData = () => {},\n  bodyDataModal = \"Attendance data\",\n  isDataReady = true,\n}) {\n  const [updating, setUpdating] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateAttendance = (empId, status) => {\n    setBodyData(\n      bodyData.map((d) =>\n        d.employee._id == empId ? { ...d, attendanceStatus: status } : d\n      )\n    );\n  };\n\n  const handleUpdateAll = (status) => {\n    setBodyData(\n      bodyData.map((d) => ({\n        ...d,\n        attendanceStatus: status,\n      }))\n    );\n  };\n\n  const handleUpdateAttendance = async () => {\n    try {\n      setUpdating(true);\n      const { data } = await put(PRIVATE_URLS.employeeAttendance.update, {\n        attendanceData: bodyData.map((d) => ({\n          ...d,\n          employee: d.employee._id,\n        })),\n        date,\n        schoolId: selectedSetting._id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setUpdating(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Employee Id\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Present All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"absent\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"present\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Absent All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"late\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"absent\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Late All{\" \"}\n                <Checkbox\n                  checked={\n                    !bodyData.find((a) =>\n                      [\"present\", \"absent\"].includes(a.attendanceStatus)\n                    )\n                      ? true\n                      : false\n                  }\n                  onChange={() => handleUpdateAll(\"late\")}\n                  inputProps={{ \"aria-label\": \"controlled\" }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length\n              ? bodyData.map((data, index) => (\n                  <TableRow key={data._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {data.employee?.basicInfo?.name}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {data.employee?.basicInfo?.empId}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"present\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"present\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"absent\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"absent\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Checkbox\n                        checked={\n                          data.attendanceStatus === \"late\" ? true : false\n                        }\n                        onChange={() =>\n                          updateAttendance(data?.employee?._id, \"late\")\n                        }\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        {!bodyData.length ? null : (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px 10px\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={updating}\n              onClick={handleUpdateAttendance}\n              size=\"small\">\n              Update\n            </LoadingButton>\n          </Box>\n        )}\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { employeeAttendanceReportTableKeys } from \"../../data/tableKeys/employeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport EmployeeAttendanceTable from \"./EmployeeAttendanceTable\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [roles, setRoles] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [fetchingAttendanceData, setFetchingAttendanceData] = useState(false);\n  const [fetchingAttendanceReport, setFetchingAttendanceReport] =\n    useState(false);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleFindClick = async (values) => {\n    try {\n      setFetchingAttendanceData(true);\n      const { data } = await get(PRIVATE_URLS.employeeAttendance.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          roleId: values.role,\n          date: values.date,\n        },\n      });\n      setAttendanceData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceData(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      role: \"\",\n      date: dayjs(new Date()),\n    },\n    onSubmit: handleFindClick,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.date && entryFormik.values.role) {\n      setAttendanceData([]);\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleGetReport = async (values) => {\n    try {\n      setFetchingAttendanceReport(true);\n      const { data } = await get(\n        PRIVATE_URLS.employeeAttendance.getAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            roleId: values.role,\n            fromDate: values.fromDate,\n            toDate: values.toDate,\n          },\n        }\n      );\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingAttendanceReport(false);\n  };\n\n  const reportFormik = useFormik({\n    initialValues: {\n      role: \"\",\n      date: dayjs(new Date()),\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    if (\n      reportFormik.values.fromDate &&\n      reportFormik.values.role &&\n      reportFormik.values.toDate\n    ) {\n      setData([]);\n      reportFormik.handleSubmit();\n    }\n  }, [reportFormik.values, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Attedance\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Attedance\", \"Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"role\"\n                formik={entryFormik}\n                label=\"Select Roles\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={fetchingAttendanceData}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <EmployeeAttendanceTable\n          date={entryFormik.values.date}\n          bodyData={attendanceData}\n          setBodyData={setAttendanceData}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"role\"\n                formik={reportFormik}\n                label=\"Select Roles\"\n                options={roles}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                disableFutureDates={true}\n                formik={reportFormik}\n                label=\"To Date\"\n                name=\"toDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                onClick={reportFormik.handleSubmit}\n                loading={fetchingAttendanceReport}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"reports\"\n          bodyData={data}\n          tableKeys={employeeAttendanceReportTableKeys}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport { Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../forms/AddForm\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport FormInput from \"../forms/FormInput\";\nimport FormModal from \"../forms/FormModal\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function ClassRoutine() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      teacher: \"\",\n      roomNo: \"\",\n      startTime: \"\",\n      endTime: \"\",\n    },\n    onSubmit: console.log(\"nnnnnnn\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      class: \"\",\n    },\n    onSubmit: console.log(\"nnnnnnn\"),\n  });\n\n  const AddClassRoutine = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getSubject();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    getClasses();\n\n    getEmployees();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Class Routine\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Typography component=\"h1\" sx={{ fontWeight: \"bold\", mt: 1 }}>\n        Sections\n      </Typography>\n\n      <AddForm title=\"Add Class Routine\" onAddClick={AddClassRoutine} />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class Routine\" : \"Add Routine\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"class\"\n              label=\"Class\"\n              required={true}\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"section\"\n              label=\"Section\"\n              required={true}\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"subject\"\n              label=\"Subject\"\n              required={true}\n              options={subjects}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"teacher\"\n              label=\"Teacher\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"roomNo\" label=\"Room Number\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"startTime\"\n              label=\"Start Time\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"endTime\" label=\"End Time\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import { Box, Stack, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst TitleContainer = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  borderRadius: \"5px\",\n  padding: \"2px 5px\",\n  width: \"60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nconst ValueContainer = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nexport default function StudentCount({\n  title = \"\",\n  count = 0,\n  showTitle = false,\n}) {\n  return (\n    <Stack direction=\"row\" columnGap={showTitle ? 1 : 0}>\n      {showTitle ? (\n        <TitleContainer>\n          <Typography\n            sx={{ fontSize: \"14px\", color: \"white\", fontWeight: \"bold\" }}\n          >\n            {title}\n          </Typography>\n        </TitleContainer>\n      ) : null}\n      <ValueContainer>\n        <Typography sx={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\n          {count}\n        </Typography>\n      </ValueContainer>\n    </Stack>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  styled,\n} from \"@mui/material\";\nimport StudentCount from \"../../components/Student/StudentCount\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst TableHeader = styled(TableCell)(({ theme }) => ({\n  borderRight: \"1px solid grey\",\n}));\nconst TableDivider = styled(Divider)(({ theme }) => ({\n  borderBottomColor: \"grey\",\n  width: \"100%\",\n}));\n\nconst DataContiner = styled(Box)(({ theme }) => ({\n  marginTop: \"52px\",\n  display: \"flex\",\n  rowGap: \"2px\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  paddingBottom: \"10px\",\n}));\n\nexport default function Overview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectAcademicYear, setSelectAcademicYear] = useState(\"\");\n  const [overviewDetails, setOverviewDetails] = useState([]);\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [totalMaleStudents, setTotalMaleStudents] = useState(0);\n  const [totalFemaleStudents, setTotalFemaleStudents] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setSelectAcademicYear(data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    const academicYearChanged = async () => {\n      try {\n        if (selectAcademicYear) {\n          const { data } = await get(PRIVATE_URLS.student.overView, {\n            params: {\n              schoolId: selectedSetting._id,\n              academicYear: selectAcademicYear,\n            },\n          });\n\n          setOverviewDetails(data?.result);\n\n          setTotalStudents(data.result.totalStudentsCount);\n          setTotalMaleStudents(data.result.totalMaleStudentsCount);\n          setTotalFemaleStudents(data.result.totalFemaleStudentsCount);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    academicYearChanged();\n  }, [selectAcademicYear, selectedSetting]);\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(\n        PRIVATE_URLS.student.downloadAllStudentsExcel,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: selectAcademicYear,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Overview\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"academicYear\"\n              value={selectAcademicYear}\n              onChange={(e) => setSelectAcademicYear(e.target.value)}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\", mt: 2 }}>\n            <Tooltip title=\"Download\">\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleGetDownloadExcel}>\n                Download Students\n              </LoadingButton>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Box sx={{ fontSize: { md: \"15px\", sm: \"12px\" }, padding: \"1.2rem\" }}>\n        <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n          <Box>Total Students:{totalStudents}</Box>\n          <Box>Total Male Students:{totalMaleStudents}</Box>\n          <Box>Total Female Students:{totalFemaleStudents}</Box>\n        </Box>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableHeader align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Class\n              </TableHeader>\n\n              <TableHeader align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Students\n              </TableHeader>\n\n              <TableHeader align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Sections\n              </TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {overviewDetails?.data?.map((overview, i) => (\n              <TableRow key={overview.className}>\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\" }}\n                  align=\"center\">\n                  {overview.name}\n                </TableCell>\n\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\", padding: 0 }}\n                  align=\"center\">\n                  <DataContiner>\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Male\"\n                      count={overview.maleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Female\"\n                      count={overview.femaleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Total\"\n                      count={overview.totalStudents}\n                    />\n                  </DataContiner>\n                </TableCell>\n\n                <TableCell align=\"left\">\n                  <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                      <TableHead\n                        sx={{\n                          backgroundColor: (theme) =>\n                            theme.palette.mode === \"dark\"\n                              ? theme.palette.primary.dark\n                              : theme.palette.primary.light,\n                        }}>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\">\n                              {overview.section}\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\" key={index}>\n                              <Box\n                                sx={{\n                                  display: \"flex\",\n                                  rowGap: \"2px\",\n                                  flexDirection: \"column\",\n                                }}>\n                                <StudentCount\n                                  title=\"Male\"\n                                  count={overview.maleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Female\"\n                                  count={overview.femaleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Total\"\n                                  count={overview.count}\n                                />\n                              </Box>\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nexport const admitStudentTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"section\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Admission No\",\n    key: \"admissionNumber\",\n    path: \"academicInfo\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PrintSharp } from \"@mui/icons-material\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { admitStudentTableKeys } from \"../../data/tableKeys/admitStudentData\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst Status_Options = [\n  { label: \"Active\", value: true },\n  { label: \"In-Active\", value: false },\n];\n\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function AdmitStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigation = useNavigate();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [file, setFile] = useState([]);\n  const [fileAdmit, setFileAdmit] = useState([]);\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"admitFile\") {\n        setFileAdmit(fileList);\n      } else if (type === \"updateFile\") {\n        setFile(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleCloseUpdateModal = () => {\n    setOpenModal(false);\n    setFile([]);\n  };\n\n  const handleCloseAdmitModal = () => {\n    setOpenModalAdmit(false);\n    setFileAdmit([]);\n  };\n\n  const handelAddStudent = (e) => {\n    navigation(\"/sch/student/add-student\");\n  };\n\n  const handleEditClick = (data) => {\n    navigation(`/sch/student/edit-student/${data._id}`);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              active: values.active,\n            },\n          },\n        });\n\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n              active: values.active,\n            },\n          },\n        });\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"all\",\n      active: true,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSectionData(sectionAllOption);\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.delete + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(PRIVATE_URLS.student.downloadStudentsExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n          active: entryFormik.values.active,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"students.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetDownloadPdf = async () => {\n    try {\n      setLoader(true);\n      const getStudentPdf = await get(\n        PRIVATE_URLS.student.downloadStudentsPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            active: entryFormik.values.active,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getStudentPdf.data, \"student-list.pdf\");\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n    }\n  };\n\n  const handleSubmitBulkUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n\n      file.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(PRIVATE_URLS.student.bulkUpdate, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetUpdateSheet = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.student.bulkUpdateSheet, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetAdmitSheet = async () => {\n    try {\n      const getExcel = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"studentAdmit_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleAdmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"schoolId\", selectedSetting._id);\n      fileAdmit.forEach((f) => formData.append(\"file\", f));\n\n      await post(PRIVATE_URLS.student.bulkStudentAdmit, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNavigate = () => {\n    navigation(\"/sch/student/bulk-photo\");\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Students\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Status\"\n                options={Status_Options}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n            }}>\n            {entryFormik.values.academicYear &&\n              entryFormik.values.class &&\n              entryFormik.values.section !== \"all\" && (\n                <Stack\n                  gap={1}\n                  direction={{ xs: \"column\", sm: \"row\", md: \"row\" }}>\n                  <Tooltip title=\"Bulk Admit\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModalAdmit(true)}>\n                      BULK ADMIT\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Bulk Update\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModal(true)}>\n                      BULK UPDATE\n                    </Button>\n                  </Tooltip>\n                </Stack>\n              )}\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 1,\n            }}>\n            <Stack direction=\"row\">\n              <Tooltip title=\"Download\">\n                <LoadingButton\n                  loading={loading}\n                  onClick={handleGetDownloadExcel}>\n                  <DownloadForOfflineSharpIcon color=\"primary\" />\n                </LoadingButton>\n              </Tooltip>\n              <Tooltip title=\"Print\">\n                <LoadingButton loading={loader} onClick={handleGetDownloadPdf}>\n                  <PrintSharp color=\"primary\" />\n                </LoadingButton>\n              </Tooltip>\n\n              <Button size=\"small\" variant=\"contained\" onClick={handleNavigate}>\n                Bulk Photo\n              </Button>\n            </Stack>\n          </Box>\n        </Box>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={admitStudentTableKeys}\n        bodyDataModal=\"students\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* add student */}\n      <AddForm title=\"Add Students\" onAddClick={handelAddStudent} />\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleAdmit}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Admit\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  endIcon={<DownloadIcon />}\n                  onClick={handleGetAdmitSheet}>\n                  Sample\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select  File\"\n                  onChange={(e) => handleChangeFiles(e, \"admitFile\")}\n                  customOnChange={true}\n                  selectedFiles={fileAdmit}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseAdmitModal}>\n                  Cancel\n                </Button>\n                <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleSubmitBulkUpdate}>\n            {\" \"}\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Update\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={handleGetUpdateSheet}\n                  endIcon={<DownloadIcon />}>\n                  Download\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select File\"\n                  onChange={(e) => handleChangeFiles(e, \"updateFile\")}\n                  customOnChange={true}\n                  selectedFiles={file}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseUpdateModal}>\n                  Cancel\n                </Button>\n                <Button variant=\"contained\" size=\"small\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nconst StickyBar = ({ children, content }) => {\n  const [isBottom, setIsBottom] = useState(true);\n\n  useEffect(() => {\n    // Remove the event listener since we want the bar to be fixed at the bottom\n    return () => {};\n  }, []);\n\n  return (\n    <>\n      {/* Additional items at the bottom */}\n      {isBottom && content && (\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n            right: 0,\n            width: \"100%\",\n            background: \"whitesmoke\",\n            padding: \"15px\",\n            zIndex: 1000,\n          }}\n        >\n          {content}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default StickyBar;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { Checkbox } from \"@mui/material\";\nimport { hasAllValues } from \"../../utils\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useTheme } from \"@emotion/react\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function Reshuffle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n  const [file, setFile] = useState([]);\n  const [studentReshuffle, setStudentReshuffle] = useState([]);\n  const [checkBox, setCheckBox] = useState([]);\n  const [reshuffle, setReshuffle] = useState(false);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = studentReshuffle.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleReshffleCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudentReshuffle(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      newSection: \"\",\n    },\n    onSubmit: getList,\n  });\n\n  useEffect(() => {\n    setStudentReshuffle([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleReshuffle = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        sectionId: entryFormik.values.newSection,\n        classId: entryFormik.values.class,\n        currentSectionId: entryFormik.values.section,\n        studentIds: checkBox,\n      };\n\n      setReshuffle(true);\n\n      const { data } = await put(PRIVATE_URLS.student.resuffle, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setReshuffle(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Reshuffle\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Current Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"newSection\"\n                formik={entryFormik}\n                label=\"Change To\"\n                options={sectionData.filter(\n                  (section) => section.value !== entryFormik.values.section\n                )}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap=\"10px\">\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={() => setOpenModalAdmit(true)}>\n                Bulk Reshuffle\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Roll No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Father Name\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  onChange={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentReshuffle\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.academicInfo.rollNumber}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox\n                      checked={checkBox.includes(row._id)}\n                      onChange={(e) => handleReshffleCheckBox(row._id, e)}\n                      {...label}\n                      sx={{\n                        color: \"#1b3779\",\n                        \"&.Mui-checked\": {\n                          color: \"#1b3779\",\n                        },\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!studentReshuffle.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={studentReshuffle.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TableContainer>\n\n      {studentReshuffle.length > 0 && (\n        <StickyBar\n          content={\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={reshuffle}\n                varient=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handleReshuffle}\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                  color: \"#fff\",\n                }}>\n                Reshuffle\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Admit\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <Button variant=\"contained\" endIcon={<DownloadIcon />}>\n                Get Sample\n              </Button>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <FileSelect\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={file}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button variant=\"contained\" type=\"submit\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { hasAllValues } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Promotion() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [activeAcademicYear, setActiveAcademicYear] = useState({});\n  const [checkBox, setCheckBox] = useState([]);\n  const [promoting, setPromoting] = useState(false);\n  const [gettingStudentsList, setGettingStudentsList] = useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      let allAcademicYears = data.result;\n      let activeAcademicYear = allAcademicYears.find((a) => a.active);\n\n      setAcademicYear(\n        allAcademicYears\n          .filter((a) => a._id !== activeAcademicYear?._id)\n          .map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setActiveAcademicYear(activeAcademicYear);\n      entryFormik.setFieldValue(\"promoteAcademicYearId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudentList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      setGettingStudentsList(true);\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          search: {\n            academicYear: activeAcademicYear._id,\n            \"academicInfo.section\": values.currentSectionId,\n            \"academicInfo.class\": values.currentClassId,\n            active: true,\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setGettingStudentsList(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      promoteAcademicYearId: \"\",\n      currentClassId: \"\",\n      currentSectionId: \"\",\n      promoteClassId: \"\",\n      promoteSectionId: \"\",\n    },\n    onSubmit: getStudentList,\n  });\n\n  useEffect(() => {\n    setData([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setSectionData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentSectionId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentClassId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n    getSection();\n  }, [selectedSetting._id]);\n\n  const handlePromotionCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = data.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n\n  const handlePromotion = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        ...entryFormik.values,\n        studentIds: checkBox,\n      };\n      setPromoting(true);\n      console.log(payload, \"payload\");\n      const { data } = await put(PRIVATE_URLS.student.promote, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setPromoting(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Promotion\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Box sx={{ fontSize: 16, fontWeight: \"bold\" }}>\n          <Typography component=\"span\" color=\"forestgreen\" fontWeight=\"bold\">\n            Running Session:{\" \"}\n          </Typography>\n          <Typography component=\"span\" fontWeight=\"bold\">\n            {activeAcademicYear?.from}-{activeAcademicYear?.to}\n          </Typography>\n        </Box>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteAcademicYearId\"\n              formik={entryFormik}\n              label=\"Promote To Session\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentClassId\"\n              formik={entryFormik}\n              label=\"Current Class\"\n              options={classData}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentSectionId\"\n              formik={entryFormik}\n              label=\"Current Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.currentClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteClassId\"\n              formik={entryFormik}\n              label=\"Promote Class\"\n              options={classData\n                .filter((s) => s._id !== entryFormik.values.currentClassId)\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteSectionId\"\n              formik={entryFormik}\n              label=\"Promote Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.promoteClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={2}\n            display=\"flex\"\n            alignItems=\"center\"\n            // justifyContent=\"flex-end\"\n          >\n            <LoadingButton\n              loading={gettingStudentsList}\n              disabled={!hasAllValues(entryFormik.values, [], false)}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Roll No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Father Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                <Checkbox\n                  onClick={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.academicInfo.rollNumber}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox\n                      size=\"small\"\n                      checked={checkBox.includes(row._id)}\n                      onChange={(e) => handlePromotionCheckBox(row._id, e)}\n                      {...label}\n                      sx={{\n                        color: \"#1b3779\",\n                        \"&.Mui-checked\": {\n                          color: \"#1b3779\",\n                        },\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TableContainer>\n\n      {data.length > 0 && (\n        <StickyBar\n          content={\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={promoting}\n                variant=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handlePromotion}>\n                Promote\n              </LoadingButton>\n            </Box>\n          }\n        />\n      )}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst MuiTypography = styled(Typography)(({ theme }) => ({\n  fontSize: \"16px\",\n}));\n\nexport default function BulkAdmission() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [file, setFile] = useState(null);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  const downloadBulkAdmissionSheet = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        { responseType: \"blob\", params: { schoolId: selectedSetting._id } }\n      );\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"Bulk Admission Sheet\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadSheet = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.student.bulkStudentAdmit,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Admission\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            xs={12}\n            md={6}\n            lg={3}\n            item>\n            <Button size=\"large\" component=\"label\">\n              <input\n                visibility=\"hidden\"\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />\n            </Button>\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <LoadingButton\n              onClick={downloadBulkAdmissionSheet}\n              endIcon={<DownloadIcon />}\n              size=\"small\"\n              variant=\"contained\">\n              Get Sample\n            </LoadingButton>\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <MuiTypography component=\"ul\">\n              <MuiTypography component=\"li\">\n                School role type configured with\n                <span style={{ color: \"red\" }}> manual</span>, please mention\n                role number in column.\n              </MuiTypography>\n              <MuiTypography component=\"li\">\n                School admission_no configured with auto{\" \"}\n                <span style={{ color: \"red\" }}> auto _ascending_no, </span>\n                admission_no column will be ignored.\n              </MuiTypography>\n            </MuiTypography>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              onClick={uploadSheet}\n              size=\"small\"\n              variant=\"contained\">\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Box\n        sx={{\n          padding: \"20px\",\n          borderRadius: \"5px\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\" ? \"rgba(32,33,32,1)\" : \"#FFF9C4\",\n        }}>\n        <Typography sx={{ fontSize: \"22px\" }} fontWeight=\"bold\">\n          Instruction:\n        </Typography>\n        <MuiTypography component=\"ol\">\n          <MuiTypography component=\"li\">\n            At first select the (School), Class and Section\n          </MuiTypography>\n          <MuiTypography component=\"li\">Generate CSV file.</MuiTypography>\n          <MuiTypography component=\"li\">\n            Open the downloaded CSV file and enter student information with\n            unique username.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Save the edited CSV file.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Upload again CSV file you just edited and submit.\n          </MuiTypography>\n        </MuiTypography>\n      </Box>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentCrendentialsTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"User Name\",\n    key: \"username\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Father Name\",\n    key: \"fatherName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentCrendentialsTableKeys } from \"../../data/tableKeys/studentCredentials\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Credential() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // search student\n  const handleStudentSearchSubmit = async (e) => {\n    setLoader(true);\n\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setData(\n        data.result.map((student) => ({\n          username: student.username,\n          fatherName: student.fatherInfo.name,\n          name: student.basicInfo.name,\n          rollNumber: student.academicInfo,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n    setLoader(false);\n  };\n\n  // console.log(data, \"datata==========\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleStudentSearchSubmit,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n            <LoadingButton\n              loading={loader}\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentCrendentialsTableKeys}\n        bodyDataModal=\"credentials\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst STATUS_OPTIONS = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function QuickAdmit() {\n  const { selectedSetting, setSettings, setSelectedSetting } =\n    useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreate = async (values) => {\n    console.log(values.caste, \"check error\");\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          caste: values.caste,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        contactNumber: values.contactNumber,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting?._id,\n        active: values.active || true,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n\n      setLoading(true);\n      const { data } = await post(PRIVATE_URLS.student.create, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      name: \"\",\n      admissionNumber: \"\",\n      admissionDate: null,\n      dob: null,\n      gender: \"\",\n      caste: \"\",\n      contactNumber: \"\",\n      fatherName: \"\",\n      fatherContactNumber: \"\",\n      motherName: \"\",\n      motherContactNumber: \"\",\n      class: \"\",\n      section: \"\",\n      rollNumber: \"\",\n      active: \"\",\n    },\n    onSubmit: handleCreate,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting?._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Quick Admit\" />\n      <Box onSubmit={entryFormik.handleSubmit} component=\"form\">\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Basic Information\n              </Typography>\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={selectedSetting?.admissionNo === \"manual\"}\n                name=\"admissionNumber\"\n                formik={entryFormik}\n                label=\"Admission No.\"\n                disabled={selectedSetting?.admissionNo != \"manual\"}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"admissionDate\"\n                formik={entryFormik}\n                label=\"Admission Date\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                required={true}\n                name=\"dob\"\n                formik={entryFormik}\n                label=\"DOB\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"gender\"\n                formik={entryFormik}\n                label=\"Select Gender\"\n                options={Gender_Options}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput name=\"caste\" formik={entryFormik} label=\"Caste\" />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"contactNumber\"\n                formik={entryFormik}\n                label=\"Contact Number\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Parent Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"fatherName\"\n                formik={entryFormik}\n                label=\"Father Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"fatherContactNumber\"\n                formik={entryFormik}\n                label=\"Father Phone Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"motherName\"\n                formik={entryFormik}\n                label=\"Mother Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"motherContactNumber\"\n                formik={entryFormik}\n                label=\"Mother Phone Number\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Academic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"rollNumber\"\n                formik={entryFormik}\n                label=\"Roll No\"\n                disabled={selectedSetting?.rollNumberType !== \"manual\"}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Active Status\"\n                options={STATUS_OPTIONS}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}>\n          <LoadingButton\n            loading={loading}\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\">\n            Submit\n          </LoadingButton>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","export const studentActivityTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentActivityTableKeys } from \"../../data/tableKeys/studentActivity\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function StudentActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setDate] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [formData, setFormData] = useState({\n    class: \"\",\n    section: \"\",\n    academicYear: \"\",\n    student: \"\",\n  });\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get activity list\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            student: values.student,\n            academicYear: values.academicYear,\n          },\n        },\n      });\n      setDate(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      Formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      Formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: Formik.values.class,\n          },\n        },\n      });\n      Formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: Formik.values.academicYear,\n            \"academicInfo.class\": Formik.values.class,\n            \"academicInfo.section\": Formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      Formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    Formik.handleSubmit();\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        student: values.student,\n        description: values.description,\n        name: values.name,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.studentActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.studentActivity.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      student: Formik.values.student || \"\",\n      academicYear: Formik.values.academicYear || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      Formik.values.academicYear &&\n      Formik.values.class &&\n      Formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    Formik.values.academicYear,\n    Formik.values.class,\n    Formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (Formik.values.academicYear) {\n      getData();\n    }\n  }, [Formik.values.academicYear]);\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(\n        PRIVATE_URLS.studentActivity.delete + \"/\" + id\n      );\n      Formik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Activity\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"div\"\n          onSubmit={Formik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={Formik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={Formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={Formik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={Formik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\"\n              disabled={!Formik.values.student}\n              onClick={Formik.handleSubmit}>\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={studentActivityTableKeys}\n        bodyDataModal=\"student activity\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        title=\"Student Activity\"\n        onAddClick={AddDepartmentHandel}\n        disabled={!Formik.values.student}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Activity\" : \"Add Student Activity\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"academicYear\"\n              label=\"Academic Year\"\n              required={true}\n              options={academicYearList}\n            />\n          </Grid> */}\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Select Student\"\n              required={true}\n              showSearch={true}\n              options={students}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={12} item>\n            <FormInput formik={entryFormik} name=\"name\" label=\"Activity Name\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const noticeTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { noticeTableKeys } from \"../../data/tableKeys/noticeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Grid } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { post, put, get, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Notice() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [rolesData, setRolesData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result.map((r) => ({\n        label: r.name,\n        value: r._id,\n      }));\n\n      const rolesAllOption = [{ label: \"All\", value: \"all\" }, ...roles];\n      setRolesData(rolesAllOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddNotice = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.notice.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.notice.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit ? dataToEdit.title : \"\",\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n      noticeFor: dataToEdit ? dataToEdit.noticeFor : \"\",\n      notice: dataToEdit ? dataToEdit.notice : \"\",\n      isPublic: dataToEdit ? dataToEdit.isPublic : false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.notice.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Notice\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Notice\"\n        bodyData={data}\n        tableKeys={noticeTableKeys}\n        adding={loading}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm title=\"Add Notice\" onAddClick={AddNotice} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Notice\" : \"Add Notice\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"noticeFor\"\n              type=\"text\"\n              formik={entryFormik}\n              label=\"Notice For\"\n              options={rolesData}\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"notice\"\n              label=\"Notice\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"View On Web\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const newsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { newsTableKeys } from \"../../data/tableKeys/newsData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useEffect } from \"react\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function News() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.news.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddNews = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", values.title);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n      formData.append(\"news\", values.news);\n      formData.append(\"shortNews\", values.shortNews);\n      formData.append(\"isPublic\", values.isPublic);\n      selectImg.forEach((file) => formData.append(\"file\", file));\n\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.news.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.news.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n\n      date: dataToEdit?.date || null,\n\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n      news: dataToEdit?.news || \"\",\n      shortNews: dataToEdit?.shortNews || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.news.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"News\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"News\"\n        bodyData={data}\n        tableKeys={newsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add News\" onAddClick={AddNews} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update News\" : \"Add News\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"View On Web\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              multi={false}\n              name=\"image\"\n              label=\"Select Image\"\n              onChange={(e) => handleChangeFiles(e)}\n              previousFile={dataToEdit?.image}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <FormInput\n              name=\"shortNews\"\n              formik={entryFormik}\n              label=\"Short News\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"news\"\n              label=\"News\"\n              required={true}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            sm={12}\n            md={12}\n            item\n            display=\"flex\"\n            justifyContent=\"center\">\n            {dataToEdit && dataToEdit.image && (\n              <>\n                <img\n                  src={dataToEdit.image}\n                  alt=\"image\"\n                  style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n                />\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const holidayTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"From Date\",\n    key: \"fromDate\",\n    isDate: true,\n  },\n  {\n    name: \"To Date\",\n    key: \"toDate\",\n    isDate: true,\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { holidayTableKeys } from \"../../data/tableKeys/holidayData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { Checkbox, FormControlLabel, Grid, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { post, put, get, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Holiday() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [classes, setClasses] = useState([]);\n\n  // get holiday\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getClasses();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  // open holiday model\n  const AddHoliday = () => {\n    setOpen(true);\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get sections\n  const getSections = async () => {\n    try {\n      let filter = {};\n\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create/update holiday\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n        toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.holiday.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const data = await post(PRIVATE_URLS.holiday.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      fromDate: dataToEdit?.fromDate\n        ? dayjs(dataToEdit.fromDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      toDate: dataToEdit?.toDate\n        ? dayjs(dataToEdit.toDate).format(\"YYYY/MM/DD\")\n        : null,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || \"\",\n      class: dataToEdit?.class || \"\",\n      section: dataToEdit?.section || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.holiday.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handelCheckedBox = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Holiday\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Holiday\"\n        bodyData={data}\n        tableKeys={holidayTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Holiday\" onAddClick={AddHoliday} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Holiday\" : \"Add Holiday\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"fromDate\"\n              formik={entryFormik}\n              label=\"From Date\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"toDate\"\n              formik={entryFormik}\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"View On Web\"\n              options={Is_Public}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          {/* <Grid xs={12} sm={12} md={12} item mt={1}>\n            <FormControlLabel\n              control={\n                <Checkbox checked={checked} onChange={handelCheckedBox} />\n              }\n              label=\"Update All student attendance as holiday\"\n            />\n          </Grid>\n          {checked && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n            </>\n          )} */}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const awardAchievementTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Location\",\n    key: \"location\",\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { awardAchievementTableKeys } from \"../../data/tableKeys/awardAchievementsData\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put, del } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function AwardsAndAchievements() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.awards.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddAwardsAchievement = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n    formData.append(\"location\", values.location);\n    formData.append(\"hostedBy\", values.hostedBy);\n    formData.append(\"headlines\", values.headlines);\n    formData.append(\"note\", values.note);\n    formData.append(\"isPublic\", values.isPublic);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.awards.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.awards.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n\n      location: dataToEdit?.location || \"\",\n      hostedBy: dataToEdit?.hostedBy || \"\",\n      headlines: dataToEdit?.headlines || \"\",\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    // console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.awards.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // console.log(dataToEdit, \"dataToEdittttt\");\n  return (\n    <>\n      <PageHeader title=\"Award And Achievements\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Award and Achievements\"\n        bodyData={data}\n        tableKeys={awardAchievementTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm\n        title=\"Add Awards & Achievement\"\n        onAddClick={AddAwardsAchievement}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Awards & Achievement\"\n            : \"Add Awards & Achievement\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"location\"\n              label=\"Location\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormDatePicker\n              required={true}\n              name=\"date\"\n              formik={entryFormik}\n              label=\"Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"hostedBy\"\n              label=\"Hosted By\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"headlines\"\n              label=\"Headlines\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              multi={false}\n              name=\"image\"\n              label=\"Select Image\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              previousFile={dataToEdit?.image}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"isPublic\"\n              formik={entryFormik}\n              label=\"View On Web\"\n              options={Is_Public}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          <Grid\n            xs={12}\n            sm={12}\n            md={12}\n            item\n            display=\"flex\"\n            justifyContent=\"center\">\n            {dataToEdit && dataToEdit.image && (\n              <>\n                <img\n                  src={dataToEdit.image}\n                  alt=\"image\"\n                  style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n                />\n              </>\n            )}\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const horizontalSplashNewsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Text\",\n    key: \"text\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useState } from \"react\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { horizontalSplashNewsTableKeys } from \"../../data/tableKeys/horizontalSplashNewsData\";\n\nexport default function AddHorizontalSplash() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.splashNews.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const horizontalvalues = data.result.filter(\n        (newitem) => newitem.type !== \"Popup\"\n      );\n      setData(horizontalvalues);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddHorizontalSplashNews = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      setLoading(true);\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      getData();\n\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.splashNews.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.splashNews.create, payload);\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      text: dataToEdit?.text || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.splashNews.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggle = async (data) => {\n    try {\n      const res = await put(PRIVATE_URLS.splashNews.toggle + \"/\" + data._id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"switch\"]}\n        bodyDataModal=\"Horizontal Splash News\"\n        bodyData={data}\n        tableKeys={horizontalSplashNewsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onToggleSwitch={handleToggle}\n        toggleStatus=\"enabled\"\n      />\n\n      <AddForm\n        title=\"Add Horizontal Splash News\"\n        onAddClick={AddHorizontalSplashNews}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Horizontal Splash News\"\n            : \"Add Horizontal Splash News\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"title\" label=\"Title\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"text\" label=\"Text\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const popupSplashNewsTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { popupSplashNewsTableKeys } from \"../../data/tableKeys/popupSplashNewsData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst Content_Type_Options = [\n  { label: \"Link\", value: \"Link\" },\n  { label: \"Text\", value: \"Text\" },\n  { label: \"Image\", value: \"Image\" },\n  { label: \"Document\", value: \"Document\" },\n];\n\nexport default function AddPopup() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [selectDocument, setSelectdocument] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.splashNews.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const popupvalues = data.result.filter(\n        (newitem) => newitem.type === \"Popup\"\n      );\n\n      setData(popupvalues);\n\n      // console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n  const AddHorizontalSplashNews = () => {\n    setOpen(true);\n  };\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"link\", values.link);\n    formData.append(\"text\", values.text);\n    formData.append(\"type\", \"Popup\");\n    formData.append(\"contentType\", values.contentType);\n    formData.append(\"schoolId\", selectedSetting._id);\n    selectImg.forEach((file) => formData.append(\"image\", file));\n    selectDocument.forEach((file) => formData.append(\"document\", file));\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.splashNews.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.splashNews.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        resetForm();\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentType: dataToEdit?.contentType || \"\",\n      text: dataToEdit?.text || \"\",\n      link: dataToEdit?.link || \"\",\n      document: dataToEdit?.document || \"\",\n      image: dataToEdit?.image || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.splashNews.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggle = async (data) => {\n    try {\n      const res = await put(PRIVATE_URLS.splashNews.toggle + \"/\" + data._id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n    setSelectdocument(selectDocument.filter((doc) => doc.name != fileName));\n  };\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"image\") {\n        setSelectImg(fileList);\n      } else {\n        setSelectdocument(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  return (\n    <>\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"switch\"]}\n        bodyDataModal=\"Popup Splash News\"\n        bodyData={data}\n        tableKeys={popupSplashNewsTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onToggleSwitch={handleToggle}\n        toggleStatus=\"enabled\"\n      />\n      <AddForm\n        title=\"Add Vertical Splash News\"\n        onAddClick={AddHorizontalSplashNews}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit\n            ? \"Update Vertical Splash News\"\n            : \"Add Vertical Splash News\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"title\" label=\"Title\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"contentType\"\n              label=\"Content Type\"\n              required={true}\n              options={Content_Type_Options}\n            />\n          </Grid>\n          {entryFormik.values.contentType === \"Link\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"link\"\n                label=\"Link\"\n                required={true}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Text\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"text\"\n                label=\"Text\"\n                required={true}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Image\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                name=\"image\"\n                multi={false}\n                label=\"Select Photo\"\n                onChange={(e) => handleChangeFiles(e, \"image\")}\n                previousFile={dataToEdit?.image}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.contentType === \"Document\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                multi={false}\n                name=\"document\"\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e, \"document\")}\n                customOnChange={true}\n                selectedFiles={selectDocument}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n          )}\n        </Grid>\n        <Grid xs={12} sm={12} md={12} item>\n          {dataToEdit && dataToEdit.image && (\n            <>\n              <img\n                src={dataToEdit.image}\n                alt=\"image\"\n                style={{ maxWidth: \"100px\", marginTop: \"10px\" }}\n              />\n            </>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\n\nimport AddHorizontalSplash from \"./AddHorizontalSplash\";\nimport AddPopup from \"./AddPopup\";\n\nexport default function SplashNews() {\n  const [value, setValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Splash News\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Horizontal\", \"Popup\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <AddHorizontalSplash />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <AddPopup />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const galleryListTableKeys = [\n  {\n    name: \"Gallery Title\",\n    key: \"title\",\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, IconButton, Paper } from \"@mui/material\";\nimport { galleryListTableKeys } from \"../data/tableKeys/galleryListData\";\nimport PageHeader from \"../components/PageHeader\";\nimport TabList from \"../components/Tabs/Tablist\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport FormSelect from \"../forms/FormSelect\";\nimport TabPanel from \"../components/Tabs/TabPanel\";\nimport FormInput from \"../forms/FormInput\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function Gallery() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [date, setDate] = useState(dataToEdit ? dayjs(dataToEdit.date) : null);\n\n  console.log(dataToEdit, \"gall dataToEdit\");\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.gallery.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    // console.log(fileName, \"gii\");\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.gallery.removeFile + \"/\" + dataToEdit._id,\n        { file: img }\n      );\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"note\", values.note);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.gallery.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.gallery.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n    setDataToEdit(null);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n\n      date: dataToEdit?.date\n        ? dayjs(dataToEdit.date).format(\"YYYY/MM/DD\")\n        : null,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    setSelectImg([]);\n    getData();\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      entryFormik.resetForm();\n    }\n  }, [value]);\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.gallery.delete + \"/\" + _id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Gallery\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Gallery List\",\n          `${dataToEdit && value != 0 ? \"Edit Gallery\" : \"Add Gallery\"}`,\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"Gallery\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          tableKeys={galleryListTableKeys}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Gallery Title\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={entryFormik} label=\"Date\" name=\"date\" />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"isPublic\"\n                formik={entryFormik}\n                label=\"View On Web\"\n                options={[\n                  { label: \"Yes\", value: true },\n                  { label: \"No\", value: false },\n                ]}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                name={`images`}\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                label=\"Select Image\"\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput name=\"note\" formik={entryFormik} label=\"Note\" />\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.images?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"100px\",\n                        height: \"100px\",\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                        objectFit: \"center\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <Close color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ ml: 2 }}>\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const notificationsTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Message\",\n    key: \"message\",\n  },\n  {\n    name: \"Total SMS\",\n    key: \"totalSMS\",\n  },\n  {\n    name: \"Time/Date\",\n    key: \"female\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { notificationsTableKeys } from \"../data/tableKeys/notificationsData\";\n\nexport default function Notifications() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Notifications\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Notifications\"\n        bodyData={data}\n        tableKeys={notificationsTableKeys}\n      />\n    </>\n  );\n}\n","export const eventTableKeys = [\n  {\n    name: \"Event Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Location\",\n    key: \"location\",\n  },\n  {\n    name: \"From Date\",\n    key: \"fromDate\",\n    isDate: true,\n  },\n  {\n    name: \"To Date\",\n    key: \"toDate\",\n    isDate: true,\n  },\n  {\n    name: \"Hosted By\",\n    key: \"hostedBy\",\n  },\n];\n","/** @format */\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { eventTableKeys } from \"../data/tableKeys/eventData\";\nimport AddForm from \"../forms/AddForm\";\nimport FormModal from \"../forms/FormModal\";\nimport FormInput from \"../forms/FormInput\";\nimport FormSelect from \"../forms/FormSelect\";\nimport FormDatePicker from \"../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get, post, put } from \"../services/apiMethods\";\nimport FileSelect from \"../forms/FileSelect\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function Event() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.event.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRole = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      // console.log(data, \"rol\");\n      setRoles(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // open add model\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleChangeFiles = (e) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files?.length > 0) {\n      for (let i = 0; i < files?.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"eventFor\", values.eventFor);\n    formData.append(\"location\", values.location);\n\n    formData.append(\"fromDate\", dayjs(values.fromDate).format(\"YYYY-MM-DD\"));\n\n    formData.append(\"toDate\", dayjs(values.toDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"video\", values.video);\n    formData.append(\"shortEvent\", values.shortEvent);\n    formData.append(\"note\", values.note);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.event.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.event.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      eventFor: dataToEdit?.eventFor || \"\",\n      location: dataToEdit?.location || \"\",\n      fromDate: dataToEdit?.fromDate\n        ? dayjs(dataToEdit.fromDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      toDate: dataToEdit?.toDate\n        ? dayjs(dataToEdit.toDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      isPublic: dataToEdit?.isPublic || false,\n      video: dataToEdit?.video || null,\n      shortEvent: dataToEdit?.shortEvent || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  useEffect(() => {\n    getRole();\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.event.delete + \"/\" + _id);\n\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Events\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"events\"\n        bodyData={data}\n        tableKeys={eventTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Events\" onAddClick={AddDepartmentHandel} />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Events\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Event Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"eventFor\"\n              label=\"Select Event For\"\n              required={true}\n              options={roles}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"location\"\n              label=\"Location\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"hostedBy\" label=\"Hosted By\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"video\" label=\"Video Link\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`image`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              label=\"Select Photo\"\n              selectedFiles={selectImg}\n              previousFile={dataToEdit?.image}\n              // onRemove={(fileName) => handleRemoveFile(fileName)}\n              multi={false}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"Is Web View\"\n              options={[\n                { label: \"Yes\", value: true },\n                { label: \"No\", value: false },\n              ]}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              name=\"shortEvent\"\n              label=\"Short event\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examGradeTableKeys = [\n  {\n    name: \"Exam Grade\",\n    key: \"grade\",\n  },\n  {\n    name: \"Group\",\n    key: \"group\",\n  },\n  {\n    name: \"Grade Point\",\n    key: \"gradePoint\",\n  },\n  {\n    name: \"Percentage From\",\n    key: \"markFrom\",\n  },\n  {\n    name: \"Percentage To\",\n    key: \"markTo\",\n  },\n  { name: \"Note\", key: \"note\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { examGradeTableKeys } from \"../../data/tableKeys/examGradeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nconst Grade_Options = [\n  {\n    label: \"Scholastic\",\n    value: \"scholastic\",\n  },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function ExamGrade() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const [loading, setloading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddExamGrade = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    entryFormik.resetForm();\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    const payload = {\n      ...values,\n      schoolId: selectedSetting._id,\n    };\n\n    setloading(true);\n\n    try {\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examGrade.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examGrade.create, payload);\n\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setloading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      grade: dataToEdit?.grade || \"\",\n      group: dataToEdit?.group || \"\",\n      gradePoint: dataToEdit?.gradePoint || \"\",\n      markFrom: dataToEdit?.markFrom || \"\",\n      markTo: dataToEdit?.markTo || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examGrade.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"Exam Grade\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={examGradeTableKeys}\n        bodyDataModal=\"exam grades\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Exam Grade\" onAddClick={AddExamGrade} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Grade\" : \"Add Exam Grade\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"grade\"\n              label=\"Exam Grade\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"group\"\n              label=\"Group\"\n              required={true}\n              options={Grade_Options}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"gradePoint\"\n              label=\"Grade Point\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              required={true}\n              name=\"markFrom\"\n              label=\"Mark From\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              required={true}\n              name=\"markTo\"\n              label=\"Mark To\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examTermTableKeys = [\n  {\n    name: \"Exam Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"examType\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { examTermTableKeys } from \"../../data/tableKeys/examTermData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Is_Assignment_Allowed = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Exam_Types = [\n  {\n    label: \"General\",\n    value: \"general\",\n  },\n  { label: \"Competitive\", value: \"competitive\" },\n];\n\nexport default function ExamTerm() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handelExamTerm = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examTerm.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examTerm.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      examType: dataToEdit?.examType || \"\",\n      marksAssignmentAllowed: dataToEdit?.marksAssignmentAllowed || false,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examTerm.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Term\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"exam terms\"\n        bodyData={data}\n        tableKeys={examTermTableKeys}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm title=\"Add Exam Term\" onAddClick={handelExamTerm} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Exam Term\" : \"Add Exam Term\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"examType\"\n              label=\"Exam Type\"\n              required={true}\n              options={Exam_Types}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"marksAssignmentAllowed\"\n              label=\"Marks Assignment Allowed\"\n              options={Is_Assignment_Allowed}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"View On Web\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const examListTableKeys = [\n  {\n    name: \"Exam Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"examType\",\n  },\n];\n","/** @format */\n\nexport const scheduleListTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"name\",\n    path: \"subject\",\n  },\n  {\n    name: \"Date\",\n    key: \"examDate\",\n    isDate: true,\n  },\n  {\n    name: \"Time\",\n    key: \"startTime\",\n  },\n  {\n    name: \"Max Marks\",\n    key: \"maximumMarks\",\n  },\n  {\n    name: \"Min Marks\",\n    key: \"minimumMarks\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { examListTableKeys } from \"../../data/tableKeys/examListData\";\nimport { scheduleListTableKeys } from \"../../data/tableKeys/ScheduleListData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\n\nconst ShowIn_HallTick = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst ShowIn_Exam_Results = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Pratical_Marks = [\n  { label: \"Active\", value: \"active\" },\n  { label: \"In-Active\", value: \"inactive\" },\n];\n\nexport default function ExamSchedule() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [examtitle, setExamTitle] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [classes, setClasses] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examSchedule.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: values.class,\n            examTerm: values.examTerm,\n          },\n        },\n      });\n      setData(data.result.map((s) => ({ ...s, subject: s.subject })));\n      // console.log(data.result, \"resullttttt\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handelExamSchedule = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    entryFormik.resetForm();\n  };\n\n  const getExamTerm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setExamTitle(\n        data.result.map((c) => ({ ...c, label: c.title, value: c._id }))\n      );\n      formik.setFieldValue(\"examTerm\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"examTerm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: formik.values.class },\n        },\n      });\n      setSubject(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      examTerm: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        examDate: dayjs(values.examDate).format(\"YYYY/MM/DD\"),\n        marksFreezDate: dayjs(values.marksFreezDate).format(\"YYYY/MM/DD\"),\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.examSchedule.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        handleClose();\n      } else {\n        const { data } = await post(PRIVATE_URLS.examSchedule.create, payload);\n        handleClose();\n      }\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      examTerm: dataToEdit?.examTerm._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      examDate: dataToEdit?.examDate\n        ? dayjs(dataToEdit.examDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      startTime: dataToEdit?.startTime || \"\",\n      endTime: dataToEdit?.endTime || \"\",\n      marksFreezDate: dataToEdit?.marksFreezDate\n        ? dayjs(dataToEdit?.marksFreezDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      maximumMarks: dataToEdit?.maximumMarks || \"\",\n\n      pratical: dataToEdit?.pratical || \"\",\n      minimumMarks: dataToEdit?.minimumMarks || \"\",\n      praticalMarks: dataToEdit?.praticalMarks || \"\",\n      showInHallTick: dataToEdit?.showInHallTick || \"\",\n      showInExamResults: dataToEdit?.showInExamResults || \"\",\n      orderSequence: dataToEdit?.orderSequence || \"\",\n      praticalMarks: dataToEdit?.praticalMarks || \"\",\n      showInHallTick: dataToEdit?.showInHallTick || true,\n      showInExamResults: dataToEdit?.showInExamResults || true,\n      obtainedMarks: dataToEdit?.obtainedMarks || 0,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getExamTerm();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSubject();\n    }\n  }, [selectedSetting, formik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.examTerm) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values.class, entryFormik.values.examTerm, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.examSchedule.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Schedule\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Exam List\", \"Schedule List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        {/* <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                // options={\"\"}\n              />\n            </Grid>\n          </Grid>\n        </Paper> */}\n        <CustomTable\n          actions={[]}\n          bodyDataModal=\"exam list\"\n          bodyData={examtitle}\n          tableKeys={examListTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                name=\"examTerm\"\n                formik={entryFormik}\n                label=\"Select Exam\"\n                options={examtitle}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <AddForm title=\"Add Exam Schedule\" onAddClick={handelExamSchedule} />\n\n        <FormModal\n          open={open}\n          formik={formik}\n          formTitle={dataToEdit ? \"Update Exam Schedule\" : \"Add Exam Schedule\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"examTerm\"\n                label=\"Exam\"\n                required={true}\n                options={examtitle}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"class\"\n                label=\"Class\"\n                required={true}\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"subject\"\n                label=\"Subject\"\n                required={true}\n                options={subject}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormDatePicker\n                required={true}\n                name=\"examDate\"\n                formik={formik}\n                label=\"Exam Date\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"startTime\"\n                type=\"time\"\n                formik={formik}\n                label=\"Start Time\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"endTime\"\n                type=\"time\"\n                formik={formik}\n                label=\"End Time\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={6} item>\n              <FormDatePicker\n                required={true}\n                label=\"Marks Freez Date\"\n                formik={formik}\n                name=\"marksFreezDate\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"maximumMarks\"\n                formik={formik}\n                label=\"Maximum Marks\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                required={true}\n                name=\"minimumMarks\"\n                formik={formik}\n                label=\"MinMarks\"\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"praticalMarks\"\n                label=\"Pratical Marks\"\n                options={Pratical_Marks}\n              />\n            </Grid>\n\n            {formik.values.praticalMarks === \"active\" && (\n              <Grid xs={12} sm={6} md={6} item>\n                <FormInput\n                  required={true}\n                  name=\"pratical\"\n                  formik={formik}\n                  label=\"Pratical\"\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={formik}\n                name=\"orderSequence\"\n                label=\"Order Sequence\"\n                required={true}\n              />\n            </Grid>\n            {/* <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"showInHallTick\"\n                label=\"ShowIn HallTick\"\n                options={ShowIn_HallTick}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={formik}\n                name=\"showInExamResults\"\n                label=\"Show In Exam Results\"\n                options={ShowIn_Exam_Results}\n              />\n            </Grid> */}\n          </Grid>\n        </FormModal>\n\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          bodyDataModal=\"schedule list\"\n          bodyData={data}\n          tableKeys={scheduleListTableKeys}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ExamHallTicket() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [examtitle, setExamTitle] = useState([]);\n\n  const getExamTerm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setExamTitle(\n        data.result.map((d) => ({ ...d, label: d.title, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"exam\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      exam: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n    getExamTerm();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Exam Hall Ticket\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={examtitle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Generate\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function DivisionWiseReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Division Wise Report\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function SubjectWiseReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n            section: entryFormik.values.section,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      exam: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject Wise Report\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","export const consolidateMarksTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, IconButton, Paper } from \"@mui/material\";\nimport { consolidateMarksTableKeys } from \"../../data/tableKeys/consolidateMarksCardData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ConsolidatedMarkSheet() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [consolidated, setConsolidated] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleRemoveSubject = (examIndex, subjectIndex) => {\n    setConsolidated(\n      consolidated.map((con, i) => {\n        if (i === examIndex) {\n          return {\n            ...con,\n            subjects: con.subjects.filter(\n              (subject, index) => index !== subjectIndex\n            ),\n          };\n        } else {\n          return con;\n        }\n      })\n    );\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Consolidate Marks Sheet\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Add exams\n            </Button>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item display=\"flex\" gap={2}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"compress\"\n                formik={entryFormik}\n                label=\"Compress\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"exam\"\n                formik={entryFormik}\n                label=\"Select Exam\"\n                // options={\"\"}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item display=\"flex\" alignItems=\"center\">\n              <IconButton color=\"error\">\n                {/* <Button onClick={() => handleRemoveSubject(index, subjectIndex)}> */}\n                <Close />\n              </IconButton>\n              <Button>Add Subject</Button>\n            </Grid>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item display=\"flex\" gap={2}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"compress\"\n                formik={entryFormik}\n                label=\"Compress\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"subject\"\n                formik={entryFormik}\n                label=\"Select Subject\"\n                // options={\"\"}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item display=\"flex\" alignItems=\"center\">\n              <IconButton color=\"error\">\n                {/* <Button onClick={() => handleRemoveSubject(index, subjectIndex)}> */}\n                <Close />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Consolidate marks card\"\n        bodyData={data}\n        tableKeys={consolidateMarksTableKeys}\n      />\n    </>\n  );\n}\n","export const marksCardTableKeys = [\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Published to web\",\n    key: \"webPublish\",\n  },\n  {\n    name: \"Published to app\",\n    key: \"appPublish\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { marksCardTableKeys } from \"../../data/tableKeys/marksCardData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Markscard() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getClass();\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Marks Card\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          {/* <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid> */}\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"marks card\"\n        bodyData={data}\n        tableKeys={marksCardTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const examResultTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNumber\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n    type: \"image\",\n  },\n  {\n    name: \"Exam Mark\",\n    key: \"totalMarks\",\n  },\n  {\n    name: \"Obtained Mark\",\n    key: \"obtainedMarks\",\n  },\n  {\n    name: \"Percentage\",\n    key: \"percentage\",\n  },\n  {\n    name: \"Grade\",\n    key: \"overallGrade\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ExamResultViewModel({\n  title = \"\",\n  open = false,\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table>\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\">S.No</TableCell>\n                <TableCell align=\"center\">Subject</TableCell>\n                <TableCell align=\"center\">Total Marks</TableCell>\n                <TableCell align=\"center\">Obtained Marks</TableCell>\n                <TableCell align=\"center\">Grade</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableData?.subjects?.map((d, i) => (\n                <TableRow>\n                  <TableCell align=\"center\">{i + 1}</TableCell>\n                  <TableCell align=\"center\">{d?.subject?.name}</TableCell>\n                  <TableCell align=\"center\">{d?.totalMarks}</TableCell>\n                  <TableCell align=\"center\">{d?.obtainedMarks}</TableCell>\n                  <TableCell align=\"center\">{d?.grade}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <Box mt={1}>\n            <Typography variant=\"subtitle1\">\n              <b>Total Subject:</b> {tableData.subjects?.length}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Max Marks:</b> {tableData.totalMarks}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Obtained Marks:</b> {tableData.obtainedMarks}\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              <b>Percentage: </b>\n              {tableData.percentage ? tableData.percentage.toFixed(2) : \"0.00\"}%\n            </Typography>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Paper,\n} from \"@mui/material\";\nimport { examResultTableKeys } from \"../../data/tableKeys/examResultData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ExamResultViewModel from \"./ExamResultViewModel\";\n\nexport default function ExamResult() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [uploadLoader, setUploadLoader] = useState(false);\n  const [downloadLoader, setDownloadLoader] = useState(false);\n  const [allDownloadLoading, setAllDownloadLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [openBulk, setOpenBulk] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getResult = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentMarks.getExamResult, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          examId: values.exam,\n        },\n      });\n      setData(\n        data.result.map((d) => ({\n          ...d,\n          name: d.student.basicInfo?.name,\n          roleNumber: d.student.academicInfo?.rollNumber,\n          image: d.student?.photo,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // console.log(data, \"bbb\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n    },\n    onSubmit: getResult,\n  });\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  console.log(data, \"bvd\");\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  const onClose = () => {\n    setOpenBulk(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Exam Result\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n            <LoadingButton\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n            <LoadingButton\n              onClick={() => setOpenBulk(true)}\n              size=\"small\"\n              variant=\"contained\"\n              sx={{ ml: 1 }}>\n              Bulk Upload\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"view\", \"download\"]}\n        bodyDataModal=\"exam result\"\n        bodyData={data}\n        tableKeys={examResultTableKeys}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* view exam result ============= */}\n      <ExamResultViewModel\n        title=\"Exam Result Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData || []}\n        onClose={onCloseViewModel}\n      />\n\n      {/* Bulk upload model ============= */}\n      {/* <Dialog\n        open={openBulk}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n          component: \"form\",\n        }}>\n        <DialogTitle sx={{ fontWeight: 600 }}>Bulk Upload</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <LoadingButton\n            size=\"small\"\n            loading={uploadLoader}\n            variant=\"contained\"\n            type=\"submit\">\n            Upload\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={downloadLoader}\n            variant=\"contained\"\n            type=\"submit\">\n            Download\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={allDownloadLoading}\n            variant=\"contained\"\n            type=\"submit\">\n            Download All Student\n          </LoadingButton>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            Submit\n          </LoadingButton>\n        </DialogContent>\n      </Dialog> */}\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport { TextField, useTheme } from \"@mui/material\";\n\nexport default function CustomInput({\n  name,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  style = {},\n  ...rest\n}) {\n  const theme = useTheme();\n\n  return (\n    <TextField\n      required={required}\n      id={name}\n      name={name}\n      label={label}\n      placeholder={`Enter ${label}`}\n      fullWidth\n      value={value || \"\"}\n      onChange={onChange}\n      sx={{\n        mt: 2,\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        ...style,\n      }}\n      variant=\"outlined\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      InputProps={{\n        multiple: true,\n        style: {\n          borderWidth: 1,\n          height: \"40px\",\n          borderRadius: theme.shape.borderRadius,\n        },\n      }}\n      {...rest}\n    />\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { manageMarkTableKeys } from \"../../data/tableKeys/manageMarkData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport StickyBar from \"../../components/StickyBar\";\n\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { downloadFile } from \"../../utils\";\n\nconst modalStyle = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function ManageMark() {\n  const [data, setData] = useState([]);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [studentMarks, setStudentMarks] = useState([]);\n  const [updatingMarks, setUpdatingMarks] = useState(false);\n  const [fetchingMarks, setFetchingMarks] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [fileChoosen, setFileChoosen] = useState([]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileChoosen(file);\n    } else {\n      setFileChoosen(null);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFileChoosen(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setFileChoosen(fileChoosen.filter((img) => img.name != fileName));\n  };\n\n  // get class list\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section list\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get exam list\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get subject list\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetMarks = async (values) => {\n    try {\n      setFetchingMarks(true);\n      const { data } = await get(PRIVATE_URLS.studentMarks.listStudentMarks, {\n        params: {\n          schoolId: selectedSetting._id,\n          classId: values.class,\n          sectionId: values.section,\n          subjectId: values.subject,\n          examId: values.exam,\n        },\n      });\n      setFetchingMarks(false);\n\n      let previousValues = data.result.map((s) => ({\n        rollNumber: s.academicInfo.rollNumber,\n        name: s.basicInfo.name,\n        studentId: s._id,\n        obtainedMarks: s.studentMarks?.obtainedWrittenMarks || 0,\n        comment: s.studentMarks?.comment || \"\",\n        grade: s.studentMarks?.grade?.grade || \"NA\",\n      }));\n\n      setStudentMarks(previousValues);\n    } catch (error) {\n      setFetchingMarks(false);\n\n      console.log(error);\n    }\n  };\n\n  const updateStudentMarks = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        classId: entryFormik.values.class,\n        sectionId: entryFormik.values.section,\n        subjectId: entryFormik.values.subject,\n        examId: entryFormik.values.exam,\n        studentMarks: studentMarks,\n      };\n      setUpdatingMarks(true);\n      const { data } = await put(\n        PRIVATE_URLS.studentMarks.updateStudentsMarks,\n        payload\n      );\n\n      setStudentMarks(\n        data.result.map((m) => ({\n          studentId: m.student._id,\n          rollNumber: m.student.academicInfo.rollNumber,\n          name: m.student.basicInfo.name,\n          obtainedMarks: m.obtainedWrittenMarks || 0,\n          comment: m.comment,\n          grade: m?.grade?.grade || \"NA\",\n        }))\n      );\n      setUpdatingMarks(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingMarks(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      exam: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n    },\n    onSubmit: handleGetMarks,\n  });\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  useEffect(() => {\n    setStudentMarks([]);\n  }, [entryFormik.values]);\n\n  const handleCustomInputChange = (e, index) => {\n    let updatedMarks = [...studentMarks];\n    updatedMarks[index][e.target.name] = e.target.value;\n    setStudentMarks(updatedMarks);\n  };\n\n  const getbulkUpdateStudentMarksExcel = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.studentMarks.getbulkUpdateStudentMarks,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            classId: entryFormik.values.class,\n            sectionId: entryFormik.values.section,\n            subjectId: entryFormik.values.subject,\n            examTermId: entryFormik.values.exam,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"studentMarks\"\n      );\n    } catch (error) {}\n  };\n\n  const updateThroughScheet = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"subjectId\", entryFormik.values.subject);\n      formData.append(\"examTermId\", entryFormik.values.exam);\n\n      fileChoosen.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(\n        PRIVATE_URLS.studentMarks.bulkUpdateStudentMarks,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Manage Marks\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Stack direction=\"row\" spacing={2}>\n              <LoadingButton\n                loading={fetchingMarks}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n              <Button\n                onClick={() => setOpenModal(true)}\n                size=\"small\"\n                variant=\"contained\">\n                Bulk Update\n              </Button>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">S.No</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Name\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Roll Number\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Obtained Marks\n              </TableCell>\n\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Grade\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                Comment\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentMarks.map((data, index) => (\n              <TableRow key={data.studentId}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">{data.name}</TableCell>\n\n                <TableCell align=\"center\">{data.rollNumber}</TableCell>\n\n                <TableCell align=\"center\">\n                  <CustomInput\n                    type=\"number\"\n                    style={{ maxWidth: \"150px\" }}\n                    name=\"obtainedMarks\"\n                    value={data.obtainedMarks}\n                    label=\"Obtained Marks\"\n                    onChange={(e) => handleCustomInputChange(e, index)}\n                  />\n                </TableCell>\n\n                <TableCell align=\"center\">{data.grade}</TableCell>\n\n                <TableCell align=\"center\">\n                  <CustomInput\n                    style={{ maxWidth: \"200px\" }}\n                    name=\"comment\"\n                    value={data.comment}\n                    label=\"Comment\"\n                    onChange={(e) => handleCustomInputChange(e, index)}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {studentMarks.length > 0 && (\n        <StickyBar\n          content={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}>\n              <LoadingButton\n                loading={updatingMarks}\n                size=\"small\"\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                onClick={updateStudentMarks}\n                variant=\"contained\">\n                Update\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 350 },\n            },\n          },\n        }}>\n        <Box component={\"form\"} onSubmit={updateThroughScheet} sx={modalStyle}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Upload\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LoadingButton\n                // loading={downloadLoader}\n                variant=\"contained\"\n                sx={{\n                  width: \"100%\",\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                  color: \"#fff\",\n                }}\n                endIcon={<DownloadIcon />}\n                onClick={getbulkUpdateStudentMarksExcel}>\n                Download\n              </LoadingButton>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LoadingButton\n                // loading={downloadLoaderAll}\n                variant=\"contained\"\n                style={{\n                  width: \"100%\",\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                }}\n                endIcon={<DownloadIcon />}\n                // onClick={handleGetAllUploadSheet}\n              >\n                Download All Students\n              </LoadingButton>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <FileSelect\n                name=\"student_marks\"\n                label=\"Select updated File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={fileChoosen}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <LoadingButton\n                // loading={sheetLoader}s\n                variant=\"contained\"\n                sx={{\n                  background: \"rgb(27, 55, 121)\",\n                  \":hover\": { background: \"rgb(27, 55, 121)\" },\n                }}\n                type=\"submit\">\n                Update Marks\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","export const examAttendanceTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNumber\",\n  },\n  {\n    name: \"Attend All\",\n    key: \"true\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { examAttendanceTableKeys } from \"../../data/tableKeys/examAttendanceData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ExamAttendance() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      exam: \"\",\n      subject: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getExams = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.examTerm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"exam\");\n      setExams(data.result.map((e) => ({ label: e.title, value: e._id })));\n      entryFormik.setFieldValue(\"exam\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n            section: entryFormik.values.section,\n          },\n        },\n      });\n      setSubject(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"subject\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n    getExams();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Exam Attendance\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"exam\"\n              formik={entryFormik}\n              label=\"Select Exam\"\n              options={exams}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"exam attendance\"\n        bodyData={data}\n        tableKeys={examAttendanceTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TablePagination,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport Download from \"@mui/icons-material/Download\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst Data = styled(TableCell)(() => ({\n  textAlign: \"center\",\n}));\n\nconst Heading = styled(TableCell)(() => ({\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  color: \"#ffff\",\n}));\n\nconst DownloadBox = styled(Box)(() => ({\n  background: `rgb(133 140 223 / 19%)`,\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  borderRadius: \"10px\",\n  color: \"black\",\n}));\n\nexport default function Courses() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState([]);\n  const [courseId, setCourseId] = useState(\"\");\n  const [materialURL, setMaterialURL] = useState();\n  const [open, setOpen] = React.useState(false);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n\n  const [material, setMaterial] = useState(null);\n  const [file, setFile] = useState(null);\n  const [uploadLoad, setUploadLoad] = useState(false);\n  const navigate = useNavigate();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  const getCourse = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.course.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { classIds: selectedClass },\n        },\n      });\n\n      setData(data.result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedClass) {\n      getCourse();\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleSubmit = () => {\n    navigate(\"/sch/lms/add-courses\");\n  };\n\n  const handleChange = (event) => {\n    setSelectedClass(event.target.value);\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/lms/edit-courses/${data._id}`, {\n      state: { courseData: data },\n    });\n  };\n\n  const handleNavigateCourse = (id) => {\n    const selectedCourse = data.find((course) => course._id === id);\n    if (selectedCourse) {\n      const selectedCourseTitle = selectedCourse.title;\n      navigate(\"/sch/lms/course-content\", {\n        state: {\n          selectedCourseIds: id,\n          selectedCourseTitle: selectedCourseTitle,\n        },\n      });\n    }\n  };\n\n  const handleClickOpen = (id, material) => {\n    setOpen(true);\n    setCourseId(id);\n    if (material) {\n      const materialURLs = new URL(material);\n      const fileName = decodeURIComponent(\n        materialURLs.pathname.split(\"/\").pop()\n      );\n      setMaterial(fileName);\n    }\n    setMaterialURL(material);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setMaterial(null);\n  };\n\n  const handleDeleteMaterial = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await del(\n        PRIVATE_URLS.course.deleteMaterial + \"/\" + courseId\n      );\n      getCourse();\n      setMaterial(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    setUploadLoad(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.course.uploadCourseMaterial + \"/\" + courseId,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      setUploadLoad(false);\n      getCourse();\n      handleClose();\n    } catch (error) {\n      console.error(error);\n      setUploadLoad(false);\n    }\n    setUploadLoad(false);\n  };\n\n  const handleDownload = () => {\n    try {\n      window.open(materialURL, \"_blank\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.course.delete + \"/\" + id);\n      getCourse();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Courses\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\">\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"class\"\n              multiple={true}\n              value={selectedClass}\n              onChange={handleChange}\n              label=\"Select Class\"\n              options={classData}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <Heading>S.No</Heading>\n              <Heading>Class</Heading>\n              <Heading>Course Name</Heading>\n              <Heading>Subject </Heading>\n              <Heading>Duration</Heading>\n              <Heading>Content</Heading>\n              <Heading>Material</Heading>\n              <Heading>Action</Heading>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((course, index) => (\n                <TableRow key={course._id}>\n                  <Data>{index + 1}</Data>\n                  <Data>{course.class.map((c) => c.name).join(\" | \")}</Data>\n                  <Data>{course.title}</Data>\n                  <Data>\n                    {course.class.length > 1\n                      ? \"Universal\"\n                      : course.subject.name}\n                  </Data>\n                  <Data>{course.courseHours}</Data>\n                  <Data>\n                    <Button onClick={() => handleNavigateCourse(course._id)}>\n                      Upload\n                    </Button>\n                  </Data>\n\n                  <Data>\n                    <Tooltip title=\"Upload Material\">\n                      <Button\n                        onClick={() =>\n                          handleClickOpen(course._id, course.material)\n                        }>\n                        <FileUploadIcon />\n                      </Button>\n                    </Tooltip>\n                  </Data>\n\n                  <Data>\n                    <Tooltip title=\"Edit\">\n                      <Button onClick={() => handeleClickEdit(course)}>\n                        <EditIcon color=\"primary\" fontSize=\"small\" />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => setDeleteModal(course._id)}>\n                        <Delete color=\"error\" fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n\n                    <DeleteModal\n                      deleteModal={deleteModal}\n                      handleDelete={handleDelete}\n                      id={course._id}\n                      setDeleteModal={setDeleteModal}\n                    />\n                  </Data>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          my: 1,\n        }}\n      />\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\">\n        <DialogTitle\n          id=\"responsive-dialog-title\"\n          sx={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n          {\"Upload Your Material\"} {data.material}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <input type=\"file\" onChange={handleFileChange} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogContent>\n          {material ? (\n            <DownloadBox px={2} py={1}>\n              <Typography>{material}</Typography>\n              <Stack direction={\"row\"}>\n                {material ? (\n                  <Button size=\"small\" onClick={handleDownload} color=\"error\">\n                    <Download fontSize=\"small\" color=\"primary\" />\n                  </Button>\n                ) : null}\n\n                <Button\n                  size=\"small\"\n                  onClick={handleDeleteMaterial}\n                  color=\"error\">\n                  <ClearIcon fontSize=\"small\" />\n                </Button>\n              </Stack>\n            </DownloadBox>\n          ) : (\n            \"\"\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            size=\"small\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            variant=\"contained\"\n            loading={uploadLoad}\n            onClick={handleUpload}\n            autoFocus>\n            Upload\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n\n      <AddForm onAddClick={handleSubmit} />\n    </>\n  );\n}\n","/** @format */\n\nimport { createContext } from \"react\";\n\nconst ContentContext = createContext(null);\n\nexport default ContentContext;\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport {\n  Box,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\n// icons\nimport QuizIcon from \"@mui/icons-material/Quiz\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport QuestionAnswerIcon from \"@mui/icons-material/QuestionAnswer\";\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\nimport ViewAgendaIcon from \"@mui/icons-material/ViewAgenda\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport ContentContext from \"../../context/ContentContext\";\nimport CourseContext from \"../../context/CourseContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { put } from \"../../services/apiMethods\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst MuiTableCell = styled(TableCell)(() => ({\n  width: \"150px\",\n  fontSize: \"15px\",\n  fontWeight: \"bold\",\n  color: \"black\",\n}));\n\nexport default function CourseContentTable({\n  // chapter,\n  // courseId,\n  onEditClick = () => {},\n  handelOpenDelModel = () => {},\n  // handleDeleteChapter = () => {},\n}) {\n  const { chapter } = useContext(ContentContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const [openDeleteModel, setOpenDeleteModel] = useState(false);\n  const [dataToDelete, setDataToDelete] = useState(\"\");\n\n  const handleOpenModel = (id) => {\n    setDataToDelete(id);\n    setOpenDeleteModel(true);\n  };\n\n  const handleDeleteContent = async () => {\n    let payload = {\n      chapterId: chapter._id,\n      contentId: dataToDelete,\n    };\n\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.courseContent.deleteContent + \"/\" + courseId,\n        payload\n      );\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <MuiTableCell align=\"center\">S.No</MuiTableCell>\n              <MuiTableCell align=\"center\">Content Type</MuiTableCell>\n              <MuiTableCell align=\"center\">Content Title</MuiTableCell>\n              <MuiTableCell align=\"center\">Action</MuiTableCell>\n              <MuiTableCell align=\"center\">Sort</MuiTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {chapter.contents?.map((item, index) => (\n              <TableRow>\n                <TableCell align=\"center\">\n                  <Typography sx={{ pr: \"10px\" }}>{index + 1}</Typography>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      columnGap: \"5px\",\n                    }}>\n                    {item.type === \"Video\" ? (\n                      <YouTubeIcon fontSize=\"small\" color=\"error\" />\n                    ) : null}\n                    {item.type === \"Quiz\" ? (\n                      <QuizIcon fontSize=\"small\" color=\"success\" />\n                    ) : null}\n                    {item.type === \"FlashCard\" ? (\n                      <ViewAgendaIcon fontSize=\"small\" color=\"warning\" />\n                    ) : null}\n                    {item.type === \"Material\" ? (\n                      <InsertDriveFileIcon fontSize=\"small\" color=\"info\" />\n                    ) : null}\n                    {item.type === \"CodePractice\" ? (\n                      <QuestionAnswerIcon\n                        fontSize=\"small\"\n                        sx={{ color: \"#1b3779\" }}\n                      />\n                    ) : null}\n                  </Box>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}>\n                    <Typography variant=\"inherit\">\n                      {item.title?.substring(0, 80)}\n                    </Typography>\n                  </Box>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <IconButton onClick={() => onEditClick(item)}>\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton\n                    color=\"error\"\n                    onClick={() => handleOpenModel(item._id)}>\n                    <DeleteIcon color=\"error\" fontSize=\"small\" />\n                  </IconButton>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  {index === chapter.contents.length - 1 ? null : (\n                    <IconButton>\n                      {/*<IconButton onClick={() => sortContent(item._id, \"down\")}> */}\n                      <ArrowDownward />\n                    </IconButton>\n                  )}\n                  {index === 0 ? null : (\n                    <IconButton>\n                      {/* <IconButton onClick={() => sortContent(item._id, \"up\")}> */}\n                      <ArrowUpward />\n                    </IconButton>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* delete model ======== */}\n      <DeleteModal\n        deleteModal={openDeleteModel}\n        handleDelete={handleDeleteContent}\n        // id={chapter?._id}\n        setDeleteModal={setOpenDeleteModel}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { toast } from \"react-toastify\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport ContentContext from \"../../../context/ContentContext\";\nimport CourseContext from \"../../../context/CourseContext\";\n\nexport default function VideoDialog({\n  open,\n  title,\n  // courseId,\n  // chapter,\n  dataToEdit,\n  setDataToEdit = () => {},\n  setOpenVideo = () => {},\n  // onUpdate = () => {},\n  Formik,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const { chapter } = useContext(ContentContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"Video\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      title: values.title,\n      description: values.description,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n    if (dataToEdit) {\n      material[\"contentId\"] = dataToEdit?._id;\n    }\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((video) => formData.append(\"file\", video));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n        // console.log(data, \"video post\");\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n      video: dataToEdit?.video || \"\",\n      description: dataToEdit?.description || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpenVideo(false);\n    setDataToEdit(null);\n    Formik.resetForm();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid spacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Video Name 0/80*\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item>\n            <FileSelect\n              name={`file`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Video\"\n              multi={false}\n              accept=\"video/*\"\n            />\n          </Grid>\n          {selectFile.length\n            ? selectFile?.map((v) => (\n                <video\n                  src={URL.createObjectURL(v)}\n                  style={{\n                    backgroundColor: \"black\",\n                    margin: \"20px 20px\",\n                    borderRadius: \"10px\",\n                    overflow: \"hidden\",\n                    textAlign: \"center\",\n                  }}\n                  controls\n                  type=\"video/mp4\"\n                />\n              ))\n            : \"\"}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  TextField,\n  styled,\n} from \"@mui/material\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport { useFormik } from \"formik\";\n\nconst InputLabels = styled(InputLabel)(() => ({\n  fontSize: \"12px\",\n  fontWeight: 580,\n  color: \"#616161\",\n  paddingLeft: \"10px\",\n}));\n\nconst Boxes = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n}));\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function QuizDialog({ title, open, Formik, setOpenQuiz }) {\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [quizData, setQuizData] = useState([\n    {\n      question: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: \"\",\n    },\n  ]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: \"\",\n      contentHours: \"\",\n      description: \"\",\n      question: \"\",\n      option: \"\",\n    },\n    onSubmit: console.log(\"q\"),\n  });\n\n  const handleClose = () => {\n    setOpenQuiz(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title 0/80*\"\n              type=\"text\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          {quizData?.map((quiz, i) => (\n            <Grid\n              container\n              rowSpacing={2}\n              key={i}\n              sx={{\n                margin: \"20px\",\n                backgroundColor: \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"0 15px 20px 15px\",\n                border: \"1px solid lightgrey\",\n              }}>\n              <Grid item xs={12} md={12}>\n                <InputLabels>\n                  {i + 1}.\n                  {quiz.question\n                    ? \"Update Your Question!\"\n                    : \"Write your question\"}\n                </InputLabels>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  name=\"question\"\n                  value={quiz.question}\n                  placeholder=\"Type here...\"\n                  //   onChange={(e) => handleQuestionChange(e, i)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        {i > 0 ? (\n                          <IconButton\n                            color=\"error\"\n                            size=\"small\"\n                            // onClick={() => removeQuiz(i)}\n                          >\n                            {/* <DeleteIcon fontSize=\"small\" color=\"error\" /> */}\n                          </IconButton>\n                        ) : null}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Grid container rowGap={2} columnSpacing={2}>\n                  {quiz.options.map((o, i) => (\n                    <Grid key={i} item xs={12} md={6}>\n                      <Boxes>\n                        <Radio\n                          size=\"small\"\n                          {...label}\n                          color=\"default\"\n                          checked={\n                            quiz.correctOption && quiz.correctOption === o\n                          }\n                          //   onChange={(e) => handleSetCorrectOption(o, i)}\n                          value={o}\n                          type=\"radio\"\n                        />\n                        <InputLabels>Option {i + 1}</InputLabels>\n                      </Boxes>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        name={`option${i + 1}`}\n                        value={o}\n                        // onChange={(e) => handleOptionChange(e, i, i)}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormSelect from \"../../../forms/FormSelect\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { toast } from \"react-toastify\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport CourseContext from \"../../../context/CourseContext\";\nimport ContentContext from \"../../../context/ContentContext\";\n\nexport default function FlashcardDialog({\n  // chapter,\n  title,\n  open,\n  setOpenFlashcard,\n  // courseId,\n  Formik,\n  // onUpdate = () => {},\n  setDataToEdit = () => {},\n  dataToEdit,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const { chapter } = useContext(ContentContext);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"FlashCard\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      flashCard: {\n        cardType: values.cardType,\n        text: \"Text\",\n      },\n      title: values.title,\n      description: values.description,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n\n    if (dataToEdit) {\n      material[\"contentId\"] = dataToEdit?._id;\n    }\n\n    if (values.cardType === \"Image\" && !selectFile.length)\n      return toast.error(\"Please select an Image file for Flash Card!\");\n\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      if (dataToEdit) {\n        setLoading(true);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n      description: dataToEdit?.description || \"\",\n      cardType: dataToEdit?.cardType || \"\",\n      text: dataToEdit?.text || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenFlashcard(false);\n    setDataToEdit(null);\n    Formik.resetForm();\n  };\n\n  // console.log(entryFormik.values.cardType, \"ggggggggg\");\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title 0/80*\"\n              type=\"text\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              required={true}\n              name=\"cardType\"\n              label=\"Select Card Type\"\n              options={[\n                { label: \"Flashcard Text\", value: \"Text\" },\n                { label: \"Flashcard Image\", value: \"Image\" },\n              ]}\n            />\n          </Grid>\n          {entryFormik.values.cardType === \"Text\" ? (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"text\"\n                label=\"Flashcard Text\"\n                required={entryFormik.values.cardType === \"Text\" ? true : false}\n              />\n            </Grid>\n          ) : (\n            <Grid xs={12} sm={6} md={6} item>\n              <FileSelect\n                name={`file`}\n                required={\n                  entryFormik.values.cardType === \"Image\" ? true : false\n                }\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectFile}\n                label=\"Upload Flashcard Image\"\n                // multi={false}\n                accept=\"image/*\"\n              />\n            </Grid>\n          )}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { toast } from \"react-toastify\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport CourseContext from \"../../../context/CourseContext\";\nimport ContentContext from \"../../../context/ContentContext\";\n\nexport default function MaterialsDialog({\n  // chapter,\n  // courseId,\n  title,\n  open,\n  setOpenMaterial,\n  // onUpdate = () => {},\n  setDataToEdit = () => {},\n  dataToEdit,\n  Formik,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const { chapter } = useContext(ContentContext);\n  // const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectFile, setSelectFile] = useState([]);\n  console.log(dataToEdit, \"dataToEdit\");\n\n  // // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    const material = {\n      type: \"Material\",\n      orderSequence: chapter.contents ? chapter.contents.length + 1 : 1,\n      title: values.title,\n      chapterId: chapter?._id,\n      contentHours: values.contentHours,\n    };\n\n    if (dataToEdit) {\n      material[\"contentId\"] = dataToEdit?._id;\n    }\n    formData.append(\"material\", JSON.stringify(material));\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      if (dataToEdit) {\n        setLoading(true);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateContent + \"/\" + courseId,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.addContentToChapter + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n        console.log(data, \"post\");\n      }\n      handleClose();\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      contentHours: dataToEdit?.contentHours || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenMaterial(false);\n    setDataToEdit(null);\n    Formik.resetForm();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Material Name\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contentHours\"\n              label=\"Content Hours\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`file`}\n              required={true}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Flashcard Image\"\n              // multi={false}\n              accept=\"image/*\"\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"image\"\n              label=\"Upload Material\"\n              type=\"file\"\n            />\n          </Grid> */}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport Grid from \"@mui/material/Grid\";\nimport FormInput from \"../../../forms/FormInput\";\nimport FormModal from \"../../../forms/FormModal\";\nimport SettingContext from \"../../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../../services/urlConstants\";\nimport { post, put } from \"../../../services/apiMethods\";\nimport { toast } from \"react-toastify\";\nimport FileSelect from \"../../../forms/FileSelect\";\nimport CourseContent from \"../CourseContent\";\nimport CourseContext from \"../../../context/CourseContext\";\n\nexport default function AddChapterDialog({\n  title,\n  open,\n  setOpenChaper = () => {},\n  setChapterData = () => {},\n  // onUpdate = () => {},\n  // courseId,\n  chapterData,\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { courseId, onUpdate } = useContext(CourseContext);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n  console.log(chapterData, \"gaua\");\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      if (chapterData) {\n        const formData = new FormData();\n\n        selectFile.forEach((file) => formData.append(\"file\", file));\n        formData.append(\"schoolId\", selectedSetting._id);\n        formData.append(\"chapterId\", chapterData?._id);\n        formData.append(\"title\", values.title);\n\n        const { data } = await put(\n          PRIVATE_URLS.courseContent.updateChapterDetails + \"/\" + courseId,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const formData = new FormData();\n        const body = { title: values.title };\n        formData.append(\"body\", JSON.stringify(body));\n        selectFile.forEach((file) => formData.append(\"file\", file));\n        formData.append(\"schoolId\", selectedSetting._id);\n        console.log(courseId, \"courseId\");\n        const { data } = await post(\n          PRIVATE_URLS.courseContent.create + \"/\" + courseId,\n          formData,\n          {\n            headers: { \"Content-type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      // entryFormik.handleSubmit();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      toast.error(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: chapterData?.title || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleClose = () => {\n    setOpenChaper(false);\n    setChapterData(null);\n    entryFormik.resetForm();\n    onUpdate();\n  };\n\n  return (\n    <>\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={chapterData ? `Update ${title}` : `Add ${title}`}\n        onClose={handleClose}\n        submitButtonTitle={chapterData ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Chapter Name\"\n              required={true}\n              inputProps={{ maxLength: 80 }}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`file`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectFile}\n              label=\"Upload Material\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\n//Icons\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport CourseContentTable from \"./CourseContentTable\";\nimport VideoDialog from \"./CourseDialogs/VideoDialog\";\nimport QuizDialog from \"./CourseDialogs/QuizDialog\";\nimport FlashcardDialog from \"./CourseDialogs/FlashcardDialog\";\nimport MaterialsDialog from \"./CourseDialogs/MaterialsDialog\";\nimport CodePracticeDialog from \"./CourseDialogs/CodePracticeDialog\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddChapterDialog from \"./CourseDialogs/AddChapterDialog\";\nimport DeleteModal from \"../../forms/DeleteModal\";\nimport ContentContext from \"../../context/ContentContext\";\nimport CourseContext from \"../../context/CourseContext\";\n\nconst Contents = [\n  {\n    id: 1,\n    label: \"Video\",\n    value: \"video\",\n  },\n  {\n    id: 2,\n    label: \"Quiz\",\n    value: \"quiz\",\n  },\n  {\n    id: 3,\n    label: \"FlashCard\",\n    value: \"flashcard\",\n  },\n  {\n    id: 4,\n    label: \"Material\",\n    value: \"material\",\n  },\n  // {\n  //   id: 5,\n  //   label: \"Code Practice\",\n  //   value: \"codepractice\",\n  // },\n];\n\nexport default function ShowCourseContent({\n  // chapter,\n  // course,\n  // courseId,\n  // onUpdate = () => {},\n  handleEditChapter = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const { chapter } = useContext(ContentContext);\n  const { courseId, onUpdate, course } = useContext(CourseContext);\n\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [openVideo, setOpenVideo] = useState(false);\n  const [openQuiz, setOpenQuiz] = useState(false);\n  const [openFlashcard, setOpenFlashcard] = useState(false);\n  const [openMaterial, setOpenMaterial] = useState(false);\n  const [openCodepractice, setOpenCodepractice] = useState(false);\n  const [openDeleteModel, setOpenDeleteModel] = useState(false);\n\n  // console.log(openDeleteModel, \"openDeleteModel\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      contents: \"\",\n    },\n    onSubmit: console.log(\"jj\"),\n  });\n\n  console.log(entryFormik.values, \"entryFormik\");\n\n  useEffect(() => {\n    if (entryFormik.values.contents === \"video\") {\n      setOpenVideo(entryFormik.values.contents === \"video\");\n    } else if (entryFormik.values.contents === \"quiz\") {\n      setOpenQuiz(entryFormik.values.contents === \"quiz\");\n    } else if (entryFormik.values.contents === \"flashcard\") {\n      setOpenFlashcard(entryFormik.values.contents === \"flashcard\");\n    } else if (entryFormik.values.contents === \"material\") {\n      setOpenMaterial(entryFormik.values.contents === \"material\");\n    } else {\n      setOpenCodepractice(entryFormik.values.contents === \"codepractice\");\n    }\n  }, [entryFormik.values.contents, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"upd\");\n    let type = Contents.find((c) => c.label === data?.type);\n    // console.log(type, \"oooo\");\n    entryFormik.setFieldValue(\"contents\", type?.value);\n    setDataToEdit(data);\n  };\n\n  const handelOpenDelModel = () => {\n    setOpenDeleteModel(true);\n  };\n\n  const handleDeleteChapter = async (_id) => {\n    let payload = {\n      ..._id,\n      chapterId: _id,\n    };\n\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.courseContent.deleteChapter + \"/\" + courseId,\n        payload\n      );\n      onUpdate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const handleSubmit = () => {\n  //   onDeleteClick(selectedItem._id);\n  //   setOpen(false);\n  // };\n\n  return (\n    <>\n      <Box\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"5px\",\n          px: 1,\n          mb: 3,\n          backgroundColor: \"aliceblue\",\n        }}>\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={6}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              p: 2,\n            }}>\n            <Typography\n              width=\"100%\"\n              variant=\"h6\"\n              component=\"div\"\n              fontWeight={600}\n              fontSize={16}\n              display=\"flex\"\n              alignItems=\"center\">\n              <Tooltip title=\"Delete Chapter\">\n                <IconButton size=\"small\" color=\"error\">\n                  <DeleteIcon\n                    fontSize=\"small\"\n                    color=\"error\"\n                    onClick={handelOpenDelModel}\n                  />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                title=\"Update Chapter\"\n                style={{\n                  color: \"#1b3779\",\n                }}>\n                <IconButton size=\"small\">\n                  <EditIcon fontSize=\"small\" onClick={handleEditChapter} />\n                </IconButton>\n              </Tooltip>\n              Chapter: {chapter?.title}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} sm={6} md={2}>\n            <FormSelect\n              required={true}\n              name=\"contents\"\n              formik={entryFormik}\n              label=\"Add Content\"\n              options={Contents}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <CourseContentTable\n              // chapter={chapter}\n              // courseId={courseId}\n              onEditClick={handleEditClick}\n              handelOpenDelModel={handelOpenDelModel}\n              // handleDeleteChapter={handleDeleteChapter}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* delete model ======== */}\n      <DeleteModal\n        deleteModal={openDeleteModel}\n        handleDelete={handleDeleteChapter}\n        // id={chapter?._id}\n        setDeleteModal={setOpenDeleteModel}\n      />\n\n      {/* open video model ============= */}\n      <VideoDialog\n        title=\"Video for Course\"\n        open={openVideo}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenVideo={setOpenVideo}\n        chapter={chapter}\n        onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open quiz model ============== */}\n      <QuizDialog\n        title=\"Quiz\"\n        open={openQuiz}\n        courseId={courseId}\n        Formik={entryFormik}\n        setOpenQuiz={setOpenQuiz}\n        chapter={chapter}\n        onUpdate={onUpdate}\n      />\n\n      {/* open flashcard model ========== */}\n      <FlashcardDialog\n        title=\"Flashcard\"\n        open={openFlashcard}\n        // chapter={chapter}\n        // courseId={courseId}\n        Formik={entryFormik}\n        setOpenFlashcard={setOpenFlashcard}\n        // onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open material model =========== */}\n      <MaterialsDialog\n        title=\"Material\"\n        open={openMaterial}\n        Formik={entryFormik}\n        // chapter={chapter}\n        // courseId={courseId}\n        setOpenMaterial={setOpenMaterial}\n        // onUpdate={onUpdate}\n        setDataToEdit={setDataToEdit}\n        dataToEdit={dataToEdit}\n      />\n\n      {/* open CodePractice model =========== */}\n      {/* <CodePracticeDialog\n        title=\"Code Practice\"\n        open={openCodepractice}\n        Formik={entryFormik}\n        chapter={chapter}\n        courseId={courseId}\n        setOpenCodepractice={setOpenCodepractice}\n      /> */}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Button, Divider, Grid, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\n// icons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport ShowCourseContent from \"./ShowCourseContent\";\nimport AddChapterDialog from \"./CourseDialogs/AddChapterDialog\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CourseContext from \"../../context/CourseContext\";\nimport ContentContext from \"../../context/ContentContext\";\n\nconst Label = styled(\"label\")(() => ({\n  fontWeight: 650,\n  fontSize: \"15px\",\n  color: \"#424242\",\n}));\n\nconst OuterGrid = styled(Grid)(() => ({\n  padding: 1,\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n}));\n\nexport default function CourseContent() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [courses, setCourses] = useState([]);\n  const [openChapter, setOpenChaper] = useState(false);\n  const [courseDetails, setCourseDetails] = useState({ chapters: [] });\n  const [chapterData, setChapterData] = useState(null);\n\n  // console.log(chapterData, \"chapterData\");\n  // console.log(courseDetails, \"courseDetails\");\n  // get course list\n  const getCourse = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.course.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setCourses(\n        data.result.map((c) => ({ ...c, label: c.title, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"courseId\", data?.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get content details\n  const getDetails = async (values) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.courseContent.getDetailsTeachers + \"/\" + values.courseId,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n      setCourseDetails(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      courseId: \"\",\n    },\n    onSubmit: getDetails,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getCourse();\n  }, []);\n\n  useEffect(() => {\n    if (courses.length) {\n      entryFormik.handleSubmit();\n    }\n  }, [courses, entryFormik.values.courseId]);\n\n  const handelOpenChapter = (data) => {\n    setOpenChaper(true);\n  };\n\n  const handleEditChapter = (data) => {\n    // console.log(data, \"upd\");\n    setOpenChaper(true);\n    setChapterData(data);\n  };\n\n  return (\n    <>\n      <CourseContext.Provider\n        value={{\n          courses,\n          courseId: entryFormik.values.courseId,\n          onUpdate: entryFormik.handleSubmit,\n        }}>\n        <PageHeader title=\"Course Content\" />\n\n        <OuterGrid container>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            my={2}\n            gap={2}\n            display=\"flex\"\n            alignItems=\"center\">\n            <Box sx={{ width: 260 }}>\n              <FormSelect\n                required={true}\n                name=\"courseId\"\n                formik={entryFormik}\n                label=\"Select Course To Add Content\"\n                options={courses}\n              />\n            </Box>\n\n            <Button\n              variant=\"contained\"\n              size=\"medium\"\n              disabled={!courses.length}\n              startIcon={<AddIcon />}\n              sx={{ mt: 1 }}\n              multi={false}\n              onClick={handelOpenChapter}>\n              Chapter\n            </Button>\n          </Grid>\n        </OuterGrid>\n        <Divider />\n\n        {/* show all models components == */}\n        {courseDetails.chapters?.map((chapter, i) => (\n          <ContentContext.Provider value={{ chapter: chapter }}>\n            <ShowCourseContent\n              key={i}\n              // chapter={chapter}\n              // courseId={entryFormik.values.courseId}\n              // course={courseDetails}\n              // submitDetails={() => entryFormik.handleSubmit()}\n              handleEditChapter={() => handleEditChapter(chapter)}\n            />\n          </ContentContext.Provider>\n        ))}\n\n        {/* open chapter model ========== */}\n        <AddChapterDialog\n          title=\"Chapter for Course\"\n          open={openChapter}\n          setOpenChaper={setOpenChaper}\n          courseId={entryFormik.values.courseId}\n          chapterData={chapterData}\n          setChapterData={setChapterData}\n          onUpdate={() => entryFormik.handleSubmit()}\n        />\n      </CourseContext.Provider>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport moment from \"moment\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FormInput from \"../../forms/FormInput\";\nimport { Delete, Search } from \"@mui/icons-material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport dayjs from \"dayjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport DeleteModal from \"../../forms/DeleteModal\";\n\nconst TableData = styled(TableCell)(() => ({\n  textAlign: \"center\",\n  color: \"#ffff\",\n  fontWeight: 600,\n}));\n\nconst TableBodydata = styled(TableCell)(() => ({\n  textAlign: \"center\",\n}));\nconst Label = styled(\"label\")(() => ({\n  fontWeight: 650,\n  fontSize: \"15px\",\n  color: \"#424242\",\n  paddingLeft: \"10px\",\n}));\n\nconst FilterBox = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  gap: \"10px\",\n  marginBottom: 1,\n}));\nconst getDateWithTime = (dateTimeString = \"27/09/2024 14:30\") => {\n  const dateTimeComponents = dateTimeString.split(\" \");\n\n  // Extract date components\n  const dateComponents = dateTimeComponents[0].split(\"/\");\n  const yearExtracted = parseInt(dateComponents[2], 10);\n  const monthExtracted = parseInt(dateComponents[1], 10) - 1; // Months are zero-based\n  const dayExtracted = parseInt(dateComponents[0], 10);\n\n  // Extract time components\n  const timeComponents = dateTimeComponents[1].split(\":\");\n  const hoursExtracted = parseInt(timeComponents[0], 10);\n  const minutesExtracted = parseInt(timeComponents[1], 10);\n\n  // Create a new Date object using the extracted components\n  return new Date(\n    yearExtracted,\n    monthExtracted,\n    dayExtracted,\n    hoursExtracted,\n    minutesExtracted\n  );\n};\n\nconst getStatus = (startDate, startTime, expiryDate, expiryTime) => {\n  let currentDate = Date.now();\n  let startDataTimestring = `${moment(startDate).format(\n    \"DD/MM/YYYY\"\n  )} ${startTime}}`;\n  let expiryDateTimeString = `${moment(expiryDate).format(\n    \"DD/MM/YYYY\"\n  )} ${expiryTime}`;\n  let currentDateTimeString = `${moment(currentDate).format(\n    \"DD/MM/YYYY\"\n  )} ${moment(currentDate).format(\"LT\")}`;\n\n  let meetingDate = getDateWithTime(startDataTimestring);\n  let meetingExpiryDate = getDateWithTime(expiryDateTimeString);\n  let currentDateAndTime = getDateWithTime(currentDateTimeString);\n\n  if (meetingDate > currentDateAndTime) {\n    return \"Upcoming\";\n  } else if (\n    meetingDate < currentDateAndTime &&\n    meetingExpiryDate > currentDateAndTime\n  ) {\n    return \"Available\";\n  } else {\n    return \"Expired\";\n  }\n};\n\nconst User_Type = [\n  { label: \"Student\", value: \"student\" },\n  { label: \"Employee\", value: \"employee\" },\n];\n\nconst Participant_Type = [\n  { label: \"Single\", value: \"Single\" },\n  { label: \"Class Students\", value: \"Class Students\" },\n  { label: \"Selected\", value: \"Selected\" },\n];\n\nconst Meeting_Type = [\n  { label: \"One-On-One Call\", value: \"OneONoneCall\" },\n  { label: \"Group Call\", value: \"GroupCall\" },\n  { label: \"Live Streaming\", value: \"LiveStreaming\" },\n];\n\nexport default function Live() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [filterMeeting, setFilterMeeting] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [classes, setClasses] = useState([]);\n  const [selectClasses, setSelectClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const navigate = useNavigate();\n  const [employee, setEmployee] = useState([]);\n  const [deleteModal, setDeleteModal] = React.useState(false);\n  const [selectedPartcipatType, setSelectedParticipatType] = useState(\"All\");\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.meeting.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n      setFilterMeeting(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddMeeting = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    entryFormik.resetForm();\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      setSelectClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.classId,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.classId,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: { $in: entryFormik.values.roles },\n          },\n        },\n      });\n\n      console.log(data, \"jjjjjjjjjjjjj\");\n\n      setEmployee(\n        data.result.map((s) => ({\n          ...s,\n          label: s.basicInfo.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(data.result.map((s) => ({ ...s, label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getDateWithTime();\n  }, []);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n\n        startDate: dayjs(values.startDate).format(\"YYYY/MM/DD\"),\n        expiryDate: dayjs(values.expiryDate).format(\"YYYY/MM/DD\"),\n\n        participants:\n          entryFormik.values.participantType === \"Single\"\n            ? [entryFormik.values.participants]\n            : entryFormik.values.participants,\n\n        employeeParticipants: employee.filter(\n          (e) =>\n            entryFormik.values.roles.includes(e.role._id) &&\n            entryFormik.values.employeeParticipants.includes(e._id)\n        ),\n        studentParticipants: students.filter(\n          (s) =>\n            entryFormik.values.classId.includes(s?.academicInfo?.class?._id) &&\n            entryFormik.values.section.includes(\n              s?.academicInfo?.section?._id\n            ) &&\n            entryFormik.values.studentParticipants.includes(s?._id)\n        ),\n      };\n\n      console.log(payload, \"payyload\");\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.meeting.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n        handleClose();\n      } else {\n        const { data } = await post(PRIVATE_URLS.meeting.create, payload);\n        getData();\n        handleClose();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      classId: [],\n\n      expiryDate: null,\n\n      expiryTime: \"\",\n      startDate: null,\n\n      startTime: \"\",\n      createdBy: \"\",\n      meetingType: \"\",\n      participantType: \"\",\n      userTypes: [],\n\n      roles: [],\n      section: [],\n      employeeParticipants: [],\n      studentParticipants: [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.roles) {\n      getEmployee();\n    }\n  }, [entryFormik.values.roles, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.classId) {\n      getSections();\n    }\n  }, [entryFormik.values.classId, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.classId && entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.classId, entryFormik.values.section, selectedSetting]);\n\n  const handleUpdateModelOpen = (id) => {\n    console.log(id, \"idddddd\");\n    setDataToEdit(id);\n    let meetingData = data.filter((m) => m._id == id)[0];\n\n    console.log(meetingData, \"meetingData\");\n    if (meetingData.userTypes.includes(\"employee\")) {\n      let roles = [];\n      for (let emp of meetingData.employeeParticipants) {\n        if (roles.filter((r) => r == emp.role).length < 1) {\n          roles.push(emp.role);\n        }\n      }\n\n      entryFormik.setFieldValue(\"roles\", roles);\n      entryFormik.setFieldValue(\n        \"employeeParticipants\",\n        meetingData.employeeParticipants.map((p) => p._id)\n      );\n    }\n\n    if (meetingData.userTypes.includes(\"student\")) {\n      let classes = [];\n      let sections = [];\n      for (let stupar of meetingData.studentParticipants) {\n        if (sections.filter((s) => s == stupar.academicInfo.class).length < 1) {\n          sections.push(stupar.academicInfo.section);\n        }\n        if (classes.filter((c) => c == stupar.academicInfo.class).length < 1) {\n          classes.push(stupar.academicInfo.class);\n        }\n      }\n\n      entryFormik.setFieldValue(\"classId\", classes);\n      entryFormik.setFieldValue(\"section\", sections);\n      entryFormik.setFieldValue(\n        \"studentParticipants\",\n        meetingData.studentParticipants.map((p) => p._id)\n      );\n    }\n\n    if (meetingData.participantType === \"Class Students\") {\n      entryFormik.setFieldValue(\"classId\", meetingData.classId);\n    }\n\n    entryFormik.setFieldValue(\"meetingType\", meetingData.meetingType);\n    entryFormik.setFieldValue(\"expiryDate\", meetingData.expiryDate);\n    entryFormik.setFieldValue(\"startTime\", meetingData.startTime);\n    entryFormik.setFieldValue(\"expiryTime\", meetingData.expiryTime);\n    entryFormik.setFieldValue(\"participantType\", meetingData.participantType);\n    entryFormik.setFieldValue(\"userTypes\", meetingData.userTypes);\n    entryFormik.setFieldValue(\"startDate\", meetingData.startDate);\n\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (selectedPartcipatType) {\n      if (selectedPartcipatType === \"All\") {\n        setFilterMeeting(data);\n      } else {\n        setFilterMeeting(\n          data.filter((c) => c.meetingType === selectedPartcipatType)\n        );\n      }\n    }\n  }, [selectedPartcipatType, selectedSetting]);\n  const handleFilter = (e) => {\n    setSelectedParticipatType(e.target.value);\n  };\n\n  const handleJoinClick = (id) => {\n    const getMeetingId = data.find((item) => item._id === id);\n    console.log(getMeetingId);\n    if (getMeetingId) {\n      const meetingType = getMeetingId.meetingType;\n      navigate(`/sch/lms/room/${getMeetingId.roomId}`, {\n        state: { meetingType: meetingType },\n      });\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.meeting.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  console.log(entryFormik.values, \"kkkkkkkkkk\");\n\n  return (\n    <>\n      <PageHeader title=\"Live\" />\n\n      <FilterBox>\n        <FormControl size=\"small\" sx={{ m: 1, minWidth: 250 }}>\n          <Label id=\"demo-simple-select-label\">\n            <FilterListIcon fontSize=\"small\" /> Filter Meeting\n          </Label>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            placeholder=\"Select Course\"\n            value={selectedPartcipatType}\n            onChange={handleFilter}>\n            <MenuItem value=\"All\"> All </MenuItem>\n            <MenuItem value=\"OneONoneCall\">One-On-One Call </MenuItem>\n            <MenuItem value=\"GroupCall\">Group Call </MenuItem>\n            <MenuItem value=\"LiveStreaming\">Live Streaming</MenuItem>\n          </Select>\n        </FormControl>\n      </FilterBox>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableData>S.No</TableData>\n              <TableData>Meeting Date</TableData>\n              <TableData>Meeting Type</TableData>\n              <TableData>Status</TableData>\n              <TableData>Start Meeting</TableData>\n              <TableData>Action</TableData>\n            </TableRow>\n          </TableHead>{\" \"}\n          <TableBody>\n            {(filterMeeting ? filterMeeting : data).map((listData, i) => (\n              <TableRow>\n                <TableBodydata>{i + 1}</TableBodydata>\n\n                <TableBodydata>\n                  {dayjs(listData.startDate).format(\"DD-MM-YYYY\")}, Time:{\" \"}\n                  {listData.startTime}\n                </TableBodydata>\n                <TableBodydata>{listData.meetingType}</TableBodydata>\n                <TableBodydata>\n                  <Box\n                    sx={{\n                      py: 1,\n                      objectFit: \"contain\",\n                      borderRadius: \"5px\",\n                      background:\n                        getStatus(\n                          listData.startDate,\n                          listData.startTime,\n                          listData.expiryDate,\n                          listData.expiryTime\n                        ) === \"Expired\"\n                          ? \"#85848430\"\n                          : \"#8281e74d\",\n                    }}>\n                    {getStatus(\n                      listData.startDate,\n                      listData.startTime,\n                      listData.expiryDate,\n                      listData.expiryTime\n                    )}\n                  </Box>\n                </TableBodydata>\n                <TableBodydata>\n                  <Button\n                    disabled={\n                      getStatus(\n                        listData.startDate,\n                        listData.startTime,\n                        listData.expiryDate,\n                        listData.expiryTime\n                      ) === \"Expired\"\n                    }\n                    onClick={() => handleJoinClick(listData._id)}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Join\n                  </Button>\n                </TableBodydata>\n\n                <TableBodydata>\n                  <Tooltip title=\"Edit\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleUpdateModelOpen(listData._id)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => setDeleteModal(listData._id)}>\n                      <Delete fontSize=\"small\" color=\"error\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableBodydata>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <DeleteModal\n          deleteModal={deleteModal}\n          handleDelete={handleDelete}\n          id={deleteModal}\n          setDeleteModal={setDeleteModal}\n        />\n        {!data.length && (\n          <Box align=\"center\" colSpan={12} py={2}>\n            <Typography variant=\"h6\" align=\"center\">\n              Live sessions Not found!\n            </Typography>\n          </Box>\n        )}\n        {!filterMeeting.length === 0 && (\n          <Box align=\"center\" colSpan={12} py={2}>\n            <Typography variant=\"h6\" align=\"center\">\n              Live sessions Not found!\n            </Typography>\n          </Box>\n        )}\n      </TableContainer>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Meeting\" : \"Add Meeting\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"meetingType\"\n              label=\"Meeting Type\"\n              options={Meeting_Type}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"participantType\"\n              label=\"Participant Type\"\n              options={Participant_Type}\n            />\n          </Grid>\n\n          {(entryFormik.values.participantType === \"Single\" ||\n            entryFormik.values.participantType === \"Selected\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  multiple={true}\n                  formik={entryFormik}\n                  name=\"userTypes\"\n                  label=\"User Type\"\n                  options={User_Type}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.userTypes.includes(\"student\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"classId\"\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"section\"\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"studentParticipants\"\n                  multiple={\n                    entryFormik.values.participantType !== \"Single\"\n                      ? true\n                      : false\n                  }\n                  label=\"Select Student\"\n                  options={students}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.userTypes.includes(\"employee\") && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"roles\"\n                  label=\"Select Role\"\n                  options={roles}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  multiple={true}\n                  name=\"employeeParticipants\"\n                  label=\"Select Employee\"\n                  options={employee}\n                />\n              </Grid>\n            </>\n          )}\n\n          {entryFormik.values.participantType === \"Class Students\" && (\n            <>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormSelect\n                  formik={entryFormik}\n                  name=\"classId\"\n                  multiple={\n                    entryFormik.values.participantType === \"Class Students\"\n                      ? true\n                      : false\n                  }\n                  label=\"Select Class\"\n                  options={selectClasses}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Enter Start Date\"\n              name=\"startDate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              label=\"Enter Start Time\"\n              type=\"time\"\n              name=\"startTime\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Enter Expiry Date\"\n              name=\"expiryDate\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              label=\"Enter Expiry Time\"\n              type=\"time\"\n              name=\"expiryTime\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      <AddForm title=\"Add Meeting\" onAddClick={AddMeeting} />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst StorageText = styled(Typography)(() => ({\n  border: \"1px solid lightGrey\",\n  fontWeight: \"600\",\n  padding: 10,\n  borderRadius: 5,\n  textAlign: \"center\",\n}));\nconst StorageContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst Storage = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const [storageDetails, setStorageDetails] = useState({\n    totalStorage: 0,\n    usedStorage: 0,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.storage.details, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setStorageDetails(data.result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Storage\" />\n      <StorageContainer>\n        <Paper\n          sx={{\n            padding: 4,\n            width: { xs: \"100%\", sm: \"70%\", md: \"50%\", lg: \"40%\" },\n          }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <StorageText>\n                Total Storage:{\" \"}\n                <Typography component=\"span\" fontWeight=\"bold\" color=\"#607d8b\">\n                  {storageDetails.totalStorage}\n                </Typography>\n              </StorageText>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <StorageText>\n                Used Storage:{\" \"}\n                <Typography component=\"span\" fontWeight=\"bold\" color=\"#607d8b\">\n                  {storageDetails.usedStorage}\n                </Typography>\n              </StorageText>\n            </Grid>\n          </Grid>\n        </Paper>\n      </StorageContainer>\n    </>\n  );\n};\n\nexport default Storage;\n","/** @format */\n\nexport const libraryBookTableKeys = [\n  {\n    name: \"Book Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Author\",\n    key: \"author\",\n  },\n  {\n    name: \"Book Cover\",\n    key: \"bookCover\",\n    type: \"image\",\n  },\n  {\n    name: \"Price\",\n    key: \"price\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n  {\n    name: \"Issue\",\n    key: \"issueNumber\",\n  },\n  {\n    name: \"Available\",\n    key: \"available\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport dayjs from \"dayjs\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function BookViewModal({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Book Title\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.title}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Book ID\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.id}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Author\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.author}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Language\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.language}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.quantity}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Price\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.price}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Almira No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.almiraNo}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {dayjs(tableData?.createdAt).format(\"DD-MM-YYYY\")}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { libraryBookTableKeys } from \"../../data/tableKeys/libraryBooksData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\n\nimport FormModal from \"../../forms/FormModal\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddForm from \"../../forms/AddForm\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport BookViewModal from \"./BookViewModal\";\n\nexport default function Books() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    schoolName: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.book.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"llllllllll\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddBooks = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"schoolId\", selectedSetting._id);\n    formData.append(\"title\", values.title);\n    formData.append(\"id\", values.id);\n    formData.append(\"department\", values.department);\n    formData.append(\"cellNumber\", values.cellNumber);\n    formData.append(\"isbnNo\", values.isbnNo);\n    formData.append(\"edison\", values.edison);\n    formData.append(\"author\", values.author);\n    formData.append(\"language\", values.language);\n    formData.append(\"price\", values.price);\n    formData.append(\"quantity\", values.quantity);\n    formData.append(\"almiraNo\", values.almiraNo);\n    selectImg.forEach((file) => formData.append(\"bookCover\", file));\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.book.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.book.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        getData();\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      id: dataToEdit?.id || \"\",\n      department: dataToEdit?.department || \"\",\n      cellNumber: dataToEdit?.cellNumber || \"\",\n      isbnNo: dataToEdit?.isbnNo || \"\",\n      edison: dataToEdit?.edison || \"\",\n      author: dataToEdit?.author || \"\",\n      language: dataToEdit?.language || \"\",\n      price: dataToEdit?.price || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      almiraNo: dataToEdit?.almiraNo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.book.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Library\" />\n\n      <Paper sx={{ padding: 2, mb: 1 }}>\n        <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n          <Button size=\"small\" variant=\"contained\">\n            Download\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Count By title\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Stock Verification\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Bulk Upload\n          </Button>\n        </Stack>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={libraryBookTableKeys}\n        bodyDataModal=\"book\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onViewClick={handleClickOpenView}\n      />\n\n      <AddForm title=\"Add Books\" onAddClick={AddBooks} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Books\" : \"Add Books\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"id\"\n              label=\"Book Id\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"department\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"cellNumber\"\n              label=\"Cell Number\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"isbnNo\" label=\"ISBN No\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"edison\" label=\"Edison\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"author\" label=\"Author\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"language\" label=\"Language\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"price\" label=\"Price\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"quantity\"\n              required={true}\n              label=\"Quantity\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"almiraNo\" label=\"Almira No\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FileSelect\n              name=\"bookCover\"\n              label=\"Select Book\"\n              onChange={(e) => handleChangeFiles(e)}\n              previousFile={dataToEdit?.bookCover}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      <BookViewModal\n        title=\"Book Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const periodicalTableKeys = [\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Issue Number\",\n    key: \"issueNumber\",\n  },\n  {\n    name: \"Volume Number\",\n    key: \"volumeNumber\",\n  },\n  {\n    name: \"Book Cover\",\n    key: \"bookCover\",\n    type: \"image\",\n  },\n  {\n    name: \"Price\",\n    key: \"price\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n\n  {\n    name: \"Journal Entry Date\",\n    key: \"entryDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { periodicalTableKeys } from \"../../data/tableKeys/periodicalData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\n\nexport default function Periodical() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [selectImg, setSelectImg] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [downloadLoader, setDownloadLoader] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.periodical.list);\n      console.log(data, \"perr\");\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"title\", values.title);\n    formData.append(\"type\", values.type);\n    formData.append(\"department\", values.department);\n    formData.append(\"issueNumber\", values.issueNumber);\n    formData.append(\"volumeNumber\", values.volumeNumber);\n    formData.append(\"quantity\", values.quantity);\n    formData.append(\"price\", values.price);\n    formData.append(\"entryDate\", dayjs(values.entryDate).format(\"YYYY-MM-DD\"));\n    selectImg.forEach((file) => formData.append(\"bookCover\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.periodical.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.periodical.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  // open add model\n  const AddFormHandel = () => {\n    setOpen(true);\n  };\n\n  const handleChangeFiles = (e) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      type: dataToEdit?.type || \"\",\n      department: dataToEdit?.department || \"\",\n      issueNumber: dataToEdit?.issueNumber || \"\",\n      volumeNumber: dataToEdit?.volumeNumber || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      price: dataToEdit?.price || \"\",\n      entryDate: dataToEdit?.entryDate || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setOpen(true);\n    getData();\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.periodical.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadSheet = () => {\n    console.log(\"ggg\");\n  };\n\n  // const handleGetDownloadSheet = async (e) => {\n  //   setDownloadLoader(true);\n  //   e.preventDefault();\n  //   try {\n  //     // const response = await get(\n  //     //   `/${selectedSetting._id}/periodical/downloadexcel`,\n  //     //   {\n  //     //     responseType: \"blob\",\n  //     //   }\n  //     // );\n\n  //     const downloadUrl = URL.createObjectURL(new Blob([response.data]));\n  //     const link = document.createElement(\"a\");\n  //     link.href = downloadUrl;\n  //     link.setAttribute(\"download\", `periodical-stock.xlsx`);\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setDownloadLoader(false);\n  // };\n\n  return (\n    <>\n      <PageHeader title=\"Periodical List\" />\n      <Paper sx={{ padding: 2, mb: 1 }}>\n        <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleGetDownloadSheet}>\n            Download\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Count By title\n          </Button>\n\n          <Button size=\"small\" variant=\"contained\">\n            Bulk Upload\n          </Button>\n        </Stack>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={periodicalTableKeys}\n        bodyDataModal=\"periodical list\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Periodical List\" onAddClick={AddFormHandel} />\n\n      {/* ==== Add/Update Periodical List ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Periodical List\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Periodical Title\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Select Type\"\n              options={[\n                { label: \"Journal\", value: \"journal\" },\n                { label: \"Magazine\", value: \"magazine\" },\n                { label: \"Newspaper\", value: \"newspaper\" },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"department\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"issueNumber\"\n              label=\"Issue Number\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"volumeNumber\"\n              label=\"Volume Number\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              required={true}\n              formik={entryFormik}\n              name=\"quantity\"\n              label=\"Quantity\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"price\"\n              label=\"price\"\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"entryDate\"\n              label=\"Select Entry Date\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name={`bookCover`}\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              previousFile={dataToEdit?.bookCover}\n              label=\"Select Book Cover\"\n              // onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/*\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n];\n","/** @format */\n\nexport const studentNonMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { studentMemberTableKeys } from \"../../data/tableKeys/studentMember\";\nimport { studentNonMemberTableKeys } from \"../../data/tableKeys/studentNonMember\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport { Add, Remove as RemoveIcon } from \"@mui/icons-material\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\n\nconst StudentMemberAction = ({\n  onUpdate = () => {},\n  data = {},\n  actionType,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      if (actionType === \"add\") {\n        await put(PRIVATE_URLS.student.updateLibraryMember + \"/\" + data._id);\n      } else {\n        await del(PRIVATE_URLS.student.removeLibraryMember + \"/\" + data._id);\n      }\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  const actionTitle = actionType === \"add\" ? \"Add Member\" : \"Remove Member\";\n  const actionDescription =\n    actionType === \"add\"\n      ? \"Do you want to add this student to the library member list?\"\n      : \"Do you want to remove this student from the library member list?\";\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={actionType === \"add\" ? <Add /> : <RemoveIcon />}\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={actionTitle}\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>{actionDescription}</Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function StudentLibraryMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [students, setStudents] = useState([]);\n  const [nonMember, setNonMember] = useState([]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          studentName: d.basicInfo,\n          className: d.academicInfo.class,\n          sectionName: d.academicInfo.section,\n          rollNo: d.academicInfo,\n        }));\n\n      const filteredNonMemberData = data.result\n        .filter((d) => !d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          studentName: d.basicInfo,\n          className: d.academicInfo.class,\n          sectionName: d.academicInfo.section,\n          rollNo: d.academicInfo,\n        }));\n\n      setStudents(filteredData);\n\n      setNonMember(filteredNonMemberData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Student Library Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Student Member List\", \"Student Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentMemberTableKeys}\n          bodyData={students}\n          bodyDataModal=\"student\"\n          CustomAction={(props) => (\n            <StudentMemberAction {...props} actionType=\"remove\" />\n          )}\n          onUpdate={getStudents}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentNonMemberTableKeys}\n          bodyData={nonMember}\n          bodyDataModal=\"student\"\n          CustomAction={(props) => (\n            <StudentMemberAction {...props} actionType=\"add\" />\n          )}\n          onUpdate={getStudents}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentLibraryDueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nexport const studentLibraryHistoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nexport const studentLibraryIssueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"issuedName\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n    path: \"bookName\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"id\",\n    path: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n    isDate: true,\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { studentLibraryDueTableKeys } from \"../../data/tableKeys/studentLibraryDueData\";\nimport { studentLibraryHistoryTableKeys } from \"../../data/tableKeys/studentLibraryHistoryData\";\nimport { studentLibraryIssueTableKeys } from \"../../data/tableKeys/studentlibraryIssueData\";\nimport { Button, Grid, Paper, Stack, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport dayjs from \"dayjs\";\n\nconst BookDetailed = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n}));\n\nconst Issued_To_Type_Option = [\n  { label: \"Student\", value: \"student\" },\n  { label: \"Employee\", value: \"employee\" },\n];\n\nconst Type_Options = [\n  { label: \"Book\", value: \"book\" },\n  { label: \"Periodical\", value: \"periodical\" },\n];\n\nconst CustomAction = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.bookIssue.submit + \"/\" + data._id);\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button size=\"small\" variant=\"contained\" onClick={handleClickOpen}>\n          Return\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Return Book\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>\n              Are you sure you want to change the issue status to return?\n            </Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function StudentIssueReturn() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [employee, setEmployee] = useState([]);\n  const [book, setBook] = useState([]);\n  const [dueList, setDueList] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const [periodical, setPeriodical] = useState([]);\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.bookIssue.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const filteredIssueData = data.result\n        .filter((s) => s.submissionDate == null)\n        .map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }));\n\n      const currentDate = new Date();\n      const filtereDueData = data.result\n        .filter(\n          (s) =>\n            s.dueDate &&\n            new Date(s.dueDate) < currentDate &&\n            s.submissionDate == null\n        )\n        .map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }));\n\n      setData(filteredIssueData);\n      setDueList(filtereDueData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const getPeriodical = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.periodical.list);\n\n      setPeriodical(\n        data.result.map((s) => ({ ...s, label: s.title, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getBooks = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.book.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setBook(data.result.map((s) => ({ ...s, label: s.title, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.otherInfo?.libraryMember)\n        .map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }));\n      setStudents(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }));\n      setEmployee(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getBooks();\n    getPeriodical();\n    getStudents();\n    getEmployee();\n  }, [selectedSetting]);\n\n  const getList = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.bookIssue.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      console.log(data.result, \"issues\");\n      setHistory(\n        data.result.map((s) => ({\n          ...s,\n          bookName: s.book,\n          bookId: s.book,\n          issuedName: s.issuedTo.basicInfo,\n        }))\n      );\n\n      console.log(data.result, \"histttttttttt\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getList,\n  });\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getIssuePdf = await get(PRIVATE_URLS.bookIssue.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: formik.values.fromDate,\n          toDate: formik.values.toDate,\n        },\n      });\n\n      downloadFile(\"application/pdf\", getIssuePdf.data, \"Issue_Details.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.bookIssue.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: formik.values.fromDate,\n          toDate: formik.values.toDate,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"Issue_Details.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        issueDate: dayjs(values.issueDate).format(\"YYYY/MM/DD\"),\n        dueDate: dayjs(values.dueDate).format(\"YYYY/MM/DD\"),\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      const { data } = await post(PRIVATE_URLS.bookIssue.create, payload);\n      getData();\n      resetForm();\n      handleClose();\n      getBooks();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      issueDate: null,\n      book: \"\",\n      quantity: 0,\n      dueDate: null,\n      type: \"\",\n      issuedToType: \"\",\n      issuedTo: \"\",\n      type: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    formik.handleSubmit();\n  }, [selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Issue & Return\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Issue List\", \"Due List\", \"History List\"]}\n      />\n\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        sx={{ mt: 1, mb: 2 }}>\n        Issue Book\n      </Button>\n      <TabPanel index={0} value={value}>\n        <BookDetailed sx={{ padding: 1 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Total Books:{\" \"}\n            {book.reduce((total, current) => total + current.leftInStock, 0)}\n          </Typography>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Issued: {data.length}\n          </Typography>\n          <Typography variant=\"h6\" fontSize={16} fontWeight=\"bold\">\n            Due: {dueList.length}\n          </Typography>\n        </BookDetailed>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentLibraryIssueTableKeys}\n          bodyData={data}\n          bodyDataModal=\"issue list\"\n          CustomAction={CustomAction}\n          onUpdate={getData}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={studentLibraryDueTableKeys}\n          bodyData={dueList}\n          bodyDataModal=\"due list\"\n          CustomAction={CustomAction}\n          onUpdate={getData}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                sx={{ alignSelf: \"center\", mt: 1 }}\n                item>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n              <Grid xs={12} md={12} lg={12} item>\n                <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n                  <Button\n                    size=\"small\"\n                    onClick={handleGetPrintPdf}\n                    variant=\"contained\">\n                    Download\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    onClick={handleGetDownloadExcel}\n                    variant=\"contained\">\n                    Print\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[]}\n          bodyData={history}\n          bodyDataModal=\"list\"\n          tableKeys={studentLibraryHistoryTableKeys}\n        />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Issue\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"type\"\n              formik={entryFormik}\n              label=\"Select Tyoe\"\n              options={Type_Options}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"book\"\n              label={entryFormik.values.type === \"book\" ? \"Book\" : \"Periodical\"}\n              required={true}\n              options={entryFormik.values.type === \"book\" ? book : periodical}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"issueDate\"\n              label=\"Issue Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"quantity\"\n              label=\"Quantity\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"dueDate\"\n              label=\"Due Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"issuedToType\"\n              label=\"Issued To Type\"\n              required={true}\n              options={Issued_To_Type_Option}\n            />\n          </Grid>\n          {entryFormik.values.issuedToType === \"student\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={entryFormik}\n                name=\"issuedTo\"\n                label=\"Issued To\"\n                required={true}\n                options={students}\n              />\n            </Grid>\n          )}\n\n          {entryFormik.values.issuedToType === \"employee\" && (\n            <Grid xs={12} sm={6} md={6} item>\n              <FormSelect\n                formik={entryFormik}\n                name=\"issuedTo\"\n                label=\"Issued To\"\n                required={true}\n                options={employee}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeLibraryMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"empName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n\n  {\n    name: \"Library Id\",\n    key: \"libraryId\",\n  },\n];\n","/** @format */\n\nexport const employeeLibraryNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"empName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"contactNumber\",\n  },\n\n  {\n    name: \"Library Id\",\n    key: \"libraryId\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLibraryMemberTableKeys } from \"../../data/tableKeys/employeeLibraryNonMemberData\";\nimport { employeeLibraryNonMemberTableKeys } from \"../../data/tableKeys/employeeLibraryMemberData\";\n\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { useContext } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\n\nconst EmployeeMemberAction = ({\n  onUpdate = () => {},\n  data = {},\n  actionType,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      if (actionType === \"add\") {\n        await put(PRIVATE_URLS.employee.updateLibraryMember + \"/\" + data._id);\n      } else {\n        await del(PRIVATE_URLS.employee.removeLibraryMember + \"/\" + data._id);\n      }\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {},\n    onSubmit: updateStatus,\n  });\n\n  const actionTitle = actionType === \"add\" ? \"Add Member\" : \"Remove Member\";\n  const actionDescription =\n    actionType === \"add\"\n      ? \"Do you want to add this employee to the library member list?\"\n      : \"Do you want to remove this employee from the library member list?\";\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={actionType === \"add\" ? <Add /> : <RemoveIcon />}\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={actionTitle}\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid spacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <Typography>{actionDescription}</Typography>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function EmployeeLibraryMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [employee, setEmployee] = useState([]);\n  const [nonMember, setNonMember] = useState([]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getEmployee = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const filteredData = data.result\n        .filter((d) => d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          empName: d.basicInfo,\n        }));\n\n      const filteredNonMemberData = data.result\n        .filter((d) => !d?.libraryMember)\n        .map((d) => ({\n          ...d,\n          empName: d.basicInfo,\n        }));\n\n      setEmployee(filteredData);\n      setNonMember(filteredNonMemberData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployee();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Library Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Employee Member List\", \"Employee Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLibraryMemberTableKeys}\n          bodyData={employee}\n          bodyDataModal=\"employee\"\n          CustomAction={(props) => (\n            <EmployeeMemberAction {...props} actionType=\"remove\" />\n          )}\n          onUpdate={getEmployee}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLibraryNonMemberTableKeys}\n          bodyData={nonMember}\n          bodyDataModal=\"employee\"\n          CustomAction={(props) => (\n            <EmployeeMemberAction {...props} actionType=\"add\" />\n          )}\n          onUpdate={getEmployee}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const employeeLibraryHistoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","export const employeeLibraryDueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","export const employeeLibraryIssueTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Library Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Book Id\",\n    key: \"bookId\",\n  },\n  {\n    name: \"Issue Date\",\n    key: \"issueDate\",\n  },\n  {\n    name: \"Due Date\",\n    key: \"dueDate\",\n  },\n];\n","import React, { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLibraryHistoryTableKeys } from \"../../data/tableKeys/employeeLibraryHistroyData\";\nimport { employeeLibraryDueTableKeys } from \"../../data/tableKeys/employeeLibraryDueData\";\nimport { employeeLibraryIssueTableKeys } from \"../../data/tableKeys/employeeLibraryIssueData\";\nimport { Button, Grid, Paper, Stack, Typography, styled } from \"@mui/material\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\n\nconst BookDetailed = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n}));\nexport default function EmployeeIssueReturn() {\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  return (\n    <>\n      <PageHeader title=\"Employee Issue & Return\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Issue List\", \"Due List\", \"History List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <BookDetailed sx={{ padding: 1 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Total Books: 1\n          </Typography>\n          <Typography variant=\"h6\" fontWeight=\"bold\" fontSize={16}>\n            Issued: 1\n          </Typography>\n          <Typography variant=\"h6\" fontSize={16} fontWeight=\"bold\">\n            Due: 1\n          </Typography>\n        </BookDetailed>\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLibraryIssueTableKeys}\n          bodyData={data}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLibraryDueTableKeys}\n          bodyData={data}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={4} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"To Date\"\n                name=\"toDate\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              sx={{ alignSelf: \"center\", mt: 1 }}\n              item\n            >\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Stack spacing={2} direction={{ xs: \"column\", md: \"row\" }}>\n                <Button size=\"small\" variant=\"contained\">\n                  Download\n                </Button>\n                <Button size=\"small\" variant=\"contained\">\n                  Print\n                </Button>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable actions={[]} tableKeys={employeeLibraryHistoryTableKeys} />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const leaveTypeTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Leave Category\",\n    key: \"leaveTypeFor\",\n  },\n  {\n    name: \"Department\",\n    key: \"departmentName\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport { leaveTypeTableKeys } from \"../../data/tableKeys/leaveTypeData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\n// icons\nimport { CloseRounded } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst ListContainer = styled(Box)(() => ({\n  flexWrap: \"nowrap\",\n  overflowY: \"hidden\",\n  overflowX: \"auto\",\n  flexDirection: \"column\",\n  display: \"flex\",\n  margin: \"10px 10px\",\n}));\n\nconst ListItem = styled(Typography)(() => ({\n  fontSize: \"14px\",\n  paddingRight: \"5px\",\n  paddingLeft: \"5px\",\n}));\n\nconst ListItemContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  backgroundColor: \"#f9f9f9\",\n  marginRight: \"10px\",\n  alignItems: \"center\",\n  borderRadius: \"10@s\",\n  minWidth: \"150px\",\n}));\n\nexport default function LeaveType({}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [selectDepartments, setSelectDepartments] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [multipleDepartments, setMultipleDepartments] = useState([]);\n  const [state, setState] = useState({\n    name: \"\",\n    leaveTypeFor: \"\",\n    departments: \"\",\n    autoEarned: false,\n    total: 0,\n    isSpecial: false,\n    canResetCarryForward: false,\n    carryForwardCount: 0,\n    autoEarnCount: 0,\n  });\n\n  let {\n    name,\n    leaveTypeFor,\n    departments,\n    autoEarned,\n    total,\n    isSpecial,\n    canResetCarryForward,\n    carryForwardCount,\n    autoEarnCount,\n  } = state;\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((s) => ({\n          ...s,\n          departmentName: s?.departments.map((d) => d.name).join(\", \"),\n        }))\n      );\n\n      console.log(data.result, \"bbbnvghfhfd\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // console.log(multipleDepartments, \"multipleDepartments\");\n\n  const getDepartments = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setSelectDepartments(\n        data.result.map((d) => ({ label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, [selectedSetting]);\n\n  const AddLeaveType = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let payload = {\n      name,\n      leaveTypeFor,\n      departments: multipleDepartments,\n      autoEarned,\n      total,\n      isSpecial,\n      canResetCarryForward,\n      carryForwardCount,\n      autoEarnCount,\n      schoolId: selectedSetting._id,\n    };\n    // console.log(payload, \"payload\");\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.leaveType.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.leaveType.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setState({\n      name: \"\",\n      leaveTypeFor: \"\",\n      departments: \"\",\n      autoEarned: false,\n      total: 0,\n      isSpecial: false,\n      canResetCarryForward: false,\n      carryForwardCount: 0,\n      autoEarnCount: 0,\n    });\n    setMultipleDepartments([]);\n\n    setOpen(false);\n    setLoading(false);\n  };\n\n  let handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"departments\") {\n      setMultipleDepartments(value);\n    } else {\n      setState({ ...state, [name]: value });\n    }\n  };\n\n  const handleRemoveDepartments = (data) => {\n    let newList = multipleDepartments.filter((t) => t != data);\n    setMultipleDepartments(newList);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setState({\n      name: data.name,\n      leaveTypeFor: data.leaveTypeFor,\n      departments: data.departments.map((d) => d._id),\n      autoEarned: data.autoEarned,\n      total: data.total,\n      isSpecial: data.isSpecial,\n      canResetCarryForward: data.canResetCarryForward,\n      carryForwardCount: data.carryForwardCount,\n      autoEarnCount: data.autoEarnCount,\n    });\n    setMultipleDepartments(data.departments.map((d) => d._id));\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.leaveType.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Leave Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={leaveTypeTableKeys}\n        bodyDataModal=\"leave type\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm title=\"Add Leave Type\" onAddClick={AddLeaveType} />\n\n      {/* ==== add/edit leave type ======== */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n        }}>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle sx={{ fontWeight: 600 }}>\n            {dataToEdit ? \"Update  Leave Type\" : \"Add  Leave Type\"}\n          </DialogTitle>\n          <Divider />\n          <DialogContent p={2}>\n            <Grid rowSpacing={0} columnSpacing={2} container>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormControl fullWidth>\n                  <TextField\n                    required\n                    id=\"basic-standard\"\n                    name=\"name\"\n                    size=\"small\"\n                    value={name}\n                    onChange={handleChange}\n                    label=\"Name\"\n                    sx={{ label: { fontSize: 12 } }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={6} item>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel size=\"small\" required>\n                    Select Leave Type\n                  </InputLabel>\n                  <Select\n                    required={true}\n                    label=\"Select Leave Types\"\n                    labelId=\"demo-simpless-select-filled-label\"\n                    id=\"demo-simple-select-filled-l\"\n                    name=\"leaveTypeFor\"\n                    value={leaveTypeFor}\n                    onChange={handleChange}>\n                    <MenuItem value={\"Student\"}>Student</MenuItem>\n                    <MenuItem value={\"Employee\"}>Employee</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              {state?.leaveTypeFor === \"Employee\" && (\n                <>\n                  <Grid item xs={12} md={12} mt={2}>\n                    <FormControl fullWidth size=\"small\">\n                      <InputLabel size=\"small\" required>\n                        Select Department\n                      </InputLabel>\n                      <Select\n                        label=\"Select Departments\"\n                        labelId=\"demo-simpless-select-filled-label\"\n                        id=\"demo-simple-select-filled-l\"\n                        name=\"departments\"\n                        value={multipleDepartments || \"\"}\n                        onChange={handleChange}\n                        multiple>\n                        {selectDepartments.map((d) => (\n                          <MenuItem key={d.value} value={d.value}>\n                            {d.label}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n\n                    <ListContainer>\n                      {multipleDepartments.map((m) => (\n                        <ListItemContainer key={m}>\n                          <ListItem component=\"span\">\n                            {\n                              selectDepartments.filter((d) => d.value == m)[0]\n                                ?.label\n                            }\n                          </ListItem>\n                          <IconButton\n                            color=\"error\"\n                            onClick={() => handleRemoveDepartments(m)}>\n                            <CloseRounded fontSize=\"small\" />\n                          </IconButton>\n                        </ListItemContainer>\n                      ))}\n                    </ListContainer>\n                  </Grid>\n\n                  <Grid item xs={12} sm={12} md={12}>\n                    <FormControl required fullWidth size=\"small\">\n                      <RadioGroup\n                        size=\"small\"\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"isSpecial\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={isSpecial}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Special Type:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            value={true}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            value={false}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"total\"\n                        value={total}\n                        onChange={handleChange}\n                        label=\"Total\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} mt={2}>\n                    <FormControl fullWidth size=\"small\">\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"autoEarned\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={autoEarned}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Leave Auto Earned:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            value={true}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            size=\"small\"\n                            value={false}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"autoEarnCount\"\n                        value={autoEarnCount}\n                        onChange={handleChange}\n                        label=\"Enter Auto Earn Count\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} mt={2}>\n                    <FormControl fullWidth>\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"canResetCarryForward\"\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                        value={canResetCarryForward}\n                        onChange={handleChange}>\n                        <FormLabel\n                          id=\"demo-row-radio-buttons-group-label\"\n                          sx={{ fontSize: \"15px\", fontWeight: 600 }}>\n                          Is Carryforward Reset:\n                        </FormLabel>\n                        <Stack direction=\"row\" marginLeft={2}>\n                          <FormControlLabel\n                            size=\"small\"\n                            value={true}\n                            sx={{ fontSize: 15 }}\n                            control={<Radio size=\"small\" />}\n                            label=\"Yes\"\n                          />\n                          <FormControlLabel\n                            size=\"small\"\n                            value={false}\n                            sx={{ fontSize: 15 }}\n                            control={<Radio size=\"small\" />}\n                            label=\"No\"\n                          />\n                        </Stack>\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} sm={12} md={12} item>\n                    <FormControl fullWidth size=\"small\">\n                      <TextField\n                        required\n                        id=\"basic-standard\"\n                        size=\"small\"\n                        name=\"carryForwardCount\"\n                        value={carryForwardCount}\n                        onChange={handleChange}\n                        label=\"Enter Carryforward Count\"\n                        sx={{ label: { fontSize: 12 } }}\n                        type=\"number\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Close\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              loading={loading}\n              variant=\"contained\"\n              type=\"submit\">\n              {dataToEdit ? \"Update\" : \"Submit\"}\n            </LoadingButton>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","export const studentLeaveTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveType\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"numberOfDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n  },\n  {\n    name: \"Status\",\n    key: \"status\",\n  },\n];\n","import React, { useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { studentLeaveTableKeys } from \"../../data/tableKeys/studentLeaveData\";\n\nexport default function StudentsLeave() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Student Leave\" />\n\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentLeaveTableKeys}\n        bodyDataModal=\"student leave\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const employeeLeaveManageTableKeys = [\n  {\n    name: \"Name\",\n    key: \"applierRoleName\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveTypeName\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"totalDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n    isDate: true,\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n    isDate: true,\n  },\n  {\n    name: \"Status\",\n    key: \"leaveStatus\",\n  },\n];\n","/** @format */\n\nexport const employeeLeaveTableKeys = [\n  {\n    name: \"Name\",\n    key: \"applierRoleName\",\n  },\n  {\n    name: \"Leave Type\",\n    key: \"leaveTypeName\",\n  },\n  {\n    name: \"Number Of Days\",\n    key: \"totalDays\",\n  },\n  {\n    name: \"Start Date\",\n    key: \"startDate\",\n    isDate: true,\n  },\n  {\n    name: \"End Date\",\n    key: \"endDate\",\n    isDate: true,\n  },\n  {\n    name: \"Status\",\n    key: \"leaveStatus\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { employeeLeaveManageTableKeys } from \"../../data/tableKeys/employeeLeaveManageData\";\nimport { employeeLeaveTableKeys } from \"../../data/tableKeys/employeeLeaveListData\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport AddForm from \"../../forms/AddForm\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useContext } from \"react\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nconst LeaveData = styled(Paper)(({ theme }) => ({\n  height: \"80px\",\n  padding: \"20px\",\n  textAlign: \"center\",\n}));\n\nconst DataContainer = styled(Grid)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"10px\",\n}));\n\nconst Leave_Options = [\n  { label: \"FullDay\", value: \"fullday\" },\n  { label: \"First half\", value: \"firstHalf\" },\n  { label: \"Second half\", value: \"secondHalf\" },\n];\n\nconst CustomAction = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [loadingApprove, setLoadingApprove] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n\n  const updateApproveStatus = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n      };\n      setLoadingApprove(true);\n      await put(\n        PRIVATE_URLS.leaveApplication.approveLeave + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      setLoadingApprove(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingApprove(false);\n    }\n  };\n\n  const updateRejectStatus = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.leaveApplication.rejectLeave + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        {data.leaveStatus === \"pending\" || data.leaveStatus === \"rejected\" ? (\n          <LoadingButton\n            loading={loadingApprove}\n            size=\"small\"\n            onClick={updateApproveStatus}\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        ) : null}\n        {data.leaveStatus === \"pending\" || data.leaveStatus === \"approved\" ? (\n          <LoadingButton\n            loading={loading}\n            size=\"small\"\n            onClick={updateRejectStatus}\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        ) : null}\n      </Stack>\n    </>\n  );\n};\n\nexport default function EmployeeLeave() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectImg, setSelectImg] = useState([]);\n  const [totalDays, setotalDays] = useState(0);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [leaveApplication, setLeaveApplication] = useState([]);\n  const [leaveEmployeeApplication, setLeaveEmployeeApplications] = useState([]);\n  const [range, setRange] = useState([]);\n  const [eployeeLeaveCredits, setEployeeLeaveCredits] = useState([]);\n\n  const AddLeave = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getLeaveApplication = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveApplication.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveApplication(\n        data.result.map((s) => ({ ...s, leaveTypeName: s.leaveType.name }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const geteEployeeLeaveCredits = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.leaveApplication.employeeLeaveCredits,\n        {\n          params: { schoolId: selectedSetting._id },\n        }\n      );\n      setEployeeLeaveCredits(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveEmployeeApplications = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.leaveApplication.listEmployeeApplications,\n        {\n          params: { schoolId: selectedSetting._id },\n        }\n      );\n      setLeaveEmployeeApplications(\n        data.result.map((s) => ({ ...s, leaveTypeName: s.leaveType.name }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveType = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveTypes(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getLeaveType();\n    getLeaveApplication();\n    geteEployeeLeaveCredits();\n    getLeaveEmployeeApplications();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n    formData.append(\"schoolId\", selectedSetting._id);\n    formData.append(\"leaveTypeId\", values.leaveType);\n    formData.append(\"startDate\", dayjs(values.startDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"endDate\", dayjs(values.endDate).format(\"YYYY-MM-DD\"));\n    formData.append(\"subject\", values.subject);\n    formData.append(\"description\", values.description);\n    formData.append(\"totalDays\", totalDays);\n    selectImg.forEach((file) => formData.append(\"file\", file));\n\n    try {\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.leaveApplication.create,\n        formData\n      );\n      getLeaveEmployeeApplications();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      leaveType: \"\",\n      startDate: null,\n      endDate: null,\n      subject: \"\",\n      description: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  let handleNumberOfDay = (e, v) => {\n    const { name, value } = e.target;\n\n    const indexOfV = range.indexOf(v);\n    let updatedList = range.map((item, index) =>\n      index == indexOfV ? { ...item, value: value } : item\n    );\n    setRange(updatedList);\n  };\n\n  useEffect(() => {\n    let number = 0;\n    for (let item of range) {\n      if (item.value) {\n        if (item.value === \"fullday\") {\n          number += 1;\n        } else {\n          number += 0.5;\n        }\n      }\n    }\n    setotalDays(number);\n  }, [range]);\n\n  useEffect(() => {\n    if (entryFormik.values.endDate && entryFormik.values.startDate) {\n      const start = new Date(entryFormik.values.startDate);\n      const end = new Date(entryFormik.values.endDate);\n      if (start <= end) {\n        const currentDate = new Date(start);\n        let list = [];\n        while (currentDate <= end) {\n          let newItem = {\n            value: \"\",\n            date: new Date(currentDate).toLocaleDateString(),\n          };\n          list.push(newItem);\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n        setRange(list);\n      }\n    }\n  }, [entryFormik.values.endDate, entryFormik.values.startDate]);\n\n  return (\n    <>\n      <PageHeader title=\"Employee Leave\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Leave List\", \"Leave Manage\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <DataContainer container spacing={2}>\n          <Grid item xs={4} md={4} lg={2}>\n            <LeaveData>\n              <Typography fontSize=\"15px\" color=\"#196838\">\n                Total taken :89\n              </Typography>\n            </LeaveData>\n          </Grid>\n          {eployeeLeaveCredits.map((data) => (\n            <Grid item xs={4} md={4} lg={2}>\n              <LeaveData>\n                <Typography fontSize=\"15px\">\n                  {data.name}:{data.total}\n                </Typography>\n                <Typography fontSize=\"15px\">\n                  {\" \"}\n                  Total taken :{data.totalTaken ? data.totalTaken : 0}\n                </Typography>\n              </LeaveData>\n            </Grid>\n          ))}\n        </DataContainer>\n\n        <CustomTable\n          actions={[]}\n          tableKeys={employeeLeaveTableKeys}\n          bodyData={leaveEmployeeApplication}\n          bodyDataModal=\"leave\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"custom\"]}\n          tableKeys={employeeLeaveManageTableKeys}\n          bodyData={leaveApplication}\n          bodyDataModal=\"leave\"\n          CustomAction={CustomAction}\n          onUpdate={getLeaveApplication}\n        />\n      </TabPanel>\n\n      <AddForm title=\"Add Employee Leave\" onAddClick={AddLeave} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Employee Leave\" : \"Add Employee Leave\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"leaveType\"\n              label=\"Leave Type\"\n              required={true}\n              options={leaveTypes}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"startDate\"\n              label=\"Start Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"endDate\"\n              label=\"End Date\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput formik={entryFormik} name=\"subject\" label=\"Subject\" />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FileSelect\n              name=\"image\"\n              label=\"Select File\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={selectImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={6}\n            sx={{\n              margin: \"15px 0px\",\n            }}>\n            <Typography>Number of days : {totalDays}</Typography>\n          </Grid>\n          {!entryFormik.values.endDate ? (\n            <></>\n          ) : (\n            <Grid item xs={12} md={12} lg={12}>\n              <Typography required>Information :</Typography>\n              {!entryFormik.values.endDate ? (\n                <></>\n              ) : (\n                <Box\n                  style={{\n                    height: \"100px\",\n                    overflow: \"scroll\",\n                  }}>\n                  {range.map((date, index) => (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        gap: \"10px\",\n                      }}\n                      key={index}>\n                      <Typography>{date.date}</Typography>\n\n                      <CustomSelect\n                        name=\"totalDays\"\n                        value={date.value}\n                        onChange={(e) => handleNumberOfDay(e, date)}\n                        options={Leave_Options}\n                      />\n                    </Box>\n                  ))}\n                </Box>\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\n\nconst Type_Options = [\n  {\n    label: \"Student\",\n    value: \"student\",\n  },\n  {\n    label: \"Employee\",\n    value: \"employee\",\n  },\n];\n\nexport default function LeaveReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loadingPdf, setLoadingPdf] = useState(false);\n  const [loadingExcel, setLoadingExcel] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear:\n              entryFormik.values.academicYear || formik.values.academicYear,\n            \"academicInfo.class\":\n              entryFormik.values.class || formik.values.class,\n            \"academicInfo.section\":\n              entryFormik.values.section || formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n      formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLeaveType = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.leaveType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setLeaveTypes(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(\n        data.result.map((r) => ({\n          ...r,\n          label: r.name,\n          value: r._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"role\", data.result[0]?._id);\n      formik.setFieldValue(\"role\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role || formik.values.role,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"employee\", data.result[0]?._id);\n      formik.setFieldValue(\"employee\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleGetPrintPdf = async (values) => {\n    try {\n      setLoadingPdf(true);\n      const getPdf = await get(PRIVATE_URLS.leaveApplication.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          userType: values.userType,\n          academicYearId: values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"leave_details.pdf\");\n\n      setLoadingPdf(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingPdf(false);\n    }\n  };\n\n  const handleGetDownloadExcel = async (values) => {\n    try {\n      setLoadingExcel(true);\n      const getExcel = await get(PRIVATE_URLS.leaveApplication.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          userType: values.userType,\n          academicYearId: values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"leave_details.xlsx\"\n      );\n      setLoadingExcel(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingExcel(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      type: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetDownloadExcel,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n      type: \"\",\n      userType: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetPrintPdf,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n    getRoles();\n    getLeaveType();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      (entryFormik.values.academicYear &&\n        entryFormik.values.class &&\n        entryFormik.values.section) ||\n      (formik.values.academicYear &&\n        formik.values.class &&\n        formik.values.section)\n    ) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n    entryFormik.values.section,\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (entryFormik.values.role || formik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role, formik.values.role]);\n\n  return (\n    <>\n      <PageHeader title=\"Leave Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Summary\", \"Leave Planner\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Select Type\"\n                options={Type_Options}\n              />\n            </Grid>\n            {entryFormik.values.type === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={entryFormik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n            {entryFormik.values.type === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={entryFormik}\n                    label=\"Select Employee\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loadingExcel}\n                onClick={handleGetDownloadExcel}\n                size=\"small\"\n                variant=\"contained\">\n                Download\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={formik}\n                label=\"Select Type\"\n                options={leaveTypes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={formik}\n                label=\"Select User Type\"\n                options={Type_Options}\n              />\n            </Grid>\n            {formik.values.userType === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={formik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={formik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={formik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n            {formik.values.userType === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={formik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={formik}\n                    label=\"Select Employee\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loadingPdf}\n                onClick={handleGetPrintPdf}\n                size=\"small\"\n                variant=\"contained\">\n                Print\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const itemTableKeys = [\n  {\n    name: \"Item Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Department\",\n    key: \"departmentName\",\n  },\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Brand\",\n    key: \"brand\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { itemTableKeys } from \"../../data/tableKeys/itemData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function Item() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [departments, setDepartments] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [PdfLoading, setPdfLoading] = useState(false);\n  const [excelLoading, setExcelLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(\n        data.result.map((data) => ({\n          ...data,\n          departmentName: data?.department?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartments = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartments(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"department\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.item.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.item.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      department: dataToEdit?.department || \"\",\n      brand: dataToEdit?.brand || \"\",\n      itemId: dataToEdit?.itemId || \"\",\n      description: dataToEdit?.description || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit({ ...data, department: data.department._id });\n    setValue(1);\n  };\n\n  // pfd download\n  const handlePdfDownload = async (e) => {\n    setPdfLoading(true);\n\n    try {\n      const response = await get(PRIVATE_URLS.item.downloadPdf, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      const uri = URL.createObjectURL(response.data);\n      window.open(uri, \"_blank\");\n    } catch (error) {\n      console.log(error);\n    }\n    setPdfLoading(false);\n  };\n\n  // excel download\n  const handleExcelDownload = async (e) => {\n    setExcelLoading(true);\n\n    try {\n      const getExcel = await get(PRIVATE_URLS.item.downloadExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"Inventory_Items\"\n      );\n    } catch (error) {\n      console.error(error);\n    }\n    setExcelLoading(false);\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  return (\n    <>\n      <PageHeader title=\"Item\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Item List\",\n          dataToEdit && value != 0 ? \"Edit Item\" : \"Add Item\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <LoadingButton\n          type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ my: 2 }}\n          loading={PdfLoading}\n          onClick={handlePdfDownload}>\n          PDF\n        </LoadingButton>\n        <LoadingButton\n          type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ ml: 2, my: 2 }}\n          loading={excelLoading}\n          onClick={handleExcelDownload}>\n          Excel\n        </LoadingButton>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Items\"\n          bodyData={data}\n          tableKeys={itemTableKeys}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Item name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"department\"\n                formik={entryFormik}\n                label=\"Select Department\"\n                options={departments}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"brand\"\n                formik={entryFormik}\n                label=\"Brand\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"itemId\"\n                formik={entryFormik}\n                label=\"item Id\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={false}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Description\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Item name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"department\"\n                formik={entryFormik}\n                label=\"Select Department\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"brand\"\n                formik={entryFormik}\n                label=\"brand\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"id\"\n                formik={entryFormik}\n                label=\"Item Id\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={false}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Description\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const VendorTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { VendorTableKeys } from \"../../data/tableKeys/vendorData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport avatar from \"../../assets/images/avatar.jpg\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n  display: \"flex\",\n\n  justifyContent: \"center\",\n  alignItems: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nexport default function Vendor() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"pppp\");\n\n      setData(\n        data.result.map((data) => ({\n          ...data,\n          name: data?.basicInfo?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/Update action\n  const handleCreateOrUpdate = async (values) => {\n    console.log(values, \"values\");\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          category: values.category,\n          phone: values.phone,\n          email: values.email,\n          gstNumber: values.gstNumber,\n          dealerName: values.dealerName,\n          dealerPhoneNumber: values.dealerPhoneNumber,\n          website: values.website,\n        },\n        addressInfo: {\n          address: values.address,\n          state: values.state,\n          city: values.city,\n          zipCode: values.zipCode,\n        },\n        bankInfo: {\n          bankName: values.bankName,\n          accountNumber: values.accountNumber,\n          ifscCode: values.ifscCode,\n          branchName: values.branchName,\n        },\n\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      logo.forEach((file) => formData.append(\"photo\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vendor.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vendor.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      category: dataToEdit?.basicInfo?.category || \"\",\n      name: dataToEdit?.basicInfo?.name || \"\",\n      phone: dataToEdit?.basicInfo?.phone || \"\",\n      email: dataToEdit?.basicInfo?.email || \"\",\n      gstNumber: dataToEdit?.basicInfo?.gstNumber || \"\",\n      dealerName: dataToEdit?.basicInfo?.dealerName || \"\",\n      dealerPhoneNumber: dataToEdit?.basicInfo?.dealerPhoneNumber || \"\",\n      website: dataToEdit?.basicInfo?.website || \"\",\n      address: dataToEdit?.addressInfo?.address || \"\",\n      state: dataToEdit?.addressInfo?.state || \"\",\n      city: dataToEdit?.addressInfo?.city || \"\",\n      zipCode: dataToEdit?.addressInfo?.zipCode || \"\",\n      bankName: dataToEdit?.bankInfo?.bankName || \"\",\n      accountNumber: dataToEdit?.bankInfo?.accountNumber || \"\",\n      ifscCode: dataToEdit?.bankInfo?.ifscCode || \"\",\n      branchName: dataToEdit?.bankInfo?.branchName || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n    setLogo([]);\n  };\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"photo\") {\n        setLogo(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vendor\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Vendor List\",\n          dataToEdit && value != 0 ? \"Edit Vendor\" : \"Add Vendor\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Vendor\"\n          bodyData={data}\n          tableKeys={VendorTableKeys}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={12} lg={12}>\n              <BasicData>\n                <MuiBox>\n                  <img\n                    src={\n                      logo.length > 0\n                        ? URL.createObjectURL(logo[0])\n                        : dataToEdit?.photo\n                    }\n                    style={{\n                      width: \"100px\",\n                      height: \"100px\",\n                      objectFit: \"contain\",\n                    }}\n                    alt=\"logo\"\n                  />\n                </MuiBox>\n\n                <Grid\n                  container\n                  spacing={2}\n                  display=\"flex\"\n                  justifyContent=\"center\">\n                  <Grid xs={12} md={6} lg={3} item>\n                    {\" \"}\n                    <FileSelect\n                      name=\"photo\"\n                      multi={false}\n                      label=\"Select Logo\"\n                      onChange={(e) => handleChangePhoto(e, \"photo\")}\n                      previousFile={dataToEdit?.photo}\n                      customOnChange={true}\n                      selectedFiles={logo}\n                      onRemove={(fileName) => handleRemoveFile(fileName)}\n                      accept=\"image/jpeg, image/png\"\n                    />\n                  </Grid>\n                </Grid>\n              </BasicData>\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Basic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"category\"\n                formik={entryFormik}\n                label=\"Category\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"phone\"\n                formik={entryFormik}\n                label=\"Phone no.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"email\"\n                formik={entryFormik}\n                label=\"Email\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"gstNumber\"\n                formik={entryFormik}\n                label=\"GST Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"dealerName\"\n                formik={entryFormik}\n                label=\"Dealer Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"dealerPhoneNumber\"\n                formik={entryFormik}\n                label=\"Dealer Phone No.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"website\"\n                formik={entryFormik}\n                label=\"Vendor Website\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Address Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"address\"\n                formik={entryFormik}\n                label=\"Address\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"city\"\n                formik={entryFormik}\n                label=\"City\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"state\"\n                formik={entryFormik}\n                label=\"State\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"zipCode\"\n                formik={entryFormik}\n                label=\"Zip Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Bank Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"bankName\"\n                formik={entryFormik}\n                label=\"Bank Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"accountNumber\"\n                formik={entryFormik}\n                label=\"Account No\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"ifscCode\"\n                formik={entryFormik}\n                label=\"IFSC Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"branchName\"\n                formik={entryFormik}\n                label=\"Branch Name\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 2, fontWeight: \"bold\" }}>\n                Logo:\n              </Typography>\n              <FormInput\n                required={true}\n                name=\"logo\"\n                formik={entryFormik}\n                label=\"logo\"\n                type=\"file\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Basic Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"category\"\n                formik={entryFormik}\n                label=\"Category\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"contactNumber\"\n                formik={entryFormik}\n                label=\"Phone no.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"email\"\n                formik={entryFormik}\n                label=\"Email\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"gst\"\n                formik={entryFormik}\n                label=\"GST Number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"dealerName\"\n                formik={entryFormik}\n                label=\"Dealer Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"dealerContact\"\n                formik={entryFormik}\n                label=\"Dealer Phone No.\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"vendorWebsite\"\n                formik={entryFormik}\n                label=\"Vendor Website\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Address Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"address\"\n                formik={entryFormik}\n                label=\"Address\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"city\"\n                formik={entryFormik}\n                label=\"City\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"state\"\n                formik={entryFormik}\n                label=\"State\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"zipCode\"\n                formik={entryFormik}\n                label=\"Zip Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}>\n                Bank Information\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"bankName\"\n                formik={entryFormik}\n                label=\"Bank Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"accountNo\"\n                formik={entryFormik}\n                label=\"Account No\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"ifsc\"\n                formik={entryFormik}\n                label=\"IFSC Code\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"branchName\"\n                formik={entryFormik}\n                label=\"Branch Name\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const TransactionTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"id\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  { name: \"Date\", key: \"date\" },\n  { name: \"Status\", key: \"status\" },\n];\n","/** @format */\n\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { TransactionTableKeys } from \"../../data/tableKeys/transactionData\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst paymenyModes = [\n  { label: \"Cash\", value: \"Cash\" },\n  { label: \"Upi\", value: \"Upi\" },\n  { label: \"Netbanking\", value: \"Netbanking\" },\n  { label: \"Cheque\", value: \"Cheque\" },\n  { label: \"Card\", value: \"Card\" },\n  { label: \"Others\", value: \"Others\" },\n  { label: \"Null\", value: \"Null\" },\n];\n\nconst types = [\n  { label: \"In\", value: \"In\" },\n  { label: \"Out\", value: \"Out\" },\n];\n\nconst purposes = [\n  { label: \"Inhouse\", value: \"Inhouse\" },\n  { label: \"Damage\", value: \"Damage\" },\n  { label: \"Purchase\", value: \"Purchase\" },\n  { label: \"Sell\", value: \"Sell\" },\n  { label: \"Return\", value: \"Return\" },\n  { label: \"InventoryUpdate\", value: \"InventoryUpdate\" },\n];\n\nconst fromTypes = [\n  { label: \"Vendor\", value: \"Vendor\" },\n  { label: \"School\", value: \"School\" },\n];\n\nconst status = [\n  { label: \"Pending\", value: \"Pending\" },\n  { label: \"Completed\", value: \"Completed\" },\n  { label: \"Cancelled\", value: \"Cancelled\" },\n];\n\nconst toTypes = [\n  { label: \"School\", value: \"School\" },\n  { label: \"Vendor\", value: \"Vendor\" },\n  { label: \"Student\", value: \"Student\" },\n  { label: \"Employee\", value: \"Employee\" },\n];\n\nexport default function InOutTransaction() {\n  const { settings, selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectInvoice, setSelectInvoice] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [selectSchool, setSelectSchool] = useState(\n    settings.map((s) => ({ label: s.name, value: s._id }))\n  );\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      // setData(\n      //   data.result.map((data) => ({\n      //     ...data,\n      //     departmentName: data?.department?.name,\n      //   }))\n      // );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get items\n  const getItems = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list);\n      // console.log(data, \"haha\");\n      setItems(\n        data.result.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"studentName\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get vendors\n  const getVendors = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vendor.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(data, \"vendors\");\n      setVendors(\n        data.result.map((d) => ({\n          label: d.addedBy?.basicInfo?.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"vendor\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get roles\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"role\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get employee\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role,\n          },\n        },\n      });\n      setEmployees(\n        data.result.map((emp) => ({\n          label: emp?.basicInfo?.name,\n          value: emp._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"employee\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/Update action\n  const handleCreateOrUpdate = async (values) => {\n    console.log(values, \"values\");\n    try {\n      const payload = {\n        ...values,\n        from: values.fromType === \"vendor\" ? values.vendor : values.school,\n        // toType: values.toType===\"vendor\" ? values.\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectInvoice.forEach((file) => formData.append(\"invoice\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vendor.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vendor.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: dataToEdit?.item || \"\",\n      pricePerItem: dataToEdit?.pricePerItem || \"\",\n      quantity: dataToEdit?.quantity || \"\",\n      trasactionMode: dataToEdit?.trasactionMode || \"\",\n      type: dataToEdit?.type || \"\",\n      purpose: dataToEdit?.purpose || \"\",\n      fromType: dataToEdit?.fromType || \"\",\n      status: dataToEdit?.status || \"\",\n      toType: dataToEdit?.toType || \"\",\n      vendor: dataToEdit?.vendor || \"\",\n      section: dataToEdit?.section || \"\",\n      class: dataToEdit?.class || \"\",\n      employee: dataToEdit?.employee || \"\",\n      role: dataToEdit?.role || \"\",\n      studentName: dataToEdit?.studentName || \"\",\n      school: dataToEdit?.school || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getData();\n    getItems();\n    getVendors();\n    getClasses();\n    getRoles();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.section, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role]);\n\n  const handleClose = () => {\n    setValue(0);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"invoice\") {\n        setSelectInvoice(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectInvoice(selectInvoice.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Transaction\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Transaction List\", \"Make Transaction\", \"Edit Transaction\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Transaction\"\n          bodyData={data}\n          tableKeys={TransactionTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mb: 1, fontWeight: \"bold\" }}>\n                Item Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Item\"\n                options={items}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"pricePerItem\"\n                formik={entryFormik}\n                label=\"Price Per Item\"\n                type=\"number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"trasactionMode\"\n                formik={entryFormik}\n                label=\"Mode of Payment\"\n                options={paymenyModes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Type\"\n                options={types}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"purpose\"\n                formik={entryFormik}\n                label=\"Purpose\"\n                options={purposes}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Between\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"From Type\"\n                options={fromTypes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"To Type\"\n                options={toTypes}\n              />\n            </Grid>\n            {/* <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Transaction Status\"\n                options={status}\n              />\n            </Grid> */}\n            {(entryFormik.values.fromType === \"Vendor\" ||\n              entryFormik.values.toType === \"Vendor\") && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"vendor\"\n                  formik={entryFormik}\n                  label=\"Vendors\"\n                  options={vendors}\n                />\n              </Grid>\n            )}\n            {entryFormik.values.toType === \"Student\" && (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"studentName\"\n                    formik={entryFormik}\n                    label=\"Select Student Name\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {(entryFormik.values.fromType === \"School\" ||\n              entryFormik.values.toType === \"School\") && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"school\"\n                  formik={entryFormik}\n                  label=\"Select School\"\n                  options={selectSchool}\n                />\n              </Grid>\n            )}\n            {entryFormik.values.toType === \"Employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Select Role\"\n                    options={roles}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={4} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employee\"\n                    formik={entryFormik}\n                    label=\"Select Employees\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FileSelect\n                name=\"invoice\"\n                label=\"Select Invoice\"\n                onChange={(e) => handleChangeFiles(e, \"invoice\")}\n                customOnChange={true}\n                selectedFiles={selectInvoice}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <LoadingButton\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                sx={{ ml: 2 }}>\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", mb: 1, fontWeight: \"bold\" }}>\n                Item Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Item\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"price\"\n                formik={entryFormik}\n                label=\"Price per Item\"\n                type=\"number\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Details\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"mode\"\n                formik={entryFormik}\n                label=\"Mode of Payment\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={entryFormik}\n                label=\"Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"purpose\"\n                formik={entryFormik}\n                label=\"Purpose\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"start\"\n                sx={{ fontSize: \"15px\", fontWeight: \"bold\" }}>\n                Transaction Between\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Transaction Status\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"vender\"\n                formik={entryFormik}\n                label=\"Venders\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"section\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"studentName\"\n                formik={entryFormik}\n                label=\"Student Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={12} item>\n              <Button size=\"small\" variant=\"outlined\" sx={{ my: 2 }}>\n                Upload Invoice\n              </Button>\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Update\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const stockListTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n  {\n    name: \"Total Stock\",\n    key: \"totalStock\",\n  },\n];\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function OverviewTable() {\n  return (\n    <>\n      <TableContainer\n        sx={{\n          display: \"grid\",\n          justifyContent: \"center\",\n          my: 2,\n        }}\n      >\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h6\"\n          component=\"div\"\n          textAlign=\"start\"\n          sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}\n        >\n          Overview\n        </Typography>\n        {/* ========= Desktop view =============== */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"none\",\n              md: \"inline-block\",\n              lg: \"inline-block\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0} Qty\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\", width: 300 }}\n              >\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n\n        {/* ======== Tablet view table ============ */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"none\",\n              sm: \"inline-block\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0}\n                Qty\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n\n        {/* ======== Mobile view table ============ */}\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            display: {\n              xs: \"inline-block\",\n              sm: \"none\",\n              md: \"none\",\n              lg: \"none\",\n            },\n          }}\n        >\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Purchase\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Issue\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Return\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inhouse\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Damage\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Sell\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Quantity\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                {0}\n                {\"  \"}Qty\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n                Total Inventory Amount\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100}>\n                <CurrencyRupeeIcon fontSize=\"small\" />\n                {0}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { stockListTableKeys } from \"../../data/tableKeys/stockListData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport OverviewTable from \"./OverviewTable\";\n\nexport default function StockList() {\n  const [data, setData] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Item Stock\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n          <Grid xs={12} md={12} lg={12} style={{ alignSelf: \"center\" }} item>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Sell\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Issue\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Add Item\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              variant=\"contained\"\n              sx={{ mr: 2, mt: 1 }}\n            >\n              Add Vendor\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      {/* overview table component ======= */}\n      <Grid xs={12} md={12} lg={12} style={{ alignSelf: \"center\" }} item>\n        <Button size=\"small\" variant=\"contained\" sx={{ mr: 2, mt: 1 }}>\n          Excel\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ mr: 2, mt: 1 }}>\n          PDF\n        </Button>\n      </Grid>\n      <OverviewTable />\n      {/* ================================ */}\n      <Typography\n        id=\"modal-modal-title\"\n        variant=\"h6\"\n        component=\"div\"\n        textAlign=\"start\"\n        sx={{ fontSize: \"15px\", mt: 1, fontWeight: \"bold\" }}\n      >\n        List of Stocks\n      </Typography>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Item stock\"\n        bodyData={data}\n        tableKeys={stockListTableKeys}\n      />\n    </>\n  );\n}\n","export const issueDetailTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"itemName\",\n  },\n  {\n    name: \"Issuer Name\",\n    key: \"issueName\",\n  },\n  {\n    name: \"Quantity\",\n    key: \"quantity\",\n  },\n  {\n    name: \"Total Price\",\n    key: \"totalPrice\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { issueDetailTableKeys } from \"../../data/tableKeys/issueDetailData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst status = [\n  { label: \"Returned\", value: \"Returned\" },\n  { label: \"Pending\", value: \"Pending\" },\n  { label: \"Issued\", value: \"Issued\" },\n  { label: \"Deleted\", value: \"Deleted\" },\n];\n\nexport default function Issue() {\n  const { settings, selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [selectSchool, setSelectSchool] = useState(\n    settings.map((s) => ({ label: s.name, value: s._id }))\n  );\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  // get items\n  const getItems = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.item.list);\n      // console.log(data, \"haha\");\n      setItems(\n        data.result.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: \"\",\n      quantity: \"\",\n      issueStatus: \"\",\n      fromType: \"\",\n      school: \"\",\n      toType: \"\",\n      employeeName: \"\",\n      note: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getItems();\n  }, [selectedSetting._id]);\n\n  const handleClose = () => {\n    setValue(0);\n    getItems();\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Issue Details\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"List of Issue\", \"Issue\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Issue\"\n          bodyData={data}\n          tableKeys={issueDetailTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Select Item\"\n                options={items}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Quantity\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"status\"\n                formik={entryFormik}\n                label=\"Select Issue Status\"\n                options={status}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"Select From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"Select School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"Select To Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"employeeName\"\n                formik={entryFormik}\n                label=\"Select Employee Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                variant=\"contained\"\n                onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Issue\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const sellDetailTableKeys = [\n  {\n    name: \"Item Id\",\n    key: \"itemId\",\n  },\n  {\n    name: \"Item Name\",\n    key: \"itemName\",\n  },\n  {\n    name: \"Sellar Name\",\n    key: \"issueName\",\n  },\n  {\n    name: \"Total Quantity\",\n    key: \"quantity\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { sellDetailTableKeys } from \"../../data/tableKeys/sellDetailData\";\n\nexport default function Sell() {\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      item: \"\",\n      quantity: \"\",\n      SellStatus: \"\",\n      fromType: \"\",\n      school: \"\",\n      toType: \"\",\n      employeeName: \"\",\n      note: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Sell Details\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Sold List\", \"Sell\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button size=\"small\" variant=\"contained\" sx={{ my: 2 }}>\n          PDF\n        </Button>\n        <Button size=\"small\" variant=\"contained\" sx={{ ml: 2, my: 2 }}>\n          Excel\n        </Button>\n        <CustomTable\n          actions={[\"edit\"]}\n          bodyDataModal=\"Sell\"\n          bodyData={data}\n          tableKeys={sellDetailTableKeys}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"item\"\n                formik={entryFormik}\n                label=\"Select Item\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"quantity\"\n                formik={entryFormik}\n                label=\"Select Quantity\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"sellStatus\"\n                formik={entryFormik}\n                label=\"Select Sell Status\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"fromType\"\n                formik={entryFormik}\n                label=\"Select From Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"school\"\n                formik={entryFormik}\n                label=\"Select School\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"toType\"\n                formik={entryFormik}\n                label=\"Select To Type\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"employeeName\"\n                formik={entryFormik}\n                label=\"Select Employee Name\"\n                // options={}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"note\"\n                formik={entryFormik}\n                label=\"Note\"\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item\n            >\n              <Button size=\"small\" color=\"error\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ ml: 2 }}>\n                Sell\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\n\nconst Heading = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  marginTop: \"40px\",\n  textDecoration: \"underline\",\n}));\n\nconst Content = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  padding: \"0 5px\",\n  display: \"inline\",\n  fontWeight: \"bold\",\n  textDecoration: \"underline\",\n  fontFamily: \"Roboto ,sans-serif\",\n}));\n\nconst Container = styled(Box)(({ theme }) => ({\n  width: \"100%\",\n  marginTop: \"10px\",\n  border: \"1px solid black\",\n  padding: \"20px\",\n}));\n\nconst MuiBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: \"10px\",\n  marginTop: \"20px\",\n}));\n\nconst DateContaner = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  padding: \"20px\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n}));\n\nconst TextOuterContent = styled(Box)(({ theme }) => ({\n  padding: \"20px\",\n  display: \"flex\",\n  textIndent: \"50px\",\n}));\n\nexport default function StudyCertificate() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [openBulkIssue, setOpenBulkIssue] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingDownload, setLoadingDownload] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [fromDate, setFromDate] = useState(dayjs(Date.now()));\n  const [toDate, setToDate] = useState(dayjs(Date.now()));\n  const [sections, setSections] = useState([]);\n\n  // console.log(selectedData, \"selectedData\");\n  // console.log(students, \"students\");\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d,\n          id: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitCertificate = async (values) => {\n    console.log(values, \"bfyy\");\n    setLoading(true);\n\n    try {\n      setSelectedData({\n        ...selectedData,\n        fatherName: values?.student?.fatherInfo?.name,\n        academicYearFrom: values?.student?.academicYear?.from,\n        academicYearTo: values?.student?.academicYear?.to,\n        academicId: values?.academicYear,\n        studentName: values?.student?.basicInfo.name,\n        studentId: values?.student?._id,\n        currentClass: values?.student?.academicInfo.class.name,\n        dob: values?.student?.basicInfo.dob,\n        grNo: values?.student?.basicInfo.grNo,\n        studentPhoto: values?.student?.photo,\n        schoolName: values?.student?.school?.name,\n        schoolAddress: values?.student?.school?.address,\n        schoolLogo: values?.student?.school?.logo,\n        category: values?.student?.basicInfo.category,\n        address: values?.student?.contactInfo.presentAddress,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleSubmitCertificate,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleSubmitCertificate,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getStudents();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSubmitCertificateDownload = async (e) => {\n    setLoadingDownload(true);\n\n    try {\n      const response = await get(PRIVATE_URLS.certificate.getStudyCertificate, {\n        responseType: \"blob\",\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: selectedData?.academicId,\n          studentId: selectedData?.studentId,\n        },\n      });\n\n      // Create a Blob from the data\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n\n      // Create a link element\n      const link = document.createElement(\"a\");\n      const uri = URL.createObjectURL(blob);\n\n      link.href = uri;\n      link.setAttribute(\"download\", \"studyCertificate.pdf\");\n\n      document.body.appendChild(link);\n\n      link.click();\n\n      // Remove the link from the document\n      document.body.removeChild(link);\n\n      // Revoke the object URL to free up memory\n      URL.revokeObjectURL(uri);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoadingDownload(false);\n  };\n\n  const handleClose = () => {\n    setOpenBulkIssue(false);\n  };\n\n  const handleBulkIssueOpen = () => {\n    setOpenBulkIssue(true);\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Study Certificate\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            gap={1}\n            item>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleBulkIssueOpen}>\n              Bulk Issue\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={entryFormik.handleSubmit}\n              loading={loading}>\n              Issue\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      {entryFormik.values.student != \"\" && (\n        <>\n          <Container>\n            <Grid\n              container\n              spacing={2}\n              display=\"flex\"\n              justifyContent=\"space-between\">\n              <Grid item xs={6} md={6} lg={3} textAlign=\"start\">\n                <img\n                  src={selectedData.schoolLogo || \"/world-wide-web.png\"}\n                  alt=\"loading...\"\n                  height={100}\n                  width={95}\n                  style={{ objectFit: \"contain\" }}\n                />\n              </Grid>\n\n              <Grid item xs={6} md={6} lg={6} textAlign=\"center\" mt={2}>\n                <Typography textAlign=\"center\" fontSize=\"20px\">\n                  {selectedData.schoolName || \"St Pauls High School\"}\n                </Typography>\n                <Typography textAlign=\"center\" fontSize=\"16px\">\n                  {selectedData.schoolAddress || \"ABC NAGAR\"}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6} md={6} lg={3} textAlign=\"end\">\n                <img\n                  src={selectedData.studentPhoto || \"/studingimg.jpg\"}\n                  alt=\"photo\"\n                  height={120}\n                  width={100}\n                  style={{ objectFit: \"contain\" }}\n                />\n              </Grid>\n            </Grid>\n            <Heading>STUDY CERTIFICATE</Heading>\n            <TextOuterContent>\n              <Typography\n                component=\"span\"\n                sx={{\n                  fontSize: \"25px\",\n                  fontFamily: \"sans-serif\",\n                }}>\n                This is to certify that Sri./Kum.\n                <Content component={\"span\"}>\n                  {selectedData.fatherName || \"NA\"}\n                </Content>\n                son/daughter of Mr.\n                <Content component={\"span\"}>\n                  {selectedData.studentName || \"NA\"}\n                </Content>\n                studying in\n                <Content component={\"span\"}>\n                  {selectedData.currentClass || \"NA\"}\n                </Content>\n                in our school for the academic year\n                <Content component={\"span\"}>\n                  {`${selectedData.academicYearFrom} - ${selectedData.academicYearTo}` ||\n                    \"NA\"}\n                </Content>\n                .The residential address is as follows:\n                <Content component={\"span\"}>\n                  {selectedData.address || \"NA\"}\n                </Content>\n                . According to our school records his/her date of birth is\n                <Content component={\"span\"}>\n                  {dayjs(selectedData.dob).format(\"DD-MM-YYYY\")}\n                </Content>\n                . and category is as per our school record G R No is{\" \"}\n                <Content component={\"span\"}>\n                  {selectedData.grNo || \"NA\"}\n                </Content>\n                .\n              </Typography>\n            </TextOuterContent>\n            <DateContaner>\n              <Box>\n                <Typography gutterBottom fontSize=\"20px\">\n                  {dayjs().format(\"DD-MM-YYYY\")}\n                </Typography>\n                <Typography component=\"span\" fontSize=\"20px\">\n                  Place:{\" \"}\n                </Typography>\n                <Typography component=\"span\" fontSize=\"20px\">\n                  {selectedData.schoolAddress}\n                </Typography>\n              </Box>\n\n              <Typography fontSize=\"20px\">Sign Of Head Master</Typography>\n            </DateContaner>\n          </Container>\n\n          <MuiBox>\n            <LoadingButton\n              variant=\"contained\"\n              size=\"small\"\n              type=\"submit\"\n              loading={loadingDownload}\n              onClick={handleSubmitCertificateDownload}>\n              Download\n            </LoadingButton>\n            <Button variant=\"contained\" size=\"small\" aria-label=\"search\">\n              Print\n            </Button>\n          </MuiBox>\n        </>\n      )}\n      {/* ======= bulk issue form model ========= */}\n      <Dialog\n        open={openBulkIssue}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\",\n            p: 2,\n          }}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              fontWeight=\"bold\">\n              Bulk Issue\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"academic\"\n              formik={formik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={6}>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"From Date\"\n              name=\"fromDate\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"To Date\"\n              name=\"toDate\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={formik}\n              label=\"Select Student\"\n              options={classes}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={formik}\n              label=\"Select Student\"\n              options={sections}\n            />\n          </Grid>\n          {/* \n          <Grid item xs={12} md={6} lg={6}>\n            <FormControl fullWidth size=\"small\" required>\n              <InputLabel>Student Names</InputLabel>\n              <Select\n                required\n                label=\"Student Names\"\n                id=\"demo-simple-select-filled\"\n                name=\"name\"\n                multiple\n                // value={selectedItems}\n                onChange={handleOnChange}\n                renderValue={(selected) => (\n                  <div style={{ display: \"flex\", overflowX: \"auto\" }}>\n                    {selectedData.map((studentId) => (\n                      <Chip\n                        key={studentId}\n                        label={\n                          students.find((student) => student._id === studentId)\n                            ?.basicInfo.name\n                        }\n                        style={{ marginRight: 5 }} // Adjust spacing between chips\n                      />\n                    ))}\n                  </div>\n                )}>\n                {students.map((s) => (\n                  <MenuItem key={s.id} value={s.id}>\n                    {s.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid> */}\n\n          <Grid item xs={12} md={12} lg={12}>\n            <Box\n              display=\"flex\"\n              gap={2}\n              justifyContent={{\n                xs: \"center\",\n                sm: \"center\",\n                md: \"flex-end\",\n                lg: \"flex-end\",\n              }}>\n              <LoadingButton\n                // loading={downloadLoading}\n                sx={{\n                  color: \"#fff\",\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                // onClick={handleBulkCertificateDownload}\n                disabled={loadingDownload}>\n                Download\n              </LoadingButton>\n\n              <LoadingButton\n                // loading={printerLoader}\n                // onClick={handleBulkPrint}\n                type=\"button\"\n                sx={{\n                  color: \"#fff\",\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                }}\n                aria-label=\"search\">\n                Print\n              </LoadingButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst Header = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"25px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"21px\",\n  },\n}));\n\nconst DataContainer = styled(Grid)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  [theme.breakpoints.down(\"lg\")]: {\n    flexDirection: \"row\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n}));\n\nconst Container = styled(Box)(({ theme }) => ({\n  marginTop: \"20px\",\n  padding: \"40px\",\n  [theme.breakpoints.down(\"lg\")]: {\n    width: \"80%\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    width: \"100%\",\n  },\n}));\n\nconst Signature = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"13px\",\n  },\n}));\n\nconst ListItem = styled(Typography)(({ theme }) => ({\n  fontSize: \"18px\",\n  width: \"48%\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n    width: \"100%\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"14px\",\n    width: \"100%\",\n  },\n}));\n\nconst Content = styled(Typography)(({ theme }) => ({\n  fontSize: \"20px\",\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"20px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"14px\",\n  },\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  fontSize: \"25px\",\n  fontWeight: 500,\n  [theme.breakpoints.down(\"md\")]: {\n    fontSize: \"25px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"18px\",\n  },\n}));\nexport default function TransferCertificate() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  useEffect(() => {\n    getAcademicYear();\n    getStudents();\n  }, [selectedSetting._id]);\n  return (\n    <>\n      <PageHeader title=\"Study Certificate\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            display=\"flex\"\n            alignSelf=\"center\"\n            justifyContent=\"flex-end\"\n            gap={1}\n            item>\n            <Button size=\"small\" variant=\"contained\">\n              Issue\n            </Button>\n            <Button size=\"small\" variant=\"contained\">\n              Bulk Issue\n            </Button>\n            <Button size=\"small\" variant=\"contained\">\n              Print\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n          <Typography\n            sx={{\n              fontSize: { xs: \"25px\", sm: \"25px\", md: \"30px\", lg: \"30px\" },\n              fontWeight: \"bold\",\n            }}>\n            Kayaka school\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={12}\n          style={{ textAlign: \"center\" }}>\n          <Title>ENGLISH MEDIUM PRIMARY AND HIGH SCHOOL</Title>\n          <Title>Kayaka school</Title>\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n          <Header>TRANSFER CERTIFICATE</Header>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={12}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          width={\"100%\"}>\n          <Container>\n            <Grid container spacing={2}>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>1] Name of the School:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"schoolName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>2] Name of the Pupil in full:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"studentName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>3] G. R. No:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"grNo\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>4] Place of Birth:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"birthPlace\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem> 5] Date of Birth(in figures and words):</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"dobWords\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>6] Sex:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"sex\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>7] Nationality:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"nationality\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>8] Religion:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"religion\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>9] Caste:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"caste\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  10] Whether the candidate belongs to SC and ST:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"belongs\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>11] Aadhar No.:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"aadhar\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>12] Name of the father:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"fatherName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>13] Name of the mother:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"motherName\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem> 14] Date of Admission in the Scchool:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"admissionDate\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>15] School Previously Attended:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"prevSchool\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  16] Standard in which admission is granted:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"admissionGrant\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  17] Standard in which the pupil was studying at the time of\n                  leaving the school(in words):\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"currentClass\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>18] Medium of instruction:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"instructions\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  19] Whether the pupil has paid all the free due of the school:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"fees\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>20] Promoted to/ Detained in:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"proDet\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  21] Whether medically examinated or not ? :\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"medical\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  22] Date of pupil's last attendance at the school:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"lastAttend\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  23] Date of which the application for the Transfer Certificate\n                  was received:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"transferRecivied\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>\n                  {\" \"}\n                  24] Date of issue of the Transfer Certificate:\n                </ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"dateIssue\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>25] Attendance:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"attendance\"\n                />\n              </DataContainer>\n              <DataContainer item xs={12} sm={12} md={12} lg={12}>\n                <ListItem>26] Character & Conduct:</ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  variant=\"standard\"\n                  name=\"character\"\n                />\n              </DataContainer>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Header>CERTIFICATE</Header>\n              </Grid>\n              <Grid item xs={12} md={12} lg={12} sx={{ textAlign: \"center\" }}>\n                <Content>\n                  Certified that the entries made in this Transfer Certificate\n                  are taken from the entries made as per the general egister\n                  maintained in the institution. The entries with the original\n                  records persented by the parents\n                </Content>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Signature>Prepared By</Signature>\n                <Signature>Checked By</Signature>\n                <Signature>Head Master</Signature>\n              </Grid>\n            </Grid>\n          </Container>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/** @format */\n\nexport const receiptBookTableKeys = [\n  {\n    name: \"Receipt Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nexport const feeMapTableKeys = [\n  {\n    name: \"Details\",\n    key: \"detail\",\n  },\n  { name: \"Fee\", key: \"fee\" },\n  // { name: \"Installments\", key: \"installment\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Divider,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst LABEL = {\n  class: \"Class\",\n  classOld: \"Class - (Old)\",\n  classNew: \"Class - (New)\",\n  transport: \"Transport - (Transport department)\",\n  hostel: \"Hostel - (Hostel department)\",\n};\n\nconst installmentsType = [\n  { label: \"Monthly\", id: 1 },\n  { label: \"Quaterly\", id: 2 },\n  { label: \"Half-Yearly\", id: 3 },\n  { label: \"Yearly\", id: 4 },\n  { label: \"Others\", id: 5 },\n];\n\nfunction removeElementFromArray(array, elementToRemove) {\n  const index = array.indexOf(elementToRemove);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n  return array;\n}\n\nexport default function AddUpdateFeeMap({\n  dataToEdit,\n  selectedReceipt = \"\",\n  open = true,\n  setOpen = () => {},\n  getFeeMaps = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [academicYears, setAcademicYears] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [stops, setStops] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dependencies, setDependencies] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [installments, setInstallments] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState(dataToEdit || null);\n\n  // get academic year\n  const getAcademicYears = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setAcademicYears(\n        data.result.map((academicData) => ({\n          ...academicData,\n          label: `${academicData.from} - ${academicData.to}`,\n          value: academicData._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get route and stops\n  const getRoutes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRoutes(\n        data.result.map((r) => ({\n          ...r,\n          label: `${r.vehicle?.number} ${r?.title} (${r?.routeStart} To ${r?.routeEnd})`,\n          value: r?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Hostels\n  const getHostels = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setHostels(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Room type\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setRoomTypes(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Rooms\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRooms(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYears();\n    getClasses();\n    getRoutes();\n    getHostels();\n    getRoomTypes();\n    getRoom();\n  }, []);\n\n  const handleAddSubmit = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n\n    if (!addForm.pickType) {\n      removeElementFromArray(dependencies, \"pickType\");\n    }\n\n    try {\n      let payload = {\n        receiptTitleId: selectedReceipt,\n        dependencies: dependencies,\n        classId: addForm.class,\n        routeId: addForm.route,\n        pickType: addForm.pickType,\n        hostelId: addForm.hostel,\n        stopId: addForm.stop,\n        fee: addForm.fee,\n        installmentType: addForm.installmentsType,\n        installments: installments.map((i) => ({\n          ...i,\n          dueDate: dayjs(i?.dueDate),\n        })),\n        schoolId: selectedSetting._id,\n      };\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMap.update + \"/\" + dataToEdit?._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.feeMap.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setAddForm({});\n    getFeeMaps();\n    setOpen(false);\n    setDependencies([]);\n    setInstallments([]);\n  };\n\n  useEffect(() => {\n    if (dataToEdit) {\n      const {\n        route,\n        class: className,\n        hostel,\n        pickType,\n        stop,\n        fee,\n        installmentType,\n        installments,\n        dependencies,\n      } = dataToEdit;\n\n      setAddForm({\n        route: route?._id || \"\",\n        class: className?._id || \"\",\n        hostel: hostel?._id || \"\",\n        pickType: pickType || \"\",\n        stop: stop?._id || \"\",\n        installmentsType: installmentType || \"\",\n        fee: fee || \"\",\n      });\n      setDataToUpdate(dataToEdit);\n      setDependencies(dependencies);\n    } else {\n      setAddForm({});\n    }\n  }, [dataToEdit]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    let recentValue = [...value];\n    recentValue = recentValue.pop();\n\n    if (!recentValue) {\n      setDependencies(value);\n    } else if (recentValue === \"classOld\") {\n      setDependencies(value.filter((v) => ![\"class\", \"classNew\"].includes(v)));\n    } else if (recentValue === \"classNew\") {\n      setDependencies(value.filter((v) => ![\"classOld\", \"class\"].includes(v)));\n    } else if (recentValue === \"class\") {\n      setDependencies(\n        value.filter((v) => ![\"classOld\", \"classNew\"].includes(v))\n      );\n    } else setDependencies(value);\n  };\n\n  const handleAddForm = (e) => {\n    const { name, value } = e.target;\n    if (name == \"fee\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: parseInt(value),\n      }));\n    } else if (name == \"others\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: Math.ceil(value),\n      }));\n    } else {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleDelete = (chipToDelete) => {\n    setDependencies((chips) => chips.filter((chip) => chip !== chipToDelete));\n    if ([\"class\", \"classOld\", \"classNew\"].includes(chipToDelete)) {\n      setAddForm((prev) => ({ ...prev, class: \"\" }));\n    }\n    if (chipToDelete === \"hostel\") {\n      setAddForm((prev) => ({ ...prev, hostel: \"\" }));\n    }\n    if (chipToDelete === \"transport\") {\n      setAddForm((prev) => ({ ...prev, stop: \"\", route: \"\", pickType: \"\" }));\n    }\n  };\n\n  const handleAddInstallments = () => {\n    if (!addForm.installmentsType || !addForm.fee) return;\n    let installmentsData = [];\n\n    if (addForm.installmentsType === \"Monthly\") {\n      const monthlyAmount = Math.floor(addForm.fee / 12);\n      const missing = addForm.fee - monthlyAmount * 12;\n      installmentsData = Array.from({ length: 12 }).map((v, i) => ({\n        id: i + 1,\n        amount: monthlyAmount,\n        missing: missing,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Quaterly\") {\n      const quarterlyAmount = Math.floor(addForm.fee / 4);\n      const missing = addForm.fee - quarterlyAmount * 4;\n\n      installmentsData = Array.from({ length: 4 }).map((v, i) => ({\n        id: i + 1,\n        amount: quarterlyAmount,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Half-Yearly\") {\n      const halfYearlyAmount = Math.floor(addForm.fee / 2);\n      const missing = addForm.fee - halfYearlyAmount * 2;\n\n      installmentsData = Array.from({ length: 2 }).map((v, i) => ({\n        id: i + 1,\n        amount: halfYearlyAmount,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Yearly\") {\n      installmentsData = Array.from({ length: 1 }).map((v, i) => ({\n        id: i,\n        amount: addForm.fee,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n    } else if (addForm.installmentsType === \"Others\") {\n      const othersAmount = Math.floor(addForm.fee / addForm.others);\n      const missing = addForm.fee - othersAmount * addForm.others;\n\n      installmentsData = Array.from({ length: addForm.others }).map((v, i) => ({\n        id: i + 1,\n        amount: othersAmount,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else {\n      setInstallments([]);\n\n      return;\n    }\n\n    setInstallments(installmentsData);\n  };\n\n  useEffect(() => {\n    handleAddInstallments();\n  }, [addForm.installmentsType, addForm.others, addForm.fee, dataToUpdate]);\n\n  const handleInstallmentChange = (val, key, changeIndex) => {\n    setInstallments((prev) => {\n      let newInstallments = prev.map((installment, index) => {\n        if (index === changeIndex) {\n          return key === \"amount\"\n            ? { ...installment, [key]: parseInt(val) }\n            : key === \"dueDate\"\n            ? { ...installment, [key]: val }\n            : installment;\n        } else if (index > changeIndex) {\n          let diffInMonths = index - changeIndex;\n          if (addForm.installmentsType === \"Quaterly\") {\n            diffInMonths = diffInMonths * 3;\n          } else if (addForm.installmentsType === \"Half-Yearly\") {\n            diffInMonths = diffInMonths * 6;\n          } else if (addForm.installmentsType === \"Others\") {\n            diffInMonths = diffInMonths * 1;\n          }\n          const updatedDueDate = dayjs(val).add(diffInMonths, \"month\");\n          return { ...installment, dueDate: updatedDueDate };\n        } else {\n          return installment;\n        }\n      });\n\n      setDataToUpdate({ ...dataToUpdate, installments: newInstallments });\n\n      return newInstallments;\n    });\n  };\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onSubmit={handleAddSubmit}\n        component=\"form\">\n        <DialogTitle sx={{ fontWeight: 600 }}>\n          {dataToEdit ? \"Update Fee Map\" : \"Add Fee Map\"}\n        </DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={12} md={12} item>\n              <Typography variant=\"body\">\n                Choose the dependencies that will serve as the basis for the fee\n                calculation.\n              </Typography>\n              <Grid xs={12} sm={6} md={8} item>\n                <FormControl size=\"small\" sx={{ mt: 2, width: 400 }}>\n                  <InputLabel id=\"demo-multiple-chip-label\">\n                    Choose the dependencies\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-multiple-chip-label\"\n                    id=\"demo-multiple-chip\"\n                    size=\"small\"\n                    multiple\n                    label=\"Choose the dependencies\"\n                    value={dependencies}\n                    onChange={handleChange}>\n                    {Object.keys(LABEL).map((name) => (\n                      <MenuItem key={name} value={name}>\n                        {LABEL[name]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              {dependencies && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    gap: 0.5,\n                    marginLeft: \"20px\",\n                  }}>\n                  {dependencies.map((value, i) => (\n                    <Chip\n                      sx={{ mt: 2 }}\n                      key={value}\n                      label={LABEL[value]}\n                      onDelete={() => handleDelete(value)}\n                    />\n                  ))}\n                </Box>\n              )}\n            </Grid>\n\n            {dependencies.includes(\"academicYear\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Academic Year</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"academicYear\"\n                    required\n                    value={addForm.academicYear || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Academic Year\">\n                    {academicYears.map((a) => (\n                      <MenuItem key={a._id} value={a._id}>\n                        {a.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {(dependencies.includes(\"class\") ||\n              dependencies.includes(\"classNew\") ||\n              dependencies.includes(\"classOld\")) && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Class</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"class\"\n                    required\n                    value={addForm.class || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Class\">\n                    {classes.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"transport\") && (\n              <>\n                <Grid item xs={12} md={6} lg={6} mt={2}>\n                  <FormControl fullWidth size=\"small\">\n                    <InputLabel>Select Route</InputLabel>\n                    <Select\n                      size=\"small\"\n                      name=\"route\"\n                      required\n                      value={addForm.route || \"\"}\n                      onChange={handleAddForm}\n                      label=\"Select Route\">\n                      {routes.map((route) => (\n                        <MenuItem key={route._id} value={route._id}>\n                          {route?.label}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6} mt={2}>\n                  <FormControl fullWidth size=\"small\">\n                    <InputLabel>Select Stop</InputLabel>\n                    <Select\n                      size=\"small\"\n                      name=\"stop\"\n                      required\n                      value={addForm.stop || \"\"}\n                      onChange={handleAddForm}\n                      label=\"Select stop\">\n                      {routes\n                        ?.find((s) => s._id === addForm.route)\n                        ?.stops?.map((m) => ({\n                          ...m,\n                          label: m.name,\n                          value: m._id,\n                        }))\n                        ?.map((stop) => (\n                          <MenuItem key={stop.value} value={stop.value}>\n                            {stop?.label}\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid xs={12} sm={6} md={6} item mt={2}>\n                  <FormControl fullWidth size=\"small\">\n                    <InputLabel>Pick Type</InputLabel>\n                    <Select\n                      size=\"small\"\n                      name=\"pickType\"\n                      value={addForm.pickType || \"\"}\n                      onChange={handleAddForm}\n                      label=\"Pick Type\">\n                      {[\"Drop\", \"Pick\", \"Both\"].map((picktype) => (\n                        <MenuItem key={picktype} value={picktype}>\n                          {picktype}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </>\n            )}\n\n            {dependencies.includes(\"hostel\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Hostel</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"hostel\"\n                    required\n                    value={addForm.hostel || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Hostel\">\n                    {hostels.map((hostel) => (\n                      <MenuItem key={hostel._id} value={hostel._id}>\n                        {hostel?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"roomType\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Room Type</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"roomType\"\n                    required\n                    value={addForm.roomType || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Room Type\">\n                    {roomTypes.map((roomType) => (\n                      <MenuItem key={roomType._id} value={roomType._id}>\n                        {roomType?.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            {dependencies.includes(\"room\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Room</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"room\"\n                    required\n                    value={addForm.room || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Room\">\n                    {rooms\n                      .filter((r) => {\n                        if (addForm.hostel && addForm.roomType) {\n                          return (\n                            r.hostel?._id == addForm.hostel &&\n                            r.type?._id == addForm.roomType\n                          );\n                        } else if (addForm.hostel && !addForm.roomType) {\n                          return r.hostel?._id == addForm.hostel;\n                        } else if (!addForm.hostel && addForm.roomType) {\n                          return r.type?._id == addForm.roomType;\n                        } else {\n                          return r._id;\n                        }\n                      })\n                      .map((room) => (\n                        <MenuItem key={room._id} value={room._id}>\n                          {room.hostel?.name} - {room.type?.name}{\" \"}\n                          {`(${room.totalBeds}-Beds)`}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                label=\"Fee\"\n                type=\"number\"\n                required\n                name=\"fee\"\n                value={addForm.fee || \"\"}\n                onChange={handleAddForm}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Installment Type</InputLabel>\n                <Select\n                  size=\"small\"\n                  name=\"installmentsType\"\n                  value={addForm.installmentsType || \"\"}\n                  onChange={handleAddForm}\n                  label=\"Select Installment Type\">\n                  {installmentsType.map((installments) => (\n                    <MenuItem key={installments.id} value={installments.label}>\n                      {installments.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            {addForm.installmentsType == \"Others\" && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <TextField\n                  // sx={{ marginTop: 1 }}\n                  fullWidth\n                  label=\"Number of installments\"\n                  size=\"small\"\n                  name=\"others\"\n                  type=\"number\"\n                  value={addForm.others || \"\"}\n                  onChange={handleAddForm}\n                />\n              </Grid>\n            )}\n            {installments.map((installment, index) => (\n              <React.Fragment key={index}>\n                <Grid container rowSpacing={0} columnSpacing={2} px={2}>\n                  <Grid item xs={12} sm={6} md={6} mt={2}>\n                    <TextField\n                      fullWidth\n                      type=\"number\"\n                      label={`installment ${index + 1}`}\n                      value={installment?.amount || 0}\n                      size=\"small\"\n                      // enabled={dataToEdit}\n                      onChange={(e) =>\n                        handleInstallmentChange(e.target.value, \"amount\", index)\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6}>\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DatePicker\n                        enabled={dataToEdit}\n                        label=\"Due Date\"\n                        format=\"DD/MM/YYYY\"\n                        value={installment?.dueDate || null}\n                        onChange={(newValue) =>\n                          handleInstallmentChange(newValue, \"dueDate\", index)\n                        }\n                        sx={{\n                          \"& .MuiInputBase-input\": {\n                            height: \"8px\",\n                          },\n                          marginTop: \"16px\",\n                          width: \"100%\",\n                        }}\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            enabled={dataToEdit}\n                            {...params}\n                            size=\"small\"\n                          />\n                        )}\n                      />\n                    </LocalizationProvider>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            {dataToEdit ? \"Update\" : \"Submit\"}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { Fragment, useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\nimport dayjs from \"dayjs\";\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\nexport default function ViewInstallments({\n  open = true,\n  title = \"\",\n  tableData = [],\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table aria-label=\"customized table\">\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                  S.No\n                </TableCell>\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Amount\n                </TableCell>\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Due Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {tableData?.map((tableElement, i) => (\n                <Fragment key={i}>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">{i + 1}</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {tableElement.amount}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {dayjs(tableElement.dueDate).format(\"DD/MM/YYYY\")}\n                    </StyledTableCell>\n                  </TableRow>\n                </Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { receiptBookTableKeys } from \"../../data/tableKeys/receiptBookData\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Tooltip,\n  Switch,\n  styled,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Add, Edit, Search } from \"@mui/icons-material\";\nimport { feeMapTableKeys } from \"../../data/tableKeys/feeMapData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddUpdateFeeMap from \"./AddUpdateFeeMap\";\nimport ViewInstallments from \"./ViewInstallments\";\n\nconst CustomSwitch = styled(Switch)(({}) => ({\n  \"& .MuiSwitch-switchBase.Mui-checked\": {\n    color: \"green\",\n  },\n  \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\n    backgroundColor: \"green\",\n  },\n  \"& .MuiSwitch-switchBase\": {\n    color: \"red\",\n  },\n  \"& .MuiSwitch-switchBase + .MuiSwitch-track\": {\n    backgroundColor: \"red\",\n  },\n}));\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if ([\"class\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if ([\"classOld\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-Old`;\n      result.push(newItem);\n    } else if ([\"classNew\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-New`;\n      result.push(newItem);\n    } else if ([\"hostel\"].includes(dep)) {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if ([\"transport\"].includes(dep)) {\n      let newItem = `[${data?.route?.vehicle?.number}]+[${data?.route?.title}]-Transport-[${data?.stop?.name}]-Stop-[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if ([\"pickType\"].includes(dep)) {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nconst CustomActionFee = ({\n  onUpdate = () => {},\n  data = {},\n  onEditClick = () => {},\n  onNavigateFeeMap = () => {},\n}) => {\n  const [loading, setLoading] = useState(false);\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(`${PRIVATE_URLS.receiptTitle.toggleActiveStatus}/${data._id}`);\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          onClick={() => onNavigateFeeMap(data._id)}>\n          Fee Map\n        </Button>\n\n        <Tooltip title=\"Edit\">\n          <IconButton onClick={() => onEditClick(data)} size=\"small\">\n            <Edit color=\"primary\" fontSize=\"12px\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={data.active ? \"Deactive\" : \"Activate\"}>\n          <CustomSwitch\n            size=\"small\"\n            checked={data.active}\n            onChange={updateStatus}\n            inputProps={{ \"aria-label\": \"controlled\" }}\n          />\n        </Tooltip>\n      </Stack>\n    </>\n  );\n};\n\nexport default function ReceiptBook() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [receipts, setReceipts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openFeeMap, setOpenFeeMap] = useState(false);\n  const [selectedReceiptId, setSelectedReceiptId] = useState(\"\");\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: [],\n    action: () => {},\n  });\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { receiptTitle: selectedReceiptId },\n        },\n      });\n      setFeeMaps(data?.result?.map((f) => ({ ...f, detail: showInfo(f) })));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data, status } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setReceipts(data.result);\n      if (data.result.length > 0) {\n        setSelectedReceiptId(\n          selectedReceiptId ? selectedReceiptId : data.result[0]._id\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedReceiptId) {\n      getFeeMaps();\n    }\n  }, [selectedReceiptId, selectedSetting._id]);\n\n  useEffect(() => {\n    getReceipts();\n  }, [selectedSetting]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getReceipts();\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting?._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.receiptTitle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.receiptTitle.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // active/inactive fee Map\n  const handleToggleButton = async (d) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.feeMap.toggleActiveStatus + \"/\" + d._id\n      );\n      // console.log(data, \"data\");\n      getFeeMaps();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleOpenFeeMap = () => {\n    setOpenFeeMap(true);\n    setDataToEdit(null);\n  };\n\n  const handleFeeMapEdit = (data) => {\n    // console.log(data, \"newss\");\n    setDataToEdit(data);\n    setOpenFeeMap(true);\n  };\n\n  const handleFeeMapNavigate = (id) => {\n    setSelectedReceiptId(id);\n    setSelectValue(1);\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data?.installments,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Receipt Book\" />\n\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Receipt Book\", \"Fee Map\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleClickOpen}\n          startIcon={<Add />}\n          sx={{ mt: 1, mb: 2 }}>\n          Add Receipt\n        </Button>\n\n        <CustomTable\n          actions={[\"custom\"]}\n          bodyDataModal=\"Receipt Book\"\n          bodyData={receipts}\n          tableKeys={receiptBookTableKeys}\n          feeMapTableKeys\n          onEditClick={handleEditClick}\n          onNavigateFeeMap={handleFeeMapNavigate}\n          CustomAction={CustomActionFee}\n          onUpdate={getReceipts}\n        />\n        {/* Add/Update Receipt book ========= */}\n        <FormModal\n          open={open}\n          formik={entryFormik}\n          formTitle={dataToEdit ? \"Update Receipt Book\" : \"Add Receipt Book\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={12} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"name\"\n                label=\"Receipt Name\"\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </FormModal>\n      </TabPanel>\n\n      <TabPanel index={1} value={value}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", my: 1.5 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Select Receipt</InputLabel>\n              <Select\n                required={true}\n                fullWidth\n                value={selectedReceiptId || \"\"}\n                onChange={(e) => setSelectedReceiptId(e.target.value)}\n                label=\"Select Receipt\">\n                {receipts.map((receipt) => (\n                  <MenuItem value={receipt._id} key={receipt._id || \"\"}>\n                    {receipt.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <Button\n              variant=\"contained\"\n              startIcon={<Add />}\n              onClick={handleOpenFeeMap}>\n              Add Fee Map\n            </Button>\n          </Grid>\n        </Grid>\n\n        <CustomTable\n          actions={[\"edit\", \"switch\", \"view\"]}\n          bodyDataModal=\"Fee Map\"\n          bodyData={feeMaps}\n          tableKeys={feeMapTableKeys}\n          toggleStatus=\"active\"\n          onToggleSwitch={handleToggleButton}\n          onViewClick={handleClickOpenView}\n          onEditClick={handleFeeMapEdit}\n        />\n\n        {/* Add/Update Fee Map ========= */}\n        <AddUpdateFeeMap\n          open={openFeeMap}\n          dataToEdit={dataToEdit}\n          getFeeMaps={getFeeMaps}\n          setOpen={setOpenFeeMap}\n          loading={loading}\n          selectedReceipt={selectedReceiptId}\n        />\n\n        {/* view installments */}\n        <ViewInstallments\n          title=\"Installment Details\"\n          open={modalData?.open}\n          tableData={modalData?.tableData}\n          onClose={onCloseViewModel}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const feeMapCategoryTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  { name: \"Description\", key: \"description\" },\n  { name: \"Amount\t\", key: \"amount\" },\n];\n","/** @format */\n\nimport React from \"react\";\nimport FormModal from \"../../forms/FormModal\";\nimport {\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n  Grid,\n  useTheme,\n  useMediaQuery,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport { LoadingButton } from \"@mui/lab\";\n// icons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\n\nexport default function AddFeeMapCategory({\n  open = false,\n  categories = [],\n  adding = false,\n  setCategories = () => {},\n  addCategory = () => {},\n  removeCategory = () => {},\n  onClose = () => {},\n  onSubmit = () => {},\n  totalAmount = 0,\n  leftAmount = 0,\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleCustomInputChange = (e, id) => {\n    setCategories([\n      ...categories.map((d) =>\n        d.id === id ? { ...d, [e.target.name]: e.target.value } : d\n      ),\n    ]);\n  };\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n        }}>\n        <DialogTitle sx={{ fontWeight: 600 }}>Add Fee Map Category</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Typography variant=\"caption\" fontSize={12}>\n            Total Amount:{\" \"}\n            <b style={{ color: \"rgb(0, 196, 159)\" }}>₹{totalAmount}</b>\n          </Typography>\n          <Typography variant=\"caption\" fontSize={12} ml={2}>\n            Left Amount:{\" \"}\n            <b style={{ color: \"rgb(255, 128, 66)\" }}>₹{leftAmount}</b>\n          </Typography>\n          {categories.map((c, i) => (\n            <Grid\n              key={c.id}\n              rowSpacing={0}\n              columnSpacing={1}\n              container\n              alignItems=\"center\">\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  required={true}\n                  type=\"text\"\n                  name=\"name\"\n                  value={c.name || \"\"}\n                  label=\"Name\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  type=\"text\"\n                  name=\"description\"\n                  value={c.description || \"\"}\n                  label=\"Description\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={3} md={3} item>\n                <CustomInput\n                  required={true}\n                  type=\"number\"\n                  name=\"amount\"\n                  value={c.amount || \"\"}\n                  label=\"Amount\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={1} md={1} item>\n                <Tooltip title=\"Remove Category\">\n                  <IconButton\n                    color=\"error\"\n                    size=\"small\"\n                    onClick={() => removeCategory(c.id)}\n                    sx={{ mt: 1 }}>\n                    <RemoveIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          ))}\n          <Tooltip title=\"Add Category\" sx={{ mt: 1 }}>\n            <IconButton color=\"primary\" size=\"small\">\n              <AddIcon onClick={() => addCategory()} />\n            </IconButton>\n          </Tooltip>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={onClose}>\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={adding}\n            variant=\"contained\"\n            onClick={onSubmit}>\n            Submit\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid } from \"@mui/material\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { feeMapCategoryTableKeys } from \"../../data/tableKeys/feeMapCategoryData\";\nimport { Add } from \"@mui/icons-material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { toast } from \"react-toastify\";\nimport AddFeeMapCategory from \"./AddFeeMapCategory\";\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if ([\"class\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if ([\"classOld\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-Old`;\n      result.push(newItem);\n    } else if ([\"classNew\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-New`;\n      result.push(newItem);\n    } else if (dep === \"hostel\") {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if (dep == \"transport\") {\n      let newItem = `[${data.route.vehicle.number}]+[${data.route.title}]-Transport-[${data.stop.name}]-Stop-[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nexport default function FeeMapCategory() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [openAddModal, setOpenAddModal] = useState(false);\n  const [categories, setCategories] = useState([\n    {\n      id: 1,\n      name: \"Category 1\",\n      amount: 1,\n      description: \"\",\n    },\n  ]);\n\n  const addCategory = () => {\n    let newCategories = [\n      ...categories,\n      { id: categories.length + 1, name: \"New\", amount: 1, description: \"\" },\n    ];\n    setCategories(newCategories);\n  };\n\n  const removeCategory = (id) => {\n    let newCategories = categories.filter((c) => c.id !== id);\n    setCategories(newCategories);\n  };\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      Formik.setFieldValue(\"name\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { receiptTitle: Formik.values.name },\n        },\n      });\n      setFeeMaps(\n        data?.result?.map((f) => ({ ...f, label: showInfo(f), value: f._id }))\n      );\n      Formik.setFieldValue(\"feeMap\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get fee map category list\n  const handleGetFeeCategories = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMapCategory.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            feeMap: values?.feeMap,\n          },\n        },\n      });\n\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      name: \"\",\n      feeMap: \"\",\n    },\n    onSubmit: handleGetFeeCategories,\n  });\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMapCategory.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        if (\n          categories.find(\n            (c) => !c.name || !parseFloat(c.amount) || parseFloat(c.amount) < 0\n          )\n        ) {\n          setLoading(false);\n          return toast.error(\n            \"Please mention name and amount for each category\"\n          );\n        }\n\n        const { data } = await post(\n          PRIVATE_URLS.feeMapCategory.createMultiple,\n          {\n            schoolId: selectedSetting._id,\n            feeMapId: Formik.values.feeMap,\n            categories: categories.map((c) => ({\n              ...c,\n              amount: parseFloat(c.amount),\n            })),\n          }\n        );\n      }\n      handleClose();\n      handleCloseAddModel();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      amount: dataToEdit?.amount || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (Formik.values.name) {\n      getFeeMaps();\n    }\n  }, [selectedSetting, Formik.values.name]);\n\n  useEffect(() => {\n    getReceipts();\n  }, [selectedSetting._id]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    Formik.handleSubmit();\n    entryFormik.resetForm();\n  };\n\n  const handleCloseAddModel = () => {\n    setOpenAddModal(false);\n    setCategories([\n      {\n        id: 1,\n        name: \"Category 1\",\n        amount: 1,\n        description: \"\",\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    if (Formik.values.feeMap) {\n      Formik.handleSubmit();\n    }\n  }, [Formik.values.feeMap, selectedSetting._id]);\n\n  const handleFeeMapCategoryEdit = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.feeMapCategory.delete + \"/\" + id);\n      Formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Fee Map Category\" />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"name\"\n            formik={Formik}\n            label=\"Select Receipt Name\"\n            options={receipts}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"feeMap\"\n            formik={Formik}\n            label=\"Select Fee Maps\"\n            options={feeMaps}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            startIcon={<Add />}\n            onClick={() => setOpenAddModal(true)}>\n            Add Fee Category\n          </Button>\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Fee Map Category\"\n        bodyData={data}\n        tableKeys={feeMapCategoryTableKeys}\n        feeMapTableKeys\n        onEditClick={handleFeeMapCategoryEdit}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* Update Fee map Category ========= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Fee Map Category\" : \"Add Fee Map Category\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={4} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add Fee Map category modal */}\n      <AddFeeMapCategory\n        totalAmount={feeMaps.find((f) => f._id === Formik.values.feeMap)?.fee}\n        leftAmount={\n          feeMaps.find((f) => f._id === Formik.values.feeMap)?.fee -\n          data?.reduce((acc, f) => acc + f.amount, 0)\n        }\n        open={openAddModal}\n        adding={loading}\n        categories={categories}\n        setCategories={setCategories}\n        addCategory={addCategory}\n        removeCategory={removeCategory}\n        onClose={handleCloseAddModel}\n        onSubmit={() => entryFormik.handleSubmit()}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  useMediaQuery,\n  Typography,\n} from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\n// style\n\nconst style = {\n  width: \"100%\",\n  height: \"auto\",\n  bgcolor: \"background.paper\",\n  p: 2,\n};\n\nconst QuickFeeConcessionModal = (props) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState(\"\");\n  const formRef = useRef();\n  const btnClick = useRef();\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.refer && !formData.format && !formData.concession)\n      return setError(\"Please fill all fields\");\n    props.onSubmit(formData);\n    setFormData({});\n    setError(\"\");\n  };\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={props.open}\n        onClose={props.onClose}\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 400, md: 400, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleSubmit} ref={formRef}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  id=\"modal-modal-title\"\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Add Concession\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <TextField\n                  fullWidth\n                  required\n                  value={formData.refer || \"\"}\n                  name=\"refer\"\n                  label=\"Reference/recommended\"\n                  onChange={handleFormChange}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <FormControl fullWidth size=\"small\" required>\n                  <InputLabel>Concession format</InputLabel>\n                  <Select\n                    required\n                    value={formData.format || \"\"}\n                    name=\"format\"\n                    label=\"Concession format\"\n                    size=\"small\"\n                    onChange={handleFormChange}>\n                    <MenuItem value=\"Value\">Value</MenuItem>\n                    <MenuItem value=\"Percentage\">Percentage</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  required\n                  value={formData.concession || \"\"}\n                  name=\"concession\"\n                  label=\"Concession\"\n                  size=\"small\"\n                  onChange={handleFormChange}\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\">\n                <Stack direction=\"row\" gap={2}>\n                  <Button\n                    onClick={props.onClose}\n                    color=\"error\"\n                    variant=\"contained\"\n                    size=\"small\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      formRef.current.dispatchEvent(\n                        new Event(\"submit\", { cancelable: true, bubbles: true })\n                      );\n                    }}\n                    variant=\"contained\"\n                    size=\"small\"\n                    sx={{\n                      background: \"#1B3779\",\n                      \"&:hover\": {\n                        background: \"#1B3779\",\n                      },\n                    }}>\n                    Add\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QuickFeeConcessionModal;\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\n\n// style\n\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useTheme } from \"@mui/material/styles\";\nconst style = {\n  width: \"100%\",\n  height: \"auto\",\n  bgcolor: \"background.paper\",\n  p: 2,\n};\nconst QuickFeeCollectModal = ({\n  onSubmit = () => {},\n  onPreviewButtonClick = () => {},\n  onClose = () => {},\n  open = false,\n  payingAmount = 0,\n  note = \"\",\n  onUpdateNote = () => {},\n  collectingFee = false,\n  downloadingPreview = false,\n  payingDate = null,\n  setPayingDate = () => {},\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [paymentMode, setPaymentMode] = useState(\"\");\n\n  const [paymentDetails, setPaymentDetails] = useState({});\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setPaymentMode(value);\n  };\n\n  const handlePaymentDetails = (e) => {\n    const { name, value } = e.target;\n    setPaymentDetails((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setPayingDate(\"\");\n    onSubmit(paymentMode, paymentDetails);\n    setPaymentDetails({});\n  };\n\n  const onPreview = (e) => {\n    e.preventDefault();\n    onPreviewButtonClick(paymentMode, paymentDetails);\n  };\n\n  const handleClose = () => {\n    setPaymentMode(\"\");\n    onClose();\n  };\n\n  useEffect(() => {\n    setPaymentDetails({});\n  }, [paymentMode]);\n\n  return (\n    <Dialog fullScreen={fullScreen} open={open} onClose={onClose}>\n      <Box sx={style}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Collect Fee\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography variant=\"body\">\n                <b>Total Amount Being Paid:</b>{\" \"}\n                {`₹${Number(payingAmount).toFixed(1)}`}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                  sx={{ width: \"100%\" }}\n                  label=\"Payment Date\"\n                  value={payingDate || null}\n                  onChange={(newDate) => setPayingDate(newDate)}\n                  renderInput={(params) => (\n                    <TextField {...params} size=\"small\" fullWidth />\n                  )}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <FormControl required={true}>\n                <FormLabel>Select payment method</FormLabel>\n                <RadioGroup\n                  row\n                  value={paymentMode || \"\"}\n                  name=\"payment\"\n                  onChange={handleFormChange}>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Cash\"\n                      control={<Radio />}\n                      label=\"CASH\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Cheque\"\n                      control={<Radio />}\n                      label=\"Cheque\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={4}\n                    sm={4}\n                    md={2}\n                    lg={2}\n                    display=\"flex\"\n                    justifyContent={{\n                      xs: \"flex-start\",\n                      sm: \"flex-start\",\n                      md: \"center\",\n                      lg: \"center\",\n                    }}>\n                    <FormControlLabel\n                      value=\"DD\"\n                      control={<Radio />}\n                      label=\"DD\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Upi\"\n                      control={<Radio />}\n                      label=\"UPI\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Card\"\n                      control={<Radio />}\n                      label=\"Card\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Netbanking\"\n                      control={<Radio />}\n                      label=\"Netbanking\"\n                    />\n                  </Grid>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <TextField\n                label=\"Note\"\n                multiline\n                rows={3}\n                name=\"note\"\n                value={note || \"\"}\n                size=\"small\"\n                fullWidth\n                onChange={(e) => onUpdateNote(e.target.value)}\n              />\n            </Grid>\n\n            {paymentMode === \"Cheque\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Branch Name\"\n                    value={paymentDetails.branchName || \"\"}\n                    fullWidth\n                    name=\"branchName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Cheque Number\"\n                    value={paymentDetails.chequeNumber || \"\"}\n                    fullWidth\n                    name=\"chequeNumber\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DatePicker\n                      sx={{ width: \"100%\" }}\n                      label=\"Cheque Date\"\n                      value={paymentDetails.chequeDate || null}\n                      onChange={(newDate) =>\n                        handlePaymentDetails({\n                          target: {\n                            name: \"chequeDate\",\n                            value: newDate,\n                          },\n                        })\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} size=\"small\" fullWidth />\n                      )}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"DD\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Branch Name\"\n                    value={paymentDetails.branchName || \"\"}\n                    fullWidth\n                    name=\"branchName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"Upi\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"UPI app name\"\n                    value={paymentDetails.upiApp || \"\"}\n                    fullWidth\n                    name=\"upiApp\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Ref Number\"\n                    value={paymentDetails.utrNo || \"\"}\n                    fullWidth\n                    name=\"utrNo\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"Card\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Card Type\"\n                    value={paymentDetails.cardType || \"\"}\n                    fullWidth\n                    name=\"cardType\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"Netbanking\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Reference Number\"\n                    value={paymentDetails.refNumber || \"\"}\n                    fullWidth\n                    name=\"refNumber\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Paid By\"\n                    value={paymentDetails.paidByName || \"\"}\n                    fullWidth\n                    name=\"paidByName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap={2}>\n              <Button\n                size=\"small\"\n                onClick={() => handleClose()}\n                variant=\"contained\"\n                color=\"error\">\n                cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={collectingFee}\n                type=\"submit\"\n                variant=\"contained\">\n                collect\n              </LoadingButton>\n              <LoadingButton\n                size=\"small\"\n                loading={downloadingPreview}\n                onClick={onPreview}\n                variant=\"contained\">\n                preview\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default QuickFeeCollectModal;\n","/** @format */\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport QuickFeeConcessionModal from \"./QuickFeeConcessionModal\";\nimport QuickFeeCollectModal from \"./QuickFeeCollectModal\";\nimport { downloadFile } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if ([\"class\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if ([\"classOld\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-Old`;\n      result.push(newItem);\n    } else if ([\"classNew\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-New`;\n      result.push(newItem);\n    } else if ([\"hostel\"].includes(dep)) {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if ([\"transport\"].includes(dep)) {\n      let newItem = `[${data?.route?.vehicle?.number}]+[${data?.route?.title}]-Transport-[${data?.stop?.name}]-Stop-[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if ([\"pickType\"].includes(dep)) {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nconst ExtraFeeContainer = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  columnGap: \"10px\",\n  backgroundColor:\n    theme.palette.mode === \"dark\" ? \"rgba(255,255,255,0.2)\" : \"whitesmoke\",\n  borderRadius: \"5px\",\n  marginTop: \"80px\",\n}));\n\nexport default function CollectFees() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [receiptTitles, setReceiptTitles] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [feeDetails, setFeeDetails] = useState(null);\n  const [paymentData, setPaymentData] = useState({});\n  const [totalAmountToBePaid, setTotalAmountToBePaid] = useState(0);\n  const [selectedPastDueIds, setSelectedPastDueIds] = useState([]);\n  const [downloadingReceipt, setDownloadingReceipt] = useState(false);\n  const [fetchingStudents, setFetchingStudents] = useState(false);\n  const [installmentId, setInstallmentId] = useState(\"\");\n\n  const [penalty, setPenalty] = useState(\"\");\n  const [miscellaneous, setMiscellaneous] = useState(\"\");\n  const [openConcessionModal, setOpenConcessionModal] = useState(false);\n  const [concession, setConcession] = useState(null);\n  const [note, setNote] = useState(\"\");\n  const [payingDate, setPayingDate] = useState(null);\n  const [collectingFee, setCollectingFee] = useState(false);\n  const [downloadingPreview, setDownloadingPreview] = useState(false);\n  const [openCollectModal, setOpenCollectModal] = useState(false);\n\n  const handleCloseCollectFeeModal = () => setOpenCollectModal(false);\n  const handleOpenCollectFeeModal = () => setOpenCollectModal(true);\n\n  const handleConcessionSubmit = (data) => {\n    setConcession(data);\n    setOpenConcessionModal(false);\n  };\n\n  const handleCloseConcessionModal = () => setOpenConcessionModal(false);\n  const handleOpenConcessionModal = () => {\n    if (concession) {\n      setConcession(null);\n    } else {\n      setOpenConcessionModal(true);\n    }\n  };\n\n  // get student fee Details\n  const handleSubmitFind = async (values) => {\n    setFetchingStudents(true);\n\n    if (!values.feeMap || !values.student || !values.receiptName) {\n      setFeeDetails(null);\n      return setFetchingStudents(false);\n    }\n\n    try {\n      const { data: feeReceipt, status } = await get(\n        PRIVATE_URLS.receipt.getFeeDetails,\n        {\n          params: {\n            feeMapId: values.feeMap,\n            studentId: values.student,\n            receiptTitleId: values.receiptName,\n            installmentId:\n              installmentId ||\n              feeMaps.filter((f) => f._id == values.feeMap)[0]?.installments[0]\n                ._id,\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      console.log(feeReceipt.result, \"====\");\n\n      setFeeDetails(feeReceipt.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingStudents(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleSubmitFind,\n    enableReinitialize: true,\n  });\n\n  const getAllReceiptTitles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: {\n          search: { active: true },\n          schoolId: selectedSetting._id,\n        },\n      });\n      setReceiptTitles(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"receiptName\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllReceiptTitles();\n  }, [selectedSetting._id]);\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list);\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get all classes\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  const getSections = async () => {\n    try {\n      if (!entryFormik.values.class) {\n        entryFormik.setFieldValue(\"section\", \"\");\n        return setSections([]);\n      }\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: { search: { class: entryFormik.values.class } },\n      });\n      setSections(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getSections();\n  }, [entryFormik.values.class]);\n\n  const getAllFeeMaps = async () => {\n    try {\n      if (!entryFormik.values.class || !entryFormik.values.receiptName) {\n        setFeeMaps([]);\n        entryFormik.setFieldValue(\"feeMap\", \"\");\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          search: {\n            active: true,\n            receiptTitle: entryFormik.values.receiptName,\n            class: entryFormik.values.class,\n          },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setFeeMaps(\n        data?.result?.map((d) => ({ ...d, label: showInfo(d), value: d._id }))\n      );\n      entryFormik.setFieldValue(\"feeMap\", data?.result?.[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllFeeMaps();\n  }, [\n    entryFormik.values.receiptName,\n    entryFormik.values.class,\n    selectedSetting,\n  ]);\n\n  // get all students\n  const getAllStudents = async () => {\n    if (\n      !entryFormik.values.feeMap ||\n      !entryFormik.values.class ||\n      !entryFormik.values.section\n    ) {\n      setStudents([]);\n      entryFormik.setFieldValue(\"student\", \"\");\n      return;\n    }\n    try {\n      const filter = {\n        feeMapId: entryFormik.values.feeMap,\n        classId: entryFormik.values.class,\n        sectionId: entryFormik.values.section,\n      };\n\n      const { data: students } = await get(\n        PRIVATE_URLS.receipt.getStudentsList,\n        {\n          params: {\n            search: filter,\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      setStudents(\n        students.result.map((s) => ({\n          ...s,\n          label: `${s.basicInfo.name} | ${s.academicInfo.rollNumber} | ${s.fatherInfo.name}`,\n          value: s._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"student\", students.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllStudents();\n  }, [\n    entryFormik.values.feeMap,\n    entryFormik.values.class,\n    entryFormik.values.section,\n  ]);\n\n  useEffect(() => {\n    setFeeDetails(null);\n    setInstallmentId(\n      feeMaps.find((f) => f._id === entryFormik.values.feeMap)?.installments[0]\n        ?._id\n    );\n  }, [entryFormik.values.student, entryFormik.values.feeMap]);\n\n  const handleChangeCollectingAmount = (e, itemDetail) => {\n    let newCategories = feeDetails.feeMapCategories?.map((c) =>\n      c._id === itemDetail._id ? { ...c, amountPaid: e.target.value } : c\n    );\n\n    setFeeDetails({ ...feeDetails, feeMapCategories: newCategories });\n  };\n\n  const payableAmount = useMemo(() => {\n    let feeParticularAmount = feeDetails\n      ? feeDetails.feeMapCategories?.reduce(\n          (acc, c) => acc + parseFloat(c.amountPaid),\n          0\n        )\n      : 0;\n\n    let totalAmountBeingPaid =\n      parseFloat(feeParticularAmount) +\n      parseFloat(penalty || 0) +\n      parseFloat(miscellaneous || 0);\n\n    let concessionAmount = 0;\n    if (concession) {\n      if (concession.format === \"Percentage\") {\n        concessionAmount =\n          (Number(concession.concession) / 100) * Number(totalAmountBeingPaid);\n      } else {\n        concessionAmount = Number(concession.concession);\n      }\n    }\n    return (\n      parseFloat(feeParticularAmount) +\n      parseFloat(penalty || 0) +\n      parseFloat(miscellaneous || 0) -\n      concessionAmount\n    );\n  }, [feeDetails, penalty, miscellaneous, concession]);\n\n  const collectingAmount = useMemo(() => {\n    return feeDetails\n      ? feeDetails.feeMapCategories?.reduce(\n          (acc, c) => acc + parseFloat(c.amountPaid),\n          0\n        )\n      : 0;\n  }, [feeDetails]);\n\n  // Preview\n  const handlePreviewButtonClick = async (paymentMode, paymentDetails) => {\n    setDownloadingPreview(true);\n    const data = {\n      penalty: penalty || 0,\n      miscellaneous: miscellaneous || 0,\n      payingDate: payingDate ? dayjs(payingDate).format(\"DD/MM/YYYY\") : null,\n      note,\n      receiptTitleId: entryFormik.values.receiptName,\n      feeMapId: entryFormik.values.feeMap,\n      studentId: entryFormik.values.student,\n      paymentMode: paymentMode,\n      feeParticulars: feeDetails?.feeMapCategories?.filter(\n        (f) => f.amountPaid > 0\n      ),\n      installmentId,\n      concessionDetails: concession\n        ? {\n            amount: concession.concession,\n            referredBy: concession.refer,\n            givenAs: concession.format,\n          }\n        : {},\n      schoolId: selectedSetting._id,\n    };\n\n    switch (paymentMode) {\n      case \"Cash\":\n        data.cashDetails = {};\n        break;\n      case \"Cheque\":\n        data.chequeDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n          chequeNumber: paymentDetails.chequeNumber,\n          chequeDate: paymentDetails.chequeDate,\n        };\n        break;\n      case \"DD\":\n        data.ddDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n        };\n        break;\n      case \"Upi\":\n        data.upiDetails = {\n          upiApp: paymentDetails.upiApp,\n          utrNo: paymentDetails.utrNo,\n        };\n        break;\n      case \"Card\":\n        data.cardDetails = {\n          bankName: paymentDetails.bankName,\n          cardType: paymentDetails.cardType,\n        };\n        break;\n      case \"Netbanking\":\n        data.netBankingDetails = {\n          bankName: paymentDetails.bankName,\n          refNumber: paymentDetails.refNumber,\n          paidByName: paymentDetails.paidByName,\n        };\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const response = await post(PRIVATE_URLS.receipt.previewReceipt, data, {\n        responseType: \"blob\",\n        validateStatus: (status) => status < 500, // Accept any status code less than 500\n      });\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"Receipt_preview\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n    } finally {\n      setDownloadingPreview(false);\n    }\n  };\n\n  // collect\n\n  const handleCollectFee = async (paymentMode, paymentDetails) => {\n    setCollectingFee(true);\n    const data = {\n      penalty: penalty || 0,\n      miscellaneous: miscellaneous || 0,\n      payingDate: payingDate ? dayjs(payingDate).format(\"DD/MM/YYYY\") : null,\n      note,\n      receiptTitleId: entryFormik.values.receiptName,\n      feeMapId: entryFormik.values.feeMap,\n      studentId: entryFormik.values.student,\n      paymentMode: paymentMode,\n      feeParticulars: feeDetails?.feeMapCategories?.filter(\n        (f) => f.amountPaid > 0\n      ),\n      installmentId,\n      concessionDetails: concession\n        ? {\n            amount: concession.concession,\n            referredBy: concession.refer,\n            givenAs: concession.format,\n          }\n        : {},\n      schoolId: selectedSetting._id,\n    };\n\n    switch (paymentMode) {\n      case \"Cash\":\n        data.cashDetails = {};\n        break;\n      case \"Cheque\":\n        data.chequeDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n          chequeNumber: paymentDetails.chequeNumber,\n          chequeDate: paymentDetails.chequeDate,\n        };\n        break;\n      case \"DD\":\n        data.ddDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n        };\n        break;\n      case \"Upi\":\n        data.upiDetails = {\n          upiApp: paymentDetails.upiApp,\n          utrNo: paymentDetails.utrNo,\n        };\n        break;\n      case \"Card\":\n        data.cardDetails = {\n          bankName: paymentDetails.bankName,\n          cardType: paymentDetails.cardType,\n        };\n        break;\n      case \"Netbanking\":\n        data.netBankingDetails = {\n          bankName: paymentDetails.bankName,\n          refNumber: paymentDetails.refNumber,\n          paidByName: paymentDetails.paidByName,\n        };\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const response = await post(PRIVATE_URLS.receipt.collectFees, data, {\n        responseType: \"blob\",\n        validateStatus: (status) => status < 500, // Accept any status code less than 500\n      });\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"Receipt_preview\");\n        handleCloseCollectFeeModal();\n        entryFormik.handleSubmit();\n        setConcession(null);\n        setPenalty(\"\");\n        setMiscellaneous(\"\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n    } finally {\n      setCollectingFee(false);\n    }\n  };\n\n  // download receipts\n  const downloadReceipt = async (e, id) => {\n    e.preventDefault();\n    try {\n      setDownloadingReceipt(id);\n      const response = await get(\n        PRIVATE_URLS.receipt.downloadReceipt + \"/\" + id,\n        {\n          validateStatus: (status) => status < 500,\n          responseType: \"blob\",\n        }\n      );\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"receipt\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingReceipt(\"\");\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Collect Fees\" />\n\n      {/* Filter selection */}\n      <Paper sx={{ padding: 1, marginBottom: 2 }}>\n        <Grid columnSpacing={1} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receiptTitles}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Students\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <LoadingButton\n              loading={fetchingStudents}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Student Info, installment info and due details */}\n      {feeDetails ? (\n        <Paper\n          sx={{\n            padding: 1,\n            my: 3,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? \"rgba(255,255,255,0.2)\"\n                : \"whitesmoke\",\n          }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}>\n            <Box>\n              <FormControl size=\"small\" sx={{ width: 300, mt: 1 }} required>\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Select Installment\n                </InputLabel>\n                <Select\n                  size=\"small\"\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  name=\"installmentId\"\n                  label=\"Select Installment\"\n                  value={\n                    installmentId || feeDetails?.feeMap?.installments[0]._id\n                  }\n                  required\n                  onChange={(event) => {\n                    setInstallmentId(event.target.value);\n                    entryFormik.handleSubmit();\n                  }}>\n                  {feeDetails?.feeMap?.installments?.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {index + 1}-{row.amount}-\n                      {feeDetails?.previousReceipts?.filter(\n                        (r) => r.installmentPaid == row._id\n                      )[0]\n                        ? \"Paid\"\n                        : \"Not-Paid\"}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Typography\n                sx={{\n                  fontSize: \"14px\",\n                  margin: \"2px 0 0 0\",\n                  fontWeight: \"bold\",\n                  color: (theme) =>\n                    theme.palette.mode === \"dark\" ? \"orange\" : \"red\",\n                }}>\n                Due Date :{\" \"}\n                {installmentId\n                  ? dayjs(\n                      feeDetails?.feeMap?.installments.filter(\n                        (i) => i._id == installmentId\n                      )[0]?.dueDate\n                    )\n                      .toDate()\n                      .toLocaleDateString()\n                  : null}\n              </Typography>\n            </Box>\n\n            <Box>\n              <Typography fontSize=\"12px\">\n                <b>Past Due (All Other Academic Years) :</b> ₹{\" \"}\n                <span>{feeDetails?.pastDues?.toFixed(2)}</span>\n              </Typography>\n              <Typography fontSize=\"12px\">\n                <b>Total Due (Current Academic Year) :</b> ₹{\" \"}\n                <span>\n                  {feeDetails?.totalDueForThisAcademicYear?.toFixed(2)}\n                </span>\n              </Typography>\n              {installmentId && (\n                <Typography fontSize=\"12px\">\n                  <b>Current Due (Current Academic Year) :</b> ₹{\" \"}\n                  <span>{feeDetails?.currentDue?.toFixed(2)}</span>\n                </Typography>\n              )}\n            </Box>\n          </Box>\n        </Paper>\n      ) : null}\n\n      {/* Previous Receipts */}\n      {!feeDetails?.previousReceipts?.length ? null : (\n        <Paper sx={{ padding: \"10px\", margin: \"10px 0\" }}>\n          <Typography fontSize=\"14px\" mb={2}>\n            <b>Previous Receipts:</b> PP - Partially Paid, PPD - Partial Payment\n            Done, FP - Full Payment\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: \"10px\",\n              columnGap: \"5px\",\n            }}>\n            {feeDetails.previousReceipts.map((p) => (\n              <LoadingButton\n                loading={downloadingReceipt === p._id}\n                size=\"small\"\n                variant=\"outlined\"\n                disabled={downloadingReceipt ? true : false}\n                key={p._id}\n                onClick={(e) => downloadReceipt(e, p._id)}\n                endIcon={<DownloadForOfflineSharpIcon />}>\n                {dayjs(p.paidAt).format(\"DD/MM/YYYY\")}-\n                {p.partiallyPaid\n                  ? p.partialPaymentCompleted\n                    ? \"PPD\"\n                    : \"PP\"\n                  : \"FP\"}\n              </LoadingButton>\n            ))}\n          </Box>\n        </Paper>\n      )}\n      {/* Fee Particular details */}\n      {!feeDetails ? null : (\n        <TableContainer component={Paper}>\n          <Table size=\"small\">\n            <TableHead\n              sx={{\n                backgroundColor: (theme) => theme.palette.primary.main,\n              }}>\n              <TableRow>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  #SL\n                </TableCell>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Fee Particular\n                </TableCell>\n\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Due Amount\n                </TableCell>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Collecting Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {feeDetails?.feeMapCategories?.map((itemDetail, index) => (\n                <TableRow key={index}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">\n                    <Typography>{itemDetail.name}</Typography>\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    <Typography fontWeight=\"bold\">\n                      ₹ {itemDetail.amount}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <CustomInput\n                      disabled={!itemDetail.amount}\n                      type=\"number\"\n                      style={{ maxWidth: \"150px\", margin: \"4px 0\" }}\n                      value={itemDetail.amountPaid || \"\"}\n                      label=\"Amount\"\n                      onChange={(e) =>\n                        handleChangeCollectingAmount(e, itemDetail)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? \"rgba(255,255,255,0.2)\"\n                      : \"whitesmoke\",\n                }}>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\">\n                  <Typography sx={{ fontWeight: \"bold\" }}>Total</Typography>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <Typography sx={{ fontWeight: \"bold\" }}>\n                    ₹ {feeDetails?.currentDue?.toFixed(2)}\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Typography sx={{ fontWeight: \"bold\" }}>\n                    ₹ {collectingAmount}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <ExtraFeeContainer>\n            <Stack direction=\"row\" columnGap={2}>\n              <CustomInput\n                type=\"number\"\n                name=\"penalty\"\n                value={penalty}\n                onChange={(e) => setPenalty(e.target.value)}\n                label=\"Penalty/Fine\"\n                style={{ marginBottom: \"15px\" }}\n              />\n              <CustomInput\n                type=\"number\"\n                name=\"miscellaneous\"\n                value={miscellaneous}\n                onChange={(e) => setMiscellaneous(e.target.value)}\n                label=\"Miscellaneous\"\n              />\n            </Stack>\n            <Box sx={{ display: \"flex\", columnGap: 2, alignItems: \"center\" }}>\n              <Stack direction=\"row\" columnGap={2}>\n                <Typography sx={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n                  {concession\n                    ? concession?.format === \"Value\"\n                      ? `Concession : ₹${concession?.concession}`\n                      : `Concession : ${concession?.concession}%`\n                    : \"\"}\n                </Typography>\n                <Button\n                  color=\"warning\"\n                  onClick={handleOpenConcessionModal}\n                  variant=\"contained\"\n                  size=\"small\">\n                  {concession ? \"remove concession\" : \"add concession\"}\n                </Button>\n              </Stack>\n\n              <Button\n                onClick={handleOpenCollectFeeModal}\n                variant=\"contained\"\n                size=\"small\">\n                collect fee\n              </Button>\n            </Box>\n          </ExtraFeeContainer>\n        </TableContainer>\n      )}\n\n      {/* Concession model */}\n      <QuickFeeConcessionModal\n        onSubmit={handleConcessionSubmit}\n        open={openConcessionModal}\n        onClose={handleCloseConcessionModal}\n      />\n      {/* payment details model */}\n      <QuickFeeCollectModal\n        collectingFee={collectingFee}\n        downloadingPreview={downloadingPreview}\n        onPreviewButtonClick={handlePreviewButtonClick}\n        feeReceipt={feeDetails}\n        onSubmit={handleCollectFee}\n        open={openCollectModal}\n        onClose={handleCloseCollectFeeModal}\n        onUpdateNote={setNote}\n        payingAmount={payableAmount}\n        note={note}\n        payingDate={payingDate}\n        setPayingDate={setPayingDate}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const balanceFeeReportTableKeys = [\n  {\n    name: \"Receipt\",\n    key: \"receiptTitle\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Father\",\n    key: \"fatherName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Concession\",\n    key: \"concession\",\n  },\n  {\n    name: \"Fine\",\n    key: \"fine\",\n  },\n  {\n    name: \"Miscellaneous\",\n    key: \"miscellaneous\",\n  },\n  {\n    name: \"Paid\",\n    key: \"paid\",\n  },\n  {\n    name: \"Balance\",\n    key: \"balance\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { balanceFeeReportTableKeys } from \"../../data/tableKeys/balanceFeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\nimport { toast } from \"react-toastify\";\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if ([\"class\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if ([\"classOld\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-Old`;\n      result.push(newItem);\n    } else if ([\"classNew\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-New`;\n      result.push(newItem);\n    } else if (dep === \"hostel\") {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if (dep == \"transport\") {\n      let newItem = `[${data.route.vehicle.number}]+[${data.route.title}]-Transport-[${data.stop.name}]-Stop-[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nexport default function BalanceFeeReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadingExcel, setDownloadingExcel] = useState(false);\n\n  // get balance fee reports\n  const handleSubmitFind = async (values) => {\n    console.log(values, \"values\");\n    setLoading(true);\n\n    try {\n      const { data: feeReport, status } = await get(\n        PRIVATE_URLS.receipt.getBalanceFeeReport,\n        {\n          params: {\n            classId: values.class,\n            sectionId: values.section,\n            feeMapId: values.feeMap,\n            academicYearId: values.academicYear,\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      setData(feeReport.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: handleSubmitFind,\n    enableReinitialize: true,\n  });\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get receipts\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: {\n          search: { active: true },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      entryFormik.setFieldValue(\"receiptName\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            active: true,\n            class: entryFormik.values.class,\n            receiptTitle: entryFormik.values.receiptName,\n          },\n        },\n      });\n      setFeeMaps(\n        data?.result?.map((f) => ({ ...f, label: showInfo(f), value: f._id }))\n      );\n      entryFormik.setFieldValue(\"feeMap\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.receiptName && entryFormik.values.class) {\n      getFeeMaps();\n    }\n  }, [\n    entryFormik.values.receiptName,\n    entryFormik.values.class,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    setData([]);\n  }, [entryFormik.values.feeMap, selectedSetting._id]);\n\n  // Download excel file\n\n  const downloadBalanceReport = async () => {\n    setDownloadingExcel(true);\n    const values = entryFormik.values;\n    try {\n      const response = await get(\n        PRIVATE_URLS.receipt.downloadBalanceFeeReport,\n        {\n          params: {\n            classId: values.class,\n            sectionId: values.section,\n            feeMapId: values.feeMap,\n            academicYearId: values.academicYear,\n            schoolId: selectedSetting._id,\n          },\n          validateStatus: (status) => status < 500,\n          responseType: \"blob\",\n        }\n      );\n\n      if (response.status === 200) {\n        downloadFile(\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n          response.data,\n          \"Balance_Report.xlsx\"\n        );\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingExcel(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Balance Fee Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receipts}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <LoadingButton\n              size=\"small\"\n              variant=\"contained\"\n              loading={loading}\n              onClick={entryFormik.handleSubmit}>\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Balance Fee Report\"\n        bodyData={data}\n        tableKeys={balanceFeeReportTableKeys}\n      />\n\n      {data.length > 0 && (\n        <>\n          <Box\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}>\n            <LoadingButton\n              loading={downloadingExcel}\n              onClick={downloadBalanceReport}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ mt: 3 }}>\n              DOWNLOAD\n            </LoadingButton>\n          </Box>\n        </>\n      )}\n    </>\n  );\n}\n","export const feeOverviewPaymentTableKeys = [\n  {\n    name: \"Payment\",\n    key: \"payment\",\n  },\n  { name: \"Total\", key: \"total\" },\n  { name: \"Cash\", key: \"cash\" },\n  { name: \"Cheque\", key: \"cheque\" },\n  { name: \"DD\", key: \"dd\" },\n  { name: \"Chalan\", key: \"chalan\" },\n  { name: \"NetBanking\", key: \"netBanking\" },\n  { name: \"Online\", key: \"online\" },\n];\n","export const feeOverviewReceiptTableKeys = [\n  {\n    name: \"Receipt No\",\n    key: \"receiptNo\",\n  },\n  { name: \"Paid Date\", key: \"paidDate\" },\n  { name: \"Amount\", key: \"amount\" },\n  { name: \"Payment Mode\", key: \"paymentMode\" },\n  { name: \"Name\", key: \"name\" },\n  { name: \"Class\", key: \"class\" },\n  { name: \"Section\", key: \"section\" },\n  { name: \"Admission No\", key: \"admissionNo\" },\n  { name: \"View\", key: \"view\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { feeOverviewPaymentTableKeys } from \"../../data/tableKeys/feeOverviewPaymentData\";\nimport { feeOverviewReceiptTableKeys } from \"../../data/tableKeys/feeOverviewReceiptData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if ([\"class\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if ([\"classOld\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-Old`;\n      result.push(newItem);\n    } else if ([\"classNew\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class-New`;\n      result.push(newItem);\n    } else if (dep === \"hostel\") {\n      let newItem = `[${data.hostel?.name}]-Hostel`;\n      result.push(newItem);\n    } else if (dep == \"transport\") {\n      let newItem = `[${data.route.vehicle.number}]+[${data.route.title}]-Transport-[${data.stop.name}]-Stop-[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    } else if (dep == \"pickType\") {\n      let newItem = `[${data.pickType}]-Pick_Type`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nexport default function FeeOverview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [collectedBy, setCollectedBy] = useState([]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      collected: \"\",\n      feeReceipt: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getCollected = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list, {\n        params: {\n          search: {\n            $or: [\n              { roleName: \"ACCOUNTANT\" },\n              { roleName: \"SUPER ADMIN\" },\n              { roleName: \"ADMIN\" },\n            ],\n          },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // console.log(data.result, \"role\");\n\n      entryFormik.setFieldValue(\"collected\", data.result[0]?._id);\n\n      const employeeResponse = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          search: {\n            role: entryFormik.values.collected,\n          },\n          schoolId: selectedSetting._id,\n        },\n      });\n      // console.log(employeeResponse.data, \"mep\");\n\n      setCollectedBy(\n        employeeResponse?.data?.result.map((e) => ({\n          ...e,\n          label: e.role?.name,\n          value: e?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get receipts\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      entryFormik.setFieldValue(\"feeReceipt\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            active: true,\n            class: entryFormik.values.class,\n            receiptTitle: entryFormik.values.receiptName,\n          },\n        },\n      });\n      setFeeMaps(\n        data?.result?.map((f) => ({ ...f, label: showInfo(f), value: f._id }))\n      );\n      entryFormik.setFieldValue(\"feeMap\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n    getCollected();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.feeReceipt) {\n      getFeeMaps();\n    }\n  }, [\n    entryFormik.values.class,\n    entryFormik.values.feeReceipt,\n    selectedSetting,\n  ]);\n\n  return (\n    <>\n      <PageHeader title=\"Fee Overview\" />\n      <Paper sx={{ padding: 2, marginBottom: 3 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"collected\"\n              formik={entryFormik}\n              label=\"Select Collected By\"\n              options={collectedBy}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeReceipt\"\n              formik={entryFormik}\n              label=\"Select Fee Receipt\"\n              options={receipts}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <Button variant=\"contained\">Find</Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"data\"\n        bodyData={data}\n        tableKeys={feeOverviewPaymentTableKeys}\n      />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", my: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"addmisionNo\"\n            formik={entryFormik}\n            label=\"Select Addmision No\"\n            // options={\"\"}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormInput formik={entryFormik} name=\"search\" label=\"Search...\" />\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"data\"\n        bodyData={data}\n        tableKeys={feeOverviewReceiptTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const reconciliationTableKeys = [\n  {\n    name: \"Receipt Number\",\n    key: \"receiptNumber\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNo\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amountPaid\",\n  },\n  {\n    name: \"Bank Name\",\n    key: \"bankName\",\n  },\n  {\n    name: \"Bank Branch\",\n    key: \"branchName\",\n  },\n\n  {\n    name: \"Cheque Number\",\n    key: \"chequeNumber\",\n  },\n  {\n    name: \"Date\",\n    key: \"chequeDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { reconciliationTableKeys } from \"../../data/tableKeys/reconciliationData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Reconciliation() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n\n  const getAllReceipts = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.receipt.getReceiptsPaidWithCheque,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n      setData(\n        data.result.map((d) => ({\n          ...d,\n          roleNo: d?.payeeDetails?.rollNumber,\n          name: d?.payeeDetails?.name,\n          bankName: d?.chequeDetails?.bankName,\n          branchName: d?.chequeDetails?.branchName,\n          chequeNumber: d?.chequeDetails?.chequeNumber,\n          chequeDate: d?.chequeDetails?.chequeDate,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllReceipts();\n  }, [selectedSetting._id]);\n  return (\n    <>\n      <PageHeader title=\"Fee Reconciliation\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Fee Reconciliation\"\n        bodyData={data}\n        tableKeys={reconciliationTableKeys}\n      />\n    </>\n  );\n}\n","export const manageHostelTableKeys = [\n  {\n    name: \"Hostel Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Hostel Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Address\",\n    key: \"address\",\n  },\n];\n","/** @format */\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function HostelViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.name}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Type{\" \"}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.type}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Address\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.address}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelTableKeys } from \"../../data/tableKeys/manageHostelData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport HostelViewDialog from \"./HostelViewDialog\";\n\nconst hostelType = [\n  { label: \"Boys\", value: \"Boys\" },\n  { label: \"Girls\", value: \"Girls\" },\n  { label: \"Combined\", value: \"Combined\" },\n];\n\nexport default function ManageHostel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getWarden = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const employeeData = data.result.filter((e) => e.role.name === \"WARDEN\");\n      setEmployees(\n        employeeData.map((e) => ({\n          ...e,\n          label: e.basicInfo.name,\n          value: e._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getWarden();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.hostel.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.hostel.create, values);\n      }\n      setDataToEdit(null);\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      type: dataToEdit?.type || \"\",\n      warden: dataToEdit?.warden?._id || \"\",\n      address: dataToEdit?.address || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const handleEdit = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const deleteHostel = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.hostel.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={manageHostelTableKeys}\n        bodyDataModal=\"hostel\"\n        bodyData={data}\n        onDeleteClick={deleteHostel}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Hostel\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Hostel\" : \"Add Hostel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Hostel Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Phone No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Hostel Type\"\n              required={true}\n              options={hostelType}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"warden\"\n              label=\"Select Warden\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"address\"\n              label=\"Address\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <HostelViewDialog\n        title=\"Hostel Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","export const manageHostelRoomTableKeys = [\n  {\n    name: \"Room Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Specification\",\n    key: \"specification\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomTableKeys } from \"../../data/tableKeys/manageHostelRoom\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ManageRoomType() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomTypes();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.roomType.update + \"/\" + dataToEdit._id,\n          values\n        );\n\n        // setDataToEdit(null);\n      } else {\n        const { data } = await post(PRIVATE_URLS.roomType.create, values);\n      }\n      setLoading(false);\n      getRoomTypes();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      specification: dataToEdit?.specification || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const deleteRoomType = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.roomType.delete + \"/\" + id);\n      getRoomTypes();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"iiii\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Room Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={manageHostelRoomTableKeys}\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoomType}\n        onEditClick={handleEdit}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Room Type\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Room Type\" : \"Add Room Type\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"specification\"\n              label=\"Specification\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const manageHostelRoomBedTableKeys = [\n  {\n    name: \"Room no\",\n    key: \"number\",\n  },\n  {\n    name: \"Room Type\",\n    key: \"roomType\",\n  },\n  {\n    name: \"Total Seat\",\n    key: \"totalBeds\",\n  },\n  {\n    name: \"Hostel Name\",\n    key: \"hostelName\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RoomAndBedViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  console.log(tableData, \"tableData\");\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Room No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.number}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Seat Total\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.totalBeds}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Bed\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.beds?.map((s) => (\n                  <Box\n                    sx={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      my: 1,\n                    }}\n                    key={s.name}>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Position\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.position || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: 600, width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Allocated\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.allocated ? \"Yes\" : \"No\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </Box>\n                ))}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomBedTableKeys } from \"../../data/tableKeys/manageHostelRoomBedData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\n// iocons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RoomAndBedViewDialog from \"./RoomAndBedViewDialog\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ManageRoomAndBed() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [roomType, setRoomType] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [updatingBed, setUpdatingBed] = useState(false);\n  const [deletingBed, setDeletingBed] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rooms\n  const getRoomList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list);\n      setData(\n        data.result.map((h) => ({\n          ...h,\n          hostelName: h?.hostel?.name,\n          roomType: h.type?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get room type list\n  const getRoomTypeList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setRoomType(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get hostel list\n  const getHostelList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setHostels(data.result.map((h) => ({ label: h.name, value: h._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomList();\n    getRoomTypeList();\n    getHostelList();\n  }, [selectedSetting]);\n\n  // Add/Update event handle\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        delete values.beds;\n        const { data } = await put(\n          PRIVATE_URLS.room.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        let payload = { ...values, totalBeds: values.beds.length };\n\n        const { data } = await post(PRIVATE_URLS.room.create, payload);\n      }\n      handleClose();\n      getRoomList();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      type: dataToEdit?.type?._id || \"\",\n      totalBeds: dataToEdit?.totalBeds || 0,\n      hostel: dataToEdit?.hostel?._id || \"\",\n      note: dataToEdit?.note || \"\",\n      beds: dataToEdit?.beds || [\n        {\n          id: 1,\n          name: \"\",\n          position: \"\",\n          allocated: false,\n        },\n      ],\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const onAddBedsHandle = () => {\n    let initialBedsData = [...formik.values.beds];\n    let newBedData = {\n      id: initialBedsData.length + 1,\n      name: \"\",\n      position: \"\",\n      allocated: false,\n    };\n    formik.setFieldValue(\"beds\", [...initialBedsData, newBedData]);\n  };\n\n  const removeBed = (index) => {\n    let initialBedsData = [...formik.values.beds];\n    initialBedsData.splice(index, 1);\n    formik.setFieldValue(\"beds\", initialBedsData);\n  };\n\n  const updateBed = async (bedId) => {\n    let bedData = formik.values.beds.find((bed) => bed._id === bedId);\n    try {\n      setUpdatingBed(true);\n      const { data } = await put(\n        PRIVATE_URLS.room.update + \"/\" + bedId,\n        bedData\n      );\n      setUpdatingBed(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingBed(false);\n    }\n  };\n\n  const deleteBed = async (bedId) => {\n    try {\n      setDeletingBed(true);\n      const { data } = await put(PRIVATE_URLS.room.deleteBed + \"/\" + bedId);\n      setDeletingBed(false);\n    } catch (error) {\n      console.log(error);\n      setDeletingBed(false);\n    }\n  };\n\n  const deleteRoom = async (roomId) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.room.delete + \"/\" + roomId);\n      getRoomList();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    // console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    formik.resetForm();\n  };\n\n  const handleCustomInputChange = (event, bed) => {\n    formik.setFieldValue(\n      \"beds\",\n      formik.values.beds.map((b) =>\n        b.id === bed.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getRoomList();\n  };\n\n  const onCloseModal = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel Room & Beds\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        tableKeys={manageHostelRoomBedTableKeys}\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoom}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm title=\"Add Room & Bed\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle={dataToEdit ? \"Update Room & Bed\" : \"Add Room & Bed\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"number\"\n              label=\"Room No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"type\"\n              label=\"Room Type\"\n              required={true}\n              options={roomType}\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"totalBeds\"\n              label=\"Total Beds\"\n              required={true}\n              disabled={true}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"hostel\"\n              label=\"Hostel Name\"\n              required={true}\n              options={hostels}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <Box\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                padding: \"10px\",\n                alignItems: \"center\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n              }}>\n              <Typography>Bed Name</Typography>\n              <Typography>Bed Position</Typography>\n              <Typography>Is Alloted</Typography>\n            </Box>\n\n            {/* <AddBedsTable onAddBedsHandle={onAddBedsHandle} formik={formik} /> */}\n            {formik.values.beds.map((b, i) => (\n              <Grid\n                container\n                key={i}\n                gap={1}\n                sx={{\n                  backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                  borderRadius: \"5px\",\n                  padding: \"20px 15px 30px 15px\",\n                  border: \"1px solid lightgrey\",\n                  my: 2,\n                }}>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.name}\n                    name=\"name\"\n                    label=\"Bed Name\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.position}\n                    name=\"position\"\n                    label=\"Bed Position\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid\n                  xs={12}\n                  sm={3}\n                  md={3}\n                  item\n                  sx={{\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}>\n                  <Button onClick={() => onAddBedsHandle(b, i)}>\n                    <AddIcon />\n                  </Button>\n                  <Button color=\"error\" onClick={() => removeBed(i)}>\n                    <RemoveIcon color=\"error\" />\n                  </Button>\n                  {/* <Typography> */}\n                  {/* <Typography color={allocated ? \"green\" : \"red\"}> */}\n                  {/* Not Allotted */}\n                  {/* {allocated ? \"Allotted\" : \"Not Allotted\"} */}\n                  {/* </Typography> */}\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={formik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <RoomAndBedViewDialog\n        title=\"Room Information\"\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n        onClose={onCloseModal}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const hostelMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n  {\n    name: \"Room\",\n    key: \"number\",\n  },\n];\n","/** @format */\n\nexport const hostelNNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { hostelMemberTableKeys } from \"../../data/tableKeys/hostelMemberData\";\nimport { hostelNNonMemberTableKeys } from \"../../data/tableKeys/hostelNonMember\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [hostel, setHostel] = useState([]);\n  const [room, setRoom] = useState([]);\n\n  const getHostel = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n\n      setHostel(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            hostel: entryFormik.values.hostel,\n          },\n        },\n      });\n\n      setRoom(\n        data.result.map((s) => ({\n          ...s,\n          label: String(s.number),\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getHostel();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        hostel: values.hostel,\n        room: values.room,\n        bed: values.bed,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateHostelMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      hostel: \"\",\n      room: \"\",\n      bed: \"\",\n    },\n    onSubmit: addMember,\n  });\n  useEffect(() => {\n    if (entryFormik.values.hostel) {\n      getRoom();\n    }\n  }, [entryFormik.values.hostel, selectedSetting]);\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"hostel\"\n              label=\"Hostel\"\n              required={true}\n              options={hostel}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"room\"\n              label=\"Room No\"\n              required={true}\n              options={room}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"bed\"\n              label=\"Beds\"\n              required={true}\n              options={\n                room\n                  .find((r) => r._id === entryFormik.values.room)\n                  ?.beds.map((bed) => ({\n                    label: bed.name,\n                    value: bed._id,\n                  })) || []\n              }\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function HostelMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [hostelMember, setHostelMember] = useState([]);\n  const [nonHostelMember, setNonHostelMember] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class || entryFormik.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      entryFormik.setFieldValue(\"section\", \"all\");\n      formik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        console.log(data.result, \"=================\");\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class, selectedSetting]);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.removeHostelMember + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"delete\"]}\n          onDeleteClick={handleDelete}\n          tableKeys={hostelMemberTableKeys}\n          bodyData={hostelMember}\n          bodyDataModal=\"hostel member\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={\"custom\"}\n          tableKeys={hostelNNonMemberTableKeys}\n          bodyData={nonHostelMember}\n          bodyDataModal=\"hostel member\"\n          CustomAction={CustomActionAdd}\n          onUpdate={formik.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleTableKeys = [\n  {\n    name: \"Vehicle Number\",\n    key: \"number\",\n  },\n  {\n    name: \"Driver\",\n    key: \"driverName\",\n  },\n  {\n    name: \"Contact\",\n    key: \"driverContactNumber\",\n  },\n  {\n    name: \"Total Passengers\",\n    key: \"totalSeats\",\n  },\n\n  {\n    name: \"Tracking Id\",\n    key: \"trackingId\",\n  },\n  {\n    name: \"Vehicle Model\",\n    key: \"model\",\n  },\n\n  {\n    name: \"Insurance Name\",\n    key: \"insuranceName\",\n  },\n  // {\n  //   name: \"Renewal Date\",\n  //   key: \"renewalDate\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function VehicleViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n  return (\n    <ViewModel title={title} onClose={onClose} open={open}>\n      <Table aria-label=\"customized table\">\n        <TableBody>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              School Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {schoolName}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle Number\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.number}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle Model\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.model}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Driver\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.driverName}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle License\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.licenseNumber}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Driver Contact Number\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.driverContactNumber}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Note\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.note}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Created\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.createdAt}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </ViewModel>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { vehicleTableKeys } from \"../../data/tableKeys/vehicleData\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { Grid } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { get, post, put, del } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport VehicleViewDialog from \"./VehicleViewDialog\";\n\nexport default function Vehicle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    schoolName: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((v) => ({\n          ...v,\n          driverName: v?.driver?.basicInfo?.name,\n          id: v._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddVehicle = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Driver`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getData();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vehicle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.vehicle.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      model: dataToEdit?.model || \"\",\n      driver: dataToEdit?.driver?._id || \"\",\n      licenseNumber: dataToEdit?.licenseNumber || \"\",\n      driverContactNumber: dataToEdit?.driverContactNumber || \"\",\n      trackingId: dataToEdit?.trackingId || \"\",\n      insuranceName: dataToEdit?.insuranceName || \"\",\n      insuranceId: dataToEdit?.insuranceId || \"\",\n      totalSeats: dataToEdit?.totalSeats || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.vehicle.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vehicle\" />\n\n      <CustomTable\n        actions={[\"view\", \"edit\", \"delete\"]}\n        tableKeys={vehicleTableKeys}\n        bodyDataModal=\"vehicle\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* add icon vehicle ==== */}\n      <AddForm title=\"Add Vehicle\" onAddClick={AddVehicle} />\n\n      {/* Add/Update vehicle ==== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Vehicle\" : \"Add Vehicle\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"number\"\n              label=\"Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"driver\"\n              label=\"Driver\"\n              options={employees}\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"model\" label=\"Model\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"licenseNumber\"\n              label=\"License Number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"driverContactNumber\"\n              label=\"Driver Contact Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"trackingId\"\n              label=\"Tracking Id\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"insuranceName\"\n              label=\"Insurance Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"insuranceId\"\n              label=\"Insurance Id\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"totalSeats\"\n              label=\"Total Seats\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* view vehicle ========== */}\n      <VehicleViewDialog\n        title=\"Vehicle Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const manageRouteTableKeys = [\n  {\n    name: \"Route Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Route Start\",\n    key: \"routeStart\",\n  },\n  {\n    name: \"Route End\",\n    key: \"routeEnd\",\n  },\n  {\n    name: \"Vehicle For Route\",\n    key: \"vehicleForRoute\",\n  },\n\n  {\n    name: \"Stop Name\",\n    key: \"stopName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RouteAndTripViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <ViewModel title={title} onClose={onClose} open={open}>\n      <Table aria-label=\"customized table\">\n        <TableBody>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              School Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {schoolName || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route Title\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.title || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route Start\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.routeStart || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Route End\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.routeEnd || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Vehicle For Route{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.vehicle?.number || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Stops\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData.stops?.map((s, index) => (\n                <Table key={index} aria-label=\"stop details\">\n                  <TableBody>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Stop Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Stop KM\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.stopKM || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Pick Start Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.pickTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Pick End Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.pickEndTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Drop Start Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.dropTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\", width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Drop End Time\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.dropEndTime || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n              ))}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow isDarkMode={isDarkMode}>\n            <StyledTableCell\n              align=\"left\"\n              sx={{ fontWeight: \"bold\" }}\n              isDarkMode={isDarkMode}>\n              Note\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n              {tableData?.note || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </ViewModel>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageRouteTableKeys } from \"../../data/tableKeys/manageRouteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Box, Button, Grid, IconButton, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RouteAndTripViewDialog from \"./RouteAndTripViewDialog\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n  position: \"relative\",\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nexport default function ManageRouteAndTrips() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [updatingStop, setUpdatingStop] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rout\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      // console.log(data, \"herere\");\n      setData(\n        data.result.map((v) => ({\n          ...v,\n          stopName: v.stops?.map((s) => s.name),\n          vehicleForRoute: v.vehicle?.number,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get vehicle\n  const getVehicles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list);\n      setVehicles(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddRouteTrips = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.route.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.route.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      routeStart: dataToEdit?.routeStart || \"\",\n      routeEnd: dataToEdit?.routeEnd || \"\",\n      pickStart: dataToEdit?.pickStart || \"\",\n      pickEnd: dataToEdit?.pickEnd || \"\",\n      dropStart: dataToEdit?.dropStart || \"\",\n      dropEnd: dataToEdit?.dropEnd || \"\",\n      stops: dataToEdit?.stops || [\n        {\n          id: 1,\n          name: \"\",\n          stopKM: \"\",\n          pickTime: \"\",\n          pickEndTime: \"\",\n          dropTime: \"\",\n          dropEndTime: \"\",\n        },\n      ],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const addStop = () => {\n    let initialStopsData = [...entryFormik.values.stops];\n    entryFormik.setFieldValue(\"stops\", [\n      ...entryFormik.values.stops,\n      {\n        id: initialStopsData.length + 1,\n        name: \"\",\n        stopKM: \"\",\n        pickTime: \"\",\n        pickEndTime: \"\",\n        dropTime: \"\",\n        dropEndTime: \"\",\n      },\n    ]);\n  };\n\n  const updateStop = async (stopId) => {\n    console.log(stopId, \"stopId\");\n    let stopData = entryFormik.values.stops.find((stop) => stop._id === stopId);\n    console.log(stopData, \"stopData\");\n\n    try {\n      setUpdatingStop(true);\n      const { data } = await put(\n        PRIVATE_URLS.route.updateStop + \"/\" + stopId,\n        stopData\n      );\n      setUpdatingStop(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingStop(false);\n    }\n  };\n\n  const removeStop = (index) => {\n    let initialBedsData = [...entryFormik.values.stops];\n    initialBedsData.splice(index, 1);\n    entryFormik.setFieldValue(\"stops\", initialBedsData);\n  };\n\n  const deleteRoute = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.route.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  useEffect(() => {\n    getVehicles();\n    getData();\n  }, [selectedSetting]);\n\n  const handleCustomInputChange = (event, stop) => {\n    entryFormik.setFieldValue(\n      \"stops\",\n      entryFormik.values.stops.map((b) =>\n        b.id === stop.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getData();\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Manage Route & Trips\" />\n\n      {/* show data table ============== */}\n      <CustomTable\n        actions={[\"edit\", \"view\", \"delete\"]}\n        tableKeys={manageRouteTableKeys}\n        bodyDataModal=\"route\"\n        bodyData={data}\n        onViewClick={handleClickOpenView}\n        onEditClick={handleEdit}\n        onDeleteClick={deleteRoute}\n      />\n\n      {/* Add icon ============= */}\n      <AddForm title=\"Add Route & Trips\" onAddClick={AddRouteTrips} />\n\n      {/* Add/Update dialog ============= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Route & Trips\" : \"Add Route & Trips\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Title\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicles}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"routeStart\"\n              label=\"Route Start\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"routeEnd\"\n              label=\"Route End\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"pickStart\"\n              required={true}\n              label=\"Pick Start\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"pickEnd\"\n              required={true}\n              label=\"Pick End\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"dropStart\"\n              required={true}\n              label=\"Drop Start\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"dropEnd\"\n              required={true}\n              label=\"Drop End\"\n            />\n          </Grid>\n        </Grid>\n        {entryFormik.values.stops.map(\n          (stop, index) => (\n            console.log(stop, \"gg\"),\n            (\n              <FormBox key={index}>\n                <IconButton\n                  color=\"error\"\n                  sx={{ position: \"absolute\", right: 0, top: 0 }}\n                  onClick={() => removeStop(index)}>\n                  <CloseIcon />\n                </IconButton>\n                <Grid container spacing={2}>\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.name}\n                      name=\"name\"\n                      label=\"Name\"\n                      required={true}\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.stopKM}\n                      name=\"stopKM\"\n                      label=\"Stop KM\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.pickTime}\n                      name=\"pickTime\"\n                      type=\"time\"\n                      label=\"Pick Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.pickEndTime}\n                      type=\"time\"\n                      name=\"pickEndTime\"\n                      label=\"Pick End Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.dropTime}\n                      type=\"time\"\n                      name=\"dropTime\"\n                      label=\"Drop Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n\n                  <Grid xs={12} sm={12} md={6} item>\n                    <CustomInput\n                      value={stop?.dropEndTime}\n                      type=\"time\"\n                      name=\"dropEndTime\"\n                      label=\"Drop End Time\"\n                      onChange={(e) => handleCustomInputChange(e, stop)}\n                      required={true}\n                    />\n                  </Grid>\n                  <Grid xs={12} sm={12} md={6} item>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => updateStop(stop._id)}>\n                      Update\n                    </Button>\n                  </Grid>\n                </Grid>\n              </FormBox>\n            )\n          )\n        )}\n\n        <Button variant=\"contained\" size=\"small\" onClick={addStop}>\n          Add\n        </Button>\n\n        <Grid container spacing={2}>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Route and trip view ============= */}\n      <RouteAndTripViewDialog\n        title=\"Trasport Route Information\"\n        onClose={onClose}\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const transportAddMemberTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Class\",\n    key: \"name\",\n    path: \"className\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"sectionName\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n];\n","/** @format */\n\nexport const transportMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNo\",\n  },\n  {\n    name: \"Stop Name\",\n    key: \"name\",\n    path: \"stopName\",\n  },\n  {\n    name: \"Pick Type\",\n    key: \"pickType\",\n    path: \"pickType\",\n  },\n\n  {\n    name: \"Route Start\",\n    key: \"routeStart\",\n    path: \"routeStart\",\n  },\n  {\n    name: \"Route End\",\n    key: \"routeEnd\",\n    path: \"routeEnd\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { transportAddMemberTableKeys } from \"../../data/tableKeys/transportAddMemberData\";\nimport { transportMemberTableKeys } from \"../../data/tableKeys/transportMemberData\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, SettingsSharp } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\n\nconst Pick_Type = [\n  { label: \"Pick\", value: \"Pick\" },\n  { label: \"Drop\", value: \"Drop\" },\n  { label: \"Both\", value: \"Both\" },\n];\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [route, setRoute] = useState([]);\n\n  const getRoute = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list);\n\n      setRoute(\n        data.result.map((s) => ({ ...s, label: s.title, value: s._id }))\n      );\n\n      console.log(data.result, \"vvbvbbbbv vbfv vhvbfvvc\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(route, \"mmmmmmmmmmm\");\n  useEffect(() => {\n    getRoute();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        routeId: values.route,\n        stopId: values.stop,\n        pickType: values.type,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateTransportMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      route: \"\",\n      stop: \"\",\n      type: \"\",\n    },\n    onSubmit: addMember,\n  });\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <Button\n          size=\"small\"\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={handleClickOpen}>\n          Member\n        </Button>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"route\"\n              label=\"Route\"\n              required={true}\n              options={route}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"stop\"\n              label=\"Stop\"\n              required={true}\n              options={\n                route\n                  .find((r) => r._id === entryFormik.values.route)\n                  ?.stops.map((stop) => ({\n                    label: stop.name,\n                    value: stop._id,\n                  })) || []\n              }\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              name=\"type\"\n              formik={entryFormik}\n              label=\"Pick Type\"\n              options={Pick_Type}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function TransportMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [transportMember, setTransportMember] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const [transportMemberList, setTransportMemberList] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik1.setFieldValue(\"academicYear\", data.result[0]?._id);\n      formik2.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik1.setFieldValue(\"class\", data.result[0]?._id);\n      formik2.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik1.values.class || formik2.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      formik1.setFieldValue(\"section\", \"all\");\n      formik2.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            pickType: s.transportInfo,\n            routeStart: s?.transportInfo?.route,\n            routeEnd: s?.transportInfo?.route,\n            stopName: s?.transportInfo?.stop,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            className: s.academicInfo.class,\n            sectionName: s.academicInfo.section,\n          }));\n\n        setTransportMember(filteredDataMember);\n        setTransportMemberList(filteredDataNonMember);\n\n        console.log(filteredDataNonMember, \"kkkkk\");\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            pickType: s.transportInfo,\n            routeStart: s?.transportInfo?.route,\n            routeEnd: s?.transportInfo?.route,\n            stopName: s?.transportInfo?.stop,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.transportMember)\n          .map((s) => ({\n            ...s,\n            rollNo: s.academicInfo,\n            className: s.academicInfo.class,\n            sectionName: s.academicInfo.section,\n          }));\n\n        setTransportMember(filteredDataMember);\n        setTransportMemberList(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik1 = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik2 = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  useEffect(() => {\n    if (formik1.values.class || formik2.values.class) {\n      getSections();\n    }\n  }, [formik2.values.class, formik1.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(\n        PRIVATE_URLS.student.removeTransportMember + \"/\" + id\n      );\n      formik1.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <PageHeader title=\"Transport Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Add Member\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <form onSubmit={formik1.handleSubmit}>\n          {\" \"}\n          <Paper sx={{ padding: 2, marginBottom: 2 }}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik1}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik1}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik1}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n        <CustomTable\n          actions={[\"delete\"]}\n          tableKeys={transportMemberTableKeys}\n          bodyData={transportMember}\n          bodyDataModal=\"transport member\"\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={formik2.handleSubmit}>\n          <Paper sx={{ padding: 2, marginBottom: 2 }}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik2}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik2}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik2}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n\n              <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n        <CustomTable\n          actions={\"custom\"}\n          tableKeys={transportAddMemberTableKeys}\n          bodyData={transportMemberList}\n          bodyDataModal=\"transport member\"\n          CustomAction={CustomActionAdd}\n          onUpdate={formik2.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const routesTableKeys = [\n  {\n    name: \"Vehicle\",\n    key: \"vehicle\",\n  },\n  {\n    name: \"Route\",\n    key: \"route\",\n  },\n  {\n    name: \"Pick Start\",\n    key: \"pickStart\",\n  },\n  {\n    name: \"Pick End\",\n    key: \"pickEnd\",\n  },\n\n  {\n    name: \"Drop Start\",\n    key: \"dropStart\",\n  },\n  {\n    name: \"Drop End\",\n    key: \"dropEnd\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { routesTableKeys } from \"../../data/tableKeys/routesData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { Card, Typography } from \"@mui/material\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Routes() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [sumOfSeat, setSumOfSeat] = useState(0);\n\n  // get rout\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      console.log(data, \"herere\");\n      setData(\n        data.result.map((r) => ({\n          ...r,\n          route: `${r.routeStart} - ${r.routeEnd}`,\n          vehicle: r.vehicle?.number,\n          totalSeats: r.vehicle?.totalSeats,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      const totalSeat = data.map((s) => parseInt(s.totalSeats));\n\n      let sum = 0;\n      for (let i = 0; i < totalSeat.length; i++) {\n        sum += totalSeat[i];\n      }\n      setSumOfSeat(sum);\n    }\n  }, [data, selectedSetting]);\n\n  console.log(sumOfSeat, \"sumOfSeat\");\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"Trips\" />\n      <Card\n        style={{\n          padding: 10,\n          paddingLeft: \"1rem\",\n          display: \"flex\",\n          gap: \"20px\",\n          borderRadius: 0,\n        }}>\n        <Typography>Vehicle: {data.length}</Typography>\n        <Typography>Total Seats: {sumOfSeat}</Typography>\n      </Card>\n      <CustomTable\n        actions={[]}\n        tableKeys={routesTableKeys}\n        bodyDataModal=\"trips\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleLogTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Departure Time\",\n    key: \"departureTime\",\n  },\n  {\n    name: \"Reading At Departure\",\n    key: \"reading\",\n    path: \"readingAtDepartureReading\",\n  },\n  {\n    name: \"Arrival Time\",\n    key: \"arrivalTime\",\n  },\n  {\n    name: \"Reading At Arrival\",\n    key: \"reading\",\n    path: \"readingAtArrival\",\n  },\n  {\n    name: \"Total KM Run\",\n    key: \"totalDistanceTravelled\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { vehicleLogTableKeys } from \"../../data/tableKeys/vehicleLogData\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, styled } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { downloadFile } from \"../../utils\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nconst Trip_Completed = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function VehicleLog() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [departure, setDeparture] = useState([]);\n  const [arrival, setArrival] = useState([]);\n  const [vehicle, setVehicle] = useState([]);\n  const [route, setRoute] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicleLog.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            route: values.route,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      setData(\n        data.result.map((s) => ({\n          ...s,\n          readingAtDepartureReading: s?.readingAtDeparture,\n          readingAtArrival: s?.readingAtArrival,\n        }))\n      );\n\n      console.log(data.result, \"kkkkkkk\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, [selectedSetting]);\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getLogPdf = await get(PRIVATE_URLS.vehicleLog.downloadPdf, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: formik.values.vehicle,\n            route: formik.values.route,\n\n            fromDate: dayjs(formik.values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(formik.values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      downloadFile(\"application/pdf\", getLogPdf.data, \"vehiclelog.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoute = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: formik.values.vehicle || entryFormik.values.vehicle,\n          },\n        },\n      });\n      setRoute(\n        data.result.map((v) => ({\n          ...v,\n          label: v.title,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"route\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n\n      const formDataDeparture = new FormData();\n      const formDataArrival = new FormData();\n\n      formDataDeparture.append(\"schoolId\", selectedSetting._id);\n      formDataDeparture.append(\"route\", values.route);\n      formDataDeparture.append(\"vehicle\", values.vehicle);\n      formDataDeparture.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n\n      formDataDeparture.append(\"departureTime\", values.departureTime);\n      formDataDeparture.append(\"readingAtDeparture\", values.readingAtDeparture);\n      formDataDeparture.append(\n        \"totalDistanceTravelled\",\n        values.totalDistanceTravelled\n      );\n\n      departure.forEach((file) =>\n        formDataDeparture.append(\"departureImage\", file)\n      );\n\n      formDataArrival.append(\"arrivalTime\", values.arrivalTime);\n      formDataArrival.append(\"readingAtArrival\", values.readingAtArrival);\n      formDataArrival.append(\n        \"spareUse\",\n        JSON.stringify({ distance: values.distance, reason: values.reason })\n      );\n      arrival.forEach((file) => formDataArrival.append(\"arrivalImage\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.vehicleLog.update + \"/\" + dataToEdit._id,\n          formDataArrival,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.vehicleLog.create,\n          formDataDeparture,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      route: dataToEdit?.route._id || \"\",\n      vehicle: dataToEdit?.vehicle._id || \"\",\n\n      departureTime: dataToEdit?.departureTime || \"\",\n      readingAtDeparture: dataToEdit?.readingAtDeparture?.reading || \"\",\n      arrivalTime: dataToEdit?.arrivalTime || \"\",\n      readingAtArrival: dataToEdit?.readingAtArrival?.reading || \"\",\n      distance: dataToEdit?.spareUse?.distance || \"\",\n      date: dataToEdit?.date || null,\n      reason: dataToEdit?.spareUse?.reason || \"\",\n      totalDistanceTravelled: dataToEdit?.totalDistanceTravelled || 0,\n\n      tripCompleted: dataToEdit?.tripCompleted || false,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      route: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"departureImage\") {\n        setDeparture(fileList);\n      } else {\n        setArrival(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setDeparture(departure.filter((img) => img.name != fileName));\n    setArrival(arrival.filter((img) => img.name != fileName));\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle || entryFormik.values.vehicle) {\n      getRoute();\n    }\n  }, [formik.values.vehicle, entryFormik.values.vehicle, selectedSetting]);\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.route) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.route, selectedSetting]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.vehicleLog.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Vehicle Log\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"route\"\n                formik={formik}\n                label=\"Select Route\"\n                options={route}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n\n              <Button\n                size=\"small\"\n                onClick={handleGetPrintPdf}\n                variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <AddForm title=\"Add Vehicle Log\" onAddClick={AddDepartmentHandel} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Vehicle Log\" : \"Add Vehicle log\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"route\"\n              label=\"Route\"\n              required={true}\n              options={route}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker formik={entryFormik} name=\"date\" label=\"Date\" />\n          </Grid>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              type=\"time\"\n              name=\"departureTime\"\n              label=\"Departure Time\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"totalDistanceTravelled\"\n              label=\"Total Distance Travelled\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={12} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"tripCompleted\"\n              label=\"Trip Completed\"\n              options={Trip_Completed}\n            />\n          </Grid>\n        </Grid>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} sm={12} md={6} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"readingAtDeparture\"\n                label=\"Reading At Departure\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={6} item>\n              <FileSelect\n                name=\"departureImage\"\n                label=\"Select File\"\n                onChange={(e) => handleChangePhoto(e, \"departureImage\")}\n                customOnChange={true}\n                previousFile={dataToEdit?.readingAtDeparture?.image}\n                selectedFiles={departure}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/*,.pdf\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        {dataToEdit ? (\n          <>\n            <Grid container spacing={2}>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  type=\"time\"\n                  name=\"arrivalTime\"\n                  label=\"Arrival Time\"\n                />\n              </Grid>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput\n                  formik={entryFormik}\n                  name=\"distance\"\n                  label=\"Distance\"\n                />\n              </Grid>\n              <Grid xs={12} sm={12} md={6} item>\n                <FormInput formik={entryFormik} name=\"reason\" label=\"Reason\" />\n              </Grid>\n            </Grid>\n\n            <FormBox>\n              <Grid container spacing={2}>\n                <Grid xs={12} sm={12} md={6} item>\n                  <FormInput\n                    formik={entryFormik}\n                    name=\"readingAtArrival\"\n                    label=\"Reading At Arrivale\"\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={6} item>\n                  <FileSelect\n                    name=\"arrivalImage\"\n                    label=\"Select File\"\n                    onChange={(e) => handleChangePhoto(e, \"arrivalImage\")}\n                    customOnChange={true}\n                    selectedFiles={arrival}\n                    previousFile={dataToEdit?.readingAtArrival?.image}\n                    onRemove={(fileName) => handleRemoveFile(fileName)}\n                    accept=\"image/*,.pdf\"\n                  />\n                </Grid>\n              </Grid>\n            </FormBox>\n          </>\n        ) : null}\n      </FormModal>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={vehicleLogTableKeys}\n        bodyDataModal=\"vehicle log\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n    </>\n  );\n}\n","export const vehicleFirmTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone Number\",\n    key: \"contactNumber\",\n  },\n  {\n    name: \"Email\",\n    key: \"email\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { vehicleFirmTableKeys } from \"../../data/tableKeys/vehcleFirmData\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { Button, Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport { Add } from \"@mui/icons-material\";\n\nexport default function Firm() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.firm.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.firm.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      email: dataToEdit?.email || \"\",\n      GSTNumber: dataToEdit?.GSTNumber || \"\",\n      website: dataToEdit?.website || \"\",\n      address: dataToEdit?.address || \"\",\n      city: dataToEdit?.city || \"\",\n      state: dataToEdit?.state || \"\",\n      zipCode: dataToEdit?.zipCode || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.firm.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        tableKeys={vehicleFirmTableKeys}\n        bodyData={data}\n        bodyDataModal=\"firm\"\n        actions={[\"edit\", \"delete\"]}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Firm\" : \"Add Firm\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Contact Number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"email\" label=\"Email\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"GSTNumber\"\n              label=\"GST Number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"website\" label=\"Website\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"address\" label=\"Address\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"city\" label=\"City\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"state\" label=\"State\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"zipCode\" label=\"Zip Code\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleFuelTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Firm\",\n    key: \"name\",\n    path: \"firmName\",\n  },\n  {\n    name: \"Bill No\",\n    key: \"billNo\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Km\",\n    key: \"kiloMeter\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleFuelTableKeys } from \"../../data/tableKeys/vehicleFuelData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nexport default function Fuel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectReceipt, setSelectReceipt] = useState([]);\n  const [vehicle, setVehicle] = useState([]);\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceFuel.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n\n      console.log(data.result, \"firm\");\n      setData(data.result.map((s) => ({ ...s, firmName: s.firm })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"vehicle\", values.vehicle);\n      formData.append(\"firm\", values.firm);\n      formData.append(\"date\", dayjs(values.date).format(\"YYYY-MM-DD\"));\n      formData.append(\"billNo\", values.billNo);\n      formData.append(\"fuelQuantity\", values.fuelQuantity);\n      formData.append(\"rate\", values.rate);\n      formData.append(\"amount\", values.amount);\n      formData.append(\"kiloMeter\", values.kiloMeter);\n\n      selectReceipt.forEach((file) => formData.append(\"file\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceFuel.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceFuel.create,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      date: dataToEdit?.date || \"\",\n      billNo: dataToEdit?.billNo || \"\",\n      fuelQuantity: dataToEdit?.fuelQuantity || \"\",\n      rate: dataToEdit?.rate || \"\",\n      amount: dataToEdit?.amount || \"\",\n      kiloMeter: dataToEdit?.kiloMeter || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectReceipt(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectReceipt(selectReceipt.filter((img) => img.name != fileName));\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceFuel.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n\n  const handleDownload = () => {\n    const downloadUrl = dataToEdit?.receipt;\n    if (downloadUrl) {\n      window.open(downloadUrl, \"_blank\");\n    }\n  };\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        tableKeys={vehicleFuelTableKeys}\n        bodyData={data}\n        bodyDataModal=\"fuel\"\n        actions={[\"edit\", \"delete\"]}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Fuel\" : \"Add Fuel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"firm\"\n              label=\"Firm\"\n              required={true}\n              options={firm}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"billNo\"\n              label=\"Bill No\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"fuelQuantity\"\n              label=\"Fuel Quantity\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"rate\"\n              label=\"Rate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kiloMeter\"\n              label=\"Kilo Meter\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FileSelect\n              name=\"receipt\"\n              label=\"Select File\"\n              onChange={(e) => handleChangeFiles(e)}\n              previousFile={dataToEdit?.receipt}\n              customOnChange={true}\n              selectedFiles={selectReceipt}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n            />\n          </Grid>\n\n          {dataToEdit && dataToEdit?.receipt ? (\n            <Grid xs={12} md={6} lg={6} item>\n              <Button size=\"small\" variant=\"contained\" onClick={handleDownload}>\n                Download File\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleRepairTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Particulars\",\n    key: \"particulars\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleRepairTableKeys } from \"../../data/tableKeys/vehicleRepairData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function Repair() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [vehicle, setVehicle] = useState([]);\n\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceRepair.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n\n      console.log(payload, \"kkkkkk\");\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceRepair.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceRepair.create,\n          payload\n        );\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      date: dataToEdit?.date || \"\",\n      particulars: dataToEdit?.particulars,\n      amount: dataToEdit?.amount,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceRepair.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyData={data}\n        tableKeys={vehicleRepairTableKeys}\n        bodyDataModal=\"Repair Maintenance\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Repair Maintenance\" : \"Add Repair Maintenance\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"vehicle\"\n              formik={entryFormik}\n              label=\"Select Vehicle\"\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"firm\"\n              formik={entryFormik}\n              label=\"Select Firm\"\n              options={firm}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"particulars\"\n              label=\"Particulars\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleTireTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n  {\n    name: \"Firm\",\n    key: \"name\",\n    path: \"firmName\",\n  },\n  {\n    name: \"Km Reading\",\n    key: \"kmReading\",\n  },\n  {\n    name: \"Km Run\",\n    key: \"kmRun\",\n  },\n  {\n    name: \"Tyre\",\n    key: \"tyre\",\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleTireTableKeys } from \"../../data/tableKeys/vehicleTireData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function VehicleTire() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [vehicle, setVehicle] = useState([]);\n  const [firm, setFirm] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceTyre.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n            firm: values.firm,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result.map((s) => ({ ...s, firmName: s.firm })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getFirm = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.firm.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setFirm(\n        data.result.map((v) => ({\n          ...v,\n          label: v.name,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"firm\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n    getFirm();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceTyre.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceTyre.create,\n          payload\n        );\n      }\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      firm: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      firm: dataToEdit?.firm._id || \"\",\n      kmReading: dataToEdit?.kmReading || \"\",\n      kmRun: dataToEdit?.kmRun || \"\",\n      tyre: dataToEdit?.tyre || \"\",\n      date: dataToEdit?.date || null,\n      amount: dataToEdit?.amount || \"\",\n      rate: dataToEdit?.rate || \"\",\n      tyreNo: dataToEdit?.tyreNo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceTyre.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle && formik.values.firm) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, formik.values.firm, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"firm\"\n                formik={formik}\n                label=\"Select Firm\"\n                options={firm}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={vehicleTireTableKeys}\n        bodyData={data}\n        bodyDataModal=\"tyre/resole\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Vehicle Tyre/Resole\" : \"Add  Vehicle Tyre/Resole\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"vehicle\"\n              formik={entryFormik}\n              label=\"Select Vehicle\"\n              options={vehicle}\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              required={true}\n              name=\"firm\"\n              formik={entryFormik}\n              label=\"Select Firm\"\n              options={firm}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kmReading\"\n              label=\"Km Reading\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"kmRun\"\n              label=\"Km Run\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"tyre\"\n              label=\"Tyre\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"rate\"\n              label=\"Rate\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"tyreNo\"\n              label=\"Tyre No\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const vehicleGreecingTableKeys = [\n  {\n    name: \"Date\",\n    key: \"date\",\n    isDate: true,\n  },\n\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../Tables/CustomTable\";\nimport { vehicleGreecingTableKeys } from \"../../data/tableKeys/vehicleGreecingData\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Add } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nexport default function Greecing() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [vehicle, setVehicle] = useState([]);\n\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.maintenanceGreecing.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            vehicle: values.vehicle,\n\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"kkkkkkk\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const getVehicle = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.vehicle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setVehicle(\n        data.result.map((v) => ({\n          ...v,\n          label: v.number,\n          value: v._id,\n        }))\n      );\n      formik.setFieldValue(\"vehicle\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, [selectedSetting]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        date: dayjs(values.date).format(\"YYYY/MM/DD\"),\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.maintenanceGreecing.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.maintenanceGreecing.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      vehicle: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      vehicle: dataToEdit?.vehicle._id || \"\",\n      date: dataToEdit?.date || null,\n\n      amount: dataToEdit?.amount,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.maintenanceGreecing.delete + \"/\" + id);\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formik.values.vehicle) {\n      formik.handleSubmit();\n    }\n  }, [formik.values.vehicle, selectedSetting]);\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"vehicle\"\n                formik={formik}\n                label=\"Select Vehicle\"\n                options={vehicle}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              alignSelf=\"center\"\n              gap={1}>\n              <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        startIcon={<Add />}\n        sx={{ mt: 1, mb: 2 }}>\n        Add\n      </Button>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyData={data}\n        tableKeys={vehicleGreecingTableKeys}\n        bodyDataModal=\"greecing\"\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Greecing\" : \"Add Greecing\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"vehicle\"\n              label=\"Vehicle\"\n              required={true}\n              options={vehicle}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"date\"\n              label=\"Date\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport Firm from \"../../components/Transport/Firm\";\nimport Fuel from \"../../components/Transport/Fuel\";\nimport Repair from \"../../components/Transport/Repair\";\nimport VehicleTire from \"../../components/Transport/VehicleTire\";\nimport Greecing from \"../../components/Transport/Greecing\";\n\nexport default function VehicleMaintenance() {\n  const [value, setSelectValue] = useState(0);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n  return (\n    <>\n      <PageHeader title=\"Vehicle Maintenance:\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Firm\",\n          \"Vehicle Fuel\",\n          \"Repair Maintenance\",\n          \"New Tyre/Resole\",\n          \"Greecing\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Firm />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Fuel />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Repair />\n      </TabPanel>\n      <TabPanel index={3} value={value}>\n        <VehicleTire />\n      </TabPanel>\n      <TabPanel index={4} value={value}>\n        <Greecing />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const salaryGradeTableKeys = [\n  {\n    name: \"Grade Id\",\n    key: \"gradeCode\",\n  },\n  {\n    name: \"Grade\",\n    key: \"grade\",\n  },\n  {\n    name: \"From\",\n    key: \"from\",\n  },\n  {\n    name: \"To\",\n    key: \"to\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { salaryGradeTableKeys } from \"../../data/tableKeys/salaryGradeData\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useFormik } from \"formik\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nexport default function SalaryGrade() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  const AddSalaryGrade = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.salaryGrade.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.salaryGrade.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      grade: dataToEdit?.grade || \"\",\n      active: dataToEdit?.active || true,\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      breakups: dataToEdit?.breakups || [\n        {\n          id: 1,\n          name: \"\",\n          percentage: \"\",\n        },\n      ],\n      deduction: dataToEdit?.deduction || [\n        {\n          id: 1,\n          name: \"\",\n          percentage: \"\",\n        },\n      ],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleInputChange = (event, item, type) => {\n    entryFormik.setFieldValue(\n      type,\n      entryFormik.values[type].map((i) =>\n        i.id === item.id ? { ...i, [event.target.name]: event.target.value } : i\n      )\n    );\n  };\n\n  const addItem = (type) => {\n    const initialData = [...entryFormik.values[type]];\n    const newItem = {\n      id: initialData.length + 1,\n      name: \"\",\n      percentage: \"\",\n    };\n    entryFormik.setFieldValue(type, [...initialData, newItem]);\n  };\n\n  const removeItem = (index, type) => {\n    const initialData = [...entryFormik.values[type]];\n    initialData.splice(index, 1);\n    entryFormik.setFieldValue(type, initialData);\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.salaryGrade.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Salary Grade\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={salaryGradeTableKeys}\n        bodyDataModal=\"salary grade\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      <AddForm title=\"Add Salary grade\" onAddClick={AddSalaryGrade} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Salary Grade\" : \"Add Salary Grade\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"grade\"\n              label=\"Grade\"\n              required={true}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"from\" label=\"From\" />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"to\" label=\"To\" />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"active\"\n              formik={entryFormik}\n              label=\"Status\"\n              options={Active}\n            />\n          </Grid>\n        </Grid>\n\n        {entryFormik.values.breakups.map((b, i) => (\n          <>\n            <Typography fontWeight={\"bold\"} mt={1}>\n              Breakups:\n            </Typography>\n            <Grid\n              container\n              key={i}\n              gap={1}\n              sx={{\n                backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"20px 15px 30px 15px\",\n                border: \"1px solid lightgrey\",\n                my: 1.5,\n              }}>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={b?.name}\n                  name=\"name\"\n                  label=\"Name\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, b, \"breakups\")}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={b?.percentage}\n                  name=\"percentage\"\n                  label=\"Percentage\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, b, \"breakups\")}\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                sm={3}\n                md={3}\n                item\n                sx={{\n                  fontSize: 16,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}>\n                <Button onClick={() => addItem(\"breakups\")}>\n                  <AddIcon />\n                </Button>\n                <Button color=\"error\" onClick={() => removeItem(i, \"breakups\")}>\n                  <RemoveIcon color=\"error\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </>\n        ))}\n\n        {entryFormik.values.deduction.map((d, i) => (\n          <>\n            <Typography fontWeight={\"bold\"} mt={1}>\n              Deduction:\n            </Typography>\n            <Grid\n              container\n              key={i}\n              gap={1}\n              sx={{\n                backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                borderRadius: \"5px\",\n                padding: \"20px 15px 30px 15px\",\n                border: \"1px solid lightgrey\",\n                my: 1.5,\n              }}>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={d?.name}\n                  name=\"name\"\n                  label=\"Name\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, d, \"deduction\")}\n                />\n              </Grid>\n              <Grid xs={12} sm={4} md={4} item>\n                <CustomInput\n                  value={d?.percentage}\n                  name=\"percentage\"\n                  label=\"Percentage\"\n                  required={true}\n                  onChange={(e) => handleInputChange(e, d, \"deduction\")}\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                sm={3}\n                md={3}\n                item\n                sx={{\n                  fontSize: 16,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}>\n                <Button onClick={() => addItem(\"deduction\")}>\n                  <AddIcon />\n                </Button>\n                <Button\n                  color=\"error\"\n                  onClick={() => removeItem(i, \"deduction\")}>\n                  <RemoveIcon color=\"error\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </>\n        ))}\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const paymentHistoryTableKeys = [\n  {\n    name: \"Month\",\n    key: \"month\",\n  },\n  {\n    name: \"Year\",\n    key: \"year\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport { paymentHistoryTableKeys } from \"../../data/tableKeys/paymentHistoryData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function MakePayment() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [processingPayment, setProcessingPayment] = useState(false);\n  const [downloadingDeductions, setDownloadingDeductions] = useState(false);\n  const [deductions, setDeductions] = useState([]);\n\n  const getDeductions = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      let deductionList = [];\n      for (let sg of data.result) {\n        let deductions = sg.deduction.map((d) => ({\n          ...d,\n          label: d.name,\n          value: d.name,\n        }));\n        deductionList = [...deductionList, ...deductions];\n      }\n\n      setDeductions(deductionList);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDeductions();\n  }, [selectedSetting]);\n\n  const handleProcessPayment = async (values) => {\n    setProcessingPayment(true);\n    try {\n      const selectedMonth = dayjs(values.month).format(\"MMMM\");\n\n      const { data } = await get(PRIVATE_URLS.paymentHistory.downloadPdf, {\n        params: {\n          month: selectedMonth,\n          year: values.year,\n          schoolId: selectedSetting._id,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", data, `Salary_Slip_${selectedMonth}`);\n\n      getPaymentHistory();\n    } catch (error) {\n      console.log(error);\n    }\n    setProcessingPayment(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      month: new Date(),\n      year: new Date(),\n    },\n    onSubmit: handleProcessPayment,\n  });\n\n  const handleDownloadDeductions = async (values) => {\n    const month = values.date;\n    const deduction = values.type;\n\n    setDownloadingDeductions(true);\n    try {\n      const selectedMonth = dayjs(values.month).format(\"MMMM\");\n      const { data } = await get(\n        PRIVATE_URLS.paymentHistory.downloadDeductionPdf,\n        {\n          params: {\n            month: selectedMonth,\n            deduction,\n            schoolId: selectedSetting._id,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", data, `Deductions-${selectedMonth}`);\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingDeductions(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      type: new Date(),\n      date: new Date(),\n    },\n    onSubmit: handleDownloadDeductions,\n  });\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const getPaymentHistory = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.paymentHistory.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setPaymentHistory(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (value === 1) {\n      getPaymentHistory();\n    }\n  }, [value]);\n\n  const handleDownloadPaymentHistory = (data) => {\n    window.open(data.data);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Salary Sheet\", \"History\", \"Salary Deduction\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Month\"\n                name=\"month\"\n                openTo=\"month\"\n                inputFormat=\"MMM\"\n                views={[\"month\"]}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Year\"\n                name=\"year\"\n                openTo=\"year\"\n                inputFormat=\"YYYY\"\n                views={[\"year\"]}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }}>\n              <LoadingButton\n                loading={processingPayment}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Process\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <CustomTable\n          actions={[\"download\"]}\n          tableKeys={paymentHistoryTableKeys}\n          bodyData={paymentHistory}\n          bodyDataModal=\"history\"\n          onDownloadClick={handleDownloadPaymentHistory}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"type\"\n                formik={formik}\n                label=\"Select Deduction Type\"\n                options={deductions}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"Date\"\n                openTo=\"month\"\n                inputFormat=\"MMM/YYYY\"\n                views={[\"month\", \"year\"]}\n                name=\"date\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                onClick={formik.handleSubmit}\n                loading={downloadingDeductions}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const libraryReportTableKeys = [\n  {\n    name: \"Group By Data\",\n    key: \"groupByData\",\n    isDate: true,\n  },\n  {\n    name: \"Issue Total\",\n    key: \"totalIssues\",\n  },\n  {\n    name: \"Return Total\",\n    key: \"totalReturns\",\n  },\n\n  // {\n  //   name: \"Remain Total\",\n  //   key: \"remainTotal\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { libraryReportTableKeys } from \"../../data/tableKeys/libraryTabularData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport dayjs from \"dayjs\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nimport { PieChart, Pie, Tooltip, Cell, Legend } from \"recharts\";\nimport themeData from \"../../data/themeData\";\nimport { downloadFile } from \"../../utils\";\n\nconst graphData = [\n  { name: \"Issue\", value: 400 },\n  { name: \"Return\", value: 300 },\n  { name: \"Remain\", value: 300 },\n];\n\nconst colors = [\"#FFBB28\", \"#00C49F\", \"#32CD32\"];\n\nconst GroupBYData_Options = [\n  {\n    label: \"Daily\",\n    value: \"daily\",\n  },\n  {\n    label: \"Weekly\",\n    value: \"weekly\",\n  },\n  {\n    label: \"Monthly\",\n    value: \"monthly\",\n  },\n  {\n    label: \"Class\",\n    value: \"class\",\n  },\n];\n\nconst HeadingContainer = styled(Grid)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\nconst DataContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"10px\",\n}));\nexport default function LibraryReport() {\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [academicYearGraph, setAcademicYearGraph] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      setAcademicYearGraph(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetDataByGroup = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.report.groupedLibraryData, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupByData: values.groupByData,\n          fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n        },\n      });\n      setData(data.result);\n\n      console.log(data.result, \"data999999999999999999=======\");\n    } catch (error) {}\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: handleGetDataByGroup,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(PRIVATE_URLS.report.downloadGroupedLibraryData, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYear: entryFormik.values.academicYear,\n\n          groupByData: entryFormik.values.groupByData,\n          fromDate: dayjs(entryFormik.values.fromDate).format(\"YYYY/MM/DD\"),\n          toDate: dayjs(entryFormik.values.toDate).format(\"YYYY/MM/DD\"),\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"libraryReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n  return (\n    <>\n      <PageHeader title=\"Library Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Tabular Report\", \"Grapical Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={entryFormik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} sm={6} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"To Date\"\n                  name=\"toDate\"\n                />\n              </Grid>\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                alignSelf=\"center\"\n                gap={1}\n                item>\n                <Button type=\"submit\" size=\"small\" variant=\"contained\">\n                  Find\n                </Button>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleGetPrintPdf}>\n                  Print\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          tableKeys={libraryReportTableKeys}\n          bodyData={data}\n          bodyDataModal=\"library report\"\n          actions={[]}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, mb: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearGraph}\n              />\n            </Grid>\n\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker\n                formik={formik}\n                label=\"From Date\"\n                name=\"fromDate\"\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} lg={3} item>\n              <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n            </Grid>\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              display=\"flex\"\n              alignSelf=\"center\"\n              gap={1}\n              item>\n              <Button size=\"small\" variant=\"contained\">\n                Find\n              </Button>\n              <Button size=\"small\" variant=\"contained\">\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <HeadingContainer container>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper sx={{ padding: 2, mt: 2 }}>\n              <img\n                src={selectedSetting.logo}\n                height={60}\n                width={60}\n                style={{\n                  display: \"block\",\n                  margin: \"auto\",\n                }}\n              />\n\n              <Typography fontSize={18} textAlign=\"center\">\n                {selectedSetting.name}\n              </Typography>\n              <Typography gutterBottom fontSize={12} textAlign=\"center\">\n                {selectedSetting.address}\n              </Typography>\n\n              <DataContainer>\n                {\" \"}\n                <AssessmentIcon\n                  sx={{ color: themeData.darkPalette.primary.main }}\n                />\n                <Typography textAlign=\"center\" color=\"error\">\n                  Libary Report\n                </Typography>\n              </DataContainer>\n            </Paper>\n          </Grid>\n        </HeadingContainer>\n\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\n          <PieChart width={1000} height={380}>\n            <Legend\n              wrapperStyle={{ textAlign: \"center\" }}\n              formatter={(value) => value}\n            />\n            <Pie\n              dataKey=\"value\"\n              isAnimationActive={false}\n              data={graphData}\n              outerRadius={150}\n              label>\n              {graphData.map((entry, index) => (\n                <Cell key={index} fill={colors[index % colors.length]} />\n              ))}\n            </Pie>\n\n            <Tooltip />\n          </PieChart>\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function StudentYearlyAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getStudentAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            studentId: values.student,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n\n      student: \"\",\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting,\n  ]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Yearly Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            item\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Month</TableCell>\n\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData &&\n            Object.keys(attendanceData).map((month) => (\n              <TableRow key={month}>\n                <TableCell align=\"center\">{month}</TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalWorkingDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalPresentDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalAbsentDays}\n                </TableCell>\n                {numbers.map((num) => (\n                  <TableCell key={num.key} align=\"center\">\n                    {getAttendanceForDay(\n                      attendanceData[month].attendance,\n                      month,\n                      num.key\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeYearlyAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"employee\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getEmployeeAttendanceReport,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: values.academicYear,\n            employeeId: values.employee,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      employee: \"\",\n    },\n    onSubmit: handleGetReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getEmployees();\n  }, [selectedSetting._id]);\n\n  // useEffect(() => {\n  //   if (entryFormik.values.academicYear && entryFormik.values.employee) {\n  //     handleGetReport(entryFormik.values);\n  //   }\n  // }, [entryFormik.values.academicYear, entryFormik.values.employee]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else if (status === \"late\") {\n      return \"L\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee Yearly Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"employee\"\n              formik={entryFormik}\n              label=\"Select Employee\"\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Month</TableCell>\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData &&\n            Object.keys(attendanceData).map((month) => (\n              <TableRow key={month}>\n                <TableCell align=\"center\">{month}</TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalWorkingDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalPresentDays}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {attendanceData[month].totalAbsentDays}\n                </TableCell>\n                {numbers.map((num) => (\n                  <TableCell key={num.key} align=\"center\">\n                    {getAttendanceForDay(\n                      attendanceData[month].attendance,\n                      month,\n                      num.key\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentActivityReportTableKeys = [\n  {\n    name: \"Student\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Section\",\n    key: \"sectionName\",\n  },\n\n  {\n    name: \"Activity\",\n    key: \"activityName\",\n  },\n  {\n    name: \"Activity Date\",\n    key: \"activityDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { studentActivityReportTableKeys } from \"../../data/tableKeys/studentActivityReportData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\n\nexport default function StudentActivityReport() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentActivityReport = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.report.getStudentActivityReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: values.academicYear,\n          studentId: values.student,\n        },\n      });\n      setData(data.result);\n    } catch (error) {}\n  };\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(\n        PRIVATE_URLS.report.getStudentActivityReportPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            studentId: entryFormik.values.student,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getPdf.data, \"studentActivityReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudentActivityReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.academicYear && entryFormik.values.class) {\n      getStudents();\n    }\n  }, [\n    entryFormik.values.academicYear,\n    entryFormik.values.class,\n\n    selectedSetting,\n  ]);\n  return (\n    <>\n      <PageHeader title=\"Student Activity Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"student\"\n                formik={entryFormik}\n                label=\"Select Student\"\n                options={students}\n              />\n            </Grid>\n\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              item\n              display=\"flex\"\n              gap={1}\n              alignSelf=\"center\">\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={handleGetPrintPdf}>\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentActivityReportTableKeys}\n        bodyDataModal=\"student activity report\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function StudentAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [section, setSection] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState(\"\");\n\n  const [academicYear, setAcademicYear] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSection(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFetchReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getAllStudentsAttendanceReportForParticularMonth,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            month: new Date(entryFormik.values.month).getMonth() + 1,\n            year: new Date(entryFormik.values.month).getFullYear(),\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            sectionId: entryFormik.values.section,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setSelectedMonthYear(dayjs(entryFormik.values.month).format(\"YYYY-MM\"));\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n\n      month: dayjs(new Date()),\n    },\n    onSubmit: handleFetchReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Attendance Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              options={academicYear}\n              label=\"Select Academic Year\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={section}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Month\"\n              name=\"month\"\n              openTo=\"month\"\n              inputFormat=\"MMM\"\n              views={[\"month\"]}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={12}\n            item\n            display=\"flex\"\n            justifyContent=\"flex-end\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Student Name</TableCell>\n\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData.map((student) => (\n            <TableRow key={student.studentId}>\n              <TableCell align=\"center\">{student.studentName}</TableCell>\n              <TableCell align=\"center\">{student.totalWorkingDays}</TableCell>\n              <TableCell align=\"center\">{student.totalPresentDays}</TableCell>\n              <TableCell align=\"center\">{student.totalAbsentDays}</TableCell>\n              {numbers.map((num) => (\n                <TableCell key={num.key} align=\"center\">\n                  {getAttendanceForDay(\n                    student.attendance,\n                    selectedMonthYear,\n                    num.key\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport dayjs from \"dayjs\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function EmployeeAttendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState(\"\");\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFetchReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(\n        PRIVATE_URLS.report.getAllEmployeesAttendanceReportForParticularMonth,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            month: new Date(entryFormik.values.month).getMonth() + 1,\n            year: new Date(entryFormik.values.month).getFullYear(),\n            academicYearId: entryFormik.values.academicYear,\n          },\n        }\n      );\n      setAttendanceData(data.result);\n      setSelectedMonthYear(dayjs(entryFormik.values.month).format(\"YYYY-MM\"));\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      month: dayjs(new Date()),\n    },\n    onSubmit: handleFetchReport,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  const numbers = [];\n  for (let i = 1; i <= 31; i++) {\n    numbers.push(\n      <TableCell sx={{ color: \"white\", display: \"inline\" }} key={i}>\n        {i}\n      </TableCell>\n    );\n  }\n\n  const getAttendanceForDay = (attendance, yearMonth, day) => {\n    const dayKey = `${yearMonth}-${String(day).padStart(2, \"0\")}`;\n    const status = attendance[dayKey];\n\n    if (status === \"present\") {\n      return \"P\";\n    } else if (status === \"absent\") {\n      return \"A\";\n    } else if (status === \"late\") {\n      return \"L\";\n    } else {\n      return \"-\";\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee Attendance\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              label=\"Month\"\n              name=\"month\"\n              openTo=\"month\"\n              inputFormat=\"MMM\"\n              views={[\"month\"]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item alignSelf=\"center\">\n            <LoadingButton\n              loading={loading}\n              onClick={entryFormik.handleSubmit}\n              size=\"small\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Table>\n        <TableHead\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n          }}>\n          <TableRow>\n            <TableCell align=\"center\">Employee Name</TableCell>\n            <TableCell align=\"center\">Working Days</TableCell>\n            <TableCell align=\"center\">Present Days</TableCell>\n            <TableCell align=\"center\">Absent Days</TableCell>\n            {numbers.map((num) => (\n              <TableCell key={num.key} align=\"center\">\n                {num.key}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {attendanceData.map((employee) => (\n            <TableRow key={employee.employeeId}>\n              <TableCell align=\"center\">{employee.employeeName}</TableCell>\n              <TableCell align=\"center\">{employee.totalWorkingDays}</TableCell>\n              <TableCell align=\"center\">{employee.totalPresentDays}</TableCell>\n              <TableCell align=\"center\">{employee.totalAbsentDays}</TableCell>\n              {numbers.map((num) => (\n                <TableCell key={num.key} align=\"center\">\n                  {getAttendanceForDay(\n                    employee.attendance,\n                    selectedMonthYear,\n                    num.key\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","/** @format */\n\nexport const visitorInfoTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"To Meet\",\n    key: \"toMeetUserName\",\n  },\n  {\n    name: \"ReasonToMeet\",\n    key: \"reasonToMeet\",\n  },\n  {\n    name: \"CheckIn\",\n    key: \"checkIn\",\n  },\n\n  {\n    name: \"Check Out\",\n    key: \"checkOut\",\n  },\n];\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport themeData from \"../../data/themeData\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function VisitorInfoViewModel({\n  open = true,\n  title = \"\",\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table aria-label=\"customized table\">\n            <TableBody>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  School Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.school?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Name\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Phone\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.phone || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Coming From\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.comingForm || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  User Type\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.toMeetUserType?.name || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  To Meet\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.toMeetUserName || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Reason To Meet\n                </StyledTableCell>\n                <StyledTableCell\n                  align=\"left\"\n                  width={100}\n                  isDarkMode={isDarkMode}>\n                  {tableData?.reasonToMeet?.charAt(0).toUpperCase() +\n                    tableData?.reasonToMeet?.slice(1)}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Check In\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.checkIn || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Check Out\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.checkOut || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Note\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.note || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, TextField } from \"@mui/material\";\nimport { visitorInfoTableKeys } from \"../../data/tableKeys/visitorInfoData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport VisitorInfoViewModel from \"./VisitorInfoViewModel\";\nimport moment from \"moment\";\n\nconst Reason_To_Meet = [\n  { label: \"Vendor\", value: \"vendor\" },\n  { label: \"Relative\", value: \"relative\" },\n  { label: \"Friend\", value: \"friend\" },\n  { label: \"Guardian\", value: \"guardian\" },\n  { label: \"Family\", value: \"family\" },\n  { label: \"Interview\", value: \"interview\" },\n  { label: \"Meeting\", value: \"meeting\" },\n  { label: \"Other\", value: \"other\" },\n];\n\nexport default function VisitorInfo() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  // get Roles\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.visitorInfo.list);\n      // console.log(data, \"hhaha\");\n      setData(\n        data.result.map((r) => ({\n          ...r,\n          toMeetUserName: r.toMeetUser.basicInfo.name,\n          checkIn: new Date(r.checkIn).toLocaleString(),\n          checkOut: r.checkOut ? new Date(r.checkOut).toLocaleString() : \"\",\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Roles\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n\n      setRoles(\n        data.result.map((r) => ({\n          ...r,\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n    getData();\n  }, [selectedSetting]);\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    setOpen(false);\n    entryFormik.resetForm();\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      // entryFormik.setFieldValue(\"toMeetUser\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // get Employee\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.toMeetUserType,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Add/update\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.visitorInfo.updateCheckout + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.visitorInfo.create, payload);\n      }\n      getData();\n\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // Formik\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      phone: dataToEdit?.phone || \"\",\n      comingForm: dataToEdit?.comingForm || \"\",\n      toMeetUserType: dataToEdit?.toMeetUserType._id || \"\",\n      toMeetUser: dataToEdit?.toMeetUser?._id || \"\",\n      reasonToMeet: dataToEdit?.reasonToMeet || \"\",\n      note: dataToEdit?.note || \"\",\n\n      // checkOut: dataToEdit?.checkOut\n      //   ? moment(dataToEdit.checkOut, \"DD/MM/YYYY, HH:mm:ss\").format(\n      //       \"YYYY-MM-DDTHH:mm\"\n      //     )\n      //   : \"\",\n\n      checkOut: dataToEdit?.checkOut || null,\n\n      class: dataToEdit?.class?._id || \"\",\n      section: dataToEdit?.section?._id || \"\",\n      roleName: dataToEdit?.roleName || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.toMeetUserType) {\n      let roleName = roles.find(\n        (r) => r._id === entryFormik.values.toMeetUserType\n      )?.name;\n      entryFormik.setFieldValue(\"roleName\", roleName);\n      getEmployees();\n    }\n  }, [entryFormik.values.toMeetUserType]);\n\n  useEffect(() => {\n    if (\n      (entryFormik.values.toMeetUserType,\n      entryFormik.values.class,\n      entryFormik.values.section)\n    ) {\n      let roleName = roles.find(\n        (r) => r._id === entryFormik.values.toMeetUserType\n      )?.name;\n      entryFormik.setFieldValue(\"roleName\", roleName);\n      getStudents();\n    }\n  }, [\n    entryFormik.values.toMeetUserType,\n    entryFormik.values.class,\n    entryFormik.values.section,\n  ]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  // console.log(data, \"mmmmmm\");\n\n  return (\n    <>\n      <PageHeader title=\"Visitor Info\" />\n      <Grid container mb={1}>\n        <Grid\n          xs={12}\n          md={12}\n          lg={12}\n          item\n          display=\"flex\"\n          justifyContent=\"flex-start\"\n          gap={1}>\n          <Button size=\"small\" variant=\"contained\">\n            Excel\n          </Button>\n          <Button size=\"small\" variant=\"contained\">\n            Print\n          </Button>\n        </Grid>\n      </Grid>\n\n      <CustomTable\n        actions={[\"view\", \"edit\"]}\n        tableKeys={visitorInfoTableKeys}\n        bodyDataModal=\"visitor info\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* view visitor info ============= */}\n      <VisitorInfoViewModel\n        title=\"Visitor Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        onClose={onCloseViewModel}\n      />\n\n      {/* Add visitor info ============== */}\n      <AddForm title=\"Add visitor info\" onAddClick={onAddClick} />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Visitor Info\" : \"Add Visitor Info\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Check Out\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"phone\"\n              label=\"Phone\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"comingForm\"\n              label=\"Coming Form\"\n              required={true}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              required={true}\n              name=\"toMeetUserType\"\n              formik={entryFormik}\n              label=\"Select To Meet User Type\"\n              options={roles}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n\n          {entryFormik.values.roleName === \"STUDENT\" && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                  disabled={dataToEdit != null}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <FormSelect\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                  disabled={dataToEdit != null}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              required={true}\n              name=\"toMeetUser\"\n              formik={entryFormik}\n              label=\"Select To Meet User\"\n              options={\n                entryFormik.values.roleName === \"STUDENT\" ? students : employees\n              }\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={6} item>\n            <FormSelect\n              name=\"reasonToMeet\"\n              formik={entryFormik}\n              label=\"Select Reason To Meet\"\n              options={Reason_To_Meet}\n              disabled={dataToEdit != null}\n            />\n          </Grid>\n          {dataToEdit != null && (\n            <>\n              <Grid xs={12} md={6} lg={6} item>\n                <TextField\n                  value={dataToEdit?.checkIn.toLocaleString()}\n                  fullWidth\n                  label=\"Check In\"\n                  name=\"checkIn\"\n                  disabled={dataToEdit != null}\n                  sx={{\n                    mt: 2,\n                    borderWidth: 1,\n                    borderRadius: (theme) => theme.shape.borderRadius,\n                  }}\n                  InputProps={{\n                    style: {\n                      borderWidth: 1,\n                      height: \"42px\",\n                      borderRadius: (theme) => theme.shape.borderRadius,\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={6} item>\n                <TextField\n                  value={dataToEdit?.checkOut}\n                  fullWidth\n                  label=\"Check Out\"\n                  name=\"checkOut\"\n                  disabled={dataToEdit != null}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  sx={{\n                    mt: 2,\n                    borderWidth: 1,\n                    borderRadius: (theme) => theme.shape.borderRadius,\n                  }}\n                  InputProps={{\n                    style: {\n                      borderWidth: 1,\n                      height: \"42px\",\n                      borderRadius: (theme) => theme.shape.borderRadius,\n                    },\n                  }}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const studentCheckOutTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n\n  {\n    name: \"Check Out\",\n    key: \"checkOut\",\n  },\n  {\n    name: \"Parent Name\",\n    key: \"parentName\",\n  },\n  {\n    name: \"Relation\",\n    key: \"relation\",\n  },\n  { name: \"Visitor Contact Number\", key: \"visitorContactNumber\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentCheckOutTableKeys } from \"../../data/tableKeys/studentCheckoutData\";\nimport { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\n\nconst Relation_With_Student = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nexport default function StudentCheckout() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingPdf, setLoadingPdf] = useState(false);\n  const [loadingExcel, setLoadingExce] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentCheckout.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddStudentCheckoutHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: formik.values.academicYear,\n            \"academicInfo.class\": formik.values.class,\n            \"academicInfo.section\": formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n\n      formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    // onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.academicYear) {\n      getData();\n    }\n  }, [formik.values.academicYear]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        student: formik.values.student,\n      };\n\n      setLoading(true);\n\n      const { data } = await put(PRIVATE_URLS.studentCheckout.update, payload);\n      getData();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      student:\n        students.find((student) => student._id === formik.values.student)\n          ?.basicInfo.name || \"\",\n      relationship: \"\",\n      reason: \"\",\n      visitorName: \"\",\n      visitorContactNumber: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleGetPrintPdf = async () => {\n    try {\n      setLoadingPdf(true);\n      const getStudentCheckoutPdf = await get(\n        PRIVATE_URLS.studentCheckout.downloadPdf,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/pdf\",\n        getStudentCheckoutPdf.data,\n        \"student_checkout.pdf\"\n      );\n\n      setLoadingPdf(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingPdf(false);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.studentCheckout.donwloadExcel, {\n        params: { schoolId: selectedSetting._id },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_checkout.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Checkout\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"student\"\n                formik={formik}\n                label=\"Select Student\"\n                options={students}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap={1}>\n              <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                Find\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loadingPdf}\n                onClick={handleGetPrintPdf}\n                variant=\"contained\">\n                Print\n              </LoadingButton>\n\n              <Button\n                size=\"small\"\n                onClick={handleGetDownloadExcel}\n                variant=\"contained\">\n                Excel\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <AddForm\n        title=\"Student Checkout\"\n        onAddClick={AddStudentCheckoutHandel}\n        disabled={!formik.values.student}\n      />\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Checkout\" : \"Add Student Checkout\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Student Name\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormSelect\n              name=\"relationship\"\n              formik={entryFormik}\n              label=\"Relation With Student\"\n              options={Relation_With_Student}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"reason\"\n              formik={entryFormik}\n              label=\"Enter Reason\"\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"visitorName\"\n              formik={entryFormik}\n              label=\"Enter Visitor Name\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} item>\n            <FormInput\n              name=\"visitorContactNumber\"\n              formik={entryFormik}\n              label=\"Enter Visitor Phone\"\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 2,\n            }}>\n            <Button size=\"small\" variant=\"contained\" sx={{ color: \"#fff\" }}>\n              Send OTP\n            </Button>\n          </Grid>\n\n          <Grid xs={12} md={6} item>\n            <FormInput name=\"otp\" formik={entryFormik} label=\"Enter Otp\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n      <CustomTable\n        actions={[\"view\"]}\n        tableKeys={studentCheckOutTableKeys}\n        bodyDataModal=\"student checkout\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","export const ticketTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  {\n    name: \"Status\",\n    key: \"status\",\n  },\n];\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { ticketTableKeys } from \"../data/tableKeys/ticketData\";\nimport AddForm from \"../forms/AddForm\";\nimport FileSelect from \"../forms/FileSelect\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormModal from \"../forms/FormModal\";\nimport FormInput from \"../forms/FormInput\";\n\nexport default function HelpDesk() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [reportImg, setReportImg] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const handelExamTerm = () => {\n    setOpen(true);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      examType: dataToEdit?.examType || \"\",\n      marksAssignmentAllowed: dataToEdit?.marksAssignmentAllowed || false,\n      note: dataToEdit?.note || \"\",\n      isPublic: dataToEdit?.isPublic || false,\n    },\n    onSubmit: console.log(\"lll\"),\n    enableReinitialize: true,\n  });\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setReportImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setReportImg(reportImg.filter((img) => img.name != fileName));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Tickets\" />\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Tickets\"\n        bodyData={data}\n        tableKeys={ticketTableKeys}\n      />\n\n      <AddForm title=\"Add Tickets\" onAddClick={handelExamTerm} />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Report Problem\" : \"Add Report Problem\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"title\"\n              label=\"Subject\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FileSelect\n              name=\"receipt\"\n              label=\"Select Files\"\n              onChange={(e) => handleChangeFiles(e)}\n              customOnChange={true}\n              selectedFiles={reportImg}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              multi={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const guardianFeedbackTableKeys = [\n  { name: \"Class Name\", key: \"className\" },\n  {\n    name: \"Parent Name\",\n    key: \"parentName\",\n  },\n  {\n    name: \"Student Name\",\n    key: \"studentName\",\n  },\n  {\n    name: \"Feedback\",\n    key: \"feedback\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport { guardianFeedbackTableKeys } from \"../data/tableKeys/guardianFeedbackData\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { get, put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport SettingContext from \"../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport ViewModel from \"../forms/ViewModel\";\nimport themeData from \"../data/themeData\";\n\nconst MuiBox = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  marginBottom: \"20px\",\n});\n\nconst CustomActionComponent = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n\n  const updateStatus = async (status) => {\n    try {\n      setLoading(true);\n      await put(PRIVATE_URLS.guardianFeedback.update + \"/\" + data._id, {\n        status,\n      });\n      setLoading(false);\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      <Stack direction=\"row\" spacing={2}>\n        {[\"pending\", \"approved\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"rejected\")}\n            disableElevation\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\">\n            Reject\n          </LoadingButton>\n        )}\n        {[\"pending\", \"rejected\"].includes(data.status) && (\n          <LoadingButton\n            loading={loading}\n            onClick={() => updateStatus(\"approved\")}\n            disableElevation\n            size=\"small\"\n            color=\"success\"\n            variant=\"contained\">\n            Approve\n          </LoadingButton>\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default function GuardianFeedback() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState(\"pending\");\n\n  const [modalData, setModalData] = useState({\n    open: false,\n    contents: \"\",\n    action: () => {},\n  });\n\n  const getFeebacks = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.guardianFeedback.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n      setFilteredData(data.result.filter((f) => f.status === selectedStatus));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFeebacks();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    setFilteredData(data.filter((f) => f.status === selectedStatus));\n  }, [selectedStatus]);\n\n  const handleDelete = async (_id) => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.guardianFeedback.delete + \"/\" + _id\n      );\n      getFeebacks();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      contents: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Guardian Feedback\" />\n      <MuiBox>\n        <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n          {[\"pending\", \"approved\", \"rejected\"].map((status) => (\n            <Button\n              key={status}\n              variant=\"outlined\"\n              sx={{\n                background:\n                  selectedStatus === status\n                    ? themeData.lightPalette.primary.main\n                    : \"\",\n\n                \":hover\": {\n                  background:\n                    selectedStatus === status\n                      ? themeData.darkPalette.primary.main\n                      : \"\",\n                },\n                color:\n                  selectedStatus === status\n                    ? \"#fff\"\n                    : (theme) =>\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#18488\",\n              }}\n              onClick={() => {\n                setSelectedStatus(status);\n              }}>\n              {status}:{data.filter((f) => f.status === status).length}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </MuiBox>\n      <CustomTable\n        actions={[\"custom\", \"delete\", \"view\"]}\n        bodyDataModal=\"feedback\"\n        bodyData={filteredData}\n        tableKeys={guardianFeedbackTableKeys}\n        onDeleteClick={handleDelete}\n        CustomAction={CustomActionComponent}\n        onUpdate={getFeebacks}\n        onViewClick={handleClickOpenView}\n      />\n      {/* ==== view feedback ==== */}\n      <ViewModel\n        title=\"Guardian Feedback\"\n        open={modalData?.open}\n        tableData={modalData?.contents}\n        onClose={onCloseViewModel}>\n        <Box\n          sx={{\n            minWidth: 300,\n            p: 1,\n          }}>\n          <Typography\n            id=\"modal-modal-description\"\n            sx={{ wordBreak: \"break-word\" }}>\n            {modalData?.contents?.feedback}\n          </Typography>\n        </Box>\n      </ViewModel>\n    </>\n  );\n}\n","export const studentBulkPhotoTableKeys = [\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n\n  {\n    name: \"File\",\n    key: \"file\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentBulkPhotoTableKeys } from \"../../data/tableKeys/studentBulkPhotoData\";\n\nexport default function StudentBulkPhoto() {\n  const [data, setDate] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Student Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"sectiion\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentBulkPhotoTableKeys}\n        bodyDataModal=\"student bulk photo\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\n\nconst HeadingContainer = styled(Grid)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst DataContainer = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"10px\",\n}));\n\nconst GroupBYData_Options = [\n  {\n    label: \"Gender\",\n    value: \"gender\",\n  },\n  {\n    label: \"Vehicle\",\n    value: \"vehicle\",\n  },\n  {\n    label: \"Library\",\n    value: \"library\",\n  },\n  {\n    label: \"Hostel\",\n    value: \"hostel\",\n  },\n  {\n    label: \"Class\",\n    value: \"class\",\n  },\n];\n\nconst classCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.className,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst genderCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: \"gender\",\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst libraryCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: \"library\",\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst vehcileCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.vehicleNumber,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\nconst hostelCombineData = (data) => {\n  const combinedData = data.map((item) => {\n    return {\n      name: item?.hostelName,\n      male: item?.maleCount,\n      female: item?.femaleCount,\n      total: item?.totalCount,\n    };\n  });\n\n  return combinedData;\n};\n\nexport default function StudentReport() {\n  const componentRef = useRef();\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classBar, setClassBar] = useState([]);\n  const [genderBar, setGenderBar] = useState([]);\n  const [libraryBar, setLibraryBar] = useState([]);\n  const [vehicleBar, setVehicleBar] = useState([]);\n  const [hostelBar, setHostelBar] = useState([]);\n  const [groupData, setGroupdata] = useState(\"\");\n  const [groupDataGraph, setGroupdataGraph] = useState(\"\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const classCombinedData = classCombineData(classBar);\n  const genderCombinedData = genderCombineData(genderBar);\n  const libraryCombinedData = libraryCombineData(libraryBar);\n  const vehicleCombinedData = vehcileCombineData(vehicleBar);\n  const hostelCombinedData = hostelCombineData(hostelBar);\n\n  const [loading, setLoading] = useState(false);\n\n  const [loadingGraph, setLoadingGraph] = useState(false);\n\n  let totalMaleStudents = 0;\n  let totalFemaleStudents = 0;\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentReport = async (values) => {\n    try {\n      setLoading(true);\n      const { data } = await get(PRIVATE_URLS.report.getStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: values.groupByData,\n          academicYearId: values.academicYear,\n        },\n      });\n      setData(data.result);\n      setGroupdata(values.groupByData);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetPrintPdf = async () => {\n    try {\n      const getPdf = await get(PRIVATE_URLS.report.downloadStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: entryFormik.values.groupByData,\n          academicYearId: entryFormik.values.academicYear,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\"application/pdf\", getPdf.data, \"studentReport.pdf\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudentReportByGraph = async (values) => {\n    try {\n      setLoadingGraph(true);\n      const { data } = await get(PRIVATE_URLS.report.getStudentReport, {\n        params: {\n          schoolId: selectedSetting._id,\n          groupBy: values.groupByData,\n          academicYearId: values.academicYear,\n        },\n      });\n\n      setGroupdataGraph(values.groupByData);\n      if (values.groupByData === \"class\") {\n        setClassBar(data.result);\n      }\n      if (values.groupByData === \"gender\") {\n        setGenderBar(data.result);\n      }\n      if (values.groupByData === \"library\") {\n        setLibraryBar(data.result);\n      }\n      if (values.groupByData === \"vehicle\") {\n        setVehicleBar(data.result);\n      }\n      if (values.groupByData === \"hostel\") {\n        setHostelBar(data.result);\n      }\n      setLoadingGraph(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingGraph(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n    },\n    onSubmit: handleGetStudentReport,\n  });\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      groupByData: \"\",\n    },\n    onSubmit: handleGetStudentReportByGraph,\n  });\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  return (\n    <>\n      <PageHeader title=\"Student Report\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Tabular Report\", \"Grapical Report\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={entryFormik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                alignSelf=\"center\"\n                display=\"flex\"\n                gap={1}\n                item>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Find\n                </LoadingButton>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleGetPrintPdf}>\n                  Print\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n        <TableContainer component={Paper}>\n          {groupData === \"class\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Class</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.className}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    align=\"start\"\n                    colSpan={2}\n                    sx={{ fontWeight: \"bold\" }}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"gender\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n\n                    <TableCell align=\"center\">{data.maleCount}</TableCell>\n                    <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                    <TableCell align=\"center\">{data.totalCount}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"vehicle\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Vehicle Number</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.vehicleNumber}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    sx={{ fontWeight: \"bold\" }}\n                    align=\"start\"\n                    colSpan={2}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"library\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\"> {index + 1}</TableCell>\n\n                    <TableCell align=\"center\">{data.maleCount}</TableCell>\n                    <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                    <TableCell align=\"center\">{data.totalCount}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n          {groupData === \"hostel\" && (\n            <Table size=\"small\">\n              <TableHead\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? theme.palette.primary.dark\n                      : theme.palette.primary.light,\n                }}>\n                <TableRow>\n                  <TableCell align=\"center\">SL</TableCell>\n\n                  <TableCell align=\"center\">Hostel Name</TableCell>\n                  <TableCell align=\"center\">Male</TableCell>\n                  <TableCell align=\"center\">Female</TableCell>\n                  <TableCell align=\"center\">Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((data, index) => {\n                  totalMaleStudents += data.maleCount;\n                  totalFemaleStudents += data.femaleCount;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n\n                      <TableCell align=\"center\">{data.hostelName}</TableCell>\n                      <TableCell align=\"center\">{data.maleCount}</TableCell>\n                      <TableCell align=\"center\">{data.femaleCount}</TableCell>\n                      <TableCell align=\"center\">{data.totalCount}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                <TableRow>\n                  <TableCell\n                    align=\"start\"\n                    colSpan={2}\n                    sx={{ fontWeight: \"bold\" }}>\n                    Total:\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalFemaleStudents}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                    {totalMaleStudents + totalFemaleStudents}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={data ? (data.length ? data.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            {\" \"}\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"groupByData\"\n                  formik={formik}\n                  label=\"Select Group By Data\"\n                  options={GroupBYData_Options}\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={6}\n                lg={3}\n                alignSelf=\"center\"\n                display=\"flex\"\n                gap={1}\n                item>\n                <LoadingButton\n                  loading={loadingGraph}\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\">\n                  Find\n                </LoadingButton>\n                <ReactToPrint\n                  trigger={() => (\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={handlePrint}>\n                      Print\n                    </Button>\n                  )}\n                  content={() => componentRef.current}\n                />\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n        <Box ref={componentRef}>\n          <HeadingContainer container>\n            <Grid item xs={12} sm={12} md={6} lg={4}>\n              <Paper sx={{ padding: 2, mt: 2 }}>\n                <img\n                  src={selectedSetting.logo}\n                  height={60}\n                  width={60}\n                  style={{\n                    display: \"block\",\n                    margin: \"auto\",\n                  }}\n                />\n\n                <Typography fontSize={18} textAlign=\"center\">\n                  {selectedSetting.name}\n                </Typography>\n                <Typography gutterBottom fontSize={12} textAlign=\"center\">\n                  {selectedSetting.address}\n                </Typography>\n\n                <DataContainer>\n                  {\" \"}\n                  <AssessmentIcon\n                    sx={{ color: themeData.darkPalette.primary.main }}\n                  />\n                  <Typography textAlign=\"center\" color=\"error\">\n                    Student Report\n                  </Typography>\n                </DataContainer>\n              </Paper>\n            </Grid>\n          </HeadingContainer>\n          {groupDataGraph === \"class\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={classCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"gender\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={genderCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"vehicle\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={vehicleCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"hostel\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={hostelCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n\n          {groupDataGraph === \"library\" && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n              <ResponsiveContainer width={700} height={300}>\n                <BarChart data={libraryCombinedData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend\n                    wrapperStyle={{ textAlign: \"center\" }}\n                    formatter={(value) => value}\n                    layout=\"horizontal\"\n                    align=\"center\"\n                  />\n                  <Bar dataKey=\"male\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"female\" fill=\"#82ca9d\" />\n                  <Bar dataKey=\"total\" fill=\"#ff7f50\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          )}\n        </Box>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Library_Member = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function AddEmployee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [selectedPhoto, setSelectedPhoto] = useState([]);\n  const [resume, setResume] = useState([]);\n  console.log(dataToEdit, \"dataToEdit\");\n  const [salaryGrade, setSalaryGrade] = useState([]);\n\n  const getEmployeeDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.getEmpById + \"/\" + id);\n\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getEmployeeDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSalaryGrade = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.salaryGrade.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setSalaryGrade(\n        data.result.map((s) => ({\n          label: s.grade,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n    getSalaryGrade();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: values.dob,\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n          responsibility: values.responsibility,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: values.joiningDate,\n          // resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public || false,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        photo: values.photo,\n        libraryMember: values.libraryMember,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedPhoto.forEach((file) => formData.append(\"employeePhoto\", file));\n      resume.forEach((file) => formData.append(\"resume\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.employee.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        // console.log(data, \"data555\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.employee.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      navigate(\"/sch/human-resource/employee\");\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.basicInfo.name || \"\",\n      empId: dataToEdit?.basicInfo.empId || \"\",\n      responsibility: dataToEdit?.basicInfo.responsibility || \"\",\n      designation: dataToEdit?.basicInfo.designation._id || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      secMobileNo: dataToEdit?.basicInfo.secMobileNo || \"\",\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      presentAddress: dataToEdit?.basicInfo.presentAddress || \"\",\n      permanentAddress: dataToEdit?.basicInfo.permanentAddress || \"\",\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      fatherName: dataToEdit?.basicInfo.fatherName || \"\",\n      spouseName: dataToEdit?.basicInfo.spouseName || \"\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      fatherOccupation: dataToEdit?.basicInfo.fatherOccupation || \"\",\n      spouseOccupation: dataToEdit?.basicInfo.spouseOccupation || \"\",\n      qualification: dataToEdit?.academicInfo.qualification || \"\",\n      workExperience: dataToEdit?.academicInfo.workExperience || \"\",\n      salaryGrade: dataToEdit?.academicInfo.salaryGrade?._id || \"\",\n      email: dataToEdit?.academicInfo.email || \"\",\n      salaryType: dataToEdit?.academicInfo.salaryType || \"\",\n      role: dataToEdit?.role._id || \"\",\n      department: dataToEdit?.academicInfo.department._id || \"\",\n      joiningDate: dataToEdit?.academicInfo?.joiningDate\n        ? dayjs(dataToEdit.academicInfo.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      libraryMember: dataToEdit?.libraryMember || false,\n      username: dataToEdit?.username || \"\",\n      password: dataToEdit?.otherInfo.password || \"\",\n      public: dataToEdit?.otherInfo.public || false,\n      showDetailsForWeb: dataToEdit?.otherInfo.showDetailsForWeb || false,\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"resume\") {\n        setResume(fileList);\n      } else {\n        setSelectedPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedPhoto(selectedPhoto.filter((img) => img.name != fileName));\n    setResume(resume.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={\n              selectedPhoto.length > 0\n                ? URL.createObjectURL(selectedPhoto[0])\n                : dataToEdit?.photo\n                ? dataToEdit?.photo\n                : avatar\n            }\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"photo\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FileSelect\n              name=\"employeePhoto\"\n              multi={false}\n              label=\"Select Photo\"\n              onChange={(e) => handleChangePhoto(e, \"employeePhoto\")}\n              previousFile={dataToEdit?.photo}\n              customOnChange={true}\n              selectedFiles={selectedPhoto}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/jpeg, image/png\"\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  options={salaryGrade}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"resume\"\n                  label=\"Upload Resume\"\n                  onChange={(e) => handleChangePhoto(e, \"resume\")}\n                  customOnChange={true}\n                  selectedFiles={resume}\n                  previousFile={dataToEdit?.academicInfo?.resume}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n\n              {!dataToEdit && (\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormInput\n                    required={true}\n                    name=\"password\"\n                    formik={entryFormik}\n                    label=\"Password\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Library Member\"\n                  options={Library_Member}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"View On Web\"\n                  options={Is_Public}\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","export const manageInstituteTableKeys = [\n  {\n    name: \"School Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Logo\",\n    type: \"image\",\n    key: \"logo\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageInstituteTableKeys } from \"../../data/tableKeys/manageInstituteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ManageInstitute() {\n  const [data, setData] = useState();\n  const { setSettings, settings } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const handleAddClick = (e) => {\n    navigate(\"/sch/manage-institute/add-institute\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.list);\n      setSettings(data.result.filter((s) => s.active));\n      setData(data.result); // updating the settings state with the fetched data\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleToggleSwitch = async (school) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.toggleActiveStatus + \"/\" + school._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    navigate(`/sch/manage-institute/edit-institute/${data._id}`);\n  };\n  return (\n    <>\n      <PageHeader title=\"Manage Institute\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        bodyDataModal=\"manage institute\"\n        bodyData={data}\n        tableKeys={manageInstituteTableKeys}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleSwitch}\n        onEditClick={handleEdit}\n      />\n      <AddForm title=\"Add Institute\" onAddClick={handleAddClick} />\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { Close } from \"@mui/icons-material\";\nimport { put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\n\nexport default function AddOrUpdateFiles({\n  dataToEdit,\n  title,\n  onUpdate = () => {},\n  styles = {},\n}) {\n  const [open, setOpen] = useState(false);\n  const [updatingFiles, setUpdatingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClose = () => setOpen(false);\n  const handleOpenDialog = () => setOpen(true);\n\n  const handleSelectFile = (e) => {\n    const selectedFiles = e.target.files;\n\n    if (selectedFiles.length > 0) {\n      let fileList = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n\n        fileList.push(file);\n      }\n      setSelectedFiles([...fileList]);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  const handleRemoveFile = (i) => {\n    setSelectedFiles(selectedFiles.filter((f, index) => index !== i));\n  };\n\n  const handleUpdateItem = async (e) => {\n    e.preventDefault();\n\n    try {\n      setUpdatingFiles(true);\n      const formData = new FormData();\n      selectedFiles.forEach((f) => formData.append(\"bannerImages\", f));\n      console.log(selectedFiles, \"imageeeee\");\n      const { data } = await put(\n        PRIVATE_URLS.school.addFiles + \"/\" + dataToEdit._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      onUpdate(data.result);\n      handleClose();\n\n      setSelectedFiles([]);\n      setUpdatingFiles(false);\n    } catch (error) {\n      setUpdatingFiles(false);\n\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        fullWidth\n        onClick={handleOpenDialog}\n        size=\"small\"\n        variant=\"contained\"\n        sx={{ mt: 2 }}>\n        {title}\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n        }}>\n        <DialogTitle>Add/Update Banner images</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Box sx={{ margin: \"20px 0\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}>\n              <Typography sx={{ fontWeight: \"bold\" }}>Add Files</Typography>\n              <TextField\n                name=\"images\"\n                label=\"Select files\"\n                fullWidth\n                onChange={handleSelectFile}\n                sx={{\n                  borderWidth: 1,\n                  borderRadius: theme.shape.borderRadius,\n                  maxWidth: \"300px\",\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{ type: \"file\", multiple: true }}\n                InputProps={{\n                  style: {\n                    borderWidth: 1,\n                    height: \"40px\",\n                    borderRadius: theme.shape.borderRadius,\n                  },\n                }}\n              />\n            </Box>\n            {selectedFiles.map((f, i) => (\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: \"10px\",\n\n                  background: \"#5fa5f661\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n                key={f.name + i.toString()}>\n                <Typography>{f.name}</Typography>\n                <IconButton onClick={(e) => handleRemoveFile(i)}>\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            disabled={!selectedFiles.length}\n            size=\"small\"\n            loading={updatingFiles}\n            variant=\"contained\"\n            onClick={handleUpdateItem}>\n            Add\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TimezoneSelect from \"react-timezone-select\";\nimport currencyCodes from \"currency-codes\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport AddOrUpdateFiles from \"../../forms/AddOrUpdateFiles\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport currencyToSymbolMap from \"currency-symbol-map/map\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS, PUBLIC_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport ThemeSelector from \"../../components/ThemeSelector\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst RollNumber_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto ascending name\",\n    value: \"autoAscendingName\",\n  },\n  {\n    label: \"Auto ascending name female\",\n    value: \"autoAscendingNameFemale\",\n  },\n];\nconst Attendence_Type = [\n  {\n    label: \"Class wise\",\n    value: \"classWise\",\n  },\n  {\n    label: \"Subject wise\",\n    value: \"subjectWise\",\n  },\n  {\n    label: \"Session wise\",\n    value: \"sessionWise\",\n  },\n];\nconst Admission_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto Ascending No.\",\n    value: \"autoAscendingNo\",\n  },\n];\nexport default function AddInstitute({ initialValue = null }) {\n  const { selectedSetting, setSelectedSetting, setSettings } =\n    useContext(SettingContext);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const symbol = Object.keys(currencyToSymbolMap);\n  const [dataToEdit, setDataToEdit] = useState(initialValue);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n  const [bannerImages, setBannerImages] = useState([]);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const getSchoolDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.details + \"/\" + id);\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getSchoolDetails();\n    }\n  }, [id]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"logo\") {\n        setLogo(fileList);\n      } else if (type === \"bannerImages\") {\n        setBannerImages(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n    setBannerImages(bannerImages.filter((img) => img.name != fileName));\n  };\n\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const currencies = currencyCodes.data.map((currency) => ({\n    label: `${currency.currency} - ${currency.code}`,\n    value: currency.code,\n  }));\n\n  const getAllSchools = async () => {\n    try {\n      const { data } = await get(PUBLIC_URLS.school.getSchools);\n      setSettings(data.result);\n      setSelectedSetting(\n        data.result?.find((s) => s._id === selectedSetting._id)\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      logo.forEach((f) => formData.append(\"logo\", f));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.school.update + \"/\" + dataToEdit._id,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.school.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      entryFormik.resetForm();\n      getAllSchools();\n      setLogo([]);\n      navigate(-1);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      address: dataToEdit?.address || \"\",\n      phone: dataToEdit?.phone || \"\",\n\n      regDate: dataToEdit?.regDate\n        ? dayjs(dataToEdit.regDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      email: dataToEdit?.email || \"\",\n      fax: dataToEdit?.fax || \"\",\n      websiteFooter: dataToEdit?.websiteFooter || \"\",\n      description: dataToEdit?.description || \"\",\n      currency: dataToEdit?.currency || \"\",\n      currencySymbol: dataToEdit?.currencySymbol || \"\",\n      sessionStartMonth:\n        dataToEdit && dataToEdit.sessionStartMonth\n          ? dataToEdit.sessionStartMonth\n          : null,\n      sessionEndMonth:\n        dataToEdit && dataToEdit.sessionEndMonth\n          ? dataToEdit.sessionEndMonth\n          : null,\n      rollNumberType: dataToEdit?.rollNumberType || \"\",\n      studentAttendenceType: dataToEdit?.studentAttendenceType || \"\",\n      admissionNo: dataToEdit?.admissionNo || \"\",\n      latitude: dataToEdit?.latitude || \"\",\n      longitude: dataToEdit?.longitude || \"\",\n      defaultTimeZone: dataToEdit?.defaultTimeZone || \"\",\n      googleAnalyticsId: dataToEdit?.googleAnalyticsId || \"\",\n      teacherActivityFeedbackEnabled:\n        dataToEdit?.teacherActivityFeedbackEnabled || false,\n      facebookUrl: dataToEdit?.facebookUrl || \"\",\n      twitterUrl: dataToEdit?.twitterUrl || \"\",\n      linkedinUrl: dataToEdit?.linkedinUrl || \"\",\n      // gplusUrl: dataToEdit?.gplusUrl || \"\",\n      youtubeUrl: dataToEdit?.youtubeUrl || \"\",\n      instagramUrl: dataToEdit?.instagramUrl || \"\",\n      pinterestUrl: dataToEdit?.pinterestUrl || \"\",\n      location: dataToEdit?.location || \"\",\n      selectedTheme: dataToEdit?.selectedTheme || 1,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.removeFile + \"/\" + dataToEdit._id,\n        {\n          file: img,\n        }\n      );\n      getSchoolDetails();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSelectTheme = (theme) => {\n    entryFormik.setFieldValue(\"selectedTheme\", theme);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Institute\" showTextField={false} />\n\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          <MuiBox>\n            <img\n              src={\n                logo.length > 0\n                  ? URL.createObjectURL(logo[0])\n                  : dataToEdit?.logo\n                  ? dataToEdit?.logo\n                  : avatar\n              }\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"loogo\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"logo\"\n                label=\"Select Logo\"\n                onChange={(e) => handleChangePhoto(e, \"logo\")}\n                previousFile={dataToEdit?.logo}\n                customOnChange={true}\n                selectedFiles={logo}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox style={{ position: \"relative\", zIndex: \"1\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"School Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"address\"\n                  formik={entryFormik}\n                  label=\"Address\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"phone\"\n                  formik={entryFormik}\n                  label=\"Phone number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Registration Date\"\n                  name=\"regDate\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"fax\" formik={entryFormik} label=\"Fax\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"location\"\n                  formik={entryFormik}\n                  label=\"Location\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"websiteFooter\"\n                  formik={entryFormik}\n                  label=\"Website Footer\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  name=\"description\"\n                  formik={entryFormik}\n                  label=\"Note\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Settings */}\n        <FormBox sx={{ overflow: \"visible\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Setting Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"currency\"\n                  formik={entryFormik}\n                  label=\"Currency\"\n                  options={currencies}\n                  onChange={(event) => {\n                    const selectedCurrency = event.target.value;\n                    entryFormik.setFieldValue(\"currency\", selectedCurrency);\n                    entryFormik.setFieldValue(\n                      \"currencySymbol\",\n                      currencyToSymbolMap[selectedCurrency]\n                    );\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"currencySymbol\"\n                  formik={entryFormik}\n                  label=\"Currency Symbol\"\n                  disabled\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session Start Month\"\n                  name=\"sessionStartMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MMM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session End Month\"\n                  name=\"sessionEndMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MMM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rollNumberType\"\n                  formik={entryFormik}\n                  label=\"Roll Number\"\n                  options={RollNumber_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"studentAttendenceType\"\n                  formik={entryFormik}\n                  label=\"Attendence Type \"\n                  options={Attendence_Type}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"admissionNo\"\n                  formik={entryFormik}\n                  label=\"Admission Number\"\n                  options={Admission_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"latitude\"\n                  formik={entryFormik}\n                  label=\"Latitude\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"longitude\"\n                  formik={entryFormik}\n                  label=\"Longitude\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item mt={2}>\n                <TimezoneSelect\n                  styles={{\n                    control: (baseStyle, state) => ({\n                      ...baseStyle,\n                      height: \"42px\",\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                    }),\n                    menu: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                    }),\n\n                    option: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                      color: isDarkMode ? \"white\" : \"black\",\n                      \"&:hover\": {\n                        backgroundColor: isDarkMode ? \"lightgray\" : \"white\",\n                        color: isDarkMode ? \"black\" : \"\",\n                      },\n                    }),\n                  }}\n                  placeholder=\"Default Timezone\"\n                  name=\"defaultTimeZone\"\n                  value={entryFormik.values.defaultTimeZone}\n                  onChange={(value) =>\n                    entryFormik.setFieldValue(\"defaultTimeZone\", value)\n                  }\n                  label=\"Time Zone\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"googleAnalyticsId\"\n                  formik={entryFormik}\n                  label=\"Google Analytics Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"teacherActivityFeedbackEnabled\"\n                  formik={entryFormik}\n                  label=\"Teacher Activity Feedack Enable\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Social Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"X URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Banner Images */}\n        {dataToEdit ? (\n          <FormBox>\n            <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Banner Image\n            </Title>\n\n            <Grid container spacing={2}>\n              <Grid\n                container\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                justifyContent=\"flex-end\">\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginRight: \"10px\",\n                  }}>\n                  <AddOrUpdateFiles\n                    dataToEdit={dataToEdit}\n                    title={\"Upload Banner\"}\n                    onUpdate={getSchoolDetails}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.bannerImages?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"150px\",\n                        height: \"100px\",\n\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <CloseIcon color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n          </FormBox>\n        ) : null}\n\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Select Your Favorite Theme\n          </Title>\n          <Box m={2}>\n            <ThemeSelector onThemeSelect={handleSelectTheme} webTheme={true} />\n          </Box>\n        </FormBox>\n\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport themeData from \"../../data/themeData\";\nimport { Padding } from \"@mui/icons-material\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"#44628561\",\n    // width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: 200,\n  padding: \"13px 5px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function FormTable({ employee }) {\n  const handleLinkClick = (url) => {\n    window.open(url, \"_blank\");\n  };\n\n  return (\n    <>\n      {employee?.photo ? (\n        <img\n          src={employee.photo}\n          height={100}\n          width={100}\n          style={{\n            borderRadius: \"50%\",\n            display: \"block\",\n            objectFit: \"cover\",\n            margin: \"0 auto\",\n            border: \"1x solid lightgray\",\n          }}\n          alt=\"Employee Photo\"\n        />\n      ) : (\n        <Avatar sx={{ height: 75, width: 75 }} src=\"/broken-image.jpg\" />\n      )}\n\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: 660,\n          my: 2,\n          display: {\n            xs: \"none\",\n            sm: \"block\",\n            md: \"block\",\n            lg: \"block\",\n          },\n          borderRadius: \"5px\",\n        }}>\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n\n      {/* ======== Mobile view table ============ */}\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: \"100%\",\n          mx: 2,\n          my: 2,\n          display: {\n            xs: \"visible\",\n            sm: \"none\",\n            md: \"none\",\n            lg: \"none\",\n          },\n        }}>\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n      {/* )} */}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"50px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nexport default function ProfileUpdate({\n  getEmployees = () => {},\n  employee = \"\",\n  setSelectValue = 0,\n}) {\n  const navigate = useNavigate();\n  const { selectedSetting } = useContext(SettingContext);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const [designations, setDesignations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [profileImages, setProfileImages] = useState([]);\n  const [resume, setResume] = useState([]);\n\n  console.log(employee, \"usha\");\n\n  const getDesignation = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesignations(\n        data.result.map((m) => ({ label: m.name, value: m._id }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        basicInfo: {\n          name: values.name,\n          aadharNo: values.aadharNo,\n          designation: values.designation,\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          dob: values.dob,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n        },\n        academicInfo: {\n          email: values.email,\n          username: values.username,\n          joiningDate: values.joiningDate,\n          resume: values.resume,\n        },\n        otherInfo: {\n          facebookUrl: values?.facebookUrl,\n          twitterUrl: values?.twitterUrl,\n          linkedinUrl: values?.linkedinUrl,\n          googlePlusUrl: values?.googlePlusUrl,\n          youtubeUrl: values?.youtubeUrl,\n          instagramUrl: values?.instagramUrl,\n          pinterestUrl: values?.pinterestUrl,\n        },\n        username: values.username,\n        photo: values.photo,\n        contactNumber: values.contactNumber,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      profileImages.forEach((file) => formData.append(\"employeePhoto\", file));\n      resume.forEach((file) => formData.append(\"resume\", file));\n\n      const { data } = await put(\n        PRIVATE_URLS.employee.update + \"/\" + employee._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      console.log(data, \"put\");\n\n      window.localStorage.setItem(\n        \"current_ecs_user\",\n        JSON.stringify(data.result)\n      );\n      getEmployees();\n      setSelectValue(0);\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"photo\") {\n        console.log(fileList, \"photo\");\n        setProfileImages(fileList);\n      } else if (type === \"resume\") {\n        setResume(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setResume(resume.filter((img) => img.name != fileName));\n    setProfileImages(profileImages.filter((img) => img.name != fileName));\n  };\n\n  useEffect(() => {\n    getDesignation();\n  }, []);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: employee?.basicInfo?.name || \"\",\n      aadharNo: employee?.basicInfo?.aadharNo || \"\",\n      designation: employee?.basicInfo?.designation?._id || \"\",\n      gender: employee?.basicInfo?.gender || \"\",\n      bloodGroup: employee?.basicInfo?.bloodGroup || \"\",\n      religion: employee?.basicInfo?.religion || \"\",\n      dob: employee?.basicInfo?.dob ? dayjs(employee?.dob) : null,\n      presentAddress: employee?.basicInfo?.presentAddress || \"\",\n      permanentAddress: employee?.basicInfo?.permanentAddress || \"\",\n      email: employee?.academicInfo?.email || \"\",\n      joiningDate: employee?.academicInfo?.joiningDate\n        ? dayjs(employee?.academicInfo?.joiningDate)\n        : null,\n      resume: employee?.academicInfo?.resume || \"\",\n      facebookUrl: employee?.otherInfo?.facebookUrl || \"\",\n      twitterUrl: employee?.otherInfo?.twitterUrl || \"\",\n      linkedinUrl: employee?.otherInfo?.linkedinUrl || \"\",\n      youtubeUrl: employee?.otherInfo?.youtubeUrl || \"\",\n      instagramUrl: employee?.otherInfo?.instagramUrl || \"\",\n      pinterestUrl: employee?.otherInfo?.pinterestUrl || \"\",\n      username: employee?.username || \"\",\n      contactNumber: employee?.contactNumber || \"\",\n      photo: employee?.photo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: false,\n  });\n\n  return (\n    <>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          <MuiBox>\n            <img\n              // src={profileImages || avatar}\n              src={\n                profileImages.length > 0\n                  ? URL.createObjectURL(profileImages[0])\n                  : employee?.photo\n                  ? employee?.photo\n                  : avatar\n              }\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                display: \"block\",\n                objectFit: \"cover\",\n                margin: \"0 auto\",\n              }}\n              alt=\"Preview\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"photo\"\n                label=\"Select Profile\"\n                onChange={(e) => handleChangePhoto(e, \"photo\")}\n                previousFile={employee?.photo}\n                customOnChange={true}\n                selectedFiles={profileImages}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"National Id\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designations}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Phone No.\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Gender\"\n                  options={Gender}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Settings */}\n\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Joining\"\n                  name=\"joiningDate\"\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"resume\"\n                  label=\"Select Resume\"\n                  onChange={(e) => handleChangePhoto(e, \"resume\")}\n                  previousFile={employee?.academicInfo?.resume}\n                  customOnChange={true}\n                  selectedFiles={resume}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"X URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        <StyledBox>\n          <Stack spacing={2} direction=\"row\" justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setSelectValue(0)}>\n              Cancel\n            </Button>\n            <LoadingButton\n              loading={loading}\n              type=\"submit\"\n              size=\"small\"\n              variant=\"contained\">\n              Update\n            </LoadingButton>\n          </Stack>\n        </StyledBox>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport themeData from \"../../data/themeData\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormTable from \"./FormTable\";\nimport ProfileUpdate from \"./ProfileUpdate\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Profile() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  // const [dataToEdit, setDataToEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState(null);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  // console.log(selectedSetting, \"selectedSetting\");\n  // console.log(employee, \"employee\");\n\n  const getEmployees = async () => {\n    const user = window.localStorage.getItem(\"current_ecs_user\");\n    setEmployee(JSON.parse(user));\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  if (!employee) {\n    return null;\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Profile\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Profile\", \"Update Profile\"]}\n      />\n      <TabPanel index={0} value={value}>\n        {/* {employee && ( */}\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            mt: 3,\n          }}>\n          <FormTable employee={employee} />\n        </Box>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <ProfileUpdate\n          employee={employee}\n          setSelectValue={setSelectValue}\n          getEmployees={getEmployees}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport { useLocation } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function UpdateEmployee() {\n  const location = useLocation();\n  const empData = location.state && location.state.data;\n  const { selectedSetting } = useContext(SettingContext);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const navigate = useNavigate();\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n  }, []);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: dayjs(values.dob),\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: dayjs(values.joiningDate),\n          resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        schoolId: selectedSetting._id,\n      };\n\n      const { data } = await put(\n        PRIVATE_URLS.employee.update + \"/\" + empData._id,\n        payload\n      );\n\n      console.log(data, \"erttfyuygiu\");\n\n      navigate(\"/sch/human-resource/employee\");\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: empData ? empData.basicInfo.name : \"\",\n      empId: empData ? empData.basicInfo.empId : \"\",\n      responsibility: empData ? empData.basicInfo.responsibility : \"\",\n      designation: empData ? empData.basicInfo.designation._id : \"\",\n      contactNumber: empData ? empData.contactNumber : \"\",\n      secMobileNo: empData ? empData.basicInfo.secMobileNo : \"\",\n      gender: empData ? empData.basicInfo.gender : \"\",\n      bloodGroup: empData ? empData.basicInfo.bloodGroup : \"\",\n      religion: empData ? empData.basicInfo.religion : \"\",\n      presentAddress: empData ? empData.basicInfo.presentAddress : \"\",\n      permanentAddress: empData ? empData.basicInfo.permanentAddress : \"\",\n      dob: empData ? dayjs(empData.basicInfo.dob) : dayjs(new Date()),\n      fatherName: empData ? empData.basicInfo.fatherName : \"\",\n      spouseName: empData ? empData.basicInfo.spouseName : \"\",\n      aadharNo: empData ? empData.basicInfo.aadharNo : \"\",\n      fatherOccupation: empData ? empData.basicInfo.fatherOccupation : \"\",\n      spouseOccupation: empData ? empData.basicInfo.spouseOccupation : \"\",\n      qualification: empData ? empData.academicInfo.qualification : \"\",\n      workExperience: empData ? empData.academicInfoworkExperience : \"\",\n      salaryGrade: empData ? empData.academicInfosalaryGrade : \"\",\n      email: empData ? empData.academicInfo.email : \"\",\n      salaryType: empData ? empData.academicInfo.salaryType : \"\",\n      role: empData ? empData.role._id : \"\",\n      department: empData ? empData.academicInfo.department._id : \"\",\n      joiningDate: empData\n        ? dayjs(empData.academicInfo.joiningDate)\n        : dayjs(new Date()),\n      resume: empData ? empData.resume : \"\",\n      username: empData ? empData.username : \"\",\n      password: empData ? empData.password : \"\",\n      public: empData ? empData.public : \"\",\n      showDetailsForWeb: empData ? empData.showDetailsForWeb : false,\n      photo: empData ? empData.photo : \"\",\n      active: empData ? empData.active : \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreviewCreateUrl(imageUrl);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Update Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={previewCreateUrl || avatar}\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"Preview\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              // required={true}\n              name=\"photo\"\n              formik={entryFormik}\n              label=\"Photo\"\n              type=\"file\"\n              onChange={handleImageChange}\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  // options={\"\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"resume\"\n                  formik={entryFormik}\n                  label=\"Resume\"\n                  type=\"file\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"password\"\n                  formik={entryFormik}\n                  label=\"Password\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"View On Web\"\n                  options={Is_Public}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"photo\"\n                  formik={entryFormik}\n                  label=\"Photo\"\n                  type=\"file\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Update\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender_Options = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nconst Relation_With_Guardian = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nconst RTE_Options = [\n  { label: \"Yes\", value: \"yes\" },\n  { label: \"No\", value: \"no\" },\n];\n\nexport default function AddStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedStudentPhoto, setSelectedStuentPhoto] = useState([]);\n  const [selectedMotherPhoto, setSelectedMotherPhoto] = useState([]);\n  const [selectedFatherPhoto, setSelectedFatherPhoto] = useState([]);\n  const [transferCertificate, setTransperCertificate] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const { id } = useParams();\n  const getStudentDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.details + \"/\" + id);\n      console.log(data.result, \"==========\");\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getStudentDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          rte: values.rte,\n          caste: values.caste,\n          motherTongue: values.motherTongue,\n          birthPlace: values.birthPlace,\n          aadharNo: values.aadharNo,\n          cicn: values.cicn,\n          satNo: values.satNo,\n          grNo: values.grNo,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n          education: values.motherEdu,\n          profession: values.motherProfession,\n          designation: values.motherDesignation,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n          education: values.fatherEdu,\n          profession: values.fatherProfession,\n          designation: values.fatherDesignation,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        otherInfo: {\n          email: values.email,\n          healthCondition: values.healthCondition,\n          hostelMember: values.hostelMember,\n          transportMember: values.transportMember,\n          libraryMember: values.libraryMember,\n          busStop: values.busStop,\n          extraInfo: values.extraInfo,\n        },\n        contactInfo: {\n          guardianName: values.guardianName,\n          guardianContactNumber: values.guardianContactNumber,\n          guardianContactNumberSecondary: values.guardianContactNumberSecondary,\n          guardianRelation: values.guardianRelation,\n          nationId: values.nationId,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n        },\n        prevSchInfo: {\n          name: values.prevSchName,\n          tcNo: values.tcNo,\n          prevClass: values.prevClass,\n        },\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n        contactNumber: values.contactNumber,\n        active: values.active,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedStudentPhoto.forEach((file) =>\n        formData.append(\"studentPhoto\", file)\n      );\n      selectedFatherPhoto.forEach((file) =>\n        formData.append(\"fatherPhoto\", file)\n      );\n      selectedMotherPhoto.forEach((file) =>\n        formData.append(\"motherPhoto\", file)\n      );\n      transferCertificate.forEach((file) =>\n        formData.append(\"transferCertificate\", file)\n      );\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.student.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        navigate(\"/sch/student/admit-student\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.student.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        navigate(\"/sch/student/admit-student\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      name: dataToEdit?.basicInfo.name || \"\",\n\n      admissionDate: dataToEdit?.basicInfo?.admissionDate\n        ? dayjs(dataToEdit.basicInfo.admissionDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      motherTongue: dataToEdit?.basicInfo.motherTongue || \"\",\n\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      cicn: dataToEdit?.basicInfo.cicn || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      caste: dataToEdit?.basicInfo.caste || \"\",\n      rte: dataToEdit?.basicInfo.rte || \"no\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      satNo: dataToEdit?.basicInfo.satNo || \"\",\n      grNo: dataToEdit?.basicInfo.grNo || \"\",\n      birthPlace: dataToEdit?.basicInfo.birthPlace || \"\",\n\n      class: dataToEdit?.academicInfo?.class?._id || \"\",\n      section: dataToEdit?.academicInfo?.section?._id || \"\",\n      rollNumber: dataToEdit?.academicInfo?.rollNumber || \"\",\n      admissionNumber: dataToEdit?.academicInfo?.admissionNumber || \"\",\n\n      contactNumber: dataToEdit?.contactNumber || \"\",\n\n      guardianName: dataToEdit?.contactInfo?.guardianName || \"\",\n      guardianContactNumber:\n        dataToEdit?.contactInfo?.guardianContactNumber || \"\",\n      guardianContactNumberSecondary:\n        dataToEdit?.contactInfo?.guardianContactNumberSecondary || \"\",\n      guardianRelation: dataToEdit?.contactInfo?.guardianRelation || \"\",\n      nationId: dataToEdit?.contactInfo?.nationId || \"\",\n      presentAddress: dataToEdit?.contactInfo?.presentAddress || \"\",\n      permanentAddress: dataToEdit?.contactInfo?.permanentAddress || \"\",\n\n      prevSchName: dataToEdit?.prevSchInfo?.name || \"\",\n      tcNo: dataToEdit?.prevSchInfo?.tcNo || \"\",\n      prevClass: dataToEdit?.prevSchInfo?.prevClass || \"\",\n\n      email: dataToEdit?.otherInfo?.email || \"\",\n      healthCondition: dataToEdit?.otherInfo?.healthCondition || \"\",\n      transportMember: dataToEdit?.otherInfo?.transportMember || false,\n      hostelMember: dataToEdit?.otherInfo?.hostelMember || false,\n      libraryMember: dataToEdit?.otherInfo?.libraryMember || false,\n      busStop: dataToEdit?.otherInfo?.busStop || \"\",\n      extraInfo: dataToEdit?.otherInfo?.extraInfo || \"\",\n      active: dataToEdit?.active || true,\n\n      fatherName: dataToEdit?.fatherInfo.name || \"\",\n      fatherPhone: dataToEdit?.fatherInfo.contactNumber || \"\",\n      fatherEdu: dataToEdit?.fatherInfo.education || \"\",\n      fatherProfession: dataToEdit?.fatherInfo.profession || \"\",\n      fatherDesignation: dataToEdit?.fatherInfo.designation || \"\",\n\n      motherName: dataToEdit?.motherInfo.name || \"\",\n      motherPhone: dataToEdit?.motherInfo.contactNumber || \"\",\n      motherEdu: dataToEdit?.motherInfo.education || \"\",\n      motherProfession: dataToEdit?.motherInfo.profession || \"\",\n      motherDesignation: dataToEdit?.motherInfo.designation || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"fatherPhoto\") {\n        setSelectedFatherPhoto(fileList);\n      } else if (type === \"motherPhoto\") {\n        setSelectedMotherPhoto(fileList);\n      } else if (type === \"transferCertificate\") {\n        setTransperCertificate(fileList);\n      } else {\n        setSelectedStuentPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedStuentPhoto(\n      selectedStudentPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedFatherPhoto(\n      selectedFatherPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedMotherPhoto(\n      selectedMotherPhoto.filter((img) => img.name != fileName)\n    );\n\n    setTransperCertificate(\n      transferCertificate.filter((img) => img.name != fileName)\n    );\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Admit Student\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"admissionNumber\"\n                  formik={entryFormik}\n                  label=\"Admission No.\"\n                  disabled={selectedSetting?.admissionNo !== \"manual\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"admissionDate\"\n                  formik={entryFormik}\n                  label=\"Admission Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"dob\"\n                  formik={entryFormik}\n                  label=\"Date Of Birth\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rte\"\n                  formik={entryFormik}\n                  label=\"Select RTE\"\n                  options={RTE_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"caste\" formik={entryFormik} label=\"Cast\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"cicn\"\n                  formik={entryFormik}\n                  label=\"Cast Income Certificate No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherTongue\"\n                  formik={entryFormik}\n                  label=\"Mother Tongue\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"birthPlace\"\n                  formik={entryFormik}\n                  label=\"Birth Place\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"satNo\" formik={entryFormik} label=\"SAT No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"grNo\" formik={entryFormik} label=\"GR No.\" />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* contact Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Contact Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianName\"\n                  formik={entryFormik}\n                  label=\"Guardian Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumber\"\n                  formik={entryFormik}\n                  label=\"Guardian Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumberSecondary\"\n                  formik={entryFormik}\n                  label=\"Alternate Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"guardianRelation\"\n                  formik={entryFormik}\n                  label=\"Select Relation With Guardian\"\n                  options={Relation_With_Guardian}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"nationId\"\n                  formik={entryFormik}\n                  label=\"Select National Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Academic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classData}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sectionData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"rollNumber\"\n                  formik={entryFormik}\n                  label=\"Roll No\"\n                  disabled={selectedSetting?.rollNumberType !== \"manual\"}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Previous school Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Previous School Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevSchName\"\n                  formik={entryFormik}\n                  label=\"Previous School\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevClass\"\n                  formik={entryFormik}\n                  label=\"Previous Class\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"tcNo\" formik={entryFormik} label=\"TC No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"transferCertificate\"\n                  label=\"Select File\"\n                  onChange={(e) => handleChangePhoto(e, \"transferCertificate\")}\n                  previousFile={dataToEdit?.prevSchInfo?.transferCertificate}\n                  customOnChange={true}\n                  selectedFiles={transferCertificate}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Father Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Father Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"fatherPhone\"\n                  formik={entryFormik}\n                  label=\"Father Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherEdu\"\n                  formik={entryFormik}\n                  label=\"Father Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherProfession\"\n                  formik={entryFormik}\n                  label=\"Father Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherDesignation\"\n                  formik={entryFormik}\n                  label=\"Father Designation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"fatherPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"fatherPhoto\")}\n                  previousFile={dataToEdit?.fatherInfo?.photo}\n                  customOnChange={true}\n                  selectedFiles={selectedFatherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Mother Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Mother Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherName\"\n                  formik={entryFormik}\n                  label=\"Mother Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherPhone\"\n                  formik={entryFormik}\n                  label=\"Mother Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherEdu\"\n                  formik={entryFormik}\n                  label=\"Mother Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherProfession\"\n                  formik={entryFormik}\n                  label=\"Mother Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherDesignation\"\n                  formik={entryFormik}\n                  label=\"Mother Designation\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  label=\"Select Photo\"\n                  multi={false}\n                  name=\"motherPhoto\"\n                  onChange={(e) => handleChangePhoto(e, \"motherPhoto\")}\n                  previousFile={dataToEdit?.motherInfo?.photo}\n                  customOnChange={true}\n                  selectedFiles={selectedMotherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Other Information*/}\n        <FormBox\n          sx={{\n            marginBottom: \"60px\",\n          }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"email\" formik={entryFormik} label=\"Email\" />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"healthCondition\"\n                  formik={entryFormik}\n                  label=\"Health Condition\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Select Status\"\n                  options={[\n                    { label: \"Inactive\", value: false },\n                    { label: \"Active\", value: true },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"hostelMember\"\n                  formik={entryFormik}\n                  label=\"Select Hostel Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"transportMember\"\n                  formik={entryFormik}\n                  label=\"Select Transport Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Select Library Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"busStop\"\n                  formik={entryFormik}\n                  label=\"Bus Stop\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"extraInfo\"\n                  formik={entryFormik}\n                  label=\"Other Info\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"studentPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"studentPhoto\")}\n                  previousFile={dataToEdit?.photo}\n                  customOnChange={true}\n                  selectedFiles={selectedStudentPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  styled,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Tooltip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n\n  backgroundColor: theme.palette.mode === \"dark\" ? \"\" : \"whitesmoke\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nexport default function AddCourse() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const [classData, setClassData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const navigate = useNavigate();\n\n  const [inputlist, setInputList] = useState(\n    dataToEdit?.benefits || [{ point: \"\" }]\n  );\n  const [inputlistBenifits, setInputListBenifits] = useState(\n    dataToEdit?.benefits || [{ point: \"\" }]\n  );\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        description: values.description,\n        classIds: values.class,\n        subject: values.subject,\n        title: values.title,\n        isTrending: values.isTrending,\n\n        courseDetails: {\n          overview: inputlist,\n          benefits: inputlistBenifits,\n        },\n      };\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      formData.append(\"schoolId\", selectedSetting._id);\n      selectImg.forEach((file) => formData.append(\"file\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.course.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.course.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        navigate(\"/sch/lms/courses\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: [],\n      subject: \"\",\n      title: \"\",\n      description: \"\",\n      isTrending: false,\n      overview: [],\n      benefits: [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleAddClick = () => {\n    setInputList([...inputlist, { point: \"\" }]);\n  };\n\n  const handleAddClickBenifites = () => {\n    setInputListBenifits([...inputlistBenifits, { point: \"\" }]);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { value } = e.target;\n    const overviewList = [...inputlist];\n\n    let newList = overviewList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputList(newList);\n  };\n\n  const handleInputChangeBenifits = (e, index) => {\n    const { value } = e.target;\n    const benifitsList = [...inputlistBenifits];\n    let newList = benifitsList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputListBenifits(newList);\n  };\n\n  const handleRemoveClick = (i) => {\n    const list = [...inputlist];\n    list.splice(i, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClickBenifits = (i) => {\n    const list = [...inputlistBenifits];\n    list.splice(i, 1);\n    setInputListBenifits(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Course\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                multiple={true}\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n            {entryFormik.values.class.length <= 1 && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select Subject\"\n                  options={subject}\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Enter Course Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FileSelect\n                multi={false}\n                name=\"thumbnailImage\"\n                label=\"Select Thumbnail Image\"\n                onChange={(e) => handleChangeFiles(e)}\n                previousFile={dataToEdit?.thumbnailImage}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Enter  Description\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlist.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter Overview\"\n                    label=\"Enter Overview\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                      mb: \"5px\",\n                      mt: 1,\n                    }}\n                    value={data.point || \"\"}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    name=\"overview\"\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      onClick={() => handleRemoveClick(i)}\n                      color=\"error\"\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClick}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlistBenifits.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter What You Will Learn\"\n                    label=\"Enter What You Will Learn\"\n                    variant=\"outlined\"\n                    sx={{ mb: \"5px\", mt: 1 }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    name=\"benefits\"\n                    value={data.point || \"\"}\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChangeBenifits(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      sx={{ cursor: \"pointer\" }}\n                      fontSize=\"small\"\n                      color=\"error\"\n                      onClick={() => handleRemoveClickBenifits(i)}\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClickBenifites}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n\n        <Grid item xs={12} sm={12} md={12} sx={{ marginBottom: \"60px\" }}>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked={entryFormik.values.isTrending} />}\n              name=\"isTrending\"\n              onChange={(e) => {\n                entryFormik.setFieldValue(\"isTrending\", e.target.checked);\n              }}\n              label=\"This course is trending?\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <StickyBar\n          content={\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"5px\",\n              }}>\n              <Button\n                variant=\"contained\"\n                onClick={() => navigate(-1)}\n                color=\"error\"\n                size=\"small\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={entryFormik.handleSubmit}>\n                Submit\n              </Button>\n            </Grid>\n          }\n        />\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Typography,\n  styled,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Tooltip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  padding: \"20px 8px\",\n  borderRadius: \"10px\",\n  margin: \"10px 0px\",\n  borderRight: \"10px\",\n  border: \"1px solid lightGrey\",\n  backgroundColor: \"whitesmoke\",\n}));\n\nexport default function UpdateCourse() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classData, setClassData] = useState([]);\n  const [selectImg, setSelectImg] = useState([]);\n  const [subject, setSubject] = useState([]);\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const course = (location.state && location.state.courseData) || null;\n\n  console.log(course, \"mmmmmmmmm==============\");\n\n  const [inputlist, setInputList] = useState(\n    course?.courseDetails?.overview || [{ point: \"\" }]\n  );\n  const [inputlistBenifits, setInputListBenifits] = useState(\n    course?.courseDetails?.benefits || [{ point: \"\" }]\n  );\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        description: values.description,\n        classIds: values.class,\n        subject: values.subject,\n        title: values.title,\n        isTrending: values.isTrending,\n\n        courseDetails: {\n          overview: inputlist,\n          benefits: inputlistBenifits,\n        },\n      };\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      formData.append(\"schoolId\", selectedSetting._id);\n      selectImg.forEach((file) => formData.append(\"thumbnailImage\", file));\n\n      const { data } = await put(\n        PRIVATE_URLS.course.update + \"/\" + course._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n\n      navigate(\"/sch/lms/courses\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectImg(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectImg(selectImg.filter((img) => img.name != fileName));\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: course ? course.class?.map((s) => s._id) : [],\n      subject: \"\",\n      title: course ? course.title : \"\",\n      description: course ? course.description : \"\",\n      isTrending: course?.isTrending || false,\n      overview: course?.courseDetails.overview || [],\n      benefits: course?.courseDetails.benefits || [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSubject(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClass();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleAddClick = () => {\n    setInputList([...inputlist, { point: \"\" }]);\n  };\n\n  const handleAddClickBenifites = () => {\n    setInputListBenifits([...inputlistBenifits, { point: \"\" }]);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { value } = e.target;\n    const overviewList = [...inputlist];\n\n    let newList = overviewList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputList(newList);\n  };\n\n  const handleInputChangeBenifits = (e, index) => {\n    const { value } = e.target;\n    const benifitsList = [...inputlistBenifits];\n    let newList = benifitsList.map((l, i) =>\n      i === index ? { ...l, point: value } : { ...l }\n    );\n    setInputListBenifits(newList);\n  };\n\n  const handleRemoveClick = (i) => {\n    const list = [...inputlist];\n    list.splice(i, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClickBenifits = (i) => {\n    const list = [...inputlistBenifits];\n    list.splice(i, 1);\n    setInputListBenifits(list);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Course\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={6} lg={4} item>\n              <FormSelect\n                multiple={true}\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n            {entryFormik.values.class.length <= 1 && (\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select Subject\"\n                  options={subject}\n                />\n              </Grid>\n            )}\n\n            <Grid xs={12} md={6} lg={4} item>\n              <FormInput\n                required={true}\n                name=\"title\"\n                formik={entryFormik}\n                label=\"Enter Course Name\"\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"thumbnailImage\"\n                label=\"Select Thumbnail Image\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={selectImg}\n                previousFile={course?.thumbnailImage}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <img\n                src={course?.thumbnailImage}\n                style={{ maxHeight: \"100px\" }}\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              <FormInput\n                required={true}\n                name=\"description\"\n                formik={entryFormik}\n                label=\"Enter  Description\"\n              />\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlist.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter Overview\"\n                    label=\"Enter Overview\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                      mb: \"5px\",\n                      mt: 1,\n                    }}\n                    value={data.point || \"\"}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    name=\"overview\"\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      onClick={() => handleRemoveClick(i)}\n                      color=\"error\"\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClick}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n        <FormBox>\n          <Grid container spacing={2}>\n            <Grid xs={12} md={12} lg={12} item>\n              {inputlistBenifits.map((data, i) => (\n                <Box\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: \"5px\",\n                  }}>\n                  <KeyboardDoubleArrowRightIcon\n                    fontSize=\"small\"\n                    sx={{ color: \"#1b3779\", mt: 1 }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    placeholder=\"Enter What You Will Learn\"\n                    label=\"Enter What You Will Learn\"\n                    variant=\"outlined\"\n                    sx={{ mb: \"5px\", mt: 1 }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    name=\"benefits\"\n                    value={data.point || \"\"}\n                    inputProps={{\n                      maxLength: 200,\n                    }}\n                    onChange={(e) => handleInputChangeBenifits(e, i)}\n                  />\n                  <Tooltip title=\"Delete\">\n                    <DeleteIcon\n                      fontSize=\"small\"\n                      color=\"error\"\n                      onClick={() => handleRemoveClickBenifits(i)}\n                    />\n                  </Tooltip>\n                </Box>\n              ))}\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ mt: 1 }}\n                onClick={handleAddClickBenifites}>\n                <AddIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </FormBox>\n\n        <Grid item xs={12} sm={12} md={12} sx={{ marginBottom: \"60px\" }}>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked={entryFormik.values.isTrending} />}\n              name=\"isTrending\"\n              onChange={(e) => {\n                entryFormik.setFieldValue(\"isTrending\", e.target.checked);\n              }}\n              label=\"This course is trending?\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <StickyBar\n          content={\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"5px\",\n              }}>\n              <Button\n                variant=\"contained\"\n                onClick={() => navigate(-1)}\n                color=\"error\"\n                size=\"small\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={entryFormik.handleSubmit}>\n                Submit\n              </Button>\n            </Grid>\n          }\n        />\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function LoadingScreen({ message = \"Loading... Please wait!\" }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        height: \"90vh\",\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}>\n      <Typography sx={{ fontWeight: \"bold\", fontSize: \"14px\" }}>\n        {message}\n      </Typography>\n    </Box>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  styled,\n} from \"@mui/material\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nimport { useContext } from \"react\";\n\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport UserContext from \"../../context/UserContext\";\nimport LoadingScreen from \"../../components/LoaddingScreen\";\n\nconst Wrapper = styled(Container)(({ theme }) => ({\n  display: \"flex\",\n  height: \"90vh\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  width: \"100%\",\n  marginTop: \"10px\",\n}));\n\nconst VideoContainer = styled(Box)(() => ({\n  display: \"flex\",\n  flex: 1,\n  width: \"100%\",\n  height: \"100%\",\n}));\n\nconst TYPE = [\"OneONoneCall\", \"GroupCall\", \"LiveStreaming\"];\n\nconst CREDENTIAL = {\n  OneONoneCall: {\n    appId: 914808192,\n    serverSecret: \"6f4bc5c4a35f3979a591bf2c534f335a\",\n  },\n  GroupCall: {\n    appId: 914808192,\n    serverSecret: \"6f4bc5c4a35f3979a591bf2c534f335a\",\n  },\n  LiveStreaming: {\n    appId: 206971782,\n    serverSecret: \"212d4d9408c30ced21273b86754371f2\",\n  },\n};\n\nexport default function Room() {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { roomID } = useParams();\n\n  console.log(roomID, \"rooooooommmmmmmmmmmid\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isReady, setIsReady] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [zpost, setZpost] = React.useState(null);\n  const { state } = location;\n\n  console.log(state, \"ssssssssssssssssssssssssssssssssssssssssssssssssss\");\n\n  const getRoomDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.meeting.join, {\n        params: {\n          schoolId: selectedSetting._id,\n          roomID: roomID,\n        },\n      });\n    } catch (error) {\n      setError(\"Invalid meeting link!\");\n      setOpen(true);\n    }\n    setIsReady(true);\n  };\n\n  React.useEffect(() => {\n    getRoomDetails();\n  }, [selectedSetting, roomID]);\n\n  let myMeeting = async (element) => {\n    // generate Kit Token\n\n    let meetingType = state ? state.meetingType : TYPE[0];\n\n    const appID = CREDENTIAL[meetingType]?.appId;\n    const serverSecret = CREDENTIAL[meetingType]?.serverSecret;\n\n    console.log(\n      appID,\n      serverSecret,\n      \"==============================================\"\n    );\n    let currentUserStringified =\n      window.localStorage.getItem(\"current_ecs_user\");\n\n    console.log(currentUserStringified);\n\n    let currentUser = JSON.parse(currentUserStringified);\n    console.log(currentUser);\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n      appID,\n      serverSecret,\n      roomID,\n      currentUser._id,\n      currentUser.basicInfo.name\n    );\n    try {\n      // Create instance object from Kit Token.\n      const zp = ZegoUIKitPrebuilt.create(kitToken);\n\n      // start the call\n\n      zp.joinRoom({\n        container: element,\n        autoHideFooter: true,\n        layout: \"Auto\",\n        enableUserSearch: true,\n        showMyMicrophoneToggleButton: true,\n        showRoomTimer: true,\n        showRemoveUserButton: true,\n        scenario: {\n          config: {\n            role: ZegoUIKitPrebuilt.Host,\n          },\n          mode: ZegoUIKitPrebuilt[meetingType], // To implement 1-on-1 calls, modify the parameter here to [ZegoUIKitPrebuilt.OneONoneCall].\n        },\n      });\n\n      setZpost(zp);\n    } catch (error) {\n      ZegoUIKitPrebuilt.ConsoleError();\n      console.log(error, \"Error while joining room\");\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (zpost) {\n        try {\n          zpost.destroy();\n        } catch (error) {\n          console.log(error, \"error while stopping zegocloud\");\n        }\n      }\n    };\n  }, [zpost]);\n\n  const handleBackPress = () => {\n    navigate(\"/live\", { replace: true });\n  };\n\n  if (!isReady)\n    return <LoadingScreen message=\"Getting room details..., Please wait!\" />;\n\n  return (\n    <>\n      <Wrapper maxWidth={\"xl\"}>\n        <VideoContainer component={\"div\"} ref={myMeeting}></VideoContainer>\n      </Wrapper>\n\n      <Dialog\n        open={open}\n        onClose={handleBackPress}\n        aria-labelledby=\"alert-live-session-error\"\n        aria-describedby=\"alert-live-session-error-dialog-description\">\n        <DialogTitle id=\"alert-live-session-error\">{error}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-live-session-error-dialog-description\">\n            The link you are trying to access either expired || does not exist\n            || you are not permitted to see the link\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"small\" onClick={handleBackPress} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  Box,\n  Card,\n  FormControl,\n  Grid,\n  InputLabel,\n  LinearProgress,\n  linearProgressClasses,\n  MenuItem,\n  Select,\n  styled,\n  TextareaAutosize,\n  TextField,\n  Switch,\n  Button,\n  Checkbox,\n  ListItemText,\n  Autocomplete,\n  InputBase,\n  Popper,\n  InputAdornment,\n  Typography,\n} from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 25,\n  borderRadius: 15,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 800 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 15,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#f42323\" : \"#308fe8\",\n  },\n}));\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n  borderBottom: `1px solid ${\n    theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n  }`,\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\n\nconst Compose = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { state } = useLocation();\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [receiverType, setReceiverType] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n\n  const [smsFrom, setSmsFrom] = useState({\n    sms: state\n      ? state.message\n      : `Dear {{VAR}}, We would like to inform you {{VAR1}},{{VAR2}},{{VAR3}},{{VAR4}},{{VAR5}} Regards Webspruce.`,\n  });\n\n  const [contacts, setContacts] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [notifyChecked, setNotifyChecked] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n\n  const [totalSms, setTotalSms] = useState(50);\n  const [consumedSms, setConsumedSms] = useState(0);\n  const [balance, setBalance] = useState(50);\n\n  const handleEmployeeAuto = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (employeeAutoSelect.length === employees.length) {\n        setEmployeeAutoSelect([]);\n        setSelectedEmployeeCount(0);\n        setSelectEmployee(\"\");\n      } else {\n        setEmployeeAutoSelect([...employees]);\n        setSelectedEmployeeCount(employees.length);\n        setSelectEmployee(\"All\");\n      }\n    } else {\n      const employeeNames = val.map((emp) => emp.basicInfo.name);\n      const selectedEmployeeIds = val.map((emp) => emp._id);\n      setEmployeeAutoSelect(val);\n      setSelectedEmployeeCount(val.length);\n      setSelectEmployee(employeeNames.join(\", \"));\n    }\n  };\n\n  useEffect(() => {\n    setSectionAutoSelect([]);\n    setSelectSection(\"\");\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [classAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [sectionAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSelectRoleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setSmsFrom({ ...smsFrom, [name]: value });\n  };\n\n  const handleRoleChange = async (e) => {\n    handleFormChange(e);\n    const role = e.target.value;\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: role,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (contactsAutoSelect.length === students.length) {\n        setContactsAutoSelect([]);\n        setContacts([]);\n        setSelectedStudentCount(0);\n        setSelectContacts(\"\");\n      } else {\n        const allStudentContacts = students.map((student) => student._id);\n        setContactsAutoSelect([...students]);\n        setContacts(allStudentContacts);\n        setSelectedStudentCount(students.length);\n        setSelectContacts(\"All\");\n      }\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n      setContactsAutoSelect(val);\n    }\n  };\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n        const filteredSections = sectionAutoSelect.filter((section) =>\n          classIds.includes(section.class._id)\n        );\n        setSectionAutoSelect(filteredSections);\n        setSelectSection(\n          filteredSections\n            .map((section) => `${section.name} (${section.class.name})`)\n            .join(\", \")\n        );\n\n        const filteredSectionIds = filteredSections.map(\n          (section) => section._id\n        );\n        if (filteredSectionIds.length) {\n          const { data: studentData } = await get(PRIVATE_URLS.student.list, {\n            params: {\n              schoolId: selectedSetting._id,\n              search: {\n                \"academicInfo.section\": filteredSectionIds,\n              },\n            },\n          });\n          setStudents(studentData.result);\n        } else {\n          setStudents([]);\n        }\n      } else {\n        setSections([]);\n        setSectionAutoSelect([]);\n        setSelectSection(\"\");\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNotifiy = (e) => {\n    setNotifyChecked(e.target.checked);\n  };\n\n  const resetForm = () => {\n    setSmsFrom({\n      sms: state\n        ? state.message\n        : `Dear {{VAR}}, We would like to inform you {{VAR1}},{{VAR2}},{{VAR3}},{{VAR4}},{{VAR5}} Regards Webspruce.`,\n    });\n    setSelectRoles([]);\n    setSelectClass(\"\");\n    setSelectSection(\"\");\n    setSelectContacts(\"\");\n    setSelectEmployee([]);\n    setReceiverType(\"\");\n    setStudents([]);\n    setContactsAutoSelect([]);\n    setEmployees([]);\n    selectedStudentCount(0);\n    setSelectedEmployeeCount(0);\n    setEmployeeAutoSelect([]);\n  };\n\n  const handleSubmitSms = async (e) => {\n    e.preventDefault();\n    setSendingMessage(true);\n    try {\n      setConsumedSms(consumedSms + 1);\n      setBalance(totalSms - (consumedSms + 1));\n\n      toast.success(\"Message sent successfully\");\n      resetForm();\n      setSendingMessage(false);\n    } catch (error) {\n      setSendingMessage(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Compose\" />\n\n      <form onSubmit={handleSubmitSms}>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box\n            sx={{\n              paddingLeft: \"1rem\",\n              display: \"flex\",\n              gap: \"8px\",\n            }}>\n            <Box>\n              Total SMS:{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {totalSms}\n              </Typography>\n            </Box>\n            <Box>\n              Consumed SMS:{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {consumedSms}\n              </Typography>\n            </Box>\n            <Box>\n              Balance SMS:{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {balance}\n              </Typography>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              padding: \"1rem\",\n            }}>\n            <BorderLinearProgress\n              variant=\"determinate\"\n              value={((79875 - balance) * 100) / 79875}\n            />\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box sx={{ flexFlow: 1 }}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <FormControl size=\"small\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-filrlccled-label\">\n                    Receiver Type\n                  </InputLabel>\n                  <Select\n                    label=\"Receiver Type\"\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"receiverType\"\n                    value={receiverType}\n                    onChange={(e) => setReceiverType(e.target.value)}>\n                    <MenuItem\n                      value={\"role\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Role\n                    </MenuItem>\n                    <MenuItem\n                      value={\"user\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      User\n                    </MenuItem>\n                    <MenuItem\n                      value={\"students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"All Students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      All Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"file\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      File\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              {receiverType === \"file\" && (\n                <>\n                  <Grid\n                    item\n                    xs={12}\n                    md={3}\n                    lg={1}\n                    sx={{ alignSelf: \"center\", mt: \"-15px\" }}>\n                    <Button size=\"small\" variant=\"contained\">\n                      Sample File\n                    </Button>\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={12}\n                    md={4}\n                    lg={3}\n                    sx={{ alignSelf: \"center\", mt: \"-15px\" }}>\n                    <FileSelect\n                      name=\"file\"\n                      onChange={(e) => handleChangeFiles(e)}\n                      customOnChange={true}\n                      label=\"Select File\"\n                      selectedFiles={selectFile}\n                    />\n                  </Grid>\n                </>\n              )}\n              {receiverType === \"students\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Popper\n                      id={\"classPopper\"}\n                      open={!!classPopper}\n                      anchorEl={classPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          onBlur={() => setClassPopper(null)}\n                          open={true}\n                          value={classAutoSelect}\n                          multiple\n                          onChange={handleClassSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={classes}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => `${option.name}`}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option.name}`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Class\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Popper\n                      id={\"sectionPopper\"}\n                      open={!!sectionPopper}\n                      anchorEl={sectionPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setSectionPopper(null)}\n                          open={true}\n                          value={sectionAutoSelect}\n                          onChange={handleSectionSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={sections.sort((a, b) =>\n                            a.class.name.localeCompare(b.class.name)\n                          )}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option.name}(class:${option.class.name})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {`${option.name}(class:${option.class.name})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Section\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    <Popper\n                      id={\"contactsPopper\"}\n                      open={!!contactsPopper}\n                      anchorEl={contactsPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        {/* <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: \"All\",\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? \"All\"\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n\n                              {`${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Students\"\n                              autoFocus\n                            />\n                          )}\n                        /> */}\n\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: `All (${students.length})`,\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? `All (${students.length})`\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={\n                                  selected ||\n                                  (option._id === \"all\" &&\n                                    contactsAutoSelect.length ===\n                                      students.length)\n                                }\n                              />\n                              {option._id === \"all\"\n                                ? `All (${students.length})`\n                                : `${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <Box\n                              sx={{\n                                ml: 5,\n                                width: \"100%\",\n                              }}>\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Search student with name\"\n                                autoFocus\n                              />\n                            </Box>\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n\n              {receiverType === \"role\" && (\n                <Grid item xs={12} md={3} lg={3}>\n                  <FormControl size=\"small\" fullWidth>\n                    <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n                    <Select\n                      label=\"Role\"\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={selectRoles}\n                      onChange={handleSelectRoleChange}\n                      multiple\n                      renderValue={(selected) => selected.join(\", \")}\n                      MenuProps={MenuProps}>\n                      {roles &&\n                        roles.map((row, index) => (\n                          <MenuItem\n                            key={row._id}\n                            value={row.name}\n                            sx={{ fontSize: 12 }}>\n                            <Checkbox\n                              checked={selectRoles.indexOf(row.name) > -1}\n                            />\n                            <ListItemText primary={row.name} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {receiverType === \"user\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <FormControl size=\"small\" fullWidth>\n                      <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n\n                      <Select\n                        labelId=\"demo-simple-select-filled-label\"\n                        id=\"demo-simple-select-filled\"\n                        name=\"role\"\n                        sx={{ marginBottom: \"15px\" }}\n                        label=\"Role\"\n                        size=\"small\"\n                        onChange={handleRoleChange}\n                        value={smsFrom.role}>\n                        {roles &&\n                          roles\n                            .filter((r) => r.name?.toLowerCase() !== \"student\")\n                            .map((row, index) => (\n                              <MenuItem\n                                key={row._id}\n                                value={row._id}\n                                sx={{ fontSize: 12, fontWeight: 500 }}>\n                                {row.name}\n                              </MenuItem>\n                            ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Popper\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={\n                                  selected ||\n                                  (option._id === \"all\" &&\n                                    employeeAutoSelect.length ===\n                                      employees.length)\n                                }\n                              />\n                              {option._id === \"all\"\n                                ? `All (${employees.length})`\n                                : `${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <Box\n                              sx={{\n                                ml: 5,\n                                width: \"100%\",\n                              }}>\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Employees\"\n                                autoFocus\n                              />\n                            </Box>\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={6} lg={4}>\n              <FormControl required={true} size=\"small\" fullWidth>\n                <InputLabel sx={{ fontSize: 12 }}>SMS Type</InputLabel>\n                <Select\n                  label=\"SMS Type\"\n                  id=\"demo-simple-select-filled\"\n                  name=\"smsType\"\n                  value={smsFrom.smsType || \"\"}\n                  onChange={handleFormChange}>\n                  <MenuItem\n                    value={\"general\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    General\n                  </MenuItem>\n                  <MenuItem\n                    value={\"attendance\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Attendence\n                  </MenuItem>\n                  <MenuItem\n                    value={\"fee\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Fee\n                  </MenuItem>\n                  <MenuItem\n                    value={\"credential\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Credential\n                  </MenuItem>\n                  <MenuItem\n                    value={\"exam\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Exam\n                  </MenuItem>\n                  <MenuItem\n                    value={\"leave\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Leave\n                  </MenuItem>\n                  <MenuItem\n                    value={\"library\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Library\n                  </MenuItem>\n                  <MenuItem\n                    value={\"transport\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Transport\n                  </MenuItem>\n                  <MenuItem\n                    value={\"hostel\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Hostel\n                  </MenuItem>\n                  <MenuItem\n                    value={\"preaddmission\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Preaddmission\n                  </MenuItem>\n                  <MenuItem\n                    value={\"parentMeeting\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Parent Meeting\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolTiming\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Timing\n                  </MenuItem>\n                  <MenuItem\n                    value={\"notice\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Notice\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolOpen\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Open\n                  </MenuItem>\n                  <MenuItem\n                    value={\"education\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Education\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              <TextField\n                required={true}\n                size=\"small\"\n                label=\"Subject\"\n                fullWidth\n                name=\"subject\"\n                value={smsFrom.subject || \"\"}\n                onChange={handleFormChange}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={12} lg={12}>\n              <Box style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                <Typography component={\"span\"}>Dynamic Tag: </Typography>\n\n                <Box>\n                  [name],[school_name] - wil get autoreplaced,\n                  <Typography component={\"span\"} color=\"error\">\n                    replace - {\"{{var}}\"} with your content, variable fields may\n                    vary in length. Space consumed for 1 variable is 30 char and\n                    avoid double space.\n                  </Typography>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TextareaAutosize\n                maxRows={4}\n                aria-label=\"maximum height\"\n                placeholder=\"Text Message\"\n                style={{\n                  width: \"100%\",\n                  height: \"120px\",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}\n                name=\"sms\"\n                fullWidth\n                value={smsFrom.sms}\n                onChange={handleFormChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <span>Click here to Notify Via SMS</span>\n              <Switch onChange={handleNotifiy} checked={notifyChecked} />\n            </Grid>\n          </Grid>\n        </Card>\n\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <LoadingButton\n              loading={sendingMessage}\n              size=\"small\"\n              variant=\"contained\"\n              type=\"submit\">\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nexport default Compose;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Button,\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Tooltip,\n  IconButton,\n  TablePagination,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport ReplyRoundedIcon from \"@mui/icons-material/ReplyRounded\";\nimport RedoRoundedIcon from \"@mui/icons-material/RedoRounded\";\nimport SimCardDownloadRoundedIcon from \"@mui/icons-material/SimCardDownloadRounded\";\nimport { RefreshRounded } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\n\nconst Type_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Automatic\",\n    value: \"automatic\",\n  },\n];\n\nexport default function Report() {\n  const [report, setReport] = useState([\n    {\n      smsSubject: \"Pre-Admission\",\n      smsType: \"Manual\",\n      message:\n        \"Dear John,Thank you for your admission at webspruce. Our staff will help you for all admission related process.\",\n    },\n    {\n      smsSubject: \"Pre-Admission\",\n      smsType: \"Manual\",\n      message:\n        \"Dear John,Thank you for your admission at webspruce. Our staff will help you for all admission related process.\",\n    },\n    {\n      smsSubject: \"Pre-Admission\",\n      smsType: \"Manual\",\n      message:\n        \"Dear John,Thank you for your admission at webspruce. Our staff will help you for all admission related process.\",\n    },\n  ]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const getList = async (values) => {\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      type: \"\",\n      fromDate: null,\n      toDate: null,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Report\" />\n      <Grid container spacing={2}>\n        <Grid xs={12} md={3} item>\n          <FormSelect\n            required={true}\n            name=\"type\"\n            formik={entryFormik}\n            label=\"Type\"\n            options={Type_Options}\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker\n            formik={entryFormik}\n            label=\"From Date\"\n            name=\"fromDate\"\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker formik={entryFormik} label=\"To Date\" name=\"toDate\" />\n        </Grid>\n        <Grid item xs={12} md={3} lg={3} display=\"flex\" alignSelf=\"center\">\n          <Button size=\"small\" type=\"submit\" variant=\"contained\">\n            Find\n          </Button>\n        </Grid>\n      </Grid>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Subject\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Type\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Message\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Total SMS\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Time/Date\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Action\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {report &&\n              report\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => (\n                  <TableRow key={row._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">{row.smsSubject}</TableCell>\n                    <TableCell align=\"center\">{row.smsType}</TableCell>\n                    <TableCell align=\"center\">\n                      {row.message.substring(0, 50) + \"...\"}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Typography>Total:50</Typography>\n                      <Typography>Awaiting:30</Typography>\n                      <Typography>Delivered:20</Typography>{\" \"}\n                      <Typography>Rejected/Failed:0 </Typography>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {dayjs(row.sentTime).format(\"DD-MM-YYYY hh:mm A\")}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                        }}>\n                        <Box>\n                          {\" \"}\n                          <Tooltip title=\"Refresh\">\n                            <IconButton>\n                              <RefreshRounded color=\"primary\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Report\">\n                            <IconButton>\n                              <SimCardDownloadRoundedIcon color=\"secondary\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                        <Box>\n                          {\" \"}\n                          <Tooltip title=\"Resend\">\n                            <IconButton>\n                              <ReplyRoundedIcon color=\"warning\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Forward\">\n                            <IconButton>\n                              <RedoRoundedIcon color=\"success\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n        {!report.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={report.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Grid,\n  Card,\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  Autocomplete,\n  Popper,\n  Checkbox,\n  styled,\n  InputBase,\n  InputAdornment,\n  Button,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst Credentails = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [classes, setClasses] = useState([]);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n  const { ref, width, height } = useResizeObserver();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n        const filteredSections = sectionAutoSelect.filter((section) =>\n          classIds.includes(section.class._id)\n        );\n        setSectionAutoSelect(filteredSections);\n        setSelectSection(\n          filteredSections\n            .map((section) => `${section.name} (${section.class.name})`)\n            .join(\", \")\n        );\n\n        const filteredSectionIds = filteredSections.map(\n          (section) => section._id\n        );\n        if (filteredSectionIds.length) {\n          const { data: studentData } = await get(PRIVATE_URLS.student.list, {\n            params: {\n              schoolId: selectedSetting._id,\n              search: {\n                \"academicInfo.section\": filteredSectionIds,\n              },\n            },\n          });\n          setStudents(studentData.result);\n        } else {\n          setStudents([]);\n        }\n      } else {\n        setSections([]);\n        setSectionAutoSelect([]);\n        setSelectSection(\"\");\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (contactsAutoSelect.length === students.length) {\n        setContactsAutoSelect([]);\n        setContacts([]);\n        setSelectedStudentCount(0);\n        setSelectContacts(\"\");\n      } else {\n        const allStudentContacts = students.map((student) => student._id);\n        setContactsAutoSelect([...students]);\n        setContacts(allStudentContacts);\n        setSelectedStudentCount(students.length);\n        setSelectContacts(\"All\");\n      }\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n      setContactsAutoSelect(val);\n    }\n  };\n\n  const handleRoleChange = async (e) => {\n    try {\n      const {\n        target: { value },\n      } = e;\n      setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: value,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleEmployeeAuto = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (employeeAutoSelect.length === employees.length) {\n        setEmployeeAutoSelect([]);\n        setSelectedEmployeeCount(0);\n        setSelectEmployee(\"\");\n      } else {\n        setEmployeeAutoSelect([...employees]);\n        setSelectedEmployeeCount(employees.length);\n        setSelectEmployee(\"All\");\n      }\n    } else {\n      const employeeNames = val.map((emp) => emp.basicInfo.name);\n      const selectedEmployeeIds = val.map((emp) => emp._id);\n      setEmployeeAutoSelect(val);\n      setSelectedEmployeeCount(val.length);\n      setSelectEmployee(employeeNames.join(\", \"));\n    }\n  };\n\n  const isStudentRoleSelected = selectRoles.some((roleId) => {\n    const role = roles.find((r) => r._id === roleId);\n    return role && role.name.includes(\"STUDENT\");\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      toast.success(\"Credential sent successfully\");\n      setSelectRoles([]);\n      setSelectClass(\"\");\n      setSelectSection(\"\");\n      setSelectContacts([]);\n      setSelectEmployee([]);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Card\n          sx={{\n            padding: \"15px\",\n            width: { xs: \"100%\", sm: \"100%\", md: \"70%\", lg: \"50%\" },\n          }}>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12} lg={12}>\n                <FormControl variant=\"outlined\" fullWidth required>\n                  <InputLabel\n                    id=\"demo-simple-select-filled-label\"\n                    sx={{ fontSize: 12 }}>\n                    User Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"role\"\n                    sx={{ marginBottom: \"15px\" }}\n                    multiple\n                    label=\"User Type\"\n                    size=\"small\"\n                    onChange={handleRoleChange}\n                    value={selectRoles}>\n                    {roles &&\n                      roles.map((row, index) => (\n                        <MenuItem\n                          key={row._id}\n                          value={row._id}\n                          sx={{ fontSize: 12, fontWeight: 500 }}>\n                          {row.name}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                {selectRoles.some((roleId) => {\n                  const role = roles.find((r) => r._id === roleId);\n                  return role && role.name.includes(\"STUDENT\");\n                }) && selectRoles.length == 1 ? (\n                  <>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectClass}\n                        fullWidth\n                        sx={{ marginBottom: \"15px\" }}\n                        aria-describedby={\"classPopper\"}\n                        onFocus={(e) => {\n                          setClassPopper(classPopper ? null : e.currentTarget);\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Class\"\n                      />\n                      <Box ref={ref}>\n                        <Popper\n                          sx={{\n                            width: width ? width + 15 : 700,\n                            zIndex: 1,\n                          }}\n                          id={\"classPopper\"}\n                          open={!!classPopper}\n                          anchorEl={classPopper}>\n                          <FormControl\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth>\n                            <Autocomplete\n                              onBlur={() => setClassPopper(null)}\n                              open={true}\n                              value={classAutoSelect}\n                              multiple\n                              onChange={handleClassSelect}\n                              isOptionEqualToValue={(option, value) =>\n                                option._id === value._id\n                              }\n                              options={classes}\n                              disableCloseOnSelect\n                              getOptionLabel={(option) => `${option.name}`}\n                              renderOption={(props, option, { selected }) => (\n                                <li {...props}>\n                                  <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    checked={selected}\n                                  />\n                                  {`${option.name}`}\n                                </li>\n                              )}\n                              renderInput={(params) => (\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Class\"\n                                  autoFocus\n                                />\n                              )}\n                            />\n                          </FormControl>\n                        </Popper>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectSection}\n                        aria-describedby={\"sectionPopper\"}\n                        sx={{ marginBottom: \"15px\" }}\n                        fullWidth\n                        onFocus={(e) => {\n                          setSectionPopper(\n                            sectionPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Section\"\n                      />\n                      <Box ref={ref}>\n                        <Popper\n                          sx={{\n                            width: width ? width + 15 : 700,\n                            zIndex: 1,\n                          }}\n                          id={\"sectionPopper\"}\n                          open={!!sectionPopper}\n                          anchorEl={sectionPopper}>\n                          <FormControl\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth>\n                            <Autocomplete\n                              multiple\n                              onBlur={() => setSectionPopper(null)}\n                              open={true}\n                              value={sectionAutoSelect}\n                              onChange={handleSectionSelect}\n                              isOptionEqualToValue={(option, value) =>\n                                option._id === value._id\n                              }\n                              id=\"checkboxes-tags-demo\"\n                              options={sections.sort((a, b) =>\n                                a.class.name.localeCompare(b.class.name)\n                              )}\n                              disableCloseOnSelect\n                              getOptionLabel={(option) =>\n                                `${option.name}(class:${option.class.name})`\n                              }\n                              renderOption={(props, option, { selected }) => (\n                                <li {...props}>\n                                  <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    style={{ marginRight: 8 }}\n                                    checked={selected}\n                                  />\n                                  {`${option.name}(class:${option.class.name})`}\n                                </li>\n                              )}\n                              renderInput={(params) => (\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Section\"\n                                  autoFocus\n                                />\n                              )}\n                            />\n                          </FormControl>\n                        </Popper>\n                      </Box>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectContacts}\n                        aria-describedby={\"contactsPopper\"}\n                        fullWidth\n                        onFocus={(e) => {\n                          setContactsPopper(\n                            contactsPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Students\"\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              All Total-{selectedStudentCount}\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                      <Box ref={ref}>\n                        <Popper\n                          sx={{\n                            width: width ? width + 15 : 700,\n                            zIndex: 1,\n                          }}\n                          id={\"contactsPopper\"}\n                          open={!!contactsPopper}\n                          anchorEl={contactsPopper}>\n                          <FormControl\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth>\n                            <Autocomplete\n                              multiple\n                              onBlur={() => setContactsPopper(null)}\n                              open={true}\n                              value={contactsAutoSelect}\n                              onChange={handleContactsList}\n                              isOptionEqualToValue={(option, value) =>\n                                option._id === value._id\n                              }\n                              id=\"checkboxes-tags-demo\"\n                              options={[\n                                {\n                                  _id: \"all\",\n                                  basicInfo: {\n                                    name: `All (${students.length})`,\n                                  },\n                                  contactNumber: \"\",\n                                },\n                                ...students,\n                              ]}\n                              disableCloseOnSelect\n                              getOptionLabel={(option) =>\n                                option._id === \"all\"\n                                  ? `All (${students.length})`\n                                  : `${option.basicInfo.name} (${option.contactNumber})`\n                              }\n                              renderOption={(props, option, { selected }) => (\n                                <li {...props}>\n                                  <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    style={{ marginRight: 8 }}\n                                    checked={\n                                      selected ||\n                                      (option._id === \"all\" &&\n                                        contactsAutoSelect.length ===\n                                          students.length)\n                                    }\n                                  />\n                                  {option._id === \"all\"\n                                    ? `All (${students.length})`\n                                    : `${option.basicInfo.name} (${option.contactNumber})`}\n                                </li>\n                              )}\n                              renderInput={(params) => (\n                                <Box\n                                  sx={{\n                                    ml: 5,\n                                    width: \"100%\",\n                                  }}>\n                                  <StyledInput\n                                    ref={params.InputProps.ref}\n                                    inputProps={params.inputProps}\n                                    placeholder=\"Search student with name\"\n                                    autoFocus\n                                  />\n                                </Box>\n                              )}\n                            />\n                          </FormControl>\n                        </Popper>\n                      </Box>\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n              {!isStudentRoleSelected ? (\n                <Grid item xs={12} md={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    value={selectEmployee}\n                    aria-describedby={\"employeePopper\"}\n                    onFocus={(e) => {\n                      setEmployeeListPopper(\n                        employeeListPopper ? null : e.currentTarget\n                      );\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Employees\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          All Total- {selectedEmployeeCount}\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <Box ref={ref}>\n                    <Popper\n                      sx={{\n                        width: width ? width + 15 : 700,\n                        zIndex: 1,\n                      }}\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={\n                                  selected ||\n                                  (option._id === \"all\" &&\n                                    employeeAutoSelect.length ===\n                                      employees.length)\n                                }\n                              />\n                              {option._id === \"all\"\n                                ? `All (${employees.length})`\n                                : `${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <Box\n                              sx={{\n                                ml: 5,\n                                width: \"100%\",\n                              }}>\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Employees\"\n                                autoFocus\n                              />\n                            </Box>\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Box>\n                </Grid>\n              ) : null}\n\n              {selectRoles.length >= 2 &&\n              selectRoles.some((roleId) => {\n                const role = roles.find((r) => r._id === roleId);\n                return role && role.name.includes(\"STUDENT\");\n              }) ? (\n                <>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"classPopper\"}\n                        open={!!classPopper}\n                        anchorEl={classPopper}>\n                        <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                          <Autocomplete\n                            onBlur={() => setClassPopper(null)}\n                            open={true}\n                            value={classAutoSelect}\n                            multiple\n                            onChange={handleClassSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            options={classes}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) => `${option.name}`}\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  checked={selected}\n                                />\n                                {`${option.name}`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Class\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"sectionPopper\"}\n                        open={!!sectionPopper}\n                        anchorEl={sectionPopper}>\n                        <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setSectionPopper(null)}\n                            open={true}\n                            value={sectionAutoSelect}\n                            onChange={handleSectionSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={sections.sort((a, b) =>\n                              a.class.name.localeCompare(b.class.name)\n                            )}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              `${option.name}(class:${option.class.name})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n                                {`${option.name}(class:${option.class.name})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Section\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"contactsPopper\"}\n                        open={!!contactsPopper}\n                        anchorEl={contactsPopper}>\n                        <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setContactsPopper(null)}\n                            open={true}\n                            value={contactsAutoSelect}\n                            onChange={handleContactsList}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={[\n                              {\n                                _id: \"all\",\n                                basicInfo: {\n                                  name: `All (${students.length})`,\n                                },\n                                contactNumber: \"\",\n                              },\n                              ...students,\n                            ]}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              option._id === \"all\"\n                                ? `All (${students.length})`\n                                : `${option.basicInfo.name} (${option.contactNumber})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={\n                                    selected ||\n                                    (option._id === \"all\" &&\n                                      contactsAutoSelect.length ===\n                                        students.length)\n                                  }\n                                />\n                                {option._id === \"all\"\n                                  ? `All (${students.length})`\n                                  : `${option.basicInfo.name} (${option.contactNumber})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <Box\n                                sx={{\n                                  ml: 5,\n                                  width: \"100%\",\n                                }}>\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Search student with name\"\n                                  autoFocus\n                                />\n                              </Box>\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"employeePopper\"}\n                        open={!!employeeListPopper}\n                        anchorEl={employeeListPopper}>\n                        <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                          <Autocomplete\n                            onBlur={() => setEmployeeListPopper(null)}\n                            open={true}\n                            value={employeeAutoSelect}\n                            multiple\n                            onChange={handleEmployeeAuto}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            options={[\n                              {\n                                _id: \"all\",\n                                basicInfo: { name: \"All\" },\n                              },\n                              ...employees,\n                            ]}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              `${option?.basicInfo.name} (${option?.contactNumber})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  checked={\n                                    selected ||\n                                    (option._id === \"all\" &&\n                                      employeeAutoSelect.length ===\n                                        employees.length)\n                                  }\n                                />\n                                {option._id === \"all\"\n                                  ? `All (${employees.length})`\n                                  : `${option?.basicInfo.name} (${option?.contactNumber})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <Box\n                                sx={{\n                                  ml: 5,\n                                  width: \"100%\",\n                                }}>\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Employees\"\n                                  autoFocus\n                                />\n                              </Box>\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n                </>\n              ) : (\n                \"\"\n              )}\n\n              <Grid item xs={12} md={12} lg={6} container>\n                <LoadingButton\n                  loading={loading}\n                  variant=\"contained\"\n                  size=\"small\"\n                  type=\"submit\">\n                  Send Credentials\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default Credentails;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nexport default function BulkPhoto() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudents(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getStudents,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section\n    ) {\n      getStudents(formik.values);\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  const handleNavigateStudent = (student) => {\n    navigate(`/sch/student/edit-student/${student._id}`);\n  };\n\n  const handleChangeFiles = async (e, studentId) => {\n    const { files } = e.target;\n    if (files.length > 0) {\n      const formData = new FormData();\n      formData.append(\"photo\", files[0]);\n\n      try {\n        await put(\n          PRIVATE_URLS.student.updatePhoto + \"/\" + studentId,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        getStudents(formik.values);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"div\"\n            onSubmit={formik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Photo</TableCell>\n              <TableCell align=\"center\">File</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {students.map((student, index) => (\n              <TableRow key={student._id}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">\n                  {student.academicInfo.rollNumber}\n                </TableCell>\n                <TableCell align=\"center\">{student.basicInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  <Avatar src={student.photo} sx={{ margin: \"auto\" }} />\n                </TableCell>\n                <TableCell align=\"center\" sx={{ maxWidth: \"100px\" }}>\n                  {/* <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    style={{ display: \"block\", margin: \"auto\" }}\n                  /> */}\n\n                  <FileSelect\n                    multi={false}\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    customOnChange={true}\n                    label=\"Select Image\"\n                  />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton onClick={() => handleNavigateStudent(student)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper, styled, Typography } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport ThemeSelector from \"../../components/ThemeSelector\";\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nexport default function IdCard() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      selectedIdCard: \"\",\n    },\n    onSubmit: console.log(\"log\"),\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getStudents();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  const handleSelectTheme = (theme) => {\n    entryFormik.setFieldValue(\"selectedIdCard\", theme);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Id Card\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={12} lg={12} item>\n            <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Select Your Id Card Theme\n            </Title>\n            <Box m={2}>\n              <ThemeSelector\n                onThemeSelect={handleSelectTheme}\n                webTheme={false}\n              />\n            </Box>\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\">\n              Generate\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","export const assignmentTableKeys = [\n  {\n    name: \"Assignment Title\",\n    key: \"title\",\n  },\n  {\n    name: \"Class\",\n    key: \"className\",\n  },\n  {\n    name: \"Subject\",\n    key: \"subjectName\",\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Deadline\",\n    key: \"deadline\",\n    isDate: true,\n  },\n  // {\n  //   name: \"Get Assignment\",\n  //   key: \"assignment\",\n  // },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function AddEditAssignment({\n  dataToEdit = \"\",\n  handleClose = () => {},\n  onUpdateFormik = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subject, setSubject] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n\n      // entryFormik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get subject\n  const getSubject = async () => {\n    try {\n      if (entryFormik.values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.subject.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            class: entryFormik.values.class,\n          },\n        });\n        setSubject(data.result.map((d) => ({ label: d.name, value: d._id })));\n        entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n      } else {\n        const { data } = await get(PRIVATE_URLS.subject.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: entryFormik.values.class,\n              section: entryFormik.values.section,\n            },\n          },\n        });\n        setSubject(data.result.map((d) => ({ label: d.name, value: d._id })));\n        entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    const formData = new FormData();\n\n    formData.append(\"title\", values.title);\n    formData.append(\"class\", values.class);\n    formData.append(\"section\", values.section);\n    formData.append(\"subject\", values.subject);\n    formData.append(\"assignmentType\", values.assignmentType);\n\n    formData.append(\"deadline\", dayjs(values.deadline).format(\"YYYY-MM-DD\"));\n    formData.append(\"attachmentType\", values.attachmentType);\n    formData.append(\"isPublic\", values.isPublic ? true : false);\n    formData.append(\"note\", values.note);\n    formData.append(\"link\", values.link);\n    selectFile.forEach((file) => formData.append(\"file\", file));\n    formData.append(\"schoolId\", selectedSetting._id);\n\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.assignment.update + \"/\" + dataToEdit.id,\n          formData,\n          { headerd: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.assignment.create, formData, {\n          headers: { \"Content-type\": \"multipart/form-data\" },\n        });\n      }\n      onUpdateFormik.handleSubmit();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // file upload\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      title: dataToEdit?.title || \"\",\n      class: dataToEdit?.class || \"\",\n      section: dataToEdit?.section || \"\",\n      subject: dataToEdit?.subject || \"\",\n      assignmentType: dataToEdit?.assignmentType || \"\",\n\n      deadline: dataToEdit?.deadline\n        ? dayjs(dataToEdit.deadline).format(\"YYYY/MM/DD\")\n        : null,\n\n      attachmentType: dataToEdit?.attachmentType || \"\",\n      isPublish: dataToEdit?.isPublish || false,\n      note: dataToEdit?.note || \"\",\n      link: dataToEdit?.link || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              required={true}\n              name=\"title\"\n              formik={entryFormik}\n              label=\"Assignment Title\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"subject\"\n              formik={entryFormik}\n              label=\"Select Subject\"\n              options={subject}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"assignmentType\"\n              formik={entryFormik}\n              label=\"Select Assignment Type\"\n              options={[\n                { label: \"Class\", value: \"class\" },\n                { label: \"Assignment\", value: \"assignment\" },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              required={true}\n              formik={entryFormik}\n              name=\"deadline\"\n              label=\"Deadline\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              // required={true}\n              name=\"attachmentType\"\n              formik={entryFormik}\n              label=\"Select Attachment Type\"\n              options={[\n                { label: \"File\", value: \"File\" },\n                { label: \"Link\", value: \"Link\" },\n              ]}\n            />\n          </Grid>\n          {entryFormik.values?.attachmentType === \"File\" && (\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                name={`file`}\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                previousFile={dataToEdit?.file}\n                customOnChange={true}\n                selectedFiles={selectFile}\n              />\n            </Grid>\n          )}\n          {entryFormik.values?.attachmentType === \"Link\" && (\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                name=\"link\"\n                label=\"Link\"\n                required={true}\n                formik={entryFormik}\n              />\n            </Grid>\n          )}\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              name=\"isPublish\"\n              formik={entryFormik}\n              label=\"Publish To Web\"\n              options={[\n                { label: \"Yes\", value: true },\n                { label: \"No\", value: false },\n              ]}\n            />\n          </Grid>\n          <Grid xs={12} md={12} lg={12} item>\n            <FormInput\n              name=\"note\"\n              formik={entryFormik}\n              label=\"Note\"\n              multiline\n              rows={3}\n            />\n          </Grid>\n          <Grid\n            xs={12}\n            md={6}\n            lg={3}\n            style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n            item>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <LoadingButton\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ ml: 2 }}\n              loading={loading}>\n              Submit\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\nimport themeData from \"../../data/themeData\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? \"rgb(81 81 81)\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function AssignmentViewModel({\n  open = true,\n  title = \"\",\n  tableData,\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table aria-label=\"customized table\">\n            <TableBody>\n              <StyledTableRow isDarkMode={isDarkMode}>\n                <StyledTableCell\n                  align=\"left\"\n                  sx={{ fontWeight: \"bold\" }}\n                  isDarkMode={isDarkMode}>\n                  Note\n                </StyledTableCell>\n                <StyledTableCell align=\"left\" width={100}>\n                  {tableData?.note || \"NA\"}\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { assignmentTableKeys } from \"../../data/tableKeys/assignmentData\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport AddEditAssignment from \"./AddEditAssignment\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport AssignmentViewModel from \"./AssignmentViewModal\";\n\nconst CustomActionDownload = ({ data = {} }) => {\n  console.log(data, \"kkk\");\n  const handleClick = () => {\n    try {\n      if (data.file) {\n        window.open(data.file, \"_blank\");\n      } else {\n        window.open(data.link, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"No file or link found in the data\");\n    }\n  };\n\n  return (\n    <>\n      <IconButton size=\"small\" variant=\"contained\" onClick={handleClick}>\n        <DownloadIcon color=\"primary\" fontSize=\"small\" />\n      </IconButton>\n    </>\n  );\n};\n\nexport default function Assignment() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [value, setSelectValue] = useState(0);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const Section_Options = [{ label: \"All\", value: \"all\" }, ...sections];\n  const [open, setOpen] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  // get assignment\n  const getData = async (values) => {\n    try {\n      setLoading(true);\n      if (values?.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.assignment.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: values.class,\n            },\n          },\n        });\n\n        if (data.responseCode === \"OK\") {\n          setData(\n            data.result.map((assignment) => ({\n              ...assignment,\n              className: assignment.class.name,\n              subjectName: assignment.subject.name,\n              id: assignment._id,\n            }))\n          );\n        }\n      } else {\n        const { data } = await get(PRIVATE_URLS.assignment.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: values.class,\n              section: values.section,\n            },\n          },\n        });\n\n        if (data.responseCode === \"OK\") {\n          setData(\n            data.result.map((assignment) => ({\n              ...assignment,\n              className: assignment.class.name,\n              subjectName: assignment.subject.name,\n              id: assignment._id,\n            }))\n          );\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n      getData(entryFormik.values);\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data, \"fff\");\n    setDataToEdit({\n      ...data,\n      class: data.class._id,\n      subject: data.subject._id,\n    });\n    setSelectValue(1);\n  };\n\n  useEffect(() => {\n    if (value === 0) {\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.assignment.delete + \"/\" + id);\n      getData();\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Assignment\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\n          \"Assignment\",\n          dataToEdit && value != 0 ? \"Edit Assignment\" : \"Add Assignment\",\n        ]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"form\"\n            onSubmit={entryFormik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={Section_Options}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ ml: 2 }}>\n                Search\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </Paper>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\", \"custom\"]}\n          bodyDataModal=\"Assignment\"\n          bodyData={data}\n          tableKeys={assignmentTableKeys}\n          onEditClick={handleEditClick}\n          onViewClick={handleClickOpenView}\n          onDeleteClick={handleDelete}\n          CustomAction={CustomActionDownload}\n        />\n\n        <AssignmentViewModel\n          title=\"Assignment Information\"\n          open={modalData?.open}\n          tableData={modalData?.tableData}\n          onClose={onCloseViewModel}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <AddEditAssignment\n          dataToEdit={dataToEdit}\n          handleClose={handleClose}\n          onUpdateFormik={entryFormik}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport {\n  Avatar,\n  Collapse,\n  Menu,\n  MenuItem,\n  Stack,\n  Switch,\n  Tooltip,\n} from \"@mui/material\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { Route, Routes } from \"react-router-dom\";\n// icons\nimport CircleNotificationsIcon from \"@mui/icons-material/CircleNotifications\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport LockResetIcon from \"@mui/icons-material/LockReset\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nimport menu from \"../data/menu\";\nimport Dashboard from \"../pages/Dashboard\";\n\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport LOGO from \"../assets/images/deleteicon.png\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport ThemeModeContext from \"../context/ThemeModeContext\";\nimport AcademicYear from \"../pages/Administrator/AcademicYear\";\nimport ManageDesignation from \"../pages/HumanResource/ManageDesignation\";\nimport ManageDepartment from \"../pages/HumanResource/ManageDepartment\";\nimport Employee from \"../pages/HumanResource/Employee\";\nimport OfferLetter from \"../pages/HumanResource/OfferLetter\";\nimport RelievingLetter from \"../pages/HumanResource/RelievingLetter\";\nimport OffBoarding from \"../pages/HumanResource/OffBoarding\";\nimport ExperienceLetter from \"../pages/HumanResource/ExperienceLetter\";\nimport TeacherActivity from \"../pages/HumanResource/TeacherActivity\";\nimport RolePermission from \"../pages/Administrator/RolePermission\";\nimport UserRole from \"../pages/Administrator/UserRole\";\nimport ResetPassword from \"../pages/Administrator/ResetPassword\";\nimport Enquiries from \"../pages/Pre-Admission/Enquiries\";\nimport Exams from \"../pages/Pre-Admission/Exams\";\nimport ExamSchedules from \"../pages/Pre-Admission/ExamSchedules\";\nimport Result from \"../pages/Pre-Admission/Result\";\nimport Class from \"../pages/Academic/Class\";\nimport Section from \"../pages/Academic/Section\";\nimport Subject from \"../pages/Academic/Subject\";\nimport StudentAttendance from \"../pages/Attendance/StudentAttendance\";\nimport EmployeeAttendance from \"../pages/Attendance/EmployeeAttendance\";\nimport ClassRoutine from \"../pages/ClassRoutine\";\nimport Overview from \"../pages/Student/Overview\";\nimport AdmitStudent from \"../pages/Student/AdmitStudent\";\nimport Reshuffle from \"../pages/Student/Reshuffle\";\nimport Promotion from \"../pages/Student/Promotion\";\nimport BulkAdmission from \"../pages/Student/BulkAdmission\";\nimport Credential from \"../pages/Student/Credential\";\nimport QuickAdmit from \"../pages/Student/QuickAdmit\";\nimport StudentActivity from \"../pages/Student/StudentActivity\";\n\nimport Notice from \"../pages/Announcement/Notice\";\nimport News from \"../pages/Announcement/News\";\nimport Holiday from \"../pages/Announcement/Holiday\";\nimport AwardsAndAchievements from \"../pages/Announcement/AwardsAndAchievements\";\nimport SplashNews from \"../pages/Announcement/SplashNews\";\nimport Gallery from \"../pages/Gallery\";\nimport Notifications from \"../pages/Notifications\";\nimport Event from \"../pages/Event\";\nimport ExamGrade from \"../pages/Exam/ExamGrade\";\nimport ExamTerm from \"../pages/Exam/ExamTerm\";\nimport ExamSchedule from \"../pages/Exam/ExamSchedule\";\nimport ExamHallTicket from \"../pages/Exam/ExamHallTicket\";\nimport DivisionWiseReport from \"../pages/ExamMark/DivisionWiseReport\";\nimport SubjectWiseReport from \"../pages/ExamMark/SubjectWiseReport\";\nimport ConsolidatedMarkSheet from \"../pages/ExamMark/ConsolidatedMarkSheet\";\nimport Markscard from \"../pages/ExamMark/Markscard\";\nimport ExamResult from \"../pages/ExamMark/ExamResult\";\nimport ManageMark from \"../pages/ExamMark/ManageMark\";\nimport ExamAttendance from \"../pages/ExamMark/ExamAttendance\";\nimport Courses from \"../pages/LMS/Courses\";\nimport CourseContent from \"../pages/LMS/CourseContent\";\nimport Live from \"../pages/LMS/Live\";\nimport Storage from \"../pages/LMS/Storage\";\nimport Books from \"../pages/Library/Books\";\nimport Periodical from \"../pages/Library/Periodical\";\nimport StudentLibraryMember from \"../pages/Library/StudentLibraryMember\";\nimport StudentIssueReturn from \"../pages/Library/StudentIssueReturn\";\nimport EmployeeLibraryMember from \"../pages/Library/EmployeeLibraryMember\";\nimport EmployeeIssueReturn from \"../pages/Library/EmployeeIssueReturn\";\nimport LeaveType from \"../pages/LeaveManagement/LeaveType\";\nimport StudentsLeave from \"../pages/LeaveManagement/StudentsLeave\";\nimport EmployeeLeave from \"../pages/LeaveManagement/EmployeeLeave\";\nimport LeaveReport from \"../pages/LeaveManagement/LeaveReport\";\nimport Item from \"../pages/Inventory/Item\";\nimport Vendor from \"../pages/Inventory/Vendor\";\nimport InOutTransaction from \"../pages/Inventory/InOutTransaction\";\nimport StockList from \"../pages/Inventory/StockList\";\nimport Issue from \"../pages/Inventory/Issue\";\nimport Sell from \"../pages/Inventory/Sell\";\nimport StudyCertificate from \"../pages/Certificate/StudyCertificate\";\nimport TransferCertificate from \"../pages/Certificate/TransferCertificate\";\nimport ReceiptBook from \"../pages/Fees/ReceiptBook\";\nimport FeeMapCategory from \"../pages/Fees/FeeMapCategory\";\nimport CollectFees from \"../pages/Fees/CollectFees\";\nimport BalanceFeeReport from \"../pages/Fees/BalanceFeeReport\";\nimport FeeOverview from \"../pages/Fees/FeeOverview\";\nimport Reconciliation from \"../pages/Fees/Reconciliation\";\nimport ManageHostel from \"../pages/Hostel/ManageHostel\";\nimport ManageRoomType from \"../pages/Hostel/ManageRoomType\";\nimport ManageRoomAndBed from \"../pages/Hostel/ManageRoomAndBed\";\nimport HostelMember from \"../pages/Hostel/HostelMember\";\nimport Vehicle from \"../pages/Transport/Vehicle\";\nimport ManageRouteAndTrips from \"../pages/Transport/ManageRouteAndTrips\";\nimport TransportMember from \"../pages/Transport/TransportMember\";\nimport VehicleRoutes from \"../pages/Transport/Routes\";\nimport VehicleLog from \"../pages/Transport/VehicleLog\";\nimport VehicleMaintenance from \"../pages/Transport/VehicleMaintenance\";\nimport SalaryGrade from \"../pages/PayRoll/SalaryGrade\";\nimport MakePayment from \"../pages/PayRoll/MakePayment\";\nimport LibraryReport from \"../pages/Report/LibraryReport\";\nimport StudentYearlyAttendance from \"../pages/Report/StudentYearlyAttendance\";\nimport EmployeeYearlyAttendance from \"../pages/Report/EmployeeYearlyAttendance\";\nimport StudentActivityReport from \"../pages/Report/StudentActivityReport\";\nimport StudentAttendanceReport from \"../pages/Report/StudentAttendance\";\nimport EmployeeAttendanceReport from \"../pages/Report/EmployeeAttendance\";\nimport VisitorInfo from \"../pages/VisitorInfo/VisitorInfo\";\nimport StudentCheckout from \"../pages/VisitorInfo/StudentCheckout\";\nimport HelpDesk from \"../pages/HelpDesk\";\nimport GuardianFeedback from \"../pages/GuardianFeedback\";\nimport StudentBulkPhoto from \"../pages/Student/StudentBulkPhoto\";\nimport StudentReport from \"../pages/Report/StudentReport\";\nimport AddForm from \"../forms/AddForm\";\nimport AddEmployee from \"../pages/HumanResource/AddEmployee\";\nimport ManageInstitute from \"../pages/ManageInstitute/ManageInstitute\";\nimport AddInstitute from \"../pages/ManageInstitute/AddInstitute\";\nimport themeData from \"../data/themeData\";\nimport Profile from \"../pages/AccountSettings/Profile\";\nimport UpdateEmployee from \"../pages/HumanResource/UpdateEmployee\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport SettingContext from \"../context/SettingsContext\";\nimport AddStudent from \"../pages/Student/AddStudent\";\nimport AddCourse from \"../pages/LMS/AddCourse\";\nimport UpdateCourse from \"../pages/LMS/UpdateCourse\";\nimport Room from \"../pages/LMS/Room\";\nimport Compose from \"../pages/Communication/Compose\";\nimport Report from \"../pages/Communication/Report\";\nimport Credentials from \"../pages/Communication/Credentials\";\nimport BulkPhoto from \"../pages/Student/BulkPhoto\";\nimport IdCard from \"../pages/Student/IdCard\";\nimport Assignment from \"../pages/Assignment/Assignment\";\n\n// exlnt_70471681\n// 9538063455\n\nconst drawerWidth = 250;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst DrawerFooter = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-start\",\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nexport default function NavDrawer() {\n  const theme = useTheme();\n  const { selectedSetting } = React.useContext(SettingContext);\n  const [open, setOpen] = React.useState(true);\n  // const { setUser, user } = React.useContext(UserContext);\n  const [sideMenuData, setSideMenuData] = React.useState([]);\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const openProfile = Boolean(anchorEl);\n  const [activeYear, setActiveYear] = React.useState([]);\n  const [employee, setEmployee] = React.useState([]);\n  console.log(employee, \"ll\");\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const getEmployees = async () => {\n    const user = window.localStorage.getItem(\"current_ecs_user\");\n    setEmployee(JSON.parse(user));\n  };\n\n  const { isDarkMode, setIsDarkMode } = React.useContext(ThemeModeContext);\n  const [selecteSubMenu, setSelectedSubMenu] = React.useState(\"\");\n  const [selectedMenu, setSelectedMenu] = React.useState(null);\n  const { SIDE_MENU_DATA } = menu;\n\n  React.useEffect(() => {\n    setSideMenuData(SIDE_MENU_DATA);\n    getActiveAcademicYear();\n    getEmployees();\n  }, []);\n\n  //get academic year\n  const getActiveAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setActiveYear(data.result[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // on load if any selected sub-menu was there then open\n  React.useEffect(() => {\n    const openPreviousMenu = () => {\n      let path = window.location.pathname;\n      let menuIndex = null;\n\n      for (let menu of SIDE_MENU_DATA) {\n        if (menu.subMenus.length) {\n          let pathNames = menu.subMenus.map((s) => s.path);\n          if (pathNames.includes(path)) {\n            menuIndex = SIDE_MENU_DATA.indexOf(menu);\n          }\n        }\n      }\n\n      if (menuIndex) {\n        setSelectedMenu(menuIndex);\n        setOpen(true);\n      }\n    };\n\n    openPreviousMenu();\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleModeChange = () => {\n    setIsDarkMode(!isDarkMode);\n    window.localStorage.setItem(\"isDarkMode\", !isDarkMode);\n  };\n\n  const handleToggleMenuOpen = (index) => {\n    if (selectedMenu === index) {\n      return setSelectedMenu(null);\n    }\n    setSelectedMenu(index);\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(\"access_token\");\n    window.localStorage.removeItem(\"current_ecs_user\");\n    window.localStorage.removeItem(\"refresh_token\");\n    window.localStorage.removeItem(\"userType\");\n    navigate(\"/\");\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: 5,\n              ...(open && { display: \"none\" }),\n            }}>\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            color=\"white\"\n            textAlign=\"center\"\n            fontSize=\"18px\"\n            sx={{ display: { xs: \"none\", md: \"block\" } }}>\n            {selectedSetting?.name} [{activeYear ? activeYear?.from : \"-\"} -{\" \"}\n            {activeYear ? activeYear?.to : \"-\"}]\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              width: \"100%\",\n              flex: 1,\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}>\n            <Stack\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              spacing={1}\n              direction=\"row\">\n              <Tooltip title=\"Notification\">\n                <Link to=\"/sch/notifications\">\n                  <IconButton>\n                    <NotificationsIcon\n                      sx={{ width: 26, height: 26, color: \"#BDBDBD\" }}\n                    />\n                  </IconButton>\n                </Link>\n              </Tooltip>\n              <Tooltip title=\"Account Settings\">\n                <IconButton\n                  onClick={handleClick}\n                  aria-controls={openProfile ? \"account-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={openProfile ? true : undefined}>\n                  {employee?.photo ? (\n                    <img\n                      src={employee?.photo}\n                      style={{\n                        width: \"26px\",\n                        height: \"26px\",\n                        display: \"block\",\n                        objectFit: \"cover\",\n                        margin: \"0 auto\",\n                        borderRadius: \"50%\",\n                        overflow: \"hidden\",\n                        cursor: \"pointer\",\n                      }}\n                      alt=\"Preview\"\n                    />\n                  ) : (\n                    <Avatar sx={{ width: 26, height: 26 }} />\n                  )}\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"websites\">\n                <Link to=\"/\">\n                  <IconButton>\n                    <Avatar\n                      src=\"/world-wide-web.png\"\n                      alt=\"loading...\"\n                      sx={{ width: 26, height: 26 }}\n                    />\n                  </IconButton>\n\n                  {/* <img\n                  src=\"/world-wide-web.png\"\n                  alt=\"loading...\"\n                  width={30}\n                  height={30}\n                  color=\"#fff\"\n                /> */}\n                </Link>\n              </Tooltip>\n            </Stack>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={openProfile}\n        onClose={handleClose}\n        onClick={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: \"visible\",\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n            mt: 1.5,\n            \"& .MuiAvatar-root\": {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            \"&::before\": {\n              content: '\"\"',\n              display: \"block\",\n              position: \"absolute\",\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: \"background.paper\",\n              transform: \"translateY(-50%) rotate(45deg)\",\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/profile\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <PersonIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>Profile</ListItemText>\n          </Link>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/administrator/reset-password\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <LockResetIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>\n              Reset Password\n            </ListItemText>\n          </Link>\n        </MenuItem>\n\n        <MenuItem onClick={handleLogout}>\n          <Link\n            to=\"/sch/administrator/reset-password\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <LogoutIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>Log Out</ListItemText>\n          </Link>\n        </MenuItem>\n      </Menu>\n\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"sticky\",\n            top: 0,\n            zIndex: 1,\n            backgroundColor: isDarkMode ? \"#000\" : \"#fff\",\n            overflow: \"hidden\",\n          }}>\n          <Box></Box>\n          <img\n            style={{\n              height: \"50px\",\n              width: \"80px\",\n\n              objectFit: \"contain\",\n            }}\n            src={selectedSetting?.logo}\n          />\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon color=\"primary\" />\n            ) : (\n              <ChevronLeftIcon color=\"primary\" />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {sideMenuData.map((m, index) =>\n            !m.subMenus.length ? (\n              <div key={m.path}>\n                <ListItem disablePadding>\n                  <Link\n                    to={m.path}\n                    style={{\n                      textDecoration: \"none\",\n                      display: \"flex\",\n                      flex: 1,\n                    }}>\n                    <ListItemButton\n                      onClick={() => setSelectedMenu(index)}\n                      selected={\n                        selectedMenu === index ||\n                        window.location.pathname === m.path\n                      }>\n                      <ListItemIcon>{m.icon}</ListItemIcon>\n                      <ListItemText primary={m.name} />\n                    </ListItemButton>\n                  </Link>\n                </ListItem>\n                {/* <Divider /> */}\n              </div>\n            ) : (\n              <div key={m.path + m.name}>\n                <ListItem key={m.path} sx={{ padding: 0 }}>\n                  <ListItemButton\n                    selected={\n                      selectedMenu === index ||\n                      window.location.pathname === m.path\n                    }\n                    onClick={() => handleToggleMenuOpen(index)}>\n                    <ListItemIcon>{m.icon}</ListItemIcon>\n                    <ListItemText primary={m.name} />\n\n                    {selectedMenu === index ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                </ListItem>\n                <Collapse\n                  timeout=\"auto\"\n                  unmountOnExit\n                  in={selectedMenu === index}\n                  sx={{ width: \"100%\" }}>\n                  <List>\n                    {m.subMenus.map((sub) => (\n                      <ListItem sx={{ width: \"100%\" }} key={sub.name}>\n                        <Link\n                          to={sub.path}\n                          style={{\n                            textDecoration: \"none\",\n                            display: \"flex\",\n                            flex: 1,\n                            color: \"red\",\n                          }}>\n                          <ListItemButton\n                            onClick={() => setSelectedSubMenu(sub.path)}\n                            sx={{\n                              \"& .MuiListItemText-root\": {\n                                whiteSpace: \"normal\",\n                                wordWrap: \"wrap\",\n                              },\n                              \"& .MuiListItemIcon-root\": {\n                                // This ensures the ListItemIcon doesn't use the default minimum width\n                                // Adjust this value to decrease the space\n                              },\n                            }}\n                            selected={\n                              selecteSubMenu === sub.path ||\n                              window.location.pathname === sub.path\n                            }>\n                            <ListItemIcon>{sub.icon}</ListItemIcon>\n                            <ListItemText primary={sub.name} />\n                          </ListItemButton>\n                        </Link>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n                {/* <Divider /> */}\n              </div>\n            )\n          )}\n        </List>\n        <Divider />\n        <ListItem disablePadding>\n          <ListItemButton\n            sx={{\n              paddingLeft: 0,\n              \"& .MuiListItemText-root\": {\n                whiteSpace: \"normal\",\n                wordWrap: \"wrap\",\n              },\n              \"& .MuiListItemIcon-root\": {\n                // This ensures the ListItemIcon doesn't use the default minimum width\n                // Adjust this value to decrease the space\n              },\n            }}>\n            <Switch\n              sx={{ marginRight: \"20px\" }}\n              checked={isDarkMode}\n              onChange={handleModeChange}\n            />\n            <ListItemText primary={isDarkMode ? \"Dark Mode\" : \"Light Mode\"} />\n          </ListItemButton>\n        </ListItem>\n        {/* <Divider sx={{ marginBottom: \"20px\" }} />\n        <DrawerFooter>\n          <List sx={{ width: \"100%\" }}> */}\n        {/* <ListItem disablePadding>\n              <Link\n                to={\"/settings\"}\n                style={{ textDecoration: \"none\", display: \"flex\", flex: 1 }}>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <SettingsIcon fontSize=\"small\" color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Settings\"} />\n                </ListItemButton>\n              </Link>\n            </ListItem> */}\n        {/* <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  \"& .MuiListItemText-root\": {\n                    whiteSpace: \"normal\",\n                    wordWrap: \"wrap\",\n                  },\n                  \"& .MuiListItemIcon-root\": {\n                  \n                  },\n                }}\n                onClick={handleLogout}>\n                <ListItemIcon>\n                  <LogoutIcon fontSize=\"small\" color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary={\"Logout\"} />\n              </ListItemButton>\n            </ListItem> */}\n        {/* </List>\n        </DrawerFooter> */}\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n\n          overflowX: \"hidden\",\n          overflowY: \"auto\",\n        }}>\n        <DrawerHeader />\n\n        <Routes>\n          <Route path=\"dashboard\" element={<Dashboard />} />\n          <Route path=\"manage-institute\" element={<ManageInstitute />} />\n          <Route path=\"administrator/academicYear\" element={<AcademicYear />} />\n          <Route\n            path=\"administrator/role-permission\"\n            element={<RolePermission />}\n          />\n          <Route path=\"administrator/user-role\" element={<UserRole />} />\n          <Route\n            path=\"administrator/reset-password\"\n            element={<ResetPassword />}\n          />\n          <Route\n            path=\"human-resource/manage-designation\"\n            element={<ManageDesignation />}\n          />\n          <Route\n            path=\"human-resource/manage-department\"\n            element={<ManageDepartment />}\n          />\n          <Route path=\"human-resource/employee\" element={<Employee />} />\n          <Route\n            path=\"human-resource/update-employee/:id\"\n            element={<UpdateEmployee />}\n          />\n          <Route path=\"human-resource/offer-letter\" element={<OfferLetter />} />\n          <Route\n            path=\"human-resource/relieving-letter\"\n            element={<RelievingLetter />}\n          />\n\n          <Route path=\"human-resource/off-boarding\" element={<OffBoarding />} />\n          <Route\n            path=\"human-resource/experience-letter\"\n            element={<ExperienceLetter />}\n          />\n\n          <Route\n            path=\"human-resource/teacher-activity\"\n            element={<TeacherActivity />}\n          />\n\n          <Route path=\"pre-admission/enquiries\" element={<Enquiries />} />\n          <Route path=\"pre-admission/exams\" element={<Exams />} />\n          <Route\n            path=\"pre-admission/exam-schedules\"\n            element={<ExamSchedules />}\n          />\n          <Route path=\"pre-admission/result\" element={<Result />} />\n\n          <Route path=\"academic/class\" element={<Class />} />\n          <Route path=\"academic/section\" element={<Section />} />\n          <Route path=\"academic/subject\" element={<Subject />} />\n\n          <Route\n            path=\"attendence/student-attendance\"\n            element={<StudentAttendance />}\n          />\n          <Route\n            path=\"attendence/employee-attendance\"\n            element={<EmployeeAttendance />}\n          />\n\n          <Route path=\"class-routine\" element={<ClassRoutine />} />\n          <Route path=\"student/overview\" element={<Overview />} />\n          <Route path=\"student/admit-student\" element={<AdmitStudent />} />\n          <Route path=\"student/add-student\" element={<AddStudent />} />\n          <Route path=\"student/edit-student/:id\" element={<AddStudent />} />\n          <Route path=\"student/reshuffle\" element={<Reshuffle />} />\n          <Route path=\"student/promotion\" element={<Promotion />} />\n          <Route path=\"student/bulk-admission\" element={<BulkAdmission />} />\n          <Route path=\"student/credential\" element={<Credential />} />\n          <Route path=\"student/quick-admit\" element={<QuickAdmit />} />\n          <Route path=\"student/id-card\" element={<IdCard />} />\n\n          <Route path=\"student/bulk-photo\" element={<BulkPhoto />} />\n          <Route\n            path=\"student/student-activity\"\n            element={<StudentActivity />}\n          />\n          <Route\n            path=\"student/student-bulk-photo\"\n            element={<StudentBulkPhoto />}\n          />\n\n          <Route path=\"assignment\" element={<Assignment />} />\n\n          <Route path=\"announcement/notice\" element={<Notice />} />\n          <Route path=\"announcement/news\" element={<News />} />\n          <Route path=\"announcement/holiday\" element={<Holiday />} />\n          <Route\n            path=\"announcement/awardsAndAchievements\"\n            element={<AwardsAndAchievements />}\n          />\n          <Route path=\"announcement/splashNews\" element={<SplashNews />} />\n\n          <Route path=\"gallery\" element={<Gallery />} />\n          <Route path=\"notifications\" element={<Notifications />} />\n          <Route path=\"event\" element={<Event />} />\n\n          <Route path=\"exam/exam-grade\" element={<ExamGrade />} />\n          <Route path=\"exam/exam-term\" element={<ExamTerm />} />\n          <Route path=\"exam/exam-schedule\" element={<ExamSchedule />} />\n          <Route path=\"exam/exam-hall-ticket\" element={<ExamHallTicket />} />\n          <Route\n            path=\"exam-Mark/exam-Attendance\"\n            element={<ExamAttendance />}\n          />\n          <Route path=\"exam-Mark/manage-mark\" element={<ManageMark />} />\n          <Route path=\"exam-Mark/exam-result\" element={<ExamResult />} />\n          <Route path=\"exam-Mark/marks-card\" element={<Markscard />} />\n          <Route\n            path=\"exam-Mark/consolidated-marks-sheet\"\n            element={<ConsolidatedMarkSheet />}\n          />\n          <Route\n            path=\"exam-Mark/subject-wise-report\"\n            element={<SubjectWiseReport />}\n          />\n          <Route\n            path=\"exam-Mark/division-wise-report\"\n            element={<DivisionWiseReport />}\n          />\n\n          <Route path=\"lms/storage\" element={<Storage />} />\n          <Route path=\"lms/courses\" element={<Courses />} />\n          <Route path=\"lms/add-courses\" element={<AddCourse />} />\n          <Route path=\"lms/edit-courses/:id\" element={<UpdateCourse />} />\n          <Route path=\"lms/course-content\" element={<CourseContent />} />\n          <Route path=\"lms/live\" element={<Live />} />\n          <Route path=\"lms/room/:roomID\" element={<Room />} />\n\n          <Route path=\"library/books\" element={<Books />} />\n          <Route path=\"library/periodical\" element={<Periodical />} />\n          <Route\n            path=\"library/student-library-member\"\n            element={<StudentLibraryMember />}\n          />\n          <Route\n            path=\"library/student-issue-return\"\n            element={<StudentIssueReturn />}\n          />\n          <Route\n            path=\"library/employee-library-member\"\n            element={<EmployeeLibraryMember />}\n          />\n          <Route\n            path=\"library/employee-issue-return\"\n            element={<EmployeeIssueReturn />}\n          />\n\n          <Route path=\"leave-management/leave-type\" element={<LeaveType />} />\n          <Route\n            path=\"leave-management/student-leave\"\n            element={<StudentsLeave />}\n          />\n          <Route\n            path=\"leave-management/employee-leave\"\n            element={<EmployeeLeave />}\n          />\n          <Route\n            path=\"leave-management/leave-report\"\n            element={<LeaveReport />}\n          />\n\n          <Route path=\"inventory/item\" element={<Item />} />\n          <Route path=\"inventory/vendor\" element={<Vendor />} />\n          <Route path=\"inventory/transaction\" element={<InOutTransaction />} />\n          <Route path=\"inventory/stockList\" element={<StockList />} />\n          <Route path=\"inventory/issue\" element={<Issue />} />\n          <Route path=\"inventory/sell\" element={<Sell />} />\n          <Route\n            path=\"certificate/study-certificate\"\n            element={<StudyCertificate />}\n          />\n          <Route\n            path=\"certificate/transfer-certificate\"\n            element={<TransferCertificate />}\n          />\n          <Route path=\"fees/receipt-book\" element={<ReceiptBook />} />\n          <Route path=\"fees/feeMap-category\" element={<FeeMapCategory />} />\n          <Route path=\"fees/collect-fees\" element={<CollectFees />} />\n          <Route path=\"fees/balance-fee\" element={<BalanceFeeReport />} />\n          <Route path=\"fees/fee-overview\" element={<FeeOverview />} />\n          <Route path=\"fees/re-conciliation\" element={<Reconciliation />} />\n\n          <Route path=\"hostel/manage-hostel\" element={<ManageHostel />} />\n          <Route path=\"hostel/manage-room-type\" element={<ManageRoomType />} />\n          <Route path=\"hostel/manage-room-bed\" element={<ManageRoomAndBed />} />\n          <Route path=\"hostel/hostel-member\" element={<HostelMember />} />\n\n          <Route path=\"transport/vehicle\" element={<Vehicle />} />\n          <Route\n            path=\"transport/manage-route\"\n            element={<ManageRouteAndTrips />}\n          />\n          <Route path=\"transport/routes\" element={<VehicleRoutes />} />\n          <Route\n            path=\"transport/trasport-member\"\n            element={<TransportMember />}\n          />\n\n          <Route path=\"transport/vehicle-log\" element={<VehicleLog />} />\n          <Route\n            path=\"transport/vehicle-maintenance\"\n            element={<VehicleMaintenance />}\n          />\n\n          <Route path=\"payroll/salary-grade\" element={<SalaryGrade />} />\n          <Route path=\"payroll/make-payment\" element={<MakePayment />} />\n\n          <Route path=\"report/library-report\" element={<LibraryReport />} />\n          <Route\n            path=\"report/student-attendance\"\n            element={<StudentAttendanceReport />}\n          />\n          <Route\n            path=\"report/student-yearly-attendane\"\n            element={<StudentYearlyAttendance />}\n          />\n          <Route\n            path=\"report/employee-attendance\"\n            element={<EmployeeAttendanceReport />}\n          />\n          <Route\n            path=\"report/employee-yearly-attendance\"\n            element={<EmployeeYearlyAttendance />}\n          />\n          <Route path=\"report/student-report\" element={<StudentReport />} />\n          <Route\n            path=\"report/student-activity-report\"\n            element={<StudentActivityReport />}\n          />\n\n          <Route path=\"visitorInfo/visitor-info\" element={<VisitorInfo />} />\n          <Route\n            path=\"visitorInfo/student-checkout\"\n            element={<StudentCheckout />}\n          />\n\n          <Route path=\"help-desk\" element={<HelpDesk />} />\n          <Route path=\"guardian-feedback\" element={<GuardianFeedback />} />\n          <Route path=\"human-resource/add-employee\" element={<AddEmployee />} />\n\n          <Route path=\"communication_compose\" element={<Compose />} />\n          <Route path=\"communication_report\" element={<Report />} />\n          <Route path=\"communication_credentials\" element={<Credentials />} />\n\n          <Route\n            path=\"human-resource/edit-employee/:id\"\n            element={<AddEmployee />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/edit-institute/:id\"\n            element={<AddInstitute />}\n          />\n          <Route path=\"profile\" element={<Profile />} />\n        </Routes>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n}\n","/** @format */\n\nimport { Box, Paper } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport SettingContext from \"../context/SettingsContext\";\n\nconst Wrapper = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  marginBottom: \"20px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: theme.palette.primary.light,\n}));\n\nexport default function PageHeader({ title = \"\", showTextField = true }) {\n  const { settings, setSettings, selectedSetting, setSelectedSetting } =\n    useContext(SettingContext);\n\n  const handleSettingChange = (e) => {\n    const { name, value } = e.target;\n    setSelectedSetting({ ...settings.filter((s) => s._id == value)[0] });\n  };\n\n  return (\n    <Wrapper>\n      <Typography\n        component=\"h1\"\n        sx={{\n          fontWeight: \"bold\",\n          color: \"#fff\",\n        }}>\n        {title}\n      </Typography>\n      {showTextField && (\n        <Stack direction=\"row\" spacing={2}>\n          <FormControl fullWidth size=\"small\" sx={{ minWidth: \"200px\" }}>\n            <InputLabel id=\"demo-simple-select-label\">Select School</InputLabel>\n            <Select\n              labelId=\"demo-simpless-select-filled-label\"\n              id=\"demo-simple-select-filled-l\"\n              value={selectedSetting?._id}\n              name=\"setting\"\n              onChange={handleSettingChange}\n              IconComponent={(props) => (\n                <KeyboardArrowDownIcon {...props} fontSize=\"medium\" />\n              )}\n              label=\"Select school\">\n              {settings?.map((set) => (\n                <MenuItem key={set._id} value={set._id}>\n                  {set.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      )}\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport NoTableData from \"./NoTableData\";\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\nimport { PuffLoader } from \"react-spinners\";\nimport image from \"../../assets/images/deleteicon.png\";\nimport { Download } from \"@mui/icons-material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 350,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n\n  boxShadow: 24,\n  p: 2,\n};\n\nconst CustomSwitch = styled(Switch)(({}) => ({\n  \"& .MuiSwitch-switchBase.Mui-checked\": {\n    color: \"green\",\n  },\n  \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\n    backgroundColor: \"green\",\n  },\n  \"& .MuiSwitch-switchBase\": {\n    color: \"red\",\n  },\n  \"& .MuiSwitch-switchBase + .MuiSwitch-track\": {\n    backgroundColor: \"red\",\n  },\n}));\n\nconst getDataValue = (data, k) => {\n  if (typeof data[k.key] === \"boolean\") {\n    return data[k.key] === true ? \"Yes\" : \"No\";\n  }\n  if (k.path) {\n    if (Object.keys(data[k.path] || {}).length > 0) {\n      return data[k.path][k.key] || \"NA\";\n    }\n  }\n\n  if (k.isDate) {\n    return data[k.key] ? new Date(data[k.key]).toDateString() : \"NA\";\n  } else if (k.key === \"feedback\") {\n    return data[k.key] ? `${data[k.key].substring(0, 50)}...` : \"NA\";\n  } else {\n    return data[k.key];\n  }\n};\n\nexport default function CustomTable({\n  bodyData = [],\n  bodyDataModal = \"\",\n  tableKeys = [],\n  actions = [\"edit\", \"delete\", \"view\", \"card\", \"switch\"],\n  onEditClick = () => {},\n  onDeleteClick = () => {},\n  onViewClick = () => {},\n  onCardClick = () => {},\n  onNavigateFeeMap = () => {},\n  onToggleSwitch = () => {},\n  toggleStatus = false,\n  isDataReady = true,\n  module = \"\",\n  CustomAction = () => {},\n  onUpdate = () => {},\n  onDownloadClick = () => {},\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const handleDeleteClick = (data) => {\n    setSelectedItem(data);\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    onDeleteClick(selectedItem._id);\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const getTooltipTitle = (data) => {\n    return data[toggleStatus] === true ? \"Active\" : \"Inactive\";\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              {tableKeys.map((r, i) => (\n                <TableCell\n                  sx={{ fontWeight: \"bold\" }}\n                  key={i + r.name}\n                  align=\"center\">\n                  {r.name}\n                </TableCell>\n              ))}\n              {actions.length ? (\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Action\n                </TableCell>\n              ) : null}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length && isDataReady\n              ? bodyData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((data, index) => (\n                    <TableRow key={data._id || index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n                      {tableKeys.map((k, i) =>\n                        k.type === \"image\" ? (\n                          <TableCell key={i} align=\"center\">\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                              }}>\n                              <Avatar\n                                sx={{\n                                  alignSelf: \"center\",\n                                  objectFit: \"contain\",\n                                }}\n                                src={data[k.key]}\n                              />\n                            </Box>\n                          </TableCell>\n                        ) : (\n                          <TableCell key={i} align=\"center\">\n                            {getDataValue(data, k)}\n                          </TableCell>\n                        )\n                      )}\n                      {actions.length ? (\n                        <TableCell\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            columnGap: \"5px\",\n                          }}>\n                          {/* {actions.includes(\"edit\") && (\n                            <Tooltip title=\"Edit\">\n                              <IconButton onClick={() => onEditClick(data)}>\n                                <EditIcon color=\"primary\" fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                          )} */}\n                          {actions.includes(\"edit\") && !data.checkOut && (\n                            <Tooltip title=\"Edit\">\n                              <IconButton onClick={() => onEditClick(data)}>\n                                <EditIcon color=\"primary\" fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"delete\") && (\n                            <Tooltip title=\"Delete\">\n                              <IconButton\n                                onClick={() => handleDeleteClick(data)}>\n                                <DeleteIcon fontSize=\"small\" color=\"error\" />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"view\") && (\n                            <Tooltip title=\"View\">\n                              <IconButton onClick={() => onViewClick(data)}>\n                                <RemoveRedEyeRoundedIcon\n                                  fontSize=\"small\"\n                                  color=\"primary\"\n                                />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"card\") && (\n                            <Tooltip title=\"Unbundle\">\n                              <Button\n                                size=\"small\"\n                                variant=\"contained\"\n                                onClick={() => onCardClick(data)}>\n                                Card\n                              </Button>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"switch\") && (\n                            <Tooltip title={getTooltipTitle(data)}>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => onToggleSwitch(data)}>\n                                <CustomSwitch\n                                  size=\"small\"\n                                  checked={data[toggleStatus] === true}\n                                />\n                              </IconButton>\n                            </Tooltip>\n                          )}\n                          {actions.includes(\"custom\") && (\n                            <CustomAction\n                              onEditClick={onEditClick}\n                              data={data}\n                              onUpdate={onUpdate}\n                              onNavigateFeeMap={onNavigateFeeMap}\n                            />\n                          )}\n                          {actions.includes(\"download\") && (\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => onDownloadClick(data)}>\n                              <Download fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                        </TableCell>\n                      ) : null}\n                    </TableRow>\n                  ))\n              : null}\n          </TableBody>\n        </Table>\n        {!isDataReady ? (\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingTop: \"20px\",\n            }}>\n            <PuffLoader size={30} color=\"dodgerblue\" />\n          </Box>\n        ) : null}\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={bodyData ? (bodyData.length ? bodyData.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TableContainer>\n\n      {/* === Delete modal === */}\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Are you sure want to delete this item?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleSubmit}>\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function NoTableData({ dataPresent, title }) {\n  if (dataPresent) return null;\n  return (\n    <Typography\n      variant=\"h6\"\n      sx={{\n        textAlign: \"center\",\n        margin: \"5px\",\n        padding: \"5px\",\n      }}\n    >\n      {title.charAt(0).toUpperCase() + title.slice(1)} not found!\n    </Typography>\n  );\n}\n","import { Box } from \"@mui/material\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import { Box, Paper, Tab, Tabs } from \"@mui/material\";\nimport React from \"react\";\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function TabList({\n  labels = [],\n  onChange = () => {},\n  value = 0,\n}) {\n  return (\n    <Box\n      component={Paper}\n      sx={{\n        marginBottom: \"10px\",\n      }}\n    >\n      <Tabs\n        value={value}\n        onChange={onChange}\n        aria-label=\"basic tabs example\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        allowScrollButtonsMobile\n      >\n        {labels.map((l, index) => {\n          return (\n            <Tab\n              sx={{ fontWeight: \"bold\", fontSize: \"12px\" }}\n              key={l}\n              label={l}\n              {...a11yProps(index)}\n            />\n          );\n        })}\n      </Tabs>\n    </Box>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, Grid } from \"@mui/material\";\nimport themeData from \"../data/themeData\";\nimport WebsiteThemeContext from \"../context/WebsiteThemeContext\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function ThemeSelector({ onThemeSelect = () => {}, webTheme }) {\n  const { selectedSetting } = React.useContext(SettingContext);\n  const { setSelectedTheme: setTheme } = React.useContext(WebsiteThemeContext);\n  const [selectedTheme, setSelectedTheme] = React.useState(\n    selectedSetting?.selectedTheme || 1\n  );\n\n  const [selectedIdCardTheme, setSelectedIdCardTheme] = React.useState(1);\n\n  const handleClick = (theme) => {\n    onThemeSelect(theme);\n    setSelectedTheme(theme);\n  };\n\n  const handleClickGenerateIdCard = (theme) => {\n    onThemeSelect(theme);\n    setSelectedIdCardTheme(theme);\n  };\n\n  return (\n    <React.Fragment>\n      <Box dividers>\n        <Grid spacing={2} container>\n          {webTheme\n            ? themeData.websiteThemes.map((t) => (\n                <Grid\n                  key={t.theme + t.image}\n                  item\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}>\n                  <div onClick={() => handleClick(t.theme)}>\n                    <img\n                      style={{\n                        height: \"150px\",\n                        width: \"200px\",\n                        objectFit: \"contain\",\n                        border:\n                          parseInt(selectedTheme) === t.theme\n                            ? \"2px solid green\"\n                            : \"2px solid lightgray\",\n                        borderRadius: \"5px\",\n                        overflow: \"hidden\",\n                      }}\n                      src={t.image}\n                      alt={`Theme ${t.theme}`}\n                    />\n                  </div>\n                </Grid>\n              ))\n            : themeData.idCardThemes.map((t) => (\n                <Grid\n                  key={t.theme + t.image}\n                  item\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}>\n                  <div onClick={() => handleClickGenerateIdCard(t.theme)}>\n                    <img\n                      style={{\n                        height: \"150px\",\n                        width: \"200px\",\n                        objectFit: \"contain\",\n                        border:\n                          parseInt(selectedIdCardTheme) === t.theme\n                            ? \"2px solid green\"\n                            : \"2px solid lightgray\",\n                        borderRadius: \"5px\",\n                        overflow: \"hidden\",\n                      }}\n                      src={t.image}\n                      alt={`Theme ${t.theme}`}\n                    />\n                  </div>\n                </Grid>\n              ))}\n        </Grid>\n      </Box>\n    </React.Fragment>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport {\n  Box,\n  Divider,\n  IconButton,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function FileListModal({\n  open = false,\n  onClose = () => {},\n  styles = {},\n  selectedFiles = [],\n  setSelectFiles = () => {},\n  customOnChage = false,\n  onRemove = () => {},\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleRemoveImage = (fileName) => {\n    setSelectFiles(selectedFiles.filter((f) => f.name !== fileName));\n  };\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: \"100%\",\n          maxWidth: 650,\n          ...styles,\n        },\n      }}>\n      <DialogTitle>\n        {selectedFiles.length > 1 ? \"Selected files\" : \"Selected file\"}\n      </DialogTitle>\n      <Divider />\n      <DialogContent\n        sx={{\n          padding: \"10px\",\n        }}>\n        {selectedFiles.map(\n          (f, i) => (\n            console.log(f.name, \"gg\"),\n            (\n              <Box\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}>\n                <Typography>{f.name}</Typography>\n                <IconButton\n                  size=\"small\"\n                  onClick={\n                    customOnChage\n                      ? () => onRemove(f.name)\n                      : () => handleRemoveImage(f.name)\n                  }>\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            )\n          )\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} size=\"small\" variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport FileListModal from \"./FileListModal\";\n// icons\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\nimport DownloadForOfflineIcon from \"@mui/icons-material/DownloadForOffline\";\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  columnGap: \"5px\",\n}));\n\nexport default function FileSelect({\n  name,\n  multi = true,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  selectedFiles = [],\n  disabled = false,\n  setSelectedFiles = () => {},\n  customOnChange = false,\n  onRemove = () => {},\n  accept = \"\",\n  previousFile = \"\",\n  ...rest\n}) {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleModalClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper mt={1}>\n        <Box\n          component=\"div\"\n          onClick={() => setOpen(true)}\n          sx={{\n            borderRadius: \"5px\",\n            padding: \"8px\",\n            backgroundColor: \"white\",\n            border: \"1px solid lightgray\",\n            height: \"30px\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\",\n          }}>\n          <Typography\n            component=\"div\"\n            onClick={() => setOpen(true)}\n            sx={{\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n              backgroundColor: \"white\",\n              color: \"black\",\n              height: \"30px\",\n              width: \"30px\",\n              textAlign: \"center\",\n            }}>\n            {selectedFiles.length}\n          </Typography>\n\n          <RemoveRedEyeRoundedIcon fontSize=\"14px\" />\n        </Box>\n\n        <Button fullWidth component=\"label\" size=\"small\" variant=\"outlined\">\n          <input\n            type=\"file\"\n            multiple={multi}\n            accept={accept}\n            // style={{ visibility: \"hidden\" }}\n            hidden\n            onChange={\n              customOnChange\n                ? (e) => onChange(e)\n                : (e) => {\n                    const selectedFiles = e.target.files;\n\n                    if (selectedFiles.length > 0) {\n                      let fileList = [];\n                      for (let i = 0; i < selectedFiles.length; i++) {\n                        const file = selectedFiles[i];\n\n                        fileList.push(file);\n                      }\n                      setSelectedFiles([...fileList]);\n                    } else {\n                      console.log(\"No files selected\");\n                    }\n                  }\n            }\n          />\n          {label}\n        </Button>\n        {previousFile && (\n          <Tooltip title=\"Uploaded File Link\">\n            <IconButton\n              component=\"div\"\n              size=\"small\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => window.open(previousFile, \"_blank\")}>\n              <DownloadForOfflineIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Wrapper>\n      <FileListModal\n        open={open}\n        selectedFiles={selectedFiles}\n        setSelectFiles={setSelectedFiles}\n        onClose={handleModalClose}\n        customOnChage={customOnChange}\n        onRemove={onRemove}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport dayjs from \"dayjs\";\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\n\nfunction FormDatePicker({\n  name,\n  label,\n  formik,\n  required,\n  openTo = \"day\",\n  views = [\"year\", \"month\", \"day\"],\n  inputFormat = \"DD/MM/YYYY\",\n  disabled = false,\n  disableFutureDates = false,\n}) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePicker\n        disableFuture={disableFutureDates}\n        sx={{\n          \"& .MuiInputBase-input\": {\n            height: \"8px\",\n          },\n          marginTop: \"16px\",\n          width: \"100%\",\n        }}\n        // disablePast={true}\n        required={required}\n        name={name}\n        variant=\"outlined\"\n        size=\"small\"\n        label={label}\n        disabled={disabled}\n        slotProps={{ textField: { InputLabelProps: { fontSize: \"90px\" } } }}\n        openTo={openTo}\n        closeOnSelect\n        views={views}\n        format={inputFormat}\n        value={dayjs(formik.values[name]) || null}\n        onChange={(value) => formik.setFieldValue(name, dayjs(value))}\n      />\n    </LocalizationProvider>\n  );\n}\n\nexport default FormDatePicker;\n"],"names":["SIDE_MENU_DATA","name","path","renderName","subMenus","icon","_jsx","DashboardRoundedIcon","color","fontSize","SettingsSuggest","Person","SubdirectoryArrowRightOutlinedIcon","Diversity2Icon","ManIcon","AccountBalance","CheckBox","AccessTime","Groups","AssignmentRoundedIcon","InstallMobileRounded","CampaignRounded","PhotoRoundedIcon","NotificationsActiveRoundedIcon","TextSnippet","SchoolRounded","LibraryBooksIcon","InventoryIcon","CardMembershipRounded","CurrencyRupee","GiteIcon","DirectionsBusIcon","CurrencyRupeeIcon","BarChart","WcIcon","FeedbackIcon","ChartBar","selectedSetting","useContext","SettingContext","classes","setClasses","useState","uniqueSections","setUniqueSections","ref","width","useResizeObserver","useEffect","async","data","get","PRIVATE_URLS","student","getDashboardStudentDetails","params","schoolId","_id","transformedData","result","map","classItem","transformedItem","className","Object","keys","sections","forEach","section","Set","add","error","console","log","getData","Box","sx","display","flex","children","ResponsiveContainer","height","Paper","_jsxs","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","sectionName","Bar","fill","Math","floor","random","toString","stackId","OuterCard","styled","Card","_ref","theme","marginBottom","padding","alignItems","justifyContent","breakpoints","down","flexDirection","InnerBox","_ref2","alignSelf","Data","_ref3","fontWeight","_ref4","textAlign","Count","_ref5","marginTop","Attendance","studentAttendence","setStudentAttendence","employeeAttendence","setEmployeeAttendence","_studentData$data","_employeeData$data","studentData","employeeData","Promise","all","studentAttendance","getAttendanceSummaryForToday","employeeAttendance","getEmployeeAttendanceSummaryForToday","getStudentAttendanceSummary","darkMode","window","localStorage","getItem","_Fragment","xs","sm","md","lg","backgroundColor","palette","mode","Grid","container","spacing","item","Typography","Stack","direction","style","totalStudents","attendanceNotTaken","totalPresent","totalAbsent","totalEmployees","totalLate","DataContainer","StyledFab","Fab","background","QuickLinks","Link","to","textDecoration","size","FindInPage","CardMembership","Message","ScrollContainer","borderRadius","transform","animation","animationPlayState","from","DashboardScorlText","NoDataFound","DashboardNewsConent","marginLeft","marginRight","paddingBottom","position","BoldTrigger","cursor","borderLeft","paddingLeft","NoticeItem","_ref6","themeData","darkPalette","primary","main","Events","notice","setNotice","holidays","setHolidays","list","getNotice","holiday","getHolidays","mt","Calendar","tileClassName","_ref7","date","today","Date","toDateString","minHeight","Collapsible","open","concat","length","Divider","maxHeight","overflow","elevation","index","component","variant","title","FilterStudent","navigate","useNavigate","setSections","students","setStudents","entryFormik","useFormik","initialValues","class","onSubmit","values","enableReinitialize","label","value","setFieldValue","search","sectionAllOption","s","getSections","d","basicInfo","academicInfo","rollNumber","contactNumber","getStudents","classesAllOption","getClasses","rowSpacing","columnSpacing","handleSubmit","FormSelect","required","formik","options","showSearch","Button","type","Dashboard","PageHeader","AddForm","disabled","onAddClick","onClick","AddIcon","FormModal","formTitle","onClose","submitButtonTitle","styles","adding","useTheme","fullScreen","useMediaQuery","Dialog","PaperProps","maxWidth","DialogTitle","DialogContent","DialogActions","LoadingButton","loading","academicYearTableKeys","key","AcademicYear","setData","setOpen","dataToEdit","setDataToEdit","setLoading","academicYear","handleClose","note","payload","put","update","post","create","CustomTable","actions","bodyDataModal","bodyData","tableKeys","onEditClick","toggleStatus","onToggleSwitch","toggleActiveStatus","AddDepartmentHandel","FormInput","designationTableKeys","ManageDesignation","designation","orderSequence","onDeleteClick","del","delete","id","AddDesigationHandel","departmentTableKeys","ManageDepartment","department","overviewTableKeys","employeeTableKeys","inactiveTableKeys","Employee","setSelectValue","activeData","setActiveData","InactiveData","setInactiveData","overviewData","setOverviewData","allEmployee","setAllEmployee","searchFilter","setSearchFilter","setSearch","employee","filter","active","inactiveData","maleCount","emp","gender","femaleCount","totalCount","male","female","total","getDataDepartment","handleDelete","handeleClickEdit","handleSearch","e","target","trim","ele","toLowerCase","includes","TabList","onChange","handleTabChange","newValue","labels","TabPanel","gap","TextField","ml","placeholder","InputProps","endAdornment","InputAdornment","IconButton","edge","Search","p","Print","ListAlt","offerLetterTableKeys","isDate","LetterViewModal","content","onPrintClick","contentRef","useRef","m","CloseIcon","gutterBottom","dangerouslySetInnerHTML","__html","ReactToPrint","trigger","startIcon","PrintIcon","current","OfferLetter","componentRef","handlePrint","useReactToPrint","modalData","setModalData","containt","offerLetter","joiningDate","dayjs","format","resetForm","onViewClick","FormDatePicker","ReactQuill","relievingLetterDataTableKeys","RelievingLetter","relievingLetter","offBoardingDataTableKeys","Gender_Options","BloodGroup_Options","OffBoarding","formFields","setFormFields","file","userType","user","bloodGroup","dob","resignDate","relivingDate","status","feedback","field","splice","handleRemove","ClearIcon","handleAddRow","experienceTableKeys","ExperienceLetter","experienceLetter","onBlur","handleBlur","teacherActivityTableKeys","TeacherActivity","loadingFind","setLoadingFind","setAcademicYear","subjects","setSubjects","employees","setEmployees","currentUserStringified","currentUser","JSON","parse","teacherActivity","teacher","subject","fromDate","toDate","classId","getSubject","_data$result","role","match","RegExp","empOption","getEmployees","getAcademicYear","topic","rolePermissionTableKeys","ROLE_PERMISSIONS","module","subModule","permissions","toggleItemInArray","array","indexOf","push","removeFromArray","arr","str","StyledBox","zIndex","CRUD_OPERATIONS","RolePermission","setValue","React","roles","setRoles","roleToEdit","setRoleToEdit","roleKeys","setRoleKeys","allPermissionUpdate","setAllPermissionUpdate","getRoleKeys","allKeys","find","k","handleAddOrUpdate","r","formikUpdate","handleUpdateAll","permission","allPermissions","co","every","handleChange","event","openRoleAddUpdateModal","handleModalClose","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","Checkbox","checked","TableBody","roleModule","i","colSpan","grey","o","_roleKeys$find","_roleKeys$find$permis","handleChangePermission","handleCancelClick","userRoleTableKeys","UserRole","Type_Options","ResetPassword","setEmployee","employeeId","password","studentId","account","changePasswordForUser","_r$name","getRoles","_data$result$","c","_data$result$2","enquriesTableKeys","ViewModel","Close","MuiBUtton","StyledTableRow","StyledTableCell","border","tableCellClasses","head","body","CustomActionComponent","onUpdate","updateStatus","preadmissionEnqiry","Enquiries","_modalData$contents","_modalData$contents$s","_modalData$contents$s2","_modalData$contents$s3","_modalData$contents2","_modalData$contents2$","_modalData$contents2$2","_modalData$contents2$3","_modalData$contents3","_modalData$contents4","_modalData$contents4$","_modalData$contents4$2","_modalData$contents5","_modalData$contents5$","_modalData$contents5$2","_modalData$contents6","_modalData$contents6$","_modalData$contents6$2","_modalData$contents6$3","_modalData$contents7","_modalData$contents7$","_modalData$contents7$2","_modalData$contents8","_modalData$contents8$","_modalData$contents8$2","_modalData$contents9","_modalData$contents9$","_modalData$contents9$2","_modalData$contents10","_modalData$contents11","_modalData$contents12","_modalData$contents13","_modalData$contents14","_modalData$contents15","_modalData$contents16","_modalData$contents17","_modalData$contents18","_modalData$contents19","_modalData$contents20","_modalData$contents21","_modalData$contents22","_modalData$contents23","_modalData$contents24","_modalData$contents25","_modalData$contents26","_modalData$contents27","_modalData$contents28","_modalData$contents29","_modalData$contents30","_modalData$contents31","_modalData$contents32","_modalData$contents33","_modalData$contents34","_modalData$contents35","_modalData$contents36","_modalData$contents37","_modalData$contents38","_modalData$contents39","_modalData$contents40","_modalData$contents41","_modalData$contents42","_modalData$contents43","_modalData$contents44","_modalData$contents45","_modalData$contents46","_modalData$contents47","_modalData$contents48","_modalData$contents49","_modalData$contents50","_modalData$contents51","_modalData$contents52","_modalData$contents53","_modalData$contents54","_modalData$contents55","_modalData$contents56","_modalData$contents57","_modalData$contents58","_modalData$contents59","_modalData$contents60","_modalData$contents61","_modalData$contents62","_modalData$contents63","_modalData$contents64","_modalData$contents65","_modalData$contents66","_modalData$contents67","_modalData$contents68","_modalData$contents69","_modalData$contents70","_modalData$contents71","_modalData$contents72","_modalData$contents73","_modalData$contents74","_modalData$contents75","_modalData$contents76","_modalData$contents77","_modalData$contents78","_modalData$contents79","_modalData$contents80","_modalData$contents81","_modalData$contents82","_modalData$contents83","_modalData$contents84","_modalData$contents85","_modalData$contents86","_modalData$contents87","_modalData$contents88","_modalData$contents89","_modalData$contents90","_modalData$contents91","_modalData$contents92","_modalData$contents93","_modalData$contents94","_modalData$contents95","_modalData$contents96","_modalData$contents97","_modalData$contents98","_modalData$contents99","_modalData$contents100","_modalData$contents101","_modalData$contents102","_modalData$contents103","_modalData$contents104","_modalData$contents105","_modalData$contents106","_modalData$contents107","_modalData$contents108","_modalData$contents109","_modalData$contents110","_modalData$contents111","_modalData$contents112","_modalData$contents113","_modalData$contents114","_modalData$contents115","_modalData$contents116","_modalData$contents117","_modalData$contents118","_modalData$contents119","_modalData$contents120","_modalData$contents121","_modalData$contents122","_modalData$contents123","_modalData$contents124","_modalData$contents125","_modalData$contents126","_modalData$contents127","_modalData$contents128","_modalData$contents129","_modalData$contents130","_modalData$contents131","_modalData$contents132","_modalData$contents133","_modalData$contents134","_modalData$contents135","_modalData$contents136","_modalData$contents137","_modalData$contents138","_modalData$contents139","_modalData$contents140","_modalData$contents141","_modalData$contents142","_modalData$contents143","_modalData$contents144","_modalData$contents145","_modalData$contents146","_modalData$contents147","_modalData$contents148","_modalData$contents149","_modalData$contents150","_modalData$contents151","_modalData$contents152","_modalData$contents153","_modalData$contents154","_modalData$contents155","_modalData$contents156","_modalData$contents157","_modalData$contents158","_modalData$contents159","_modalData$contents160","_modalData$contents161","_modalData$contents162","_modalData$contents163","_modalData$contents164","_modalData$contents165","_modalData$contents166","_modalData$contents167","_modalData$contents168","_modalData$contents169","_modalData$contents170","_modalData$contents171","_modalData$contents172","_modalData$contents173","_modalData$contents174","_modalData$contents175","_modalData$contents176","_modalData$contents177","_modalData$contents178","_modalData$contents179","_modalData$contents180","_modalData$contents181","_modalData$contents182","_modalData$contents183","_modalData$contents184","_modalData$contents185","_modalData$contents186","_modalData$contents187","_modalData$contents188","_modalData$contents189","_modalData$contents190","_modalData$contents191","_modalData$contents192","_modalData$contents193","_modalData$contents194","_modalData$contents195","_modalData$contents196","_modalData$contents197","_modalData$contents198","_modalData$contents199","activeButton","setActiveButton","filteredData","setFilteredData","contents","action","getEnquiries","tableData","_d$studentDetails","_d$studentDetails$bas","_d$studentDetails2","_d$studentDetails2$ac","_d$studentDetails2$ac2","studentName","studentDetails","basicDetails","submittedOn","createdAt","academicDetails","ButtonGroup","v","textTransform","CustomAction","dividers","mb","toUpperCase","caste","casteIncomeCertificateNumber","motherTongue","birthPlace","aadharNumber","contactDetails","guardianName","guardianContactNumber","alternateNumber","relationWithGuardian","nationalId","presentAddress","permanentAddress","previousSchoolDetails","schoolName","tcNumber","fatherDetails","education","profession","motherDetails","otherDetails","healthCondition","email","hostelRequired","transportRequired","examsTableKeys","inputProps","Wrapper","InputLabels","InputLabel","RadioButtons","Radio","QuizQuestion","quiz","questionIndex","quizData","setQuizData","question","fullWidth","maxRows","multiline","handleQuestionChange","q","prevQuizData","_","handleRemoveQuestion","DeleteIcon","rowGap","correctOption","handleSetCorrectOption","handleOptionChange","optionIndex","newOptions","AddOrUpdateExamModal","dataToUpdate","academicYears","setAcademicYears","addForm","setAddForm","markForm","setMarkForm","submiload","setSubmitload","additionalInstructions","setAdditionalInstructions","negativeMarking","setNegativeMarking","_academicYearData$dat","_classData$data","academicYearData","classData","handleOnChangeForm","hanleMarkChange","prev","preventDefault","toast","some","option","playload","schoolClass","examName","passingPercentage","passingMark","negativeMarkingPerQuestion","marksPerQuestion","mark","point","preadmissionExam","FormControl","Select","labelId","varient","row","MenuItem","handleAddQuizs","handleAddInstruction","instruction","handleAdditionalInstructionChange","updatedInstructions","handleDeleteInstruction","RadioGroup","FormControlLabel","control","InputLabelProps","Exams","gettingList","setGettingList","openQuestionModel","setOpenQuestionModel","getExamList","handleOpenQuestionModel","handleCloseQuestionModel","AddOrUpdateExamSchedule","exams","setExams","examId","startTime","endTime","roomNumber","dateOfExam","preadmissionExamSchedule","bgcolor","boxShadow","DeleteModal","props","Modal","deleteModal","setDeleteModal","src","image","my","ExamSchedules","page","setPage","rowsPerPage","setRowsPerPage","exam","AddExamSchedules","dark","light","_data$exam","academicYearFrom","academicYearTo","examLinkEnabled","Switch","enableExamLink","handleUpdateLink","defaultChecked","handleCopyLink","copylink","examLink","copy","success","ContentCopyIcon","EditIcon","Delete","sendVenueDetailsToStudents","handleSubmitNotify","notified","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","resultTableKeys","Result","academicClassTableKeys","Active","IS_PUBLIC","Class","_dataToEdit$classTeac","classTeachers","isPublic","numericName","multiple","academicSectionTableKeys","CustomSelect","isSearch","blurred","setBlurred","inputRef","undefined","isDarkMode","ThemeModeContext","searchText","setSearchText","displayedOptions","useMemo","containsText","text","labelColor","shrink","notched","onAnimationEnd","_inputRef$current","focus","MenuProps","autoFocus","ListSubheader","startAdornment","SearchIcon","onKeyDown","stopPropagation","memo","Section","_dataToEdit$class","_dataToEdit$sectionTe","selectedClass","setSelectedClass","setSubject","subjectTeachers","setSubjectTeachers","_data$result2","sectionTeacher","sub","academicSubjectTableKeys","Subject_Type","Subject_Group","Subject","_dataToEdit$subjectTe","code","subjectType","subjectGroup","t","studentAttendanceReportTableKeys","StudentAttendanceTable","now","setBodyData","isDataReady","updating","setUpdating","updateAttendance","empId","attendanceStatus","a","_data$student","_data$student$basicIn","_data$student2","_data$student2$academ","_data$student3","_data$student4","NoTableData","dataPresent","attendanceData","downloadFile","filename","arguments","blob","Blob","saveAs","hasAllValues","obj","exceptions","showToast","allValuesPresent","StudentAttendance","reportData","setReportData","overViewData","setOverViewData","academicYearList","setAcademicYearList","fetchingAttendanceData","setFetchingAttendanceData","setAttendanceData","downloadingAbsent","setDownloadingAbsent","fetchingreport","setFetchingReport","attendanceFormik","sectionId","getStudentAttendanceOverview","getAttendanceOverview","overviewFormik","reportFormik","month","getAttendanceReport","academicYearId","year","_data$result$4","_data$result$5","_data$result$3","disableFutureDates","slice","attendanceStudent","sectionInfo","donwloadAbsentReport","responseType","downloadAbsentStudentsReport","percentage","openTo","inputFormat","views","employeeAttendanceReportTableKeys","EmployeeAttendanceTable","_data$employee","_data$employee$basicI","_data$employee2","_data$employee2$basic","_data$employee3","_data$employee4","_data$employee5","EmployeeAttendance","fetchingAttendanceReport","setFetchingAttendanceReport","roleId","ClassRoutine","roomNo","AddClassRoutine","TitleContainer","ValueContainer","StudentCount","showTitle","columnGap","TableHeader","borderRight","TableDivider","borderBottomColor","DataContiner","Overview","_overviewDetails$data","selectAcademicYear","setSelectAcademicYear","overviewDetails","setOverviewDetails","setTotalStudents","totalMaleStudents","setTotalMaleStudents","totalFemaleStudents","setTotalFemaleStudents","overView","totalStudentsCount","totalMaleStudentsCount","totalFemaleStudentsCount","academicYearChanged","downloadAllStudentsExcel","overview","maleStudents","femaleStudents","admitStudentTableKeys","Status_Options","AdmitStudent","navigation","setClassData","sectionData","setSectionData","openModal","setOpenModal","openModalAdmit","setOpenModalAdmit","loader","setLoader","setFile","fileAdmit","setFileAdmit","handleChangeFiles","files","fileList","getClass","getSection","downloadStudentsExcel","DownloadForOfflineSharpIcon","downloadStudentsPdf","PrintSharp","handleNavigate","formData","FormData","append","f","bulkStudentAdmit","headers","endIcon","DownloadIcon","getBulkStudentAdmitSheet","FileSelect","customOnChange","selectedFiles","multi","handleCloseAdmitModal","bulkUpdate","bulkUpdateSheet","handleCloseUpdateModal","isBottom","setIsBottom","Reshuffle","studentReshuffle","setStudentReshuffle","checkBox","setCheckBox","reshuffle","setReshuffle","newSection","ids","fatherInfo","handleReshffleCheckBox","StickyBar","currentSectionId","studentIds","resuffle","Promotion","activeAcademicYear","setActiveAcademicYear","promoting","setPromoting","gettingStudentsList","setGettingStudentsList","promoteAcademicYearId","currentClassId","promoteClassId","promoteSectionId","allAcademicYears","handlePromotionCheckBox","promote","MuiTypography","BulkAdmission","visibility","studentCrendentialsTableKeys","Credential","username","fatherName","STATUS_OPTIONS","QuickAdmit","setSettings","setSelectedSetting","admissionNumber","admissionDate","fatherContactNumber","motherName","motherContactNumber","motherInfo","motherPhone","fatherPhone","stringify","admissionNo","rollNumberType","studentActivityTableKeys","StudentActivity","setDate","setFormData","studentActivity","Formik","description","noticeTableKeys","Is_Public","Notice","rolesData","setRolesData","rolesAllOption","noticeFor","AddNotice","newsTableKeys","News","selectImg","setSelectImg","news","shortNews","AddNews","previousFile","onRemove","fileName","handleRemoveFile","img","alt","holidayTableKeys","Holiday","setChecked","AddHoliday","awardAchievementTableKeys","AwardsAndAchievements","awards","location","hostedBy","headlines","AddAwardsAchievement","horizontalSplashNewsTableKeys","AddHorizontalSplash","splashNews","horizontalvalues","newitem","toggle","AddHorizontalSplashNews","popupSplashNewsTableKeys","Content_Type_Options","AddPopup","selectDocument","setSelectdocument","popupvalues","contentType","link","document","doc","accept","SplashNews","galleryListTableKeys","Gallery","_dataToEdit$images","gallery","overflowX","images","backgroundSize","objectFit","removeFile","handleRemoveImg","notificationsTableKeys","Notifications","eventTableKeys","Event","eventFor","video","shortEvent","getRole","examGradeTableKeys","Grade_Options","ExamGrade","setloading","examGrade","grade","group","gradePoint","markFrom","markTo","AddExamGrade","examTermTableKeys","Is_Assignment_Allowed","Exam_Types","ExamTerm","examTerm","examType","marksAssignmentAllowed","handelExamTerm","examListTableKeys","scheduleListTableKeys","Pratical_Marks","ExamSchedule","examtitle","setExamTitle","examSchedule","examDate","marksFreezDate","maximumMarks","pratical","minimumMarks","praticalMarks","showInHallTick","showInExamResults","obtainedMarks","getExamTerm","handelExamSchedule","ExamHallTicket","setSection","DivisionWiseReport","getExams","SubjectWiseReport","consolidateMarksTableKeys","ConsolidatedMarkSheet","consolidated","setConsolidated","marksCardTableKeys","Markscard","examResultTableKeys","ExamResultViewModel","_tableData$subjects","_tableData$subjects2","_d$subject","totalMarks","toFixed","ExamResult","uploadLoader","setUploadLoader","downloadLoader","setDownloadLoader","allDownloadLoading","setAllDownloadLoading","openBulk","setOpenBulk","studentMarks","getExamResult","_d$student$basicInfo","_d$student$academicIn","_d$student","roleNumber","photo","CustomInput","rest","borderWidth","shape","modalStyle","ManageMark","setStudentMarks","updatingMarks","setUpdatingMarks","fetchingMarks","setFetchingMarks","fileChoosen","setFileChoosen","listStudentMarks","subjectId","previousValues","_s$studentMarks","_s$studentMarks2","_s$studentMarks3","_s$studentMarks3$grad","obtainedWrittenMarks","comment","handleCustomInputChange","updatedMarks","updateStudentsMarks","_m$grade","bulkUpdateStudentMarks","getbulkUpdateStudentMarks","examTermId","examAttendanceTableKeys","ExamAttendance","Heading","DownloadBox","Courses","courseId","setCourseId","materialURL","setMaterialURL","material","setMaterial","uploadLoad","setUploadLoad","getCourse","course","classIds","join","courseHours","selectedCourse","selectedCourseTitle","state","selectedCourseIds","handleNavigateCourse","handleClickOpen","materialURLs","URL","decodeURIComponent","pathname","split","pop","FileUploadIcon","courseData","DialogContentText","selectedFile","px","py","handleDownload","Download","deleteMaterial","uploadCourseMaterial","createContext","MuiTableCell","CourseContentTable","_chapter$contents","handelOpenDelModel","chapter","ContentContext","CourseContext","openDeleteModel","setOpenDeleteModel","dataToDelete","setDataToDelete","_item$title","pr","YouTubeIcon","QuizIcon","ViewAgendaIcon","InsertDriveFileIcon","QuestionAnswerIcon","substring","handleOpenModel","ArrowDownward","ArrowUpward","chapterId","contentId","courseContent","deleteContent","VideoDialog","setOpenVideo","selectFile","setSelectFile","contentHours","updateContent","headerd","addContentToChapter","maxLength","createObjectURL","controls","Boxes","QuizDialog","setOpenQuiz","FlashcardDialog","setOpenFlashcard","cardType","flashCard","MaterialsDialog","setOpenMaterial","AddChapterDialog","setOpenChaper","setChapterData","chapterData","updateChapterDetails","Contents","ShowCourseContent","handleEditChapter","openVideo","openQuiz","openFlashcard","openMaterial","openCodepractice","setOpenCodepractice","deleteChapter","OuterGrid","CourseContent","_courseDetails$chapte","courses","setCourses","openChapter","courseDetails","setCourseDetails","chapters","getDetailsTeachers","Provider","TableData","TableBodydata","Label","FilterBox","getDateWithTime","dateTimeComponents","dateComponents","yearExtracted","parseInt","monthExtracted","dayExtracted","timeComponents","hoursExtracted","minutesExtracted","getStatus","startDate","expiryDate","expiryTime","currentDate","startDataTimestring","moment","expiryDateTimeString","currentDateTimeString","meetingDate","meetingExpiryDate","currentDateAndTime","User_Type","Participant_Type","Meeting_Type","Live","filterMeeting","setFilterMeeting","selectClasses","setSelectClasses","selectedPartcipatType","setSelectedParticipatType","meeting","createdBy","meetingType","participantType","userTypes","employeeParticipants","studentParticipants","participants","_s$academicInfo","_s$academicInfo$class","_s$academicInfo2","_s$academicInfo2$sect","$in","getEmployee","minWidth","FilterListIcon","listData","getMeetingId","roomId","handleJoinClick","meetingData","stupar","handleUpdateModelOpen","AddMeeting","StorageText","StorageContainer","Storage","storageDetails","setStorageDetails","totalStorage","usedStorage","storage","details","libraryBookTableKeys","BookViewModal","author","language","quantity","price","almiraNo","Books","book","cellNumber","isbnNo","edison","AddBooks","bookCover","periodicalTableKeys","Periodical","periodical","issueNumber","volumeNumber","entryDate","handleGetDownloadSheet","AddFormHandel","studentMemberTableKeys","studentNonMemberTableKeys","StudentMemberAction","actionType","updateLibraryMember","removeLibraryMember","actionTitle","actionDescription","Add","RemoveIcon","StudentLibraryMember","nonMember","setNonMember","_d$otherInfo","otherInfo","libraryMember","rollNo","filteredNonMemberData","_d$otherInfo2","studentLibraryDueTableKeys","studentLibraryHistoryTableKeys","studentLibraryIssueTableKeys","BookDetailed","Issued_To_Type_Option","bookIssue","submit","StudentIssueReturn","setBook","dueList","setDueList","history","setHistory","setPeriodical","filteredIssueData","submissionDate","bookName","bookId","issuedName","issuedTo","filtereDueData","dueDate","getBooks","getPeriodical","issueDate","issuedToType","reduce","leftInStock","downloadPdf","downloadExcel","employeeLibraryMemberTableKeys","employeeLibraryNonMemberTableKeys","EmployeeMemberAction","EmployeeLibraryMember","empName","employeeLibraryHistoryTableKeys","employeeLibraryDueTableKeys","employeeLibraryIssueTableKeys","EmployeeIssueReturn","leaveTypeTableKeys","ListContainer","flexWrap","overflowY","ListItem","paddingRight","ListItemContainer","LeaveType","selectDepartments","setSelectDepartments","multipleDepartments","setMultipleDepartments","setState","leaveTypeFor","departments","autoEarned","isSpecial","canResetCarryForward","carryForwardCount","autoEarnCount","leaveType","departmentName","getDepartments","AddLeaveType","_selectDepartments$fi","newList","handleRemoveDepartments","CloseRounded","FormLabel","studentLeaveTableKeys","StudentsLeave","employeeLeaveManageTableKeys","employeeLeaveTableKeys","LeaveData","Leave_Options","loadingApprove","setLoadingApprove","leaveStatus","leaveApplication","approveLeave","rejectLeave","EmployeeLeave","totalDays","setotalDays","leaveTypes","setLeaveTypes","setLeaveApplication","leaveEmployeeApplication","setLeaveEmployeeApplications","range","setRange","eployeeLeaveCredits","setEployeeLeaveCredits","getLeaveApplication","leaveTypeName","getLeaveEmployeeApplications","listEmployeeApplications","getLeaveType","employeeLeaveCredits","geteEployeeLeaveCredits","endDate","number","start","end","newItem","toLocaleDateString","getDate","totalTaken","AddLeave","handleNumberOfDay","indexOfV","updatedList","LeaveReport","loadingPdf","setLoadingPdf","loadingExcel","setLoadingExcel","handleGetPrintPdf","handleGetDownloadExcel","_data$result$7","_data$result$8","_data$result$6","_data$result$9","_data$result$10","itemTableKeys","Item","setDepartments","PdfLoading","setPdfLoading","excelLoading","setExcelLoading","_data$department","brand","itemId","response","uri","VendorTableKeys","MuiBox","backgroundPosition","BasicData","Vendor","_dataToEdit$basicInfo","_dataToEdit$basicInfo2","_dataToEdit$basicInfo3","_dataToEdit$basicInfo4","_dataToEdit$basicInfo5","_dataToEdit$basicInfo6","_dataToEdit$basicInfo7","_dataToEdit$basicInfo8","_dataToEdit$addressIn","_dataToEdit$addressIn2","_dataToEdit$addressIn3","_dataToEdit$addressIn4","_dataToEdit$bankInfo","_dataToEdit$bankInfo2","_dataToEdit$bankInfo3","_dataToEdit$bankInfo4","logo","setLogo","vendor","_data$basicInfo","category","phone","gstNumber","dealerName","dealerPhoneNumber","website","address","addressInfo","city","zipCode","bankName","bankInfo","accountNumber","ifscCode","branchName","handleChangePhoto","TransactionTableKeys","paymenyModes","types","purposes","fromTypes","toTypes","InOutTransaction","settings","items","setItems","selectInvoice","setSelectInvoice","vendors","setVendors","selectSchool","setSelectSchool","pricePerItem","trasactionMode","purpose","fromType","toType","school","getItems","_d$addedBy","_d$addedBy$basicInfo","addedBy","getVendors","_emp$basicInfo","stockListTableKeys","hover","common","black","white","OverviewTable","StockList","mr","issueDetailTableKeys","Issue","issueStatus","employeeName","sellDetailTableKeys","Sell","SellStatus","Content","fontFamily","Container","DateContaner","TextOuterContent","textIndent","StudyCertificate","selectedData","setSelectedData","openBulkIssue","setOpenBulkIssue","loadingDownload","setLoadingDownload","setFromDate","setToDate","handleSubmitCertificate","_values$student","_values$student$fathe","_values$student2","_values$student2$acad","_values$student3","_values$student3$acad","_values$student4","_values$student5","_values$student6","_values$student7","_values$student8","_values$student9","_values$student10","_values$student10$sch","_values$student11","_values$student11$sch","_values$student12","_values$student12$sch","_values$student13","_values$student14","academicId","currentClass","grNo","studentPhoto","schoolAddress","schoolLogo","contactInfo","handleBulkIssueOpen","certificate","getStudyCertificate","createElement","href","setAttribute","appendChild","click","removeChild","revokeObjectURL","Header","Signature","Title","TransferCertificate","receiptBookTableKeys","feeMapTableKeys","LABEL","classOld","classNew","transport","hostel","installmentsType","AddUpdateFeeMap","_routes$find","_routes$find$stops","_routes$find$stops$ma","selectedReceipt","getFeeMaps","routes","setRoutes","stops","setStops","hostels","setHostels","roomTypes","setRoomTypes","rooms","setRooms","dependencies","setDependencies","installments","setInstallments","setDataToUpdate","academicData","getAcademicYears","route","_r$vehicle","vehicle","routeStart","routeEnd","getRoutes","h","getHostels","roomType","getRoomTypes","room","getRoom","pickType","stop","fee","installmentType","handleAddForm","ceil","handleAddInstallments","installmentsData","monthlyAmount","missing","Array","_dataToUpdate$install","amount","quarterlyAmount","_dataToUpdate$install2","halfYearlyAmount","_dataToUpdate$install3","_dataToUpdate$install4","othersAmount","others","_dataToUpdate$install5","handleInstallmentChange","val","changeIndex","newInstallments","installment","diffInMonths","updatedDueDate","elementToRemove","removeElementFromArray","receiptTitleId","routeId","hostelId","stopId","feeMap","recentValue","Chip","onDelete","chipToDelete","chips","chip","picktype","_r$hostel","_r$type","_r$hostel2","_r$type2","_room$hostel","_room$type","totalBeds","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","enabled","renderInput","ViewInstallments","tableElement","Fragment","CustomSwitch","showInfo","dep","_data$class","_data$class2","_data$class3","_data$hostel","_data$route","_data$route$vehicle","_data$route2","_data$stop","CustomActionFee","onNavigateFeeMap","Edit","receiptTitle","ReceiptBook","feeMaps","setFeeMaps","receipts","setReceipts","openFeeMap","setOpenFeeMap","selectedReceiptId","setSelectedReceiptId","detail","getReceipts","receipt","handleOpenFeeMap","feeMapCategoryTableKeys","AddFeeMapCategory","categories","setCategories","addCategory","removeCategory","totalAmount","leftAmount","FeeMapCategory","_feeMaps$find","_feeMaps$find2","setReceips","openAddModal","setOpenAddModal","feeMapCategory","parseFloat","createMultiple","feeMapId","handleCloseAddModel","acc","newCategories","setError","formRef","handleFormChange","refer","concession","dispatchEvent","cancelable","bubbles","onPreviewButtonClick","payingAmount","onUpdateNote","collectingFee","downloadingPreview","payingDate","setPayingDate","paymentMode","setPaymentMode","paymentDetails","setPaymentDetails","handlePaymentDetails","Number","newDate","rows","chequeNumber","chequeDate","upiApp","utrNo","refNumber","paidByName","ExtraFeeContainer","CollectFees","_feeDetails$feeMap","_feeDetails$feeMap2","_feeDetails$feeMap2$i","_feeDetails$feeMap3","_feeDetails$feeMap3$i","_feeDetails$pastDues","_feeDetails$totalDueF","_feeDetails$currentDu","_feeDetails$previousR2","_feeDetails$feeMapCat6","_feeDetails$currentDu2","receiptTitles","setReceiptTitles","selectedStudent","setSelectedStudent","feeDetails","setFeeDetails","paymentData","setPaymentData","totalAmountToBePaid","setTotalAmountToBePaid","selectedPastDueIds","setSelectedPastDueIds","downloadingReceipt","setDownloadingReceipt","fetchingStudents","setFetchingStudents","installmentId","setInstallmentId","penalty","setPenalty","miscellaneous","setMiscellaneous","openConcessionModal","setOpenConcessionModal","setConcession","setNote","setCollectingFee","setDownloadingPreview","openCollectModal","setOpenCollectModal","handleCloseCollectFeeModal","receiptName","_feeMaps$filter$","feeReceipt","getFeeDetails","getAllReceiptTitles","_data$result2$","getAllFeeMaps","_students$result$","getStudentsList","getAllStudents","_feeMaps$find$install","payableAmount","_feeDetails$feeMapCat2","feeParticularAmount","feeMapCategories","amountPaid","totalAmountBeingPaid","concessionAmount","collectingAmount","_feeDetails$feeMapCat3","_feeDetails$previousR","previousReceipts","installmentPaid","pastDues","totalDueForThisAcademicYear","currentDue","downloadReceipt","validateStatus","_JSON$parse3","errorText","Response","message","paidAt","partiallyPaid","partialPaymentCompleted","itemDetail","handleChangeCollectingAmount","_feeDetails$feeMapCat","handleOpenConcessionModal","handleOpenCollectFeeModal","QuickFeeConcessionModal","handleCloseConcessionModal","QuickFeeCollectModal","_feeDetails$feeMapCat4","feeParticulars","concessionDetails","referredBy","givenAs","cashDetails","chequeDetails","ddDetails","upiDetails","cardDetails","netBankingDetails","previewReceipt","_JSON$parse","_feeDetails$feeMapCat5","collectFees","_JSON$parse2","balanceFeeReportTableKeys","BalanceFeeReport","downloadingExcel","setDownloadingExcel","feeReport","getBalanceFeeReport","downloadBalanceFeeReport","feeOverviewPaymentTableKeys","feeOverviewReceiptTableKeys","FeeOverview","collectedBy","setCollectedBy","collected","_employeeResponse$dat","$or","roleName","employeeResponse","_e$role","getCollected","reconciliationTableKeys","Reconciliation","getReceiptsPaidWithCheque","_d$payeeDetails","_d$payeeDetails2","_d$chequeDetails","_d$chequeDetails2","_d$chequeDetails3","_d$chequeDetails4","roleNo","payeeDetails","getAllReceipts","manageHostelTableKeys","HostelViewDialog","hostelType","ManageHostel","_dataToEdit$warden","getWarden","warden","manageHostelRoomTableKeys","ManageRoomType","specification","manageHostelRoomBedTableKeys","RoomAndBedViewDialog","_tableData$beds","beds","allocated","ManageRoomAndBed","_dataToEdit$type","_dataToEdit$hostel","setRoomType","updatingBed","setUpdatingBed","deletingBed","setDeletingBed","getRoomList","_h$hostel","_h$type","hostelName","getRoomTypeList","getHostelList","bed","b","onAddBedsHandle","initialBedsData","newBedData","removeBed","onCloseModal","hostelMemberTableKeys","hostelNNonMemberTableKeys","CustomActionAdd","_room$find","setHostel","setRoom","getHostel","updateHostelMember","String","HostelMember","hostelMember","setHostelMember","nonHostelMember","setNonHostelMember","getDataMemberList","filteredDataMember","_s$otherInfo","admission","filteredDataNonMember","_s$otherInfo2","_s$otherInfo3","_s$otherInfo4","removeHostelMember","vehicleTableKeys","VehicleViewDialog","model","driverName","licenseNumber","driverContactNumber","Vehicle","_dataToEdit$driver","_v$driver","_v$driver$basicInfo","driver","trackingId","insuranceName","insuranceId","totalSeats","AddVehicle","manageRouteTableKeys","RouteAndTripViewDialog","_tableData$vehicle","_tableData$stops","stopKM","pickTime","pickEndTime","dropTime","dropEndTime","FormBox","ManageRouteAndTrips","vehicles","setVehicles","updatingStop","setUpdatingStop","_v$stops","_v$vehicle","stopName","vehicleForRoute","pickStart","pickEnd","dropStart","dropEnd","getVehicles","AddRouteTrips","removeStop","stopData","updateStop","addStop","initialStopsData","transportAddMemberTableKeys","transportMemberTableKeys","Pick_Type","_route$find","setRoute","getRoute","updateTransportMember","TransportMember","transportMember","setTransportMember","transportMemberList","setTransportMemberList","_s$transportInfo","_s$transportInfo2","_s$transportInfo3","transportInfo","_s$transportInfo4","_s$transportInfo5","_s$transportInfo6","formik1","formik2","removeTransportMember","routesTableKeys","Routes","sumOfSeat","setSumOfSeat","totalSeat","sum","_r$vehicle2","vehicleLogTableKeys","Trip_Completed","VehicleLog","_dataToEdit$readingAt","_dataToEdit$readingAt2","_dataToEdit$spareUse","_dataToEdit$spareUse2","_dataToEdit$readingAt3","_dataToEdit$readingAt4","departure","setDeparture","arrival","setArrival","setVehicle","getVehicle","departureTime","readingAtDeparture","reading","arrivalTime","readingAtArrival","distance","spareUse","reason","totalDistanceTravelled","tripCompleted","formDataDeparture","formDataArrival","vehicleLog","readingAtDepartureReading","vehicleFirmTableKeys","Firm","firm","GSTNumber","vehicleFuelTableKeys","Fuel","selectReceipt","setSelectReceipt","setFirm","maintenanceFuel","firmName","getFirm","billNo","fuelQuantity","rate","kiloMeter","downloadUrl","vehicleRepairTableKeys","Repair","maintenanceRepair","particulars","vehicleTireTableKeys","VehicleTire","maintenanceTyre","kmReading","kmRun","tyre","tyreNo","vehicleGreecingTableKeys","Greecing","maintenanceGreecing","VehicleMaintenance","salaryGradeTableKeys","SalaryGrade","salaryGrade","breakups","deduction","handleInputChange","addItem","initialData","removeItem","AddSalaryGrade","paymentHistoryTableKeys","MakePayment","paymentHistory","setPaymentHistory","processingPayment","setProcessingPayment","downloadingDeductions","setDownloadingDeductions","deductions","setDeductions","deductionList","sg","getDeductions","selectedMonth","getPaymentHistory","downloadDeductionPdf","onDownloadClick","libraryReportTableKeys","graphData","colors","GroupBYData_Options","HeadingContainer","LibraryReport","academicYearGraph","setAcademicYearGraph","groupByData","report","groupedLibraryData","downloadGroupedLibraryData","AssessmentIcon","PieChart","wrapperStyle","formatter","Pie","isAnimationActive","outerRadius","entry","Cell","StudentYearlyAttendance","getStudentAttendanceReport","numbers","getAttendanceForDay","attendance","yearMonth","day","padStart","num","totalWorkingDays","totalPresentDays","totalAbsentDays","EmployeeYearlyAttendance","getEmployeeAttendanceReport","studentActivityReportTableKeys","StudentActivityReport","getStudentActivityReport","getStudentActivityReportPdf","selectedMonthYear","setSelectedMonthYear","getAllStudentsAttendanceReportForParticularMonth","getMonth","getFullYear","getAllEmployeesAttendanceReportForParticularMonth","visitorInfoTableKeys","VisitorInfoViewModel","_tableData$school","_tableData$toMeetUser","_tableData$reasonToMe","_tableData$reasonToMe2","comingForm","toMeetUserType","toMeetUserName","reasonToMeet","charAt","checkIn","checkOut","Reason_To_Meet","VisitorInfo","_dataToEdit$toMeetUse","_dataToEdit$section","visitorInfo","toMeetUser","toLocaleString","updateCheckout","_roles$find","_roles$find2","studentCheckOutTableKeys","Relation_With_Student","StudentCheckout","_students$find","setLoadingExce","studentCheckout","relationship","visitorName","visitorContactNumber","donwloadExcel","AddStudentCheckoutHandel","ticketTableKeys","HelpDesk","reportImg","setReportImg","guardianFeedbackTableKeys","guardianFeedback","disableElevation","GuardianFeedback","selectedStatus","setSelectedStatus","getFeebacks","lightPalette","wordBreak","studentBulkPhotoTableKeys","StudentBulkPhoto","classCombineData","genderCombineData","libraryCombineData","vehcileCombineData","vehicleNumber","hostelCombineData","StudentReport","classBar","setClassBar","genderBar","setGenderBar","libraryBar","setLibraryBar","vehicleBar","setVehicleBar","hostelBar","setHostelBar","groupData","setGroupdata","groupDataGraph","setGroupdataGraph","classCombinedData","genderCombinedData","libraryCombinedData","vehicleCombinedData","hostelCombinedData","loadingGraph","setLoadingGraph","getStudentReport","groupBy","downloadStudentReport","layout","borderColor","borderBottom","secondary","Library_Member","Salary_Type","AddEmployee","_dataToEdit$academicI","_dataToEdit$academicI2","_dataToEdit$academicI3","useParams","designationData","setDesgnationData","departmentData","setDepartmentData","selectedPhoto","setSelectedPhoto","resume","setResume","setSalaryGrade","getEmpById","getEmployeeDetails","getDesignationData","getDepartmentData","getSalaryGrade","responsibility","secMobileNo","religion","spouseName","aadharNo","fatherOccupation","spouseOccupation","qualification","workExperience","salaryType","public","showDetailsForWeb","showTextField","avatar","manageInstituteTableKeys","ManageInstitute","AddOrUpdateFiles","updatingFiles","setUpdatingFiles","setSelectedFiles","handleOpenDialog","addFiles","RollNumber_Options","Attendence_Type","Admission_Options","AddInstitute","_dataToEdit$bannerIma","initialValue","currencyToSymbolMap","bannerImages","setBannerImages","getSchoolDetails","previewCreateUrl","setPreviewCreateUrl","currencies","currencyCodes","currency","regDate","fax","websiteFooter","currencySymbol","sessionStartMonth","sessionEndMonth","studentAttendenceType","latitude","longitude","defaultTimeZone","googleAnalyticsId","teacherActivityFeedbackEnabled","facebookUrl","twitterUrl","linkedinUrl","youtubeUrl","instagramUrl","pinterestUrl","selectedTheme","PUBLIC_URLS","getSchools","getAllSchools","selectedCurrency","TimezoneSelect","baseStyle","menu","provided","ThemeSelector","onThemeSelect","webTheme","FormTable","handleLinkClick","url","Avatar","FileDownloadIcon","mx","Gender","Blood_Group","ProfileUpdate","_employee$basicInfo","_employee$basicInfo2","_employee$basicInfo3","_employee$basicInfo3$","_employee$basicInfo4","_employee$basicInfo5","_employee$basicInfo6","_employee$basicInfo7","_employee$basicInfo8","_employee$basicInfo9","_employee$academicInf","_employee$academicInf2","_employee$academicInf3","_employee$academicInf4","_employee$otherInfo","_employee$otherInfo2","_employee$otherInfo3","_employee$otherInfo4","_employee$otherInfo5","_employee$otherInfo6","_employee$academicInf5","designations","setDesignations","profileImages","setProfileImages","getDesignation","googlePlusUrl","setItem","Profile","View_Web","UpdateEmployee","useLocation","empData","academicInfoworkExperience","academicInfosalaryGrade","imageUrl","Relation_With_Guardian","RTE_Options","AddStudent","_dataToEdit$academicI4","_dataToEdit$academicI5","_dataToEdit$academicI6","_dataToEdit$contactIn","_dataToEdit$contactIn2","_dataToEdit$contactIn3","_dataToEdit$contactIn4","_dataToEdit$contactIn5","_dataToEdit$contactIn6","_dataToEdit$contactIn7","_dataToEdit$prevSchIn","_dataToEdit$prevSchIn2","_dataToEdit$prevSchIn3","_dataToEdit$otherInfo","_dataToEdit$otherInfo2","_dataToEdit$otherInfo3","_dataToEdit$otherInfo4","_dataToEdit$otherInfo5","_dataToEdit$otherInfo6","_dataToEdit$otherInfo7","_dataToEdit$prevSchIn4","_dataToEdit$fatherInf","_dataToEdit$motherInf","selectedStudentPhoto","setSelectedStuentPhoto","selectedMotherPhoto","setSelectedMotherPhoto","selectedFatherPhoto","setSelectedFatherPhoto","transferCertificate","setTransperCertificate","getStudentDetails","cicn","rte","satNo","guardianContactNumberSecondary","guardianRelation","nationId","prevSchName","prevSchInfo","tcNo","prevClass","busStop","extraInfo","fatherEdu","fatherProfession","fatherDesignation","motherEdu","motherProfession","motherDesignation","AddCourse","inputlist","setInputList","benefits","inputlistBenifits","setInputListBenifits","isTrending","thumbnailImage","KeyboardDoubleArrowRightIcon","l","handleRemoveClick","handleAddClick","handleInputChangeBenifits","handleRemoveClickBenifits","handleAddClickBenifites","FormGroup","UpdateCourse","_course$courseDetails","_course$courseDetails2","_course$class","LoadingScreen","VideoContainer","TYPE","CREDENTIAL","OneONoneCall","appId","serverSecret","GroupCall","LiveStreaming","Room","roomID","isReady","setIsReady","zpost","setZpost","getRoomDetails","destroy","handleBackPress","replace","_CREDENTIAL$meetingTy","_CREDENTIAL$meetingTy2","appID","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","zp","joinRoom","element","autoHideFooter","enableUserSearch","showMyMicrophoneToggleButton","showRoomTimer","showRemoveUserButton","scenario","config","Host","ConsoleError","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","ITEM_HEIGHT","BorderLinearProgress","LinearProgress","linearProgressClasses","colorPrimary","bar","StyledInput","InputBase","transition","transitions","Compose","sendingMessage","setSendingMessage","receiverType","setReceiverType","selectRoles","setSelectRoles","smsFrom","setSmsFrom","sms","contacts","setContacts","classPopper","setClassPopper","sectionPopper","setSectionPopper","contactsPopper","setContactsPopper","notifyChecked","setNotifyChecked","selectClass","setSelectClass","selectSection","setSelectSection","selectContacts","setSelectContacts","selectedStudentCount","setSelectedStudentCount","selectEmployee","setSelectEmployee","classAutoSelect","setClassAutoSelect","sectionAutoSelect","setSectionAutoSelect","contactsAutoSelect","setContactsAutoSelect","employeeListPopper","setEmployeeListPopper","selectedEmployeeCount","setSelectedEmployeeCount","employeeAutoSelect","setEmployeeAutoSelect","totalSms","setTotalSms","consumedSms","setConsumedSms","balance","setBalance","flexFlow","onFocus","currentTarget","Popper","anchorEl","Autocomplete","schclass","classNames","sortedSections","sort","localeCompare","filteredSections","filteredSectionIds","isOptionEqualToValue","disableCloseOnSelect","getOptionLabel","renderOption","selected","sectionIds","sectionNames","handleContactsList","allStudentContacts","studentNames","renderValue","ListItemText","handleEmployeeAuto","employeeNames","smsType","TextareaAutosize","Report","setReport","smsSubject","sentTime","RefreshRounded","SimCardDownloadRoundedIcon","ReplyRoundedIcon","RedoRoundedIcon","Credentails","handleClassSelect","handleSectionSelect","isStudentRoleSelected","_ref8","_ref9","BulkPhoto","updatePhoto","handleNavigateStudent","IdCard","selectedIdCard","assignmentTableKeys","AddEditAssignment","_entryFormik$values","_entryFormik$values2","onUpdateFormik","assignmentType","deadline","attachmentType","isPublish","assignment","AssignmentViewModel","CustomActionDownload","handleClick","Assignment","Section_Options","responseCode","subjectName","drawerWidth","openedMixin","easing","sharp","duration","enteringScreen","closedMixin","leavingScreen","up","DrawerHeader","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","NavDrawer","sideMenuData","setSideMenuData","setAnchorEl","openProfile","Boolean","activeYear","setActiveYear","setIsDarkMode","selecteSubMenu","setSelectedSubMenu","selectedMenu","setSelectedMenu","getActiveAcademicYear","openPreviousMenu","menuIndex","CssBaseline","Toolbar","handleDrawerOpen","MenuIcon","NotificationsIcon","Menu","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","ListItemIcon","PersonIcon","LockResetIcon","handleLogout","LogoutIcon","handleDrawerClose","ChevronRightIcon","ChevronLeftIcon","List","ListItemButton","handleToggleMenuOpen","ExpandLess","ExpandMore","Collapse","timeout","unmountOnExit","in","wordWrap","disablePadding","handleModeChange","flexGrow","Route","VehicleRoutes","StudentAttendanceReport","EmployeeAttendanceReport","Credentials","Outlet","IconComponent","KeyboardArrowDownIcon","set","getDataValue","onCardClick","selectedItem","setSelectedItem","getTooltipTitle","handleDeleteClick","RemoveRedEyeRoundedIcon","paddingTop","PuffLoader","other","hidden","a11yProps","Tabs","scrollButtons","allowScrollButtonsMobile","Tab","setSelectedTheme","setTheme","WebsiteThemeContext","selectedIdCardTheme","setSelectedIdCardTheme","websiteThemes","idCardThemes","handleClickGenerateIdCard","FileListModal","setSelectFiles","customOnChage","handleRemoveImage","DownloadForOfflineIcon","disableFuture","slotProps","textField","closeOnSelect"],"sourceRoot":""}