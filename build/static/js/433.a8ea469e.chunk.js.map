{"version":3,"file":"static/js/433.a8ea469e.chunk.js","mappings":"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","sources":["data/menu.js","components/PageHeader.jsx","components/Dashboard/ChartBar.jsx","components/Dashboard/Attendance.jsx","components/Authentication/CheckPermission.jsx","components/Dashboard/QuickLinks.jsx","components/Dashboard/Events.jsx","components/Dashboard/FilterStudent.jsx","pages/Dashboard.jsx","forms/AddForm.jsx","forms/FormModal.jsx","components/Tables/NoTableData.jsx","components/Tables/CustomTable.jsx","data/tableKeys/academicYearData.js","pages/Administrator/AcademicYear.jsx","data/tableKeys/designation.js","pages/HumanResource/ManageDesignation.jsx","data/tableKeys/departmentData.js","pages/HumanResource/ManageDepartment.jsx","components/Tabs/Tablist.jsx","components/Tabs/TabPanel.jsx","data/tableKeys/overviewData.js","data/tableKeys/employeeData.js","data/tableKeys/inactiveEmployee.js","pages/HumanResource/Employee.jsx","data/tableKeys/offerLetterData.js","forms/FormDatePicker.jsx","forms/LetterViewModal.jsx","pages/HumanResource/OfferLetter.jsx","data/tableKeys/relievingLetterData.js","pages/HumanResource/RelievingLetter.jsx","data/tableKeys/experienceLetterData.js","pages/HumanResource/ExperienceLetter.jsx","data/tableKeys/teacherActivityData.js","pages/HumanResource/TeacherActivity.jsx","data/tableKeys/rolePermissionData.js","data/roleData.js","pages/Administrator/RolePermission.jsx","data/tableKeys/userRoleData.js","pages/Administrator/UserRole.jsx","pages/Administrator/ResetPassword.jsx","data/tableKeys/academicClassData.js","pages/Academic/Class.jsx","data/tableKeys/academicSectionData.js","forms/CustomSelect.jsx","pages/Academic/Section.jsx","data/tableKeys/academicSubjectData.js","pages/Academic/Subject.jsx","components/Student/StudentCount.jsx","utils.js","pages/Student/Overview.jsx","data/tableKeys/admitStudentData.js","forms/FileListModal.jsx","forms/FileSelect.jsx","pages/Student/AdmitStudent.jsx","components/StickyBar.jsx","pages/Student/Reshuffle.jsx","pages/Student/Promotion.jsx","pages/Student/BulkAdmission.jsx","data/tableKeys/studentCredentials.js","pages/Student/Credential.jsx","data/tableKeys/studentActivity.js","pages/Student/StudentActivity.jsx","data/tableKeys/receiptBookData.js","data/tableKeys/feeMapData.js","pages/Fees/AddUpdateFeeMap.jsx","pages/Fees/ViewInstallments.jsx","pages/Fees/ReceiptBook.jsx","data/tableKeys/feeMapCategoryData.js","forms/CustomInput.jsx","pages/Fees/AddFeeMapCategory.jsx","pages/Fees/FeeMapCategory.jsx","pages/Fees/QuickFeeConcessionModal.jsx","pages/Fees/QuickFeeCollectModal.jsx","pages/Fees/CollectFees.jsx","data/tableKeys/balanceFeeReportData.js","pages/Fees/BalanceFeeReport.jsx","data/tableKeys/feeOverviewPaymentData.js","data/tableKeys/feeOverviewReceiptData.js","pages/Fees/FeeOverview.jsx","data/tableKeys/reconciliationData.js","pages/Fees/Reconciliation.jsx","data/tableKeys/manageHostelData.js","forms/ViewModel.jsx","pages/Hostel/HostelViewDialog.jsx","pages/Hostel/ManageHostel.jsx","data/tableKeys/manageHostelRoom.js","pages/Hostel/ManageRoomType.jsx","data/tableKeys/manageHostelRoomBedData.js","pages/Hostel/RoomAndBedViewDialog.jsx","pages/Hostel/ManageRoomAndBed.jsx","data/tableKeys/hostelMemberData.js","data/tableKeys/hostelNonMember.js","pages/Hostel/HostelMember.jsx","data/tableKeys/studentBulkPhotoData.js","pages/Student/StudentBulkPhoto.jsx","pages/HumanResource/AddEmployee.jsx","data/tableKeys/manageInstituteData.js","pages/ManageInstitute/ManageInstitute.jsx","forms/AddOrUpdateFiles.jsx","components/ThemeSelector.jsx","pages/ManageInstitute/AddInstitute.jsx","pages/AccountSettings/FormTable.jsx","pages/AccountSettings/ProfileUpdate.jsx","pages/AccountSettings/Profile.jsx","pages/HumanResource/UpdateEmployee.jsx","pages/Student/AddStudent.jsx","pages/Communication/Compose.jsx","pages/Communication/Report.jsx","pages/Communication/Credentials.jsx","pages/Student/BulkPhoto.jsx","components/PageNotFound.jsx","data/tableKeys/notificationsData.js","pages/Notifications.jsx","components/NavDrawer.jsx"],"sourcesContent":["/** @format */\n\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\n\nimport React from \"react\";\nimport GiteIcon from \"@mui/icons-material/Gite\";\nimport SubdirectoryArrowRightOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowRightOutlined\";\n\nimport {\n  SettingsSuggest,\n  AccountBalance,\n  Groups,\n  Person,\n  CurrencyRupee,\n  InstallMobileRounded,\n} from \"@mui/icons-material\";\n\nimport NotificationsActiveRoundedIcon from \"@mui/icons-material/NotificationsActiveRounded\";\n\nimport Diversity2Icon from \"@mui/icons-material/Diversity2\";\n\nconst SIDE_MENU_DATA = [\n  {\n    name: \"Dashboard\",\n    path: \"/sch/dashboard\",\n    renderName: [\"Dashboard\"],\n    subMenus: [],\n    icon: <DashboardRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Manage Institute\",\n    path: \"/sch/manage-institute\",\n    renderName: [\"Manage Institute\"],\n    subMenus: [],\n    icon: <SettingsSuggest color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Administrator\",\n    path: \"\",\n    renderName: [\n      \"Academic Year\",\n      \"Roles and Permissions\",\n      \"User Password Reset\",\n    ],\n\n    icon: <Person color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Academic Year\",\n        renderName: \"Academic Year\",\n        path: \"/sch/administrator/academicYear\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Roles & Permissions\",\n        renderName: \"Roles and Permissions\",\n        path: \"/sch/administrator/role-permission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"User Password Reset\",\n        renderName: \"User Password Reset\",\n        path: \"/sch/administrator/reset-password\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Human Resource\",\n    path: \"\",\n    renderName: [\n      \"Designation\",\n      \"Department\",\n      \"Employee\",\n      \"Offer Letter\",\n      \"Relieving Letter\",\n      \"Off Boarding\",\n      \"Experience Letter\",\n      \"Teacher Activity\",\n    ],\n    icon: <Diversity2Icon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Designation\",\n        renderName: \"Designation\",\n        path: \"/sch/human-resource/manage-designation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Department\",\n        renderName: \"Department\",\n        path: \"/sch/human-resource/manage-department\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Employee\",\n        renderName: \"Employee\",\n        path: \"/sch/human-resource/employee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Offer-Letter\",\n        renderName: \"Offer Letter\",\n        path: \"/sch/human-resource/offer-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Relieving Letter\",\n        renderName: \"Relieving Letter\",\n        path: \"/sch/human-resource/relieving-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      // {\n      //   name: \"Off Boarding\",\n      //   renderName: \"Off Boarding\",\n      //   path: \"/sch/human-resource/off-boarding\",\n      //   icon: (\n      //     <SubdirectoryArrowRightOutlinedIcon\n      //       color=\"primary\"\n      //       fontSize=\"small\"\n      //     />\n      //   ),\n      // },\n      {\n        name: \"Experience Letter\",\n        renderName: \"Experience Letter\",\n        path: \"/sch/human-resource/experience-letter\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Teacher Activity\",\n        renderName: \"Teacher Activity\",\n        path: \"/sch/human-resource/teacher-activity\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Academic\",\n    path: \"\",\n    renderName: [\"Class\", \"Section\", \"Subject\"],\n    icon: <AccountBalance color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Class\",\n        renderName: \"Class\",\n        path: \"/sch/academic/class\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Section\",\n        renderName: \"Section\",\n        path: \"/sch/academic/section\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Subject\",\n        renderName: \"Subject\",\n        path: \"/sch/academic/subject\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Student\",\n    path: \"\",\n    renderName: [\n      \"Overview\",\n      \"Admit Student\",\n      \"Resuffle\",\n      \"Promotion\",\n      \"Bulk Admission\",\n      \"Credential\",\n      \"Quick Admit\",\n      \"ID card\",\n      \"Student Activity\",\n    ],\n    icon: <Groups color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Overview\",\n        renderName: \"Overview\",\n        path: \"/sch/student/overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Admit Student\",\n        renderName: \"Admit Student\",\n        path: \"/sch/student/admit-student\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reshuffle\",\n        renderName: \"Resuffle\",\n        path: \"/sch/student/reshuffle\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Promotion\",\n        renderName: \"Promotion\",\n        path: \"/sch/student/promotion\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n\n      {\n        name: \"Bulk Admission\",\n        renderName: \"Bulk Admission\",\n        path: \"/sch/student/bulk-admission\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credential\",\n        renderName: \"Credential\",\n        path: \"/sch/student/credential\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Communication\",\n    path: \"\",\n    renderName: [\"Compose\", \"Sms Report\", \"Sms Credentials\"],\n    icon: <InstallMobileRounded color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Compose\",\n        renderName: \"Compose\",\n        path: \"/sch/communication_compose\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Report\",\n        renderName: \"Sms Report\",\n        path: \"/sch/communication_report\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Credentials\",\n        renderName: \"Sms Credentials\",\n        path: \"/sch/communication_credentials\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Notifications\",\n    path: \"/sch/notifications\",\n    renderName: [\"Sms-Notifications\"],\n    subMenus: [],\n    icon: <NotificationsActiveRoundedIcon color=\"primary\" fontSize=\"small\" />,\n  },\n\n  {\n    name: \"Fees\",\n    path: \"\",\n    renderName: [\n      \"Receipt Book\",\n      \"Fee Map Category\",\n      \"Collect Fees\",\n      \"Balance Fee\",\n      \"Fee Overview\",\n      \"Reconciliation\",\n    ],\n    icon: <CurrencyRupee color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Receipt Book\",\n        renderName: \"Receipt Book\",\n        path: \"/sch/fees/receipt-book\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Map Category\",\n        renderName: \"Fee Map Category\",\n        path: \"/sch/fees/feeMap-category\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Collect Fees\",\n        renderName: \"Collect Fees\",\n        path: \"/sch/fees/collect-fees\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Balance Fee\",\n        renderName: \"Balance Fee\",\n        path: \"/sch/fees/balance-fee\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Fee Overview\",\n        renderName: \"Fee Overview\",\n        path: \"/sch/fees/fee-overview\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Reconciliation\",\n        renderName: \"Reconciliation\",\n        path: \"/sch/fees/re-conciliation\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n\n  {\n    name: \"Hostel\",\n    path: \"\",\n    renderName: [\n      \"Manage Hostel\",\n      \"Manage Room Type\",\n      \"Manage Room Bed\",\n      \"Hostel Member\",\n    ],\n    icon: <GiteIcon color=\"primary\" fontSize=\"small\" />,\n    subMenus: [\n      {\n        name: \"Manage Hostel\",\n        renderName: \"Manage Hostel\",\n        path: \"/sch/hostel/manage-hostel\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Type\",\n        renderName: \"Manage Room Type\",\n        path: \"/sch/hostel/manage-room-type\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Manage Room Bed\",\n        renderName: \"Manage Room Bed\",\n        path: \"/sch/hostel/manage-room-bed\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n      {\n        name: \"Hostel Member\",\n        renderName: \"Hostel Member\",\n        path: \"/sch/hostel/hostel-member\",\n        icon: (\n          <SubdirectoryArrowRightOutlinedIcon\n            color=\"primary\"\n            fontSize=\"small\"\n          />\n        ),\n      },\n    ],\n  },\n];\n\nexport default {\n  SIDE_MENU_DATA,\n};\n","/** @format */\n\nimport { Box, Paper } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport SettingContext from \"../context/SettingsContext\";\n\nconst Wrapper = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  marginBottom: \"20px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: theme.palette.primary.light,\n}));\n\nexport default function PageHeader({ title = \"\", showTextField = true }) {\n  return (\n    <Wrapper>\n      <Typography\n        component=\"h1\"\n        sx={{\n          fontWeight: \"bold\",\n          color: (theme) => (theme.palette.mode === \"dark\" ? \"white\" : \"black\"),\n        }}>\n        {title}\n      </Typography>\n    </Wrapper>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Box, Paper } from \"@mui/material\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst ChartBar = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [uniqueSections, setUniqueSections] = useState([]);\n  const { ref, width } = useResizeObserver();\n\n  const getRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getDashboardStudentDetails,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      const transformedData = data.result.map((classItem) => {\n        const transformedItem = { className: classItem.className };\n        Object.keys(classItem.sections).forEach((section) => {\n          transformedItem[section] = classItem.sections[section];\n        });\n        return transformedItem;\n      });\n\n      setClasses(transformedData);\n\n      const sections = new Set();\n      data.result.forEach((classItem) => {\n        Object.keys(classItem.sections).forEach((section) => {\n          sections.add(section);\n        });\n      });\n\n      setUniqueSections([...sections]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting]);\n\n  return (\n    <Box sx={{ display: \"flex\", flex: 1 }} ref={ref}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Paper sx={{ width: \"100%\", height: \"100%\" }}>\n          <BarChart\n            width={width ? width - 10 : 700}\n            height={373}\n            data={classes}\n            margin={{ top: 20, right: 5, left: 0, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"className\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {uniqueSections.map((sectionName) => (\n              <Bar\n                key={sectionName}\n                dataKey={sectionName}\n                fill={getRandomColor()}\n                stackId=\"stack\"\n              />\n            ))}\n          </BarChart>\n        </Paper>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default ChartBar;\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Groups } from \"@mui/icons-material\";\nimport ChartBar from \"./ChartBar\";\nimport { Link } from \"react-router-dom\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst OuterCard = styled(Card)(({ theme }) => ({\n  marginBottom: \"15px\",\n  padding: \"20px 0\",\n  height: \"auto\",\n  width: \"100%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"xs\")]: {\n    flexDirection: \"column\",\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"row\",\n  },\n}));\n\nconst InnerBox = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\",\n}));\n\nconst Content = styled(Box)(({ theme }) => ({\n  alignSelf: \"center\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  fontSize: \"16px\",\n  fontWeight: 600,\n}));\n\nconst Data = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  textAlign: \"center\",\n}));\n\nconst Count = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"3px\",\n}));\n\nexport default function Attendance() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [studentAttendence, setStudentAttendence] = useState([]);\n  const [employeeAttendence, setEmployeeAttendence] = useState([]);\n\n  const getStudentAttendanceSummary = async () => {\n    try {\n      const [studentData, employeeData] = await Promise.all([\n        get(PRIVATE_URLS.studentAttendance.getAttendanceSummaryForToday, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }),\n        get(\n          PRIVATE_URLS.employeeAttendance.getEmployeeAttendanceSummaryForToday,\n          {\n            params: {\n              schoolId: selectedSetting._id,\n            },\n          }\n        ),\n      ]);\n\n      // console.log(studentData.data?.result, \"student attendance data\");\n      // console.log(employeeData?.data?.result, \"employee attendance data\");\n      setStudentAttendence(studentData.data?.result);\n      setEmployeeAttendence(employeeData?.data?.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getStudentAttendanceSummary();\n  }, [selectedSetting._id]);\n\n  const darkMode = window.localStorage.getItem(\"isDarkMode\");\n\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: { xs: 2, sm: 2, md: \"0px 15px\", lg: \"0px 15px\" },\n          margin: \"20px 0px\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\"\n              ? \"rgba(255,255,255,0.5)\"\n              : \"whitesmoke\",\n        }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <ChartBar />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\n\nexport default function CheckPermission({ module, permission, children }) {\n  const token = window.localStorage.getItem(process.env.REACT_APP_ACCESS_TOKEN);\n  if (!token) return null;\n\n  const user = window.localStorage.getItem(process.env.REACT_APP_CURRENT_USER);\n  if (!user) return null;\n\n  let parsedUser = JSON.parse(user);\n  let role = parsedUser.role;\n\n  if (!role) return null;\n  if (role.name?.toLowerCase() === \"super admin\") return children;\n\n  let moduleR = role.permissions.find(\n    (p) => p.module?.toLowerCase() === module?.toLowerCase()\n  );\n\n  if (!moduleR) return null;\n\n  if (!moduleR.permissions.includes(permission?.toLowerCase())) return null;\n\n  return <>{children}</>;\n}\n","/** @format */\n\nimport { Box, Card, Fab, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nimport {\n  CardMembership,\n  FindInPage,\n  Groups,\n  Message,\n} from \"@mui/icons-material\";\nimport { Link } from \"react-router-dom\";\nimport CheckPermission from \"../Authentication/CheckPermission\";\n\nconst DataContainer = styled(Card)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  justifyContent: \"space-evenly\",\n  padding: \"25px 0px\",\n  flexDirection: \"column\",\n}));\nconst StyledFab = styled(Fab)(({ theme }) => ({\n  background: \"#1b3779\",\n  color: \"#fff\",\n  \"&:hover\": {\n    color: \"#1b3779\",\n  },\n}));\nexport default function QuickLinks() {\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: 2,\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\"\n              ? \"rgba(255,255,255,0.5)\"\n              : \"whitesmoke\",\n        }}>\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"center\">\n            <Typography\n              sx={{\n                fontSize: 18,\n                fontWeight: \"bold\",\n                color: (theme) =>\n                  theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n              }}>\n              Quick Links\n            </Typography>\n          </Grid>\n          <CheckPermission module=\"Admit Student\" permission=\"add\">\n            {\" \"}\n            <Grid item xs={12} sm={12} md={4}>\n              <Link\n                to=\"/sch/student/add-student\"\n                style={{ textDecoration: \"none\" }}>\n                <DataContainer>\n                  <Box>\n                    <StyledFab size=\"small\">\n                      <Groups />\n                    </StyledFab>\n                  </Box>\n                  <Box>Admit Students</Box>\n                </DataContainer>\n              </Link>\n            </Grid>\n          </CheckPermission>\n          <CheckPermission module=\"Employee\" permission=\"add\">\n            <Grid item xs={12} sm={12} md={4}>\n              <Link\n                to=\"/sch/human-resource/add-employee\"\n                style={{ textDecoration: \"none\" }}>\n                <DataContainer>\n                  <Box>\n                    <StyledFab size=\"small\">\n                      <Groups />\n                    </StyledFab>\n                  </Box>\n                  <Box>Admit Employee</Box>\n                </DataContainer>\n              </Link>\n            </Grid>\n          </CheckPermission>\n\n          <CheckPermission module=\"Compose\" permission=\"add\">\n            <Grid item xs={12} sm={12} md={4}>\n              <Link\n                to=\"/sch/communication_compose\"\n                style={{ textDecoration: \"none\" }}>\n                <DataContainer>\n                  <Box>\n                    <StyledFab size=\"small\">\n                      <Message />\n                    </StyledFab>\n                  </Box>\n                  <Typography>Communication</Typography>\n                </DataContainer>\n              </Link>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Collapsible from \"react-collapsible\";\n\nimport dayjs from \"dayjs\";\nimport \"../Styles/Dashboard.css\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport themeData from \"../../data/themeData\";\n\nconst ScrollContainer = styled(Box)(({ theme }) => ({\n  borderRadius: \"5px\",\n  margin: \"18px\",\n  transform: \"translateY(0%)\",\n  animation: \"scroll 15s linear infinite\",\n  animationPlayState: \"running\",\n\n  \"&:hover\": {\n    animationPlayState: \"paused\",\n  },\n\n  \"@keyframes scroll\": {\n    from: {\n      transform: \"translateY(50%)\",\n    },\n    to: {\n      transform: \"translateY(-100%)\",\n    },\n  },\n}));\n\nconst DashboardScorlText = styled(Card)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"10px 0px\",\n\n  height: \"100%\",\n}));\n\nconst NoDataFound = styled(Typography)(({ theme }) => ({\n  textAlign: \"center\",\n  margin: \"5px\",\n  padding: \"5px\",\n  fontWeight: 700,\n}));\n\nconst DashboardNewsConent = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  textAlign: \"center\",\n  height: \"auto\",\n  width: \"95%\",\n  marginLeft: \"1rem\",\n  marginRight: \"2rem\",\n  paddingBottom: \"5px\",\n  position: \"relative\",\n}));\n\nconst BoldTrigger = styled(Typography)(({ theme }) => ({\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  fontSize: \"18px\",\n  borderLeft: \"7px solid #ffeb3b\",\n  paddingLeft: theme.spacing(1),\n}));\n\nconst NoticeItem = styled(Typography)(({ theme }) => ({\n  fontWeight: 700,\n  \"&:hover\": {\n    color: themeData.darkPalette.primary.main,\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Events() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [notice, setNotice] = useState([]);\n  const [holidays, setHolidays] = useState([]);\n  // console.log(notice?.length, \"resss\");\n\n  const getNotice = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.notice.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setNotice(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getHolidays = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.holiday.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setHolidays(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getNotice();\n    getHolidays();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper\n        sx={{\n          padding: 2,\n          mt: 2,\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\"\n              ? \"rgba(255,255,255,0.5)\"\n              : \"whitesmoke\",\n        }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Calendar\n              tileClassName={({ date }) => {\n                const today = new Date();\n                if (date.toDateString() === today.toDateString()) {\n                  return \"blue-day\";\n                }\n                return \"\";\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function FilterStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const classes = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const classesAllOption = [{ label: \"All\", value: \"all\" }, ...classes];\n      setClasses(classesAllOption);\n\n      entryFormik.setFieldValue(\"class\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      if (entryFormik.values.class === \"all\") {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        const sectionAllOption = [{ label: \"All\", value: \"all\" }];\n        setSections(sectionAllOption);\n        entryFormik.setFieldValue(\"section\", \"all\");\n      } else {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: entryFormik.values.class,\n            },\n          },\n        });\n\n        const section = data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }));\n        const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n        setSections(sectionAllOption);\n        entryFormik.setFieldValue(\"section\", \"all\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async (values) => {\n    try {\n      if (values.class !== \"all\" && values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n        setStudents(\n          data.result.map((d) => ({\n            ...d,\n            label: `${d.basicInfo.name}  | ${d.academicInfo.rollNumber} | ${d.contactNumber} `,\n            value: d._id,\n          }))\n        );\n      } else if (values.class === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n\n        setStudents(\n          data.result.map((d) => ({\n            ...d,\n            label: `${d.basicInfo.name}  | ${d.academicInfo.rollNumber} | ${d.contactNumber} `,\n            value: d._id,\n          }))\n        );\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n        setStudents(\n          data.result.map((d) => ({\n            ...d,\n            label: `${d.basicInfo.name}  | ${d.academicInfo.rollNumber} | ${d.contactNumber} `,\n            value: d._id,\n          }))\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetStudent = (values) => {\n    if (values.student) navigate(`/sch/student/edit-student/${values.student}`);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleGetStudent,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.section) {\n      getStudents(entryFormik.values);\n    }\n  }, [\n    entryFormik.values.class,\n    entryFormik.values.section,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Student\"\n              options={students}\n              showSearch={true}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n            <Button size=\"small\" variant=\"contained\" type=\"submit\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\n\nimport Attendance from \"../components/Dashboard/Attendance\";\nimport QuickLinks from \"../components/Dashboard/QuickLinks\";\nimport Events from \"../components/Dashboard/Events\";\nimport FilterStudent from \"../components/Dashboard/FilterStudent\";\n\nexport default function Dashboard() {\n  return (\n    <>\n      <PageHeader title=\"Welcome To School ERP \" />\n      <FilterStudent />\n      <Attendance />\n      <QuickLinks />\n      <Events />\n    </>\n  );\n}\n","/** @format */\n\nimport { Box, Fab, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport themeData from \"../data/themeData\";\nimport CheckPermission from \"../components/Authentication/CheckPermission\";\n\nexport default function AddForm({\n  module = \"\",\n  disabled,\n  title,\n  onAddClick = () => {},\n}) {\n  return (\n    <>\n      <CheckPermission module={module} permission=\"add\">\n        <Box\n          sx={{\n            position: \"fixed\",\n            width: \"-moz-fit-content\",\n            width: \"fit-content\",\n            right: \"70px\",\n            bottom: \"20px\",\n          }}>\n          <Tooltip title={title}>\n            <Fab\n              variant=\"contained\"\n              onClick={onAddClick}\n              disabled={disabled}\n              sx={{\n                color: \"#ffff\",\n                background: themeData.darkPalette.primary.main,\n                \":hover\": { background: themeData.darkPalette.primary.main },\n              }}>\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n        </Box>\n      </CheckPermission>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Divider,\n  useMediaQuery,\n  useTheme,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function FormModal({\n  formTitle = \"\",\n  children,\n  formik,\n  open = false,\n  onClose = () => {},\n  submitButtonTitle = \"\",\n  styles = {},\n  adding = false,\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n          component: \"form\",\n          onSubmit: formik.handleSubmit,\n        }}\n      >\n        <DialogTitle sx={{ fontWeight: 600 }}>{formTitle}</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}\n        >\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={onClose}\n          >\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={adding}\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {submitButtonTitle}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function NoTableData({ dataPresent, title }) {\n  if (dataPresent) return null;\n  return (\n    <Typography\n      variant=\"h6\"\n      sx={{\n        textAlign: \"center\",\n        margin: \"5px\",\n        padding: \"5px\",\n      }}\n    >\n      {title.charAt(0).toUpperCase() + title.slice(1)} not found!\n    </Typography>\n  );\n}\n","/** @format */\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport NoTableData from \"./NoTableData\";\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\nimport { PuffLoader } from \"react-spinners\";\nimport image from \"../../assets/images/deleteicon.png\";\nimport { Download } from \"@mui/icons-material\";\nimport CheckPermission from \"../Authentication/CheckPermission\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 380,\n  bgcolor: \"background.paper\",\n  borderRadius: \"10px\",\n\n  boxShadow: 24,\n  p: 2,\n};\n\nconst CustomSwitch = styled(Switch)(({}) => ({\n  \"& .MuiSwitch-switchBase.Mui-checked\": {\n    color: \"green\",\n  },\n  \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\n    backgroundColor: \"green\",\n  },\n  \"& .MuiSwitch-switchBase\": {\n    color: \"red\",\n  },\n  \"& .MuiSwitch-switchBase + .MuiSwitch-track\": {\n    backgroundColor: \"red\",\n  },\n}));\n\nconst getDataValue = (data, k) => {\n  if (typeof data[k.key] === \"boolean\") {\n    return data[k.key] === true ? \"Yes\" : \"No\";\n  }\n  if (k.path) {\n    if (Object.keys(data[k.path] || {}).length > 0) {\n      return data[k.path][k.key] || \"NA\";\n    }\n  }\n\n  if (k.isDate) {\n    return data[k.key] ? new Date(data[k.key]).toDateString() : \"NA\";\n  } else if (k.key === \"feedback\") {\n    return data[k.key] ? `${data[k.key].substring(0, 50)}...` : \"NA\";\n  } else {\n    return data[k.key];\n  }\n};\n\nexport default function CustomTable({\n  bodyData = [],\n  bodyDataModal = \"\",\n  tableKeys = [],\n  actions = [\"edit\", \"delete\", \"view\", \"card\", \"switch\"],\n  onEditClick = () => {},\n  onDeleteClick = () => {},\n  onViewClick = () => {},\n  onCardClick = () => {},\n  onNavigateFeeMap = () => {},\n  onToggleSwitch = () => {},\n  toggleStatus = false,\n  isDataReady = true,\n  module = \"\",\n  CustomAction = () => {},\n  onUpdate = () => {},\n  onDownloadClick = () => {},\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const handleDeleteClick = (data) => {\n    setSelectedItem(data);\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    onDeleteClick(selectedItem._id);\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const getTooltipTitle = (data) => {\n    return data[toggleStatus] === true ? \"Active\" : \"Inactive\";\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              {tableKeys.map((r, i) => (\n                <TableCell\n                  sx={{ fontWeight: \"bold\" }}\n                  key={i + r.name}\n                  align=\"center\">\n                  {r.name}\n                </TableCell>\n              ))}\n              {actions.length ? (\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Action\n                </TableCell>\n              ) : null}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bodyData.length && isDataReady\n              ? bodyData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((data, index) => (\n                    <TableRow key={data._id || index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n                      {tableKeys.map((k, i) =>\n                        k.type === \"image\" ? (\n                          <TableCell key={i} align=\"center\">\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                              }}>\n                              <Avatar\n                                sx={{\n                                  alignSelf: \"center\",\n                                  objectFit: \"contain\",\n                                }}\n                                src={data[k.key]}\n                              />\n                            </Box>\n                          </TableCell>\n                        ) : (\n                          <TableCell key={i} align=\"center\">\n                            {getDataValue(data, k)}\n                          </TableCell>\n                        )\n                      )}\n                      {actions.length ? (\n                        <TableCell\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            columnGap: \"5px\",\n                          }}>\n                          {/* {actions.includes(\"edit\") && (\n                            <Tooltip title=\"Edit\">\n                              <IconButton onClick={() => onEditClick(data)}>\n                                <EditIcon color=\"primary\" fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                          )} */}\n                          <CheckPermission module={module} permission=\"update\">\n                            {actions.includes(\"edit\") && !data.checkOut && (\n                              <Tooltip title=\"Edit\">\n                                <IconButton onClick={() => onEditClick(data)}>\n                                  <EditIcon color=\"primary\" fontSize=\"small\" />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </CheckPermission>\n                          <CheckPermission module={module} permission=\"delete\">\n                            {actions.includes(\"delete\") && (\n                              <Tooltip title=\"Delete\">\n                                <IconButton\n                                  onClick={() => handleDeleteClick(data)}>\n                                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </CheckPermission>\n\n                          <CheckPermission module={module} permission=\"view\">\n                            {actions.includes(\"view\") && (\n                              <Tooltip title=\"View\">\n                                <IconButton onClick={() => onViewClick(data)}>\n                                  <RemoveRedEyeRoundedIcon\n                                    fontSize=\"small\"\n                                    color=\"primary\"\n                                  />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </CheckPermission>\n                          {actions.includes(\"card\") && (\n                            <Tooltip title=\"Unbundle\">\n                              <Button\n                                size=\"small\"\n                                variant=\"contained\"\n                                onClick={() => onCardClick(data)}>\n                                Card\n                              </Button>\n                            </Tooltip>\n                          )}\n                          <CheckPermission module={module} permission=\"update\">\n                            {actions.includes(\"switch\") && (\n                              <Tooltip title={getTooltipTitle(data)}>\n                                <IconButton\n                                  size=\"small\"\n                                  onClick={() => onToggleSwitch(data)}>\n                                  <CustomSwitch\n                                    size=\"small\"\n                                    checked={data[toggleStatus] === true}\n                                  />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </CheckPermission>\n                          {actions.includes(\"custom\") && (\n                            <CustomAction\n                              onEditClick={onEditClick}\n                              data={data}\n                              onUpdate={onUpdate}\n                              onNavigateFeeMap={onNavigateFeeMap}\n                            />\n                          )}\n                          <CheckPermission module={module} permission=\"view\">\n                            {actions.includes(\"download\") && (\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => onDownloadClick(data)}>\n                                <Download fontSize=\"small\" />\n                              </IconButton>\n                            )}\n                          </CheckPermission>\n                        </TableCell>\n                      ) : null}\n                    </TableRow>\n                  ))\n              : null}\n          </TableBody>\n        </Table>\n        {!isDataReady ? (\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingTop: \"20px\",\n            }}>\n            <PuffLoader size={30} color=\"dodgerblue\" />\n          </Box>\n        ) : null}\n        {isDataReady ? (\n          <NoTableData dataPresent={bodyData.length} title={bodyDataModal} />\n        ) : null}\n        <TablePagination\n          size=\"small\"\n          component=\"div\"\n          count={bodyData ? (bodyData.length ? bodyData.length : 0) : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start,\",\n          }}\n        />\n      </TableContainer>\n\n      {/* === Delete modal === */}\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Box sx={{ textAlign: \"center\", margin: \"10px auto\" }}>\n            <img src={image} width={50} height={50} />\n          </Box>\n\n          <Typography\n            textAlign=\"center\"\n            sx={{ fontSize: \"18px\", fontWeight: 700 }}>\n            Delete Confirmation\n          </Typography>\n          <Typography sx={{ mt: 2, textAlign: \"center\" }}>\n            Please note that deleting this item could lead to data\n            inconsistencies if there are other documents dependent on it. Are\n            you certain you wish to continue with the deletion?\n          </Typography>\n          <Box\n            my={3}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"15px\",\n            }}>\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"outlined\"\n              onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button\n              color=\"error\"\n              size=\"small\"\n              variant=\"contained\"\n              onClick={handleSubmit}>\n              Delete\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","/** @format */\n\nexport const academicYearTableKeys = [\n  {\n    name: \"Academic Year\",\n    key: \"academicYear\",\n  },\n\n  {\n    name: \"Active\t\",\n    key: \"active\",\n  },\n  {\n    name: \"Note\t\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\n\n// custom components\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicYearTableKeys } from \"../../data/tableKeys/academicYearData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\n\nimport SettingContext from \"../../context/SettingsContext\";\nimport { useContext } from \"react\";\n\nexport default function AcademicYear() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(\n        data.result.map((d) => ({ ...d, academicYear: `${d.from}-${d.to}` }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.academicYear.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.academicYear.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      from: dataToEdit?.from || \"\",\n      to: dataToEdit?.to || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  console.log(selectedSetting, \"0000000\");\n  // get data on page load\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleToggleActiveStatus = async (academicYear) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.academicYear.toggleActiveStatus + \"/\" + academicYear._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Academic Year\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        module=\"Academic Year\"\n        bodyDataModal=\"academic year\"\n        bodyData={data}\n        tableKeys={academicYearTableKeys}\n        onEditClick={handleEditClick}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleActiveStatus}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        module=\"Academic Year\"\n        title=\"Add Academic Year\"\n        onAddClick={AddDepartmentHandel}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit academicYear ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Academic Year\"\n        onClose={handleClose}\n        submitButtonTitle=\"Submit\"\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"from\"\n              label=\"From Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"to\"\n              label=\"To Year\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const designationTableKeys = [\n  {\n    name: \"Designation\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { designationTableKeys } from \"../../data/tableKeys/designation\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\n\nexport default function ManageDesignation() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDesigationHandel = () => {\n    setOpen(true);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.designation.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.designation.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.designation.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Designation\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Designation\"\n        tableKeys={designationTableKeys}\n        bodyDataModal=\"designation\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Add form fab button =======*/}\n      <AddForm\n        module=\"Designation\"\n        title=\"Add Desigation\"\n        onAddClick={AddDesigationHandel}\n      />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Desigation\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Desigation\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const departmentTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Note\",\n    key: \"note\",\n  },\n];\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { departmentTableKeys } from \"../../data/tableKeys/departmentData\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nexport default function ManageDepartment() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setData(data.result);\n\n      // console.log(data.result, \"result\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.department.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.department.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name ? dataToEdit?.name : \"\",\n      orderSequence: dataToEdit?.orderSequence\n        ? dataToEdit?.orderSequence\n        : data.length + 1,\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.department.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Department\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Department\"\n        tableKeys={departmentTableKeys}\n        bodyDataModal=\"department\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        module=\"Department\"\n        title=\"Add Department\"\n        onAddClick={AddDepartmentHandel}\n      />\n      {/* ================================== */}\n\n      {/* ==== add department ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle=\"Add Department\"\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Department\"\n              required={true}\n            />\n          </Grid>\n          {/* {dataToEdit && ( */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              type=\"number\"\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          {/* )} */}\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={entryFormik}\n              name=\"note\"\n              label=\"Drop a note\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n      {/* =========================== */}\n    </>\n  );\n}\n","import { Box, Paper, Tab, Tabs } from \"@mui/material\";\nimport React from \"react\";\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function TabList({\n  labels = [],\n  onChange = () => {},\n  value = 0,\n}) {\n  return (\n    <Box\n      component={Paper}\n      sx={{\n        marginBottom: \"10px\",\n      }}\n    >\n      <Tabs\n        value={value}\n        onChange={onChange}\n        aria-label=\"basic tabs example\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        allowScrollButtonsMobile\n      >\n        {labels.map((l, index) => {\n          return (\n            <Tab\n              sx={{ fontWeight: \"bold\", fontSize: \"12px\" }}\n              key={l}\n              label={l}\n              {...a11yProps(index)}\n            />\n          );\n        })}\n      </Tabs>\n    </Box>\n  );\n}\n","import { Box } from \"@mui/material\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","export const overviewTableKeys = [\n  {\n    name: \"Department\",\n    key: \"name\",\n  },\n  {\n    name: \"Male\",\n    key: \"male\",\n  },\n  {\n    name: \"Female\",\n    key: \"female\",\n  },\n  {\n    name: \"Total\",\n    key: \"total\",\n  },\n];\n","export const employeeTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","export const inactiveTableKeys = [\n  {\n    name: \"Employee Id\",\n    key: \"empId\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    path: \"basicInfo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Department\",\n    key: \"name\",\n    path: \"department\",\n  },\n  {\n    name: \"Designation\",\n    key: \"name\",\n    path: \"designation\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { overviewTableKeys } from \"../../data/tableKeys/overviewData\";\nimport { employeeTableKeys } from \"../../data/tableKeys/employeeData\";\nimport { inactiveTableKeys } from \"../../data/tableKeys/inactiveEmployee\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, del, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add, Delete, Edit, ListAlt, Print, Search } from \"@mui/icons-material\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nexport default function Employee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [value, setSelectValue] = useState(0);\n  const [activeData, setActiveData] = useState([]);\n  const [InactiveData, setInactiveData] = useState([]);\n  const [overviewData, setOverviewData] = useState([]);\n  const [allEmployee, setAllEmployee] = useState([]);\n  const [searchFilter, setSearchFilter] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const AddEmployeeHandle = (e) => {\n    navigate(\"/sch/human-resource/add-employee\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      // console.log(data.result, \"employyeee\");\n      setAllEmployee(data.result);\n\n      const activeData = data.result\n        .filter((item) => item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      const inactiveData = data.result\n        .filter((item) => !item.active)\n        .map((s) => ({\n          ...s,\n          department: s.academicInfo.department,\n          designation: s.basicInfo.designation,\n        }));\n\n      setActiveData(activeData);\n      setInactiveData(inactiveData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataDepartment = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const overviewData = data.result.map((department) => {\n        const maleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"male\" &&\n              emp.active === true &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const femaleCount =\n          allEmployee.filter(\n            (emp) =>\n              emp.basicInfo.gender === \"female\" &&\n              emp.active === true &&\n              emp.academicInfo.department._id === department._id\n          ).length || 0;\n        const totalCount = maleCount + femaleCount;\n        return {\n          ...department,\n          male: maleCount,\n          female: femaleCount,\n          total: totalCount,\n        };\n      });\n\n      setOverviewData(overviewData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDataDepartment();\n  }, [allEmployee, selectedSetting._id]);\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.employee.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handeleClickEdit = (data) => {\n    navigate(`/sch/human-resource/edit-employee/${data._id}`);\n  };\n\n  const handleSearch = (e) => {\n    const { value } = e.target;\n    setSearch(value.trim());\n    if (value.trim() !== \"\") {\n      activeData.length > 0 &&\n        setSearchFilter(\n          activeData.filter((ele) =>\n            ele.basicInfo.name\n              .toLowerCase()\n              .includes(value.toLowerCase().trim())\n          )\n        );\n    } else {\n      setSearchFilter([]);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Employee\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Overview\", \"Employee List\", \"Inactive Employee List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={\"\"}\n          module=\"Employee\"\n          tableKeys={overviewTableKeys}\n          bodyData={overviewData}\n          bodyDataModal=\"employee\"\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <CheckPermission module=\"Employee\" permission=\"view\">\n            {\" \"}\n            <Tooltip title=\"Print\">\n              <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n                <Print />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Excel Sheet Download\">\n              <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n                <ListAlt />\n              </IconButton>\n            </Tooltip>\n          </CheckPermission>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          module=\"Employee\"\n          tableKeys={employeeTableKeys}\n          bodyData={search ? searchFilter : activeData}\n          bodyDataModal=\"employee\"\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: 2,\n            margin: \"15px 0\",\n          }}>\n          <TextField\n            sx={{ ml: 1 }}\n            size=\"small\"\n            value={search}\n            onChange={handleSearch}\n            placeholder=\"Search here...\"\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" type=\"submit\">\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Tooltip title=\"Print\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <Print />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excel Sheet Download\">\n            <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\n              <ListAlt />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          module=\"Employee\"\n          tableKeys={inactiveTableKeys}\n          bodyDataModal=\"employee\"\n          bodyData={search ? searchFilter : InactiveData}\n          onDeleteClick={handleDelete}\n          onEditClick={handeleClickEdit}\n        />\n      </TabPanel>\n\n      {/* == Fab button component =========== */}\n      <AddForm\n        module=\"Employee\"\n        title=\"Add Employee\"\n        onAddClick={AddEmployeeHandle}\n      />\n    </>\n  );\n}\n","export const offerLetterTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport dayjs from \"dayjs\";\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\n\nfunction FormDatePicker({\n  name,\n  label,\n  formik,\n  required,\n  openTo = \"day\",\n  views = [\"year\", \"month\", \"day\"],\n  inputFormat = \"DD/MM/YYYY\",\n  disabled = false,\n  disableFutureDates = false,\n}) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePicker\n        disableFuture={disableFutureDates}\n        sx={{\n          \"& .MuiInputBase-input\": {\n            height: \"8px\",\n          },\n          marginTop: \"16px\",\n          width: \"100%\",\n        }}\n        // disablePast={true}\n        required={required}\n        name={name}\n        variant=\"outlined\"\n        size=\"small\"\n        label={label}\n        disabled={disabled}\n        slotProps={{ textField: { InputLabelProps: { fontSize: \"90px\" } } }}\n        openTo={openTo}\n        closeOnSelect\n        views={views}\n        format={inputFormat}\n        value={dayjs(formik.values[name]) || null}\n        onChange={(value) => formik.setFieldValue(name, dayjs(value))}\n      />\n    </LocalizationProvider>\n  );\n}\n\nexport default FormDatePicker;\n","/** @format */\n\nimport React, { useRef } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport ReactToPrint from \"react-to-print\";\n\nexport default function LetterViewModal({\n  open,\n  content,\n  onClose,\n  onPrintClick,\n  title,\n}) {\n  const contentRef = useRef(null);\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}>\n      <DialogTitle\n        sx={{ m: 0, p: 2, fontWeight: 600 }}\n        id=\"customized-dialog-title\">\n        {title}\n      </DialogTitle>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: \"absolute\",\n          right: 8,\n          top: 8,\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent>\n        <Typography gutterBottom>\n          <div\n            class=\"printContainer\"\n            ref={contentRef}\n            dangerouslySetInnerHTML={{ __html: content }}></div>\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <ReactToPrint\n          trigger={() => (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{\n                background: \"#1b3779\",\n                \":hover\": { background: \"#1b3779\" },\n              }}\n              onClick={onPrintClick}\n              startIcon={<PrintIcon />}>\n              Print\n            </Button>\n          )}\n          content={() => contentRef.current}\n        />\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport { offerLetterTableKeys } from \"../../data/tableKeys/offerLetterData\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function OfferLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.offerLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.offerLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.offerLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      offerLetter:\n        dataToEdit?.offerLetter ||\n        ` <strong>Congratulations! You've Been Selected for the Role of [Job Title]</strong>\n          <p>[Company Name]</p>\n          <p>[Address eg. Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103]</p>\n          <p>[City, State, ZIP Code]</p>\n          <p>Date: [DD, MM, YY]</p>\n          <strong>Dear [Candidate's Full Name],</strong>\n          <p>We are thrilled to offer you the position of [Job Title] at [Company Name]. After careful consideration, we believe your skills, experience, and vision make you the perfect fit for our team.</p>\n          <strong>Position Details:</strong>\n            <p><strong>- Job Title:</strong> [Job Title]</p>\n            <p><strong>- Department:</strong> [Department]</p>\n            <p><strong>- Supervisor:</strong> [Supervisor/Manager Name]</p>\n            <p><strong>- Start Date:</strong> [Start Date]</p>\n            <p><strong>- Compensation:</strong> [Salary or Compensation Details]</p>\n        <strong>Work Hours:</strong>\n        <p>[Regular work hours, any flexible schedule options, etc.]</p>\n        <p>We believe that [Company Name] is a place where you can grow and thrive. Your role as [Job Title] will be pivotal in driving our company's success and we look forward to the innovative contributions you will bring to our team.</p>\n        <p>Please indicate your acceptance of this offer by signing and returning a copy of this letter by <strong>[Acceptance Deadline]</strong>. Should you have any questions or need further clarification, feel free to reach out to <strong>[HR Contact Name]</strong> at <strong>[HR Contact Email]</strong> or <strong>[HR Contact Phone Number]</strong>.</p>\n        <p>We eagerly await your positive response and look forward to welcoming you to the [Company Name] family.</p>\n        <p>Warm Regards,</p>\n        <p>[HR, Manager Name]</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p style=\"text-align:\"center;\">&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    // console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.offerLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.offerLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Offer Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\"Offer letter list\", \"Add offer letter\", \"Edit offer letter\"]\n            : [\"Offer letter list\", \"Add offer Letter\"]\n        }\n      />\n\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          module=\"Offer Letter\"\n          tableKeys={offerLetterTableKeys}\n          bodyDataModal=\"offer letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Offer Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                value={entryFormik.values.offerLetter}\n                required\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.offerLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"offerLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const relievingLetterDataTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { relievingLetterDataTableKeys } from \"../../data/tableKeys/relievingLetterData\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { Button, Grid } from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nexport default function RelievingLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n  const componentRef = useRef();\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.relievingLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.relievingLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.relievingLetter.create, payload);\n        getData();\n      }\n      resetForm();\n      setSelectValue(0);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      relievingLetter:\n        dataToEdit?.relievingLetter ||\n        `<strong>Relieving Letter</strong>\n        <p>[Company Name]</p>\n        <p>Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n        <p>Date: DD, MM, YY\t</p>\n        <p>Dear [Employee's Full Name],</p>\n        <p>We hereby acknowledge receipt of your resignation letter dated <strong>[Resignation Date]</strong>, in which you requested to be relieved from your position as <strong>[Employee's Designation]</strong> at <strong>[Company Name]</strong>. We are pleased to provide you with your relieving letter.</p>\n        <p>This is to inform you that you <strong>[Employee ID]</strong> will be relieved after careful consideration and necessary formalities.</p>\n        <p>You have successfully completed your tenure at <strong>[Company Name]</strong> as <strong>[Job Title]</strong> from <strong>[Joining Date]</strong> to <strong>[Last Working Date]</strong>. We appreciate your dedicated service and commitment during your time with us.</p>\n        <p>Sincerely,</p>\n        <p>HR, Manager</p>\n        <p>[Contact Information]</p>\n        <br/>\n        <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n      `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.relievingLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.relievingLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Relieving letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Relieving letter list\",\n                \"Add relieving letter\",\n                \"Edit relieving letter\",\n              ]\n            : [\"Relieving letter list\", \"Add relieving letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          module=\"Relieving Letter\"\n          tableKeys={relievingLetterDataTableKeys}\n          bodyDataModal=\"relieving letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n        <LetterViewModal\n          title={\"Relieving  Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              gap={1}\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.relievingLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"relievingLetter\", value)\n                }\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                loading={loading}\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","export const experienceTableKeys = [\n  {\n    name: \"Employee Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Joining Date\",\n    key: \"joiningDate\",\n    isDate: true,\n  },\n  {\n    name: \"Created At\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { experienceTableKeys } from \"../../data/tableKeys/experienceLetterData\";\nimport { Button, Grid } from \"@mui/material\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useReactToPrint } from \"react-to-print\";\nimport LetterViewModal from \"../../forms/LetterViewModal\";\n\nexport default function ExperienceLetter() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const componentRef = useRef();\n  const [modalData, setModalData] = useState({\n    open: false,\n    containt: \"\",\n  });\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.experienceLetter.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const data = await put(\n          PRIVATE_URLS.experienceLetter.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const data = await post(PRIVATE_URLS.experienceLetter.create, payload);\n        getData();\n      }\n\n      setSelectValue(0);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      joiningDate: dataToEdit?.joiningDate\n        ? dayjs(dataToEdit?.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      experienceLetter:\n        dataToEdit?.experienceLetter ||\n        ` <strong>Experience Letter</strong>\n          <p>Webpruce Company</p>\n          <p>Date: 12, January 2024</p>\n          <p>Place: Excellent English Medium Primary & High School Ittangihal road, Vijaypur, Karnataka 586103</p>\n          <p>To Whom It May Concern,</p>\n          <p>This is to certify that <strong>[Employee's Full Name]</strong> was employed with us as a <strong>[Job Title]</strong> in the <strong>[Department]</strong> department from <strong>[Start Date]</strong> to <strong>[End Date]</strong>.</p>\n          <p>During their tenure with us, [Employee's Full Name] was responsible for:</p>\n          <p>- Key Responsibility 1</p>\n          <p>- Key Responsibility 2</p>\n          <p>We found [Employee's Full Name] to be a dedicated and reliable employee who consistently showed a high level of professionalism. They are leaving us due to [reason for leaving, if appropriate], and we wish them all the best in their future endeavors.</p>\n          <p>We highly recommend [Employee's Full Name] for any future employment opportunities and are confident that they will be an asset to any organization they join.</p>\n          <p>If you require any further information, please do not hesitate to contact us.</p>\n          <p>Warm Regards,</p>\n          <p><strong>[Your Name]</strong></p>\n          <p><strong>[Your Job Title]</strong></p>\n          <p><strong>[Contact Information]</strong></p>\n          <br/>\n          <p>&copy; [Year] [Company Name]. All rights reserved.</p>\n        `,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (value === 1) {\n      entryFormik.resetForm();\n      setDataToEdit(null);\n    }\n  }, [value]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleEditClick = (data) => {\n    console.log(data);\n    setDataToEdit(data);\n    setSelectValue(2);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.experienceLetter.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      containt: data.experienceLetter,\n    });\n  };\n\n  const handleClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Experience Letter\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={\n          dataToEdit && value === 2\n            ? [\n                \"Experience letter list\",\n                \"Add experience letter\",\n                \"Edit experience letter\",\n              ]\n            : [\"Experience letter list\", \"Add experience Letter\"]\n        }\n      />\n      <TabPanel index={0} value={value}>\n        <CustomTable\n          actions={[\"view\", \"edit\", \"delete\"]}\n          module=\"Experience Letter\"\n          tableKeys={experienceTableKeys}\n          bodyDataModal=\"experience  letter\"\n          bodyData={data}\n          onEditClick={handleEditClick}\n          onDeleteClick={handleDelete}\n          onViewClick={handleClickOpenView}\n        />\n\n        <LetterViewModal\n          title={\"Experience Letter\"}\n          open={modalData.open}\n          content={modalData.containt}\n          onClose={handleClose}\n          onPrintClick={handlePrint}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              item\n              mt={6}\n              gap={1}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n\n      <TabPanel index={2} value={value}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          {\" \"}\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                type=\"text\"\n                name=\"name\"\n                formik={entryFormik}\n                label=\"Employee Name\"\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormDatePicker\n                formik={entryFormik}\n                label=\"Joining Date\"\n                name=\"joiningDate\"\n                required={true}\n              />\n            </Grid>\n            <Grid xs={12} md={12} lg={12} item>\n              <ReactQuill\n                theme=\"snow\"\n                required\n                value={entryFormik.values.experienceLetter}\n                onChange={(value) =>\n                  entryFormik.setFieldValue(\"experienceLetter\", value)\n                }\n                onBlur={entryFormik.handleBlur(\"experienceLetter\")}\n                style={{\n                  height: \"220px\",\n                }}\n              />\n            </Grid>\n            <Grid\n              xs={12}\n              md={12}\n              lg={12}\n              gap={1}\n              item\n              mt={6}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                onClick={() => setSelectValue(0)}\n                color=\"error\"\n                variant=\"contained\">\n                Cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nexport const teacherActivityTableKeys = [\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n  {\n    name: \"Topic\",\n    key: \"topic\",\n  },\n];\n","/** @format */\n\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { teacherActivityTableKeys } from \"../../data/tableKeys/teacherActivityData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nexport default function TeacherActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingFind, setLoadingFind] = useState(false);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  let currentUserStringified = window.localStorage.getItem(\n    process.env.REACT_APP_CURRENT_USER\n  );\n\n  let currentUser = JSON.parse(currentUserStringified);\n\n  const getData = async (values) => {\n    try {\n      setLoadingFind(true);\n      const { data } = await get(PRIVATE_URLS.teacherActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            teacher: values.teacher,\n            class: values.class,\n            section: values.section,\n            subject: values.subject,\n            fromDate: dayjs(values.fromDate).format(\"YYYY/MM/DD\"),\n            toDate: dayjs(values.toDate).format(\"YYYY/MM/DD\"),\n          },\n        },\n      });\n      setData(data.result);\n      setLoadingFind(false);\n    } catch (error) {\n      console.log(error);\n      setLoadingFind(false);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      const emp = data.result\n        ?.filter((e) =>\n          e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n        )\n        .map((d) => ({ label: d.basicInfo.name, value: d._id }));\n\n      const empOption = [{ label: \"Me\", value: currentUser._id }, ...emp];\n      setEmployees(empOption);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTabChange = (e, newValue) => {\n    if (newValue !== 1) {\n      setDataToEdit(null);\n    }\n    setSelectValue(newValue);\n  };\n\n  const handleClose = () => {\n    setSelectValue(0);\n    setDataToEdit(null);\n    getData();\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      // formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSections = async (classId) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: classId,\n          },\n        },\n      });\n      setSections(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      // formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class || formik.values.class,\n          },\n        },\n      });\n\n      setSubjects(data.result.map((d) => ({ label: d.name, value: d._id })));\n      // entryFormik.setFieldValue(\"subject\", data.result[0]._id);\n      // formik.setFieldValue(\"subject\", data.result[0]._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.teacherActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.teacherActivity.create,\n          payload\n        );\n      }\n      formik.handleSubmit();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      class: dataToEdit?.class._id || \"\",\n      section: dataToEdit?.section._id || \"\",\n      subject: dataToEdit?.subject._id || \"\",\n      topic: dataToEdit?.topic || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      teacher: \"\",\n      class: \"\",\n      section: \"\",\n      subject: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getData,\n  });\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections(entryFormik.values.class);\n      getSubject();\n      formik.resetForm();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections(formik.values.class);\n      getSubject();\n      entryFormik.resetForm();\n    }\n  }, [formik.values.class]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.teacherActivity.delete + \"/\" + id);\n\n      getData();\n      formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setSelectValue(1);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Teacher Activity\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"All Activity\", dataToEdit ? \"Edit Activity\" : \"Add Activity\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"teacher\"\n                  formik={formik}\n                  label=\"Select Teacher\"\n                  options={employees}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={4} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={formik}\n                  label=\"Subject\"\n                  options={subjects}\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker\n                  formik={formik}\n                  label=\"From Date\"\n                  name=\"fromDate\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={6} lg={4} item>\n                <FormDatePicker formik={formik} label=\"To Date\" name=\"toDate\" />\n              </Grid>\n              <CheckPermission module=\"Teacher Activity\" permission=\"view\">\n                {\" \"}\n                <Grid\n                  xs={12}\n                  md={12}\n                  lg={12}\n                  item\n                  display={\"flex\"}\n                  justifyContent={\"flex-end\"}>\n                  <LoadingButton\n                    loading={loadingFind}\n                    size=\"small\"\n                    type=\"submit\"\n                    variant=\"contained\">\n                    Find\n                  </LoadingButton>\n                </Grid>\n              </CheckPermission>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          module=\"Teacher Activity\"\n          tableKeys={teacherActivityTableKeys}\n          bodyDataModal=\"teacher activity\"\n          bodyData={data}\n          onDeleteClick={handleDelete}\n          onEditClick={handleEditClick}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"subject\"\n                  formik={entryFormik}\n                  label=\"Select subject\"\n                  options={subjects}\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  required={true}\n                  name=\"topic\"\n                  formik={entryFormik}\n                  label=\"Topic covered\"\n                />\n              </Grid>\n\n              <Grid\n                xs={12}\n                md={12}\n                lg={12}\n                mt={1}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}\n                item>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleClose}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </TabPanel>\n    </>\n  );\n}\n","export const rolePermissionTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nexport const ROLE_PERMISSIONS = [\n  {\n    module: \"Institute Selector\",\n    subModule: [\n      {\n        module: \"Institute Selector\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Dashboard\",\n    subModule: [\n      {\n        module: \"Dashboard\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Institute\",\n    subModule: [\n      {\n        module: \"Institute\",\n        permissions: [],\n      },\n    ],\n  },\n  {\n    module: \"Administrator\",\n    subModule: [\n      {\n        module: \"Academic Year\",\n        permissions: [],\n      },\n      {\n        module: \"Roles and Permissions\",\n        permissions: [],\n      },\n      { module: \"User Password Reset\", permissions: [] },\n    ],\n  },\n  {\n    module: \"Human Resources\",\n    subModule: [\n      {\n        module: \"Designation\",\n        permissions: [],\n      },\n      {\n        module: \"Department\",\n        permissions: [],\n      },\n      {\n        module: \"Employee\",\n        permissions: [],\n      },\n      {\n        module: \"Offer Letter\",\n        permissions: [],\n      },\n      {\n        module: \"Relieving Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Off Boarding\",\n        permissions: [],\n      },\n\n      {\n        module: \"Experience-Letter\",\n        permissions: [],\n      },\n\n      {\n        module: \"Teacher Activity\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Academic\",\n    subModule: [\n      {\n        module: \"Class\",\n        permissions: [],\n      },\n      {\n        module: \"Section\",\n        permissions: [],\n      },\n      {\n        module: \"Subject\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Student\",\n    subModule: [\n      {\n        module: \"Overview\",\n        permissions: [],\n      },\n      {\n        module: \"Admit Student\",\n        permissions: [],\n      },\n\n      {\n        module: \"Resuffle\",\n        permissions: [],\n      },\n\n      {\n        module: \"Promotion\",\n        permissions: [],\n      },\n      {\n        module: \"Bulk Admission\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Communication\",\n    subModule: [\n      {\n        module: \"Compose\",\n        permissions: [],\n      },\n      {\n        module: \"Sms Report\",\n        permissions: [],\n      },\n      {\n        module: \"Sms Credentials\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Sms-Notifications\",\n    subModule: [\n      {\n        module: \"Sms-Notifications\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Fees\",\n    subModule: [\n      {\n        module: \"Receipt Book\",\n        permissions: [],\n      },\n      {\n        module: \"Fee Map Category\",\n        permissions: [],\n      },\n\n      {\n        module: \"Collect Fees\",\n        permissions: [],\n      },\n\n      {\n        module: \"Balance Fee\",\n        permissions: [],\n      },\n\n      {\n        module: \"Fee Overview\",\n        permissions: [],\n      },\n\n      {\n        module: \"Reconciliation\",\n        permissions: [],\n      },\n    ],\n  },\n\n  {\n    module: \"Hostel\",\n    subModule: [\n      {\n        module: \"Manage Hostel\",\n        permissions: [],\n      },\n      {\n        module: \"Manage Room Type\",\n        permissions: [],\n      },\n\n      {\n        module: \"Manage Room Bed\",\n        permissions: [],\n      },\n\n      {\n        module: \"Hostel Member\",\n        permissions: [],\n      },\n    ],\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { rolePermissionTableKeys } from \"../../data/tableKeys/rolePermissionData\";\nimport { ROLE_PERMISSIONS } from \"../../data/roleData\";\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport FormInput from \"../../forms/FormInput\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport FormModal from \"../../forms/FormModal\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nfunction toggleItemInArray(array, item) {\n  const index = array.indexOf(item);\n\n  if (index === -1) {\n    // Item not present, add it to the array\n    array.push(item);\n  } else {\n    // Item present, remove it from the array\n    array.splice(index, 1);\n  }\n\n  return array;\n}\n\nfunction addIfNotPresent(arr, str) {\n  if (!arr.includes(str)) {\n    arr.push(str);\n  }\n  return arr;\n}\n\nfunction removeFromArray(arr, str) {\n  const index = arr.indexOf(str);\n  if (index !== -1) {\n    arr.splice(index, 1);\n  }\n  return arr;\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst CRUD_OPERATIONS = [\"view\", \"add\", \"update\", \"delete\"];\n\nexport default function RolePermission() {\n  const [value, setValue] = React.useState(0);\n  const [roles, setRoles] = useState([]);\n  const [roleToEdit, setRoleToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [roleKeys, setRoleKeys] = useState([]);\n  const [allPermissionUpdate, setAllPermissionUpdate] = useState([\n    \"view\",\n    \"add\",\n    \"update\",\n    \"delete\",\n  ]);\n\n  const getRoleKeys = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.getRoleKeys);\n\n      if (roleToEdit) {\n        let allKeys = [...roleToEdit.permissions];\n        for (let key of data.result) {\n          if (!allKeys.find((k) => k.module == key.module)) {\n            allKeys.push(key);\n          }\n        }\n        setRoleKeys(allKeys);\n      } else {\n        setRoleKeys(data.result);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getRoleKeys();\n    if (value == 0) {\n      setRoleToEdit(null);\n    }\n  }, [value]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleRoleEditClick = (data) => {\n    setRoleToEdit(data);\n    setValue(1);\n  };\n  const handleCancelClick = () => {\n    setValue(0);\n  };\n  const openRoleAddUpdateModal = () => {\n    setValue(0);\n    setOpen(true);\n  };\n\n  const handleModalClose = () => setOpen(false);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRoles(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleAddOrUpdate = async (values) => {\n    let payload = {\n      ...values,\n      permissions: roleKeys,\n    };\n\n    if (!roleToEdit) {\n      payload[\"permissions\"] = roleKeys.map((r) => ({ ...r, permissions: [] }));\n    }\n\n    try {\n      if (roleToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.role.update + \"/\" + roleToEdit._id,\n          payload\n        );\n        setValue(0);\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.role.create, payload);\n        setValue(0);\n        getData();\n      }\n\n      formik.resetForm();\n      setOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const formikUpdate = useFormik({\n    initialValues: {\n      name: roleToEdit?.name || \"\",\n    },\n    onSubmit: handleAddOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePermission = (module, permission) => {\n    setRoleKeys(\n      roleKeys.map((k) =>\n        k.module === module\n          ? {\n              ...k,\n              permissions: toggleItemInArray(\n                k.permissions,\n                permission.toLowerCase()\n              ),\n            }\n          : k\n      )\n    );\n  };\n\n  const handleUpdateAll = (permission) => {\n    setRoleKeys(\n      roleKeys.map((r) => ({\n        ...r,\n        permissions: allPermissionUpdate.includes(permission)\n          ? removeFromArray(r.permissions, permission)\n          : addIfNotPresent(r.permissions, permission),\n      }))\n    );\n  };\n\n  useEffect(() => {\n    let allPermissions = [];\n\n    for (let co of CRUD_OPERATIONS) {\n      if (\n        roleKeys.every((module) =>\n          module.permissions.includes(co.toLowerCase())\n        )\n      ) {\n        allPermissions.push(co.toLowerCase());\n      } else {\n        allPermissions.filter((p) => p !== co);\n      }\n    }\n\n    setAllPermissionUpdate(allPermissions);\n  }, [roleKeys]);\n\n  const handleDeleteRole = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.role.delete + \"/\" + id);\n      setRoles(roles.filter((r) => r._id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Role Permission\" />\n\n      <TabList\n        onChange={handleChange}\n        value={value}\n        labels={roleToEdit && value === 1 ? [\"List\", \"Edit\"] : [\"List\"]}\n      />\n      <TabPanel value={value} index={0}>\n        <CustomTable\n          actions={[\"edit\", \"delete\"]}\n          module=\"Roles and Permissions\"\n          bodyDataModal=\"role permission\"\n          bodyData={roles}\n          onEditClick={handleRoleEditClick}\n          tableKeys={rolePermissionTableKeys}\n          onDeleteClick={handleDeleteRole}\n        />\n        <AddForm\n          module=\"Roles and Permissions\"\n          title=\"Add Role\"\n          onAddClick={openRoleAddUpdateModal}\n        />\n      </TabPanel>\n\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle=\"Create Role\"\n        onClose={handleModalClose}\n        submitButtonTitle=\"Create\">\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput\n              type=\"text\"\n              formik={formik}\n              name=\"name\"\n              label=\"Role Name\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {roleToEdit && value == 1 && (\n        <TabPanel value={value} index={1}>\n          <Grid container rowSpacing={1} columnSpacing={2}>\n            <Grid item xs={12} sm={12} md={12}>\n              <FormInput\n                required={true}\n                name=\"name\"\n                type=\"text\"\n                formik={formikUpdate}\n                label=\"Role Name\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <Typography\n                sx={{\n                  margin: \"10px 0px\",\n                  fontWeight: \"500\",\n                  fontSize: \"16px\",\n                  fontWeight: 700,\n                }}>\n                {\" \"}\n                Set permission for this role\n              </Typography>\n            </Grid>\n          </Grid>\n          <TableContainer\n            component={Paper}\n            sx={{ marginBottom: \"60px\", maxHeight: 650 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                      paddingLeft: \"15px\",\n                    }}>\n                    Module Name\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    View\n                    <Checkbox\n                      onChange={() => handleUpdateAll(\"view\")}\n                      name=\"view\"\n                      checked={allPermissionUpdate.includes(\"view\")}\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Add{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"add\")}\n                      onChange={() => handleUpdateAll(\"add\")}\n                      name=\"add\"\n                    />{\" \"}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Update{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"update\")}\n                      onChange={() => handleUpdateAll(\"update\")}\n                      name=\"update\"\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: (theme) =>\n                        theme.palette.mode === \"dark\" ? \"white\" : \"black\",\n                      fontWeight: 700,\n                    }}\n                    align=\"center\">\n                    Delete{\" \"}\n                    <Checkbox\n                      checked={allPermissionUpdate.includes(\"delete\")}\n                      onChange={() => handleUpdateAll(\"delete\")}\n                      name=\"delete\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ROLE_PERMISSIONS.map((roleModule, i) => {\n                  const { module, subModule } = roleModule;\n\n                  return (\n                    <>\n                      <TableRow key={i}>\n                        <TableCell\n                          colSpan={5}\n                          sx={{\n                            backgroundColor: (theme) =>\n                              theme.palette.mode === \"dark\"\n                                ? \"rgba(32,33,32,1)\"\n                                : theme.palette.grey[100],\n                          }}>\n                          <Typography fontWeight={\"bold\"} paddingLeft={\"10px\"}>\n                            {module}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                      {subModule.map((m, i) => (\n                        <TableRow k={m.module + i.toString()}>\n                          <TableCell align=\"center\">{m.module}</TableCell>\n\n                          {CRUD_OPERATIONS.map((o) => (\n                            <TableCell align=\"center\" key={o}>\n                              <Checkbox\n                                onChange={() =>\n                                  handleChangePermission(m.module, o)\n                                }\n                                checked={\n                                  roleKeys\n                                    .find((role) => role.module === m.module)\n                                    ?.permissions?.includes(o) || false\n                                }\n                              />\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      ))}\n                    </>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <StyledBox\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? \"rgba(32,33,32,1)\"\n                      : theme.palette.grey[100],\n                }}>\n                <Stack spacing={2} direction=\"row\">\n                  <Button\n                    onClick={handleCancelClick}\n                    variant=\"contained\"\n                    color=\"error\"\n                    size=\"small\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={formikUpdate.handleSubmit}\n                    variant=\"contained\"\n                    size=\"small\">\n                    Update\n                  </Button>\n                </Stack>\n              </StyledBox>\n            </Grid>\n          </Grid>\n        </TabPanel>\n      )}\n    </>\n  );\n}\n","export const userRoleTableKeys = [\n  {\n    name: \"Role Name\",\n    key: \"role\",\n  },\n];\n","import React, { useState } from \"react\";\n// custome components\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { userRoleTableKeys } from \"../../data/tableKeys/userRoleData\";\n\nexport default function UserRole() {\n  const [data, setData] = useState([]);\n\n  return (\n    <>\n      <PageHeader title=\"User Role\" />\n      <CustomTable\n        actions={[\"edit\"]}\n        bodyDataModal=\"user role\"\n        bodyData={data}\n        tableKeys={userRoleTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Paper, Grid, Button } from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport { useFormik } from \"formik\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst Type_Options = [\n  {\n    label: \"Student\",\n    value: \"student\",\n  },\n  {\n    label: \"Employee\",\n    value: \"employee\",\n  },\n];\n\nexport default function ResetPassword() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployee] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [students, setStudents] = useState([]);\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      const roles = data.result\n        .filter((r) => r.name?.toLowerCase() !== \"student\")\n        .map((r) => ({\n          label: r.name,\n          value: r._id,\n        }));\n      setRoles(roles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: entryFormik.values.role,\n          },\n        },\n      });\n\n      setEmployee(\n        data.result.map((emp) => ({\n          ...emp,\n          label: emp.basicInfo.name,\n          value: emp._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values, { resetForm }) => {\n    console.log(values.userType, \"kkkkk\");\n\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        userType: values.userType,\n        employeeId: values.employeeId,\n        studentId: values.student,\n        password: values.password,\n      };\n      setLoading(true);\n\n      const { data } = await post(\n        PRIVATE_URLS.account.changePasswordForUser,\n        payload\n      );\n      resetForm();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      userType: \"\",\n      employeeId: \"\",\n      password: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n      role: \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getRoles();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.role) {\n      getEmployees();\n    }\n  }, [entryFormik.values.role, selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.class &&\n      entryFormik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [entryFormik.values.class, entryFormik.values.section, selectedSetting]);\n\n  return (\n    <>\n      <PageHeader title=\"User Password Reset\" />\n      <Paper sx={{ padding: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"userType\"\n                formik={entryFormik}\n                label=\"User Type\"\n                options={Type_Options}\n              />\n            </Grid>\n\n            {entryFormik.values.userType === \"student\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"class\"\n                    formik={entryFormik}\n                    label=\"Select Class\"\n                    options={classes}\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"section\"\n                    formik={entryFormik}\n                    label=\"Select Section\"\n                    options={sections}\n                  />\n                </Grid>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"student\"\n                    formik={entryFormik}\n                    label=\"Select Student\"\n                    options={students}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {entryFormik.values.userType === \"employee\" && (\n              <>\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"role\"\n                    formik={entryFormik}\n                    label=\"Role\"\n                    options={roles}\n                  />\n                </Grid>\n\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormSelect\n                    required={true}\n                    name=\"employeeId\"\n                    formik={entryFormik}\n                    label=\"Employees\"\n                    options={employees}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid xs={12} sm={12} md={6} lg={3} item>\n              <FormInput\n                required={true}\n                formik={entryFormik}\n                label=\"Password\"\n                name=\"password\"\n              />\n            </Grid>\n            <CheckPermission module=\"User Password Reset\" permission=\"update\">\n              {\" \"}\n              <Grid xs={12} md={6} lg={3} style={{ alignSelf: \"center\" }} item>\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  Change Password\n                </LoadingButton>\n              </Grid>\n            </CheckPermission>\n          </Grid>\n        </form>\n      </Paper>\n    </>\n  );\n}\n","/** @format */\n\nexport const academicClassTableKeys = [\n  {\n    name: \"Class\",\n    key: \"name\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport { academicClassTableKeys } from \"../../data/tableKeys/academicClassData\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Class() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employees, setEmployees] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getEmployees();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.class.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.class.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      classTeachers: dataToEdit?.classTeachers?.map((c) => c._id) || [],\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      orderSequence: dataToEdit?.orderSequence || data.length + 1,\n      numericName: dataToEdit?.numericName || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.class.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Classes\" />\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Class\"\n        tableKeys={academicClassTableKeys}\n        bodyDataModal=\"class\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        module=\"Class\"\n        title=\"Add Class\"\n        onAddClick={AddDepartmentHandel}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Class\" : \"Add Class\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Class Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"classTeachers\"\n              label={`Class Teachers - (${entryFormik.values.classTeachers.length})`}\n              required={false}\n              showSearch={true}\n              multiple={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"View On Web\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              disabled={dataToEdit ? false : true}\n              formik={entryFormik}\n              name=\"orderSequence\"\n              label=\"Order Sequence\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"numericName\"\n              label=\"Numeric Name\"\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const academicSectionTableKeys = [\n  { name: \"Section Name\", key: \"name\" },\n  // {\n  //   name: \"Class\",\n  //   path: \"class\",\n  //   key: \"name\",\n  // },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"View On Web\",\n    key: \"isPublic\",\n  },\n];\n","/** @format */\n\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  ListSubheader,\n  TextField,\n  InputAdornment,\n} from \"@mui/material\";\nimport React, {\n  memo,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ThemeModeContext from \"../context/ThemeModeContext\";\n\nconst containsText = (text, searchText) =>\n  text?.toLowerCase().indexOf(searchText?.toLowerCase()) > -1;\n\nfunction CustomSelect({\n  value,\n  name = \"\",\n  label = \"\",\n  options = [],\n  onChange = () => {},\n  disabled = false,\n  required = false,\n  multiple = false,\n  isSearch = true,\n}) {\n  const [blurred, setBlurred] = useState(false);\n\n  var inputRef = useRef(undefined);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const displayedOptions = useMemo(\n    () => options.filter((option) => containsText(option.label, searchText)),\n    [searchText, options, blurred]\n  );\n\n  useEffect(() => {\n    setSearchText(\"\");\n  }, [blurred]);\n\n  const labelColor =\n    disabled && !isDarkMode\n      ? \"gray\"\n      : !disabled && isDarkMode\n      ? \"white\"\n      : !disabled && !isDarkMode\n      ? \"black\"\n      : disabled && isDarkMode\n      ? \"gray\"\n      : \"inherit\";\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n      sx={{ top: \"4px\" }}>\n      <InputLabel sx={{ color: labelColor }} shrink={true} id={label}>\n        {label}\n      </InputLabel>\n      <Select\n        disabled={disabled}\n        notched\n        name={name}\n        multiple={multiple}\n        labelId={label}\n        value={value || \"\"}\n        label={label}\n        onChange={onChange}\n        onAnimationEnd={() => inputRef?.current?.focus()}\n        MenuProps={{ autoFocus: false }}\n        onBlur={() => setBlurred(!blurred)}>\n        {isSearch && (\n          <ListSubheader>\n            <TextField\n              onBlur={() => setBlurred(!blurred)}\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={(e) => setSearchText(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n\n        {displayedOptions.map((s, i) => (\n          <MenuItem key={i} value={s.value}>\n            {s.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default memo(CustomSelect);\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Grid, Paper, Typography } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSectionTableKeys } from \"../../data/tableKeys/academicSectionData\";\nimport FormInput from \"../../forms/FormInput\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport FormSelect from \"../../forms/FormSelect\";\n\nconst Active = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst IS_PUBLIC = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nexport default function Section() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [subject, setSubject] = useState([]);\n  const [subjectTeachers, setSubjectTeachers] = useState([]);\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubject = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      setSubject(data.result);\n      const previousSubjectTeachers = dataToEdit?.subjectTeachers || [];\n\n      const subjectsAndTheirTeachers = data?.result?.map((s) => ({\n        subject: s._id,\n        teacher:\n          previousSubjectTeachers?.find((t) => t.subject === s._id)?.teacher ||\n          \"\",\n      }));\n\n      setSubjectTeachers(subjectsAndTheirTeachers);\n      entryFormik.setFieldValue(\"subjectTeachers\", subjectsAndTheirTeachers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n    setDataToEdit(null);\n    clearFormValues();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n\n    entryFormik.resetForm();\n    setSubjectTeachers([]);\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n      if (!payload.sectionTeacher) {\n        delete payload.sectionTeacher;\n      }\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.section.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.section.create, payload);\n      }\n      getData();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      sectionTeacher: dataToEdit?.sectionTeacher?._id || \"\",\n      active: dataToEdit?.active || false,\n      isPublic: dataToEdit?.isPublic || false,\n      note: dataToEdit?.note || \"\",\n      subjectTeachers: dataToEdit?.subjectTeachers || [],\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n  const clearFormValues = () => {\n    entryFormik.setValues({\n      name: \"\",\n      class: selectedClass || \"\",\n      sectionTeacher: \"\",\n      active: false,\n      isPublic: false,\n      note: \"\",\n      subjectTeachers: [],\n    });\n  };\n\n  useEffect(() => {\n    if (selectedClass) {\n      getData();\n    }\n  }, [selectedClass, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSubject();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  useEffect(() => {\n    if (dataToEdit) {\n      setSubjectTeachers(dataToEdit?.subjectTeachers || []);\n      entryFormik.setFieldValue(\n        \"subjectTeachers\",\n        dataToEdit.subjectTeachers || []\n      );\n    }\n  }, [dataToEdit]);\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.section.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  const handleSelectSubjectTeacher = (index, value) => {\n    const updatedSubjectTeachers = subjectTeachers.map((t, idx) =>\n      idx === index ? { ...t, teacher: value } : t\n    );\n    setSubjectTeachers(updatedSubjectTeachers);\n    entryFormik.setFieldValue(\"subjectTeachers\", updatedSubjectTeachers);\n  };\n\n  console.log(dataToEdit, \"ooo\");\n  return (\n    <>\n      <PageHeader title=\"Section\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Section\"\n        tableKeys={academicSectionTableKeys}\n        bodyDataModal=\"section\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      <AddForm\n        module=\"Section\"\n        title=\"Add Section\"\n        onAddClick={AddDepartmentHandel}\n      />\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Section\" : \"Add Section\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={1} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Section Name\"\n              required\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"class\"\n              label=\"Select Class\"\n              required\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"sectionTeacher\"\n              label=\"Section Teacher\"\n              options={employees}\n              showSearch={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"active\"\n              label=\"Active\"\n              options={Active}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"isPublic\"\n              label=\"View On Web\"\n              options={IS_PUBLIC}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n          <Grid xs={12} item>\n            <Box\n              sx={{\n                padding: \"10px\",\n                border: \"1px solid lightgray\",\n                borderRadius: \"5px\",\n              }}>\n              <Typography>Select subject teachers</Typography>\n              {subjectTeachers.map((s, index) => (\n                <Grid\n                  container\n                  spacing={2}\n                  key={index}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}>\n                  <Grid item xs={12} md={3}>\n                    <Typography sx={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\n                      {subject.find((sub) => sub._id === s.subject)?.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} md={8}>\n                    <CustomSelect\n                      value={s.teacher}\n                      label=\"Select Teacher\"\n                      onChange={(e) =>\n                        handleSelectSubjectTeacher(index, e.target.value)\n                      }\n                      options={employees}\n                      showSearch={false}\n                    />\n                  </Grid>\n                </Grid>\n              ))}\n            </Box>\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","export const academicSubjectTableKeys = [\n  { name: \"Subject Name\", key: \"name\" },\n  {\n    name: \"Subject Code\",\n    key: \"code\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { academicSubjectTableKeys } from \"../../data/tableKeys/academicSubjectData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CustomSelect from \"../../forms/CustomSelect\";\n\nconst Subject_Type = [\n  { label: \"Mandatory\", value: \"mandatory\" },\n  { label: \"Optional\", value: \"optional\" },\n];\n\nconst Subject_Group = [\n  { label: \"Scholastic\", value: \"scholastic\" },\n  { label: \"Co-scholastic\", value: \"co-scholastic\" },\n];\n\nexport default function Subject() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const getEmployees = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setEmployees(\n        data.result\n          ?.filter((e) =>\n            e.role.name.toLowerCase().match(new RegExp(`Teacher`, \"i\"))\n          )\n          .map((d) => ({ label: d.basicInfo.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.subject.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: selectedClass },\n        },\n      });\n      setData(data.result);\n      console.log(data.result, \"rrrrrrrrr\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      if (data.result?.length) {\n        setSelectedClass(data.result[0]._id);\n        entryFormik.setFieldValue(\"class\", data.result[0]._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getClasses();\n  }, [selectedSetting, selectedSetting._id]);\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        class: selectedClass,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.subject.update + \"/\" + dataToEdit._id,\n          payload\n        );\n        getData();\n      } else {\n        const { data } = await post(PRIVATE_URLS.subject.create, payload);\n        getData();\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      code: dataToEdit?.code || \"\",\n      subjectType: dataToEdit?.subjectType || \"\",\n      subjectGroup: dataToEdit?.subjectGroup || \"\",\n      class: dataToEdit?.class?._id || \"\",\n      subjectTeachers: dataToEdit?.subjectTeachers?.map((t) => t._id) || [],\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    console.log(selectedClass, \"000000\");\n    if (selectedClass) {\n      setData([]);\n      getData();\n    } else {\n      setData([]);\n    }\n  }, [selectedClass, selectedSetting._id]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleChangeSelectedClass = (e) => {\n    setSelectedClass(e.target.value);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.subject.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    entryFormik.setFieldValue(\"class\", selectedClass);\n  }, [selectedClass]);\n\n  return (\n    <>\n      <PageHeader title=\"Subject\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <CustomSelect\n              required={true}\n              name=\"selectedClass\"\n              value={selectedClass}\n              onChange={handleChangeSelectedClass}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Subject\"\n        tableKeys={academicSubjectTableKeys}\n        bodyDataModal=\"subject\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        module=\"Subject\"\n        title=\"Add Subject\"\n        onAddClick={AddDepartmentHandel}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit Subjects ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update\" : \"Add Subject\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Add\"}\n        adding={loading}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Subject Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"code\"\n              label=\"Subject Code\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectType\"\n              label=\"Subject Type\"\n              options={Subject_Type}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              required={true}\n              formik={entryFormik}\n              name=\"subjectGroup\"\n              label=\"Group\"\n              options={Subject_Group}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              showSearch={true}\n              multiple={true}\n              formik={entryFormik}\n              name=\"subjectTeachers\"\n              label={`Subject Teachers-(${entryFormik.values.subjectTeachers.length})`}\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","import { Box, Stack, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst TitleContainer = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  borderRadius: \"5px\",\n  padding: \"2px 5px\",\n  width: \"60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nconst ValueContainer = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nexport default function StudentCount({\n  title = \"\",\n  count = 0,\n  showTitle = false,\n}) {\n  return (\n    <Stack direction=\"row\" columnGap={showTitle ? 1 : 0}>\n      {showTitle ? (\n        <TitleContainer>\n          <Typography\n            sx={{ fontSize: \"14px\", color: \"white\", fontWeight: \"bold\" }}\n          >\n            {title}\n          </Typography>\n        </TitleContainer>\n      ) : null}\n      <ValueContainer>\n        <Typography sx={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\n          {count}\n        </Typography>\n      </ValueContainer>\n    </Stack>\n  );\n}\n","/** @format */\n\nimport { toast } from \"react-toastify\";\nimport { saveAs } from \"file-saver\";\n\nexport function downloadFile(\n  contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  data,\n  filename,\n  open = true\n) {\n  // Convert the buffer data to a Blob\n  const blob = new Blob([data], {\n    type: contentType,\n  });\n\n  // Save the Blob as a file using FileSaver.js\n  saveAs(blob, filename);\n\n  if (open && contentType === \"application/pdf\") {\n    const blobUrl = URL.createObjectURL(blob);\n    window.open(blobUrl, \"_blank\");\n\n    // Revoke the URL after some time to free up memory\n    setTimeout(() => {\n      URL.revokeObjectURL(blobUrl);\n    }, 1000);\n  }\n}\n\nexport function hasAllValues(obj, exceptions = [], showToast = true) {\n  let allValuesPresent = true;\n  for (const key in obj) {\n    if (!exceptions.includes(key) && !obj[key]) {\n      allValuesPresent = false;\n      if (showToast) {\n        toast.error(`Value for \"${key}\" is missing!`);\n      }\n    }\n  }\n  return allValuesPresent;\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  styled,\n} from \"@mui/material\";\nimport StudentCount from \"../../components/Student/StudentCount\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst TableHeader = styled(TableCell)(({ theme }) => ({\n  borderRight: \"1px solid grey\",\n}));\nconst TableDivider = styled(Divider)(({ theme }) => ({\n  borderBottomColor: \"grey\",\n  width: \"100%\",\n}));\n\nconst DataContiner = styled(Box)(({ theme }) => ({\n  marginTop: \"52px\",\n  display: \"flex\",\n  rowGap: \"2px\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  paddingBottom: \"10px\",\n}));\n\nexport default function Overview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [selectAcademicYear, setSelectAcademicYear] = useState(\"\");\n  const [overviewDetails, setOverviewDetails] = useState([]);\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [totalMaleStudents, setTotalMaleStudents] = useState(0);\n  const [totalFemaleStudents, setTotalFemaleStudents] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setSelectAcademicYear(data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    const academicYearChanged = async () => {\n      try {\n        if (selectAcademicYear) {\n          const { data } = await get(PRIVATE_URLS.student.overView, {\n            params: {\n              schoolId: selectedSetting._id,\n              academicYear: selectAcademicYear,\n            },\n          });\n\n          setOverviewDetails(data?.result);\n\n          setTotalStudents(data.result.totalStudentsCount);\n          setTotalMaleStudents(data.result.totalMaleStudentsCount);\n          setTotalFemaleStudents(data.result.totalFemaleStudentsCount);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    academicYearChanged();\n  }, [selectAcademicYear, selectedSetting]);\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(\n        PRIVATE_URLS.student.downloadAllStudentsExcel,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: selectAcademicYear,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Overview\" />\n\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={3}>\n            <CustomSelect\n              required={true}\n              name=\"academicYear\"\n              value={selectAcademicYear}\n              onChange={(e) => setSelectAcademicYear(e.target.value)}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <CheckPermission module=\"Overview\" permission=\"view\">\n            <Grid\n              item\n              xs={12}\n              md={6}\n              lg={3}\n              sx={{ alignSelf: \"center\", mt: 2 }}>\n              <Tooltip title=\"Download\">\n                <LoadingButton\n                  loading={loading}\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleGetDownloadExcel}>\n                  Download Students\n                </LoadingButton>\n              </Tooltip>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n\n      <Box sx={{ fontSize: { md: \"15px\", sm: \"12px\" }, padding: \"1.2rem\" }}>\n        <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n          <Box>Total Students:{totalStudents}</Box>\n          <Box>Total Male Students:{totalMaleStudents}</Box>\n          <Box>Total Female Students:{totalFemaleStudents}</Box>\n        </Box>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableHeader align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Class\n              </TableHeader>\n\n              <TableHeader align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Students\n              </TableHeader>\n\n              <TableHeader align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Sections\n              </TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {overviewDetails?.data?.map((overview, i) => (\n              <TableRow key={overview.className}>\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\" }}\n                  align=\"center\">\n                  {overview.name}\n                </TableCell>\n\n                <TableCell\n                  sx={{ borderRight: \"1px solid grey\", padding: 0 }}\n                  align=\"center\">\n                  <DataContiner>\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Male\"\n                      count={overview.maleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Female\"\n                      count={overview.femaleStudents}\n                    />\n                    <TableDivider />\n                    <StudentCount\n                      showTitle={true}\n                      title=\"Total\"\n                      count={overview.totalStudents}\n                    />\n                  </DataContiner>\n                </TableCell>\n\n                <TableCell align=\"left\">\n                  <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                      <TableHead\n                        sx={{\n                          backgroundColor: (theme) =>\n                            theme.palette.mode === \"dark\"\n                              ? theme.palette.primary.dark\n                              : theme.palette.primary.light,\n                        }}>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\">\n                              {overview.section}\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow>\n                          {overview.sections.map((overview, index) => (\n                            <TableCell align=\"left\" key={index}>\n                              <Box\n                                sx={{\n                                  display: \"flex\",\n                                  rowGap: \"2px\",\n                                  flexDirection: \"column\",\n                                }}>\n                                <StudentCount\n                                  title=\"Male\"\n                                  count={overview.maleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Female\"\n                                  count={overview.femaleCount}\n                                />\n                                <Divider sx={{ background: \"grey\" }} />\n                                <StudentCount\n                                  title=\"Total\"\n                                  count={overview.count}\n                                />\n                              </Box>\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nexport const admitStudentTableKeys = [\n  {\n    name: \"Photo\",\n    key: \"photo\",\n    type: \"image\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"basicInfo\",\n  },\n  {\n    name: \"Active\",\n    key: \"active\",\n  },\n  {\n    name: \"Section\",\n    key: \"name\",\n    path: \"section\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Admission No\",\n    key: \"admissionNumber\",\n    path: \"academicInfo\",\n  },\n];\n","/** @format */\n\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport {\n  Box,\n  Divider,\n  IconButton,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\n\nexport default function FileListModal({\n  open = false,\n  onClose = () => {},\n  styles = {},\n  selectedFiles = [],\n  setSelectFiles = () => {},\n  customOnChage = false,\n  onRemove = () => {},\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleRemoveImage = (fileName) => {\n    setSelectFiles(selectedFiles.filter((f) => f.name !== fileName));\n  };\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: \"100%\",\n          maxWidth: 650,\n          ...styles,\n        },\n      }}>\n      <DialogTitle>\n        {selectedFiles.length > 1 ? \"Selected files\" : \"Selected file\"}\n      </DialogTitle>\n      <Divider />\n      <DialogContent\n        sx={{\n          padding: \"10px\",\n        }}>\n        {selectedFiles.map(\n          (f, i) => (\n            console.log(f.name, \"gg\"),\n            (\n              <Box\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}>\n                <Typography>{f.name}</Typography>\n                <IconButton\n                  size=\"small\"\n                  onClick={\n                    customOnChage\n                      ? () => onRemove(f.name)\n                      : () => handleRemoveImage(f.name)\n                  }>\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            )\n          )\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} size=\"small\" variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport styled from \"@emotion/styled\";\nimport FileListModal from \"./FileListModal\";\n// icons\nimport RemoveRedEyeRoundedIcon from \"@mui/icons-material/RemoveRedEyeRounded\";\nimport DownloadForOfflineIcon from \"@mui/icons-material/DownloadForOffline\";\n\nconst Wrapper = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  columnGap: \"5px\",\n}));\n\nexport default function FileSelect({\n  name,\n  multi = true,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  selectedFiles = [],\n  disabled = false,\n  setSelectedFiles = () => {},\n  customOnChange = false,\n  onRemove = () => {},\n  accept = \"\",\n  previousFile = \"\",\n  ...rest\n}) {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleModalClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper mt={1}>\n        <Box\n          component=\"div\"\n          onClick={() => setOpen(true)}\n          sx={{\n            borderRadius: \"5px\",\n            padding: \"8px\",\n            backgroundColor: \"white\",\n            border: \"1px solid lightgray\",\n            height: \"30px\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\",\n          }}>\n          <Typography\n            component=\"div\"\n            onClick={() => setOpen(true)}\n            sx={{\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n              backgroundColor: \"white\",\n              color: \"black\",\n              height: \"30px\",\n              width: \"30px\",\n              textAlign: \"center\",\n            }}>\n            {selectedFiles.length}\n          </Typography>\n\n          <RemoveRedEyeRoundedIcon fontSize=\"14px\" />\n        </Box>\n\n        <Button fullWidth component=\"label\" size=\"small\" variant=\"outlined\">\n          <input\n            type=\"file\"\n            multiple={multi}\n            accept={accept}\n            // style={{ visibility: \"hidden\" }}\n            hidden\n            onChange={\n              customOnChange\n                ? (e) => onChange(e)\n                : (e) => {\n                    const selectedFiles = e.target.files;\n\n                    if (selectedFiles.length > 0) {\n                      let fileList = [];\n                      for (let i = 0; i < selectedFiles.length; i++) {\n                        const file = selectedFiles[i];\n\n                        fileList.push(file);\n                      }\n                      setSelectedFiles([...fileList]);\n                    } else {\n                      console.log(\"No files selected\");\n                    }\n                  }\n            }\n          />\n          {label}\n        </Button>\n        {previousFile && (\n          <Tooltip title=\"Uploaded File Link\">\n            <IconButton\n              component=\"div\"\n              size=\"small\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => window.open(previousFile, \"_blank\")}>\n              <DownloadForOfflineIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Wrapper>\n      <FileListModal\n        open={open}\n        selectedFiles={selectedFiles}\n        setSelectFiles={setSelectedFiles}\n        onClose={handleModalClose}\n        customOnChage={customOnChange}\n        onRemove={onRemove}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { PrintSharp } from \"@mui/icons-material\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { admitStudentTableKeys } from \"../../data/tableKeys/admitStudentData\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AddForm from \"../../forms/AddForm\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst Status_Options = [\n  { label: \"Active\", value: true },\n  { label: \"In-Active\", value: false },\n];\n\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function AdmitStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigation = useNavigate();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [file, setFile] = useState([]);\n  const [fileAdmit, setFileAdmit] = useState([]);\n\n  const handleChangeFiles = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"admitFile\") {\n        setFileAdmit(fileList);\n      } else if (type === \"updateFile\") {\n        setFile(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleCloseUpdateModal = () => {\n    setOpenModal(false);\n    setFile([]);\n  };\n\n  const handleCloseAdmitModal = () => {\n    setOpenModalAdmit(false);\n    setFileAdmit([]);\n  };\n\n  const handelAddStudent = (e) => {\n    navigation(\"/sch/student/add-student\");\n  };\n\n  const handleEditClick = (data) => {\n    navigation(`/sch/student/edit-student/${data._id}`);\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              active: values.active,\n            },\n          },\n        });\n\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n              active: values.active,\n            },\n          },\n        });\n        setData(\n          data.result.map((s) => ({\n            ...s,\n            section: s.academicInfo.section,\n            rollNumber: s.academicInfo,\n          }))\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"all\",\n      active: true,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSectionData(sectionAllOption);\n      // entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      entryFormik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      entryFormik.values.academicYear &&\n      entryFormik.values.class &&\n      entryFormik.values.section\n    ) {\n      entryFormik.handleSubmit();\n    }\n  }, [entryFormik.values, selectedSetting._id]);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.delete + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetDownloadExcel = async () => {\n    try {\n      setLoading(true);\n      const getExcel = await get(PRIVATE_URLS.student.downloadStudentsExcel, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n          active: entryFormik.values.active,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"students.xlsx\"\n      );\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleGetDownloadPdf = async () => {\n    try {\n      setLoader(true);\n      const getStudentPdf = await get(\n        PRIVATE_URLS.student.downloadStudentsPdf,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n            academicYearId: entryFormik.values.academicYear,\n            classId: entryFormik.values.class,\n            active: entryFormik.values.active,\n          },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\"application/pdf\", getStudentPdf.data, \"student-list.pdf\");\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n    }\n  };\n\n  const handleSubmitBulkUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n\n      file.forEach((f) => formData.append(\"file\", f));\n      const { data } = await put(PRIVATE_URLS.student.bulkUpdate, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetUpdateSheet = async () => {\n    try {\n      const getExcel = await get(PRIVATE_URLS.student.bulkUpdateSheet, {\n        params: {\n          schoolId: selectedSetting._id,\n          academicYearId: entryFormik.values.academicYear,\n          classId: entryFormik.values.class,\n          sectionId: entryFormik.values.section,\n        },\n        responseType: \"blob\",\n      });\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"student_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGetAdmitSheet = async () => {\n    try {\n      const getExcel = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        {\n          params: { schoolId: selectedSetting._id },\n          responseType: \"blob\",\n        }\n      );\n\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        getExcel.data,\n        \"studentAdmit_list.xlsx\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleAdmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"schoolId\", selectedSetting._id);\n      fileAdmit.forEach((f) => formData.append(\"file\", f));\n\n      await post(PRIVATE_URLS.student.bulkStudentAdmit, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNavigate = () => {\n    navigation(\"/sch/student/bulk-photo\");\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Students\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Select Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"active\"\n                formik={entryFormik}\n                label=\"Select Status\"\n                options={Status_Options}\n              />\n            </Grid>\n            <CheckPermission module=\"Admit Student\" permission=\"view\">\n              <Grid\n                item\n                xs={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\">\n                <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                  Find\n                </Button>\n              </Grid>\n            </CheckPermission>\n          </Grid>\n        </form>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n            }}>\n            {entryFormik.values.academicYear &&\n              entryFormik.values.class &&\n              entryFormik.values.section !== \"all\" && (\n                <Stack\n                  gap={1}\n                  direction={{ xs: \"column\", sm: \"row\", md: \"row\" }}>\n                  <Tooltip title=\"Bulk Admit\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModalAdmit(true)}>\n                      BULK ADMIT\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Bulk Update\">\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={() => setOpenModal(true)}>\n                      BULK UPDATE\n                    </Button>\n                  </Tooltip>\n                </Stack>\n              )}\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              mt: 1,\n            }}>\n            <Stack direction=\"row\">\n              <CheckPermission module=\"Admit Student\" permission=\"view\">\n                <Tooltip title=\"Download\">\n                  <LoadingButton\n                    loading={loading}\n                    onClick={handleGetDownloadExcel}>\n                    <DownloadForOfflineSharpIcon color=\"primary\" />\n                  </LoadingButton>\n                </Tooltip>\n                <Tooltip title=\"Print\">\n                  <LoadingButton\n                    loading={loader}\n                    onClick={handleGetDownloadPdf}>\n                    <PrintSharp color=\"primary\" />\n                  </LoadingButton>\n                </Tooltip>\n\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleNavigate}>\n                  Bulk Photo\n                </Button>\n              </CheckPermission>\n            </Stack>\n          </Box>\n        </Box>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Admit Student\"\n        tableKeys={admitStudentTableKeys}\n        bodyDataModal=\"students\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n      {/* add student */}\n      <AddForm\n        module=\"Admit Student\"\n        title=\"Add Students\"\n        onAddClick={handelAddStudent}\n      />\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleAdmit}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Admit\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  endIcon={<DownloadIcon />}\n                  onClick={handleGetAdmitSheet}>\n                  Sample\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select  File\"\n                  onChange={(e) => handleChangeFiles(e, \"admitFile\")}\n                  customOnChange={true}\n                  selectedFiles={fileAdmit}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseAdmitModal}>\n                  Cancel\n                </Button>\n                <Button size=\"small\" variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 350, md: 350, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleSubmitBulkUpdate}>\n            {\" \"}\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Bulk Update\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={handleGetUpdateSheet}\n                  endIcon={<DownloadIcon />}>\n                  Download\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n                <FileSelect\n                  label=\"Select File\"\n                  onChange={(e) => handleChangeFiles(e, \"updateFile\")}\n                  customOnChange={true}\n                  selectedFiles={file}\n                  multi={false}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap={1}>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={handleCloseUpdateModal}>\n                  Cancel\n                </Button>\n                <Button variant=\"contained\" size=\"small\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nconst StickyBar = ({ children, content }) => {\n  const [isBottom, setIsBottom] = useState(true);\n\n  useEffect(() => {\n    // Remove the event listener since we want the bar to be fixed at the bottom\n    return () => {};\n  }, []);\n\n  return (\n    <>\n      {/* Additional items at the bottom */}\n      {isBottom && content && (\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n            right: 0,\n            width: \"100%\",\n            background: \"whitesmoke\",\n            padding: \"15px\",\n            zIndex: 1000,\n          }}\n        >\n          {content}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default StickyBar;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { Checkbox } from \"@mui/material\";\nimport { hasAllValues } from \"../../utils\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useTheme } from \"@emotion/react\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\nconst style = {\n  bgcolor: \"background.paper\",\n  height: \"auto\",\n  p: 2,\n};\n\nexport default function Reshuffle() {\n  const { selectedSetting } = useContext(SettingContext);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [openModalAdmit, setOpenModalAdmit] = useState(false);\n  const [file, setFile] = useState([]);\n  const [studentReshuffle, setStudentReshuffle] = useState([]);\n  const [checkBox, setCheckBox] = useState([]);\n  const [reshuffle, setReshuffle] = useState(false);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = studentReshuffle.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleReshffleCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudentReshuffle(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      newSection: \"\",\n    },\n    onSubmit: getList,\n  });\n\n  useEffect(() => {\n    setStudentReshuffle([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleReshuffle = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        sectionId: entryFormik.values.newSection,\n        classId: entryFormik.values.class,\n        currentSectionId: entryFormik.values.section,\n        studentIds: checkBox,\n      };\n\n      setReshuffle(true);\n\n      const { data } = await put(PRIVATE_URLS.student.resuffle, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setReshuffle(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Reshuffle\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={entryFormik.handleSubmit}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={entryFormik}\n                label=\"Select Class\"\n                options={classData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={entryFormik}\n                label=\"Current Section\"\n                options={sectionData}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"newSection\"\n                formik={entryFormik}\n                label=\"Change To\"\n                options={sectionData.filter(\n                  (section) => section.value !== entryFormik.values.section\n                )}\n              />\n            </Grid>\n            <CheckPermission module=\"Reshuffle\" permission=\"view\">\n              <Grid\n                item\n                xs={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"10px\">\n                <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                  Find\n                </Button>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={() => setOpenModalAdmit(true)}>\n                  Bulk Reshuffle\n                </Button>\n              </Grid>\n            </CheckPermission>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Roll No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Father Name\n              </TableCell>\n              <TableCell align=\"center\">\n                <Checkbox\n                  onChange={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentReshuffle\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.academicInfo.rollNumber}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox\n                      checked={checkBox.includes(row._id)}\n                      onChange={(e) => handleReshffleCheckBox(row._id, e)}\n                      {...label}\n                      sx={{\n                        color: \"#1b3779\",\n                        \"&.Mui-checked\": {\n                          color: \"#1b3779\",\n                        },\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!studentReshuffle.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={studentReshuffle.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start,\",\n          }}\n        />\n      </TableContainer>\n\n      {studentReshuffle.length > 0 && (\n        <StickyBar\n          content={\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={reshuffle}\n                varient=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handleReshuffle}\n                sx={{\n                  background: \"#1b3779\",\n                  \":hover\": { background: \"#1b3779\" },\n                  color: \"#fff\",\n                }}>\n                Reshuffle\n              </LoadingButton>\n            </div>\n          }\n        />\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n        open={openModalAdmit}\n        onClose={() => setOpenModalAdmit(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Bulk Admit\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <Button variant=\"contained\" endIcon={<DownloadIcon />}>\n                Get Sample\n              </Button>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={12} lg={12} textAlign={\"center\"}>\n              <FileSelect\n                label=\"Select File\"\n                onChange={(e) => handleChangeFiles(e)}\n                customOnChange={true}\n                selectedFiles={file}\n                multi={false}\n              />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button variant=\"contained\" type=\"submit\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { hasAllValues } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport StickyBar from \"../../components/StickyBar\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Promotion() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [activeAcademicYear, setActiveAcademicYear] = useState({});\n  const [checkBox, setCheckBox] = useState([]);\n  const [promoting, setPromoting] = useState(false);\n  const [gettingStudentsList, setGettingStudentsList] = useState(false);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      let allAcademicYears = data.result;\n      let activeAcademicYear = allAcademicYears.find((a) => a.active);\n\n      setAcademicYear(\n        allAcademicYears\n          .filter((a) => a._id !== activeAcademicYear?._id)\n          .map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n      setActiveAcademicYear(activeAcademicYear);\n      entryFormik.setFieldValue(\"promoteAcademicYearId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudentList = async (values) => {\n    try {\n      if (!hasAllValues(values, [])) {\n        return;\n      }\n      setGettingStudentsList(true);\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          search: {\n            academicYear: activeAcademicYear._id,\n            \"academicInfo.section\": values.currentSectionId,\n            \"academicInfo.class\": values.currentClassId,\n            active: true,\n          },\n        },\n      });\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setGettingStudentsList(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      promoteAcademicYearId: \"\",\n      currentClassId: \"\",\n      currentSectionId: \"\",\n      promoteClassId: \"\",\n      promoteSectionId: \"\",\n    },\n    onSubmit: getStudentList,\n  });\n\n  useEffect(() => {\n    setData([]);\n  }, [entryFormik.values]);\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setSectionData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentSectionId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"currentClassId\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n    getSection();\n  }, [selectedSetting._id]);\n\n  const handlePromotionCheckBox = (_id, e) => {\n    if (e.target.checked) {\n      setCheckBox((prev) => [...prev, _id]);\n    } else {\n      setCheckBox(checkBox.filter((item) => item !== _id));\n    }\n  };\n\n  const handleMultipleChecks = (e) => {\n    if (e.target.checked) {\n      const ids = data.map((item) => item._id);\n      setCheckBox([...ids]);\n    } else {\n      setCheckBox([]);\n    }\n  };\n\n  const handlePromotion = async () => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        ...entryFormik.values,\n        studentIds: checkBox,\n      };\n      setPromoting(true);\n      console.log(payload, \"payload\");\n      const { data } = await put(PRIVATE_URLS.student.promote, payload);\n      entryFormik.resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n    setPromoting(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Promotion\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Box sx={{ fontSize: 16, fontWeight: \"bold\" }}>\n          <Typography component=\"span\" color=\"forestgreen\" fontWeight=\"bold\">\n            Running Session:{\" \"}\n          </Typography>\n          <Typography component=\"span\" fontWeight=\"bold\">\n            {activeAcademicYear?.from}-{activeAcademicYear?.to}\n          </Typography>\n        </Box>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteAcademicYearId\"\n              formik={entryFormik}\n              label=\"Promote To Session\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentClassId\"\n              formik={entryFormik}\n              label=\"Current Class\"\n              options={classData}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"currentSectionId\"\n              formik={entryFormik}\n              label=\"Current Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.currentClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteClassId\"\n              formik={entryFormik}\n              label=\"Promote Class\"\n              options={classData\n                .filter((s) => s._id !== entryFormik.values.currentClassId)\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={4} item>\n            <FormSelect\n              required={true}\n              name=\"promoteSectionId\"\n              formik={entryFormik}\n              label=\"Promote Section\"\n              options={sectionData\n                .filter(\n                  (s) => s.class._id === entryFormik.values.promoteClassId\n                )\n                .map((s) => ({ label: s.name, value: s._id }))}\n            />\n          </Grid>\n          <CheckPermission module=\"Promotion\" permission=\"view\">\n            <Grid\n              item\n              xs={12}\n              md={6}\n              lg={2}\n              display=\"flex\"\n              alignItems=\"center\"\n              // justifyContent=\"flex-end\"\n            >\n              <LoadingButton\n                loading={gettingStudentsList}\n                disabled={!hasAllValues(entryFormik.values, [], false)}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Roll No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Father Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                <Checkbox\n                  onClick={handleMultipleChecks}\n                  {...label}\n                  sx={{\n                    padding: 0,\n                    color: \"#fff\",\n                    \"&.Mui-checked\": {\n                      color: \"#fff\",\n                    },\n                  }}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.basicInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.academicInfo.rollNumber}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.fatherInfo.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <Checkbox\n                      size=\"small\"\n                      checked={checkBox.includes(row._id)}\n                      onChange={(e) => handlePromotionCheckBox(row._id, e)}\n                      {...label}\n                      sx={{\n                        color: \"#1b3779\",\n                        \"&.Mui-checked\": {\n                          color: \"#1b3779\",\n                        },\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        {!data.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start,\",\n          }}\n        />\n      </TableContainer>\n\n      {data.length > 0 && (\n        <StickyBar\n          content={\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={promoting}\n                variant=\"contained\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={handlePromotion}>\n                Promote\n              </LoadingButton>\n            </Box>\n          }\n        />\n      )}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Box, Button, Grid, Paper, Typography, styled } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FormInput from \"../../forms/FormInput\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst MuiTypography = styled(Typography)(({ theme }) => ({\n  fontSize: \"16px\",\n}));\n\nexport default function BulkAdmission() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [file, setFile] = useState(null);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  const downloadBulkAdmissionSheet = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.student.getBulkStudentAdmitSheet,\n        { responseType: \"blob\", params: { schoolId: selectedSetting._id } }\n      );\n      downloadFile(\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        data,\n        \"Bulk Admission Sheet\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadSheet = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"classId\", entryFormik.values.class);\n      formData.append(\"sectionId\", entryFormik.values.section);\n      formData.append(\"academicYearId\", entryFormik.values.academicYear);\n      formData.append(\"schoolId\", selectedSetting._id);\n      formData.append(\"file\", file);\n\n      const { data } = await put(\n        PRIVATE_URLS.student.bulkStudentAdmit,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Admission\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n\n          <Grid\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            xs={12}\n            md={6}\n            lg={3}\n            item>\n            <Button size=\"large\" component=\"label\">\n              <input\n                visibility=\"hidden\"\n                type=\"file\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n              />\n            </Button>\n          </Grid>\n\n          <CheckPermission module=\"Bulk Admission\" permission=\"view\">\n            <Grid xs={12} md={12} lg={12} item>\n              <LoadingButton\n                onClick={downloadBulkAdmissionSheet}\n                endIcon={<DownloadIcon />}\n                size=\"small\"\n                variant=\"contained\">\n                Get Sample\n              </LoadingButton>\n            </Grid>\n          </CheckPermission>\n\n          <Grid xs={12} md={12} lg={12} item>\n            <MuiTypography component=\"ul\">\n              <MuiTypography component=\"li\">\n                School role type configured with\n                <span style={{ color: \"red\" }}> manual</span>, please mention\n                role number in column.\n              </MuiTypography>\n              <MuiTypography component=\"li\">\n                School admission_no configured with auto{\" \"}\n                <span style={{ color: \"red\" }}> auto _ascending_no, </span>\n                admission_no column will be ignored.\n              </MuiTypography>\n            </MuiTypography>\n          </Grid>\n          <CheckPermission module=\"Bulk Admission\" permission=\"add\">\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <LoadingButton\n                onClick={uploadSheet}\n                size=\"small\"\n                variant=\"contained\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n      <Box\n        sx={{\n          padding: \"20px\",\n          borderRadius: \"5px\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\" ? \"rgba(32,33,32,1)\" : \"#FFF9C4\",\n        }}>\n        <Typography sx={{ fontSize: \"22px\" }} fontWeight=\"bold\">\n          Instruction:\n        </Typography>\n        <MuiTypography component=\"ol\">\n          <MuiTypography component=\"li\">\n            At first select the (School), Class and Section\n          </MuiTypography>\n          <MuiTypography component=\"li\">Generate CSV file.</MuiTypography>\n          <MuiTypography component=\"li\">\n            Open the downloaded CSV file and enter student information with\n            unique username.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Save the edited CSV file.\n          </MuiTypography>\n          <MuiTypography component=\"li\">\n            Upload again CSV file you just edited and submit.\n          </MuiTypography>\n        </MuiTypography>\n      </Box>\n    </>\n  );\n}\n","/** @format */\n\nexport const studentCrendentialsTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"User Name\",\n    key: \"username\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNumber\",\n    path: \"rollNumber\",\n  },\n  {\n    name: \"Father Name\",\n    key: \"fatherName\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentCrendentialsTableKeys } from \"../../data/tableKeys/studentCredentials\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nexport default function Credential() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // search student\n  const handleStudentSearchSubmit = async (e) => {\n    setLoader(true);\n\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: entryFormik.values.academicYear,\n            \"academicInfo.class\": entryFormik.values.class,\n            \"academicInfo.section\": entryFormik.values.section,\n          },\n        },\n      });\n      setData(\n        data.result.map((student) => ({\n          username: student.username,\n          fatherName: student.fatherInfo.name,\n          name: student.basicInfo.name,\n          rollNumber: student.academicInfo,\n        }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n    setLoader(false);\n  };\n\n  // console.log(data, \"datata==========\");\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleStudentSearchSubmit,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"form\"\n          onSubmit={entryFormik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <CheckPermission\n            module=\"Credential\"\n            permission=\"view\"></CheckPermission>\n          <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n            <LoadingButton\n              loading={loader}\n              size=\"small\"\n              type=\"submit\"\n              variant=\"contained\">\n              Find\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        tableKeys={studentCrendentialsTableKeys}\n        bodyDataModal=\"credentials\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","export const studentActivityTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Date\",\n    key: \"createdAt\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { studentActivityTableKeys } from \"../../data/tableKeys/studentActivity\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nexport default function StudentActivity() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setDate] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [formData, setFormData] = useState({\n    class: \"\",\n    section: \"\",\n    academicYear: \"\",\n    student: \"\",\n  });\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n\n  //get activity list\n  const getData = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.studentActivity.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            student: values.student,\n            academicYear: values.academicYear,\n          },\n        },\n      });\n      setDate(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      Formik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      Formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: Formik.values.class,\n          },\n        },\n      });\n      Formik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get students\n  const getStudents = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: Formik.values.academicYear,\n            \"academicInfo.class\": Formik.values.class,\n            \"academicInfo.section\": Formik.values.section,\n          },\n        },\n      });\n      setStudents(\n        data.result.map((d) => ({\n          ...d,\n          label: d.basicInfo.name,\n          value: d._id,\n        }))\n      );\n      Formik.setFieldValue(\"student\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddDepartmentHandel = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    Formik.handleSubmit();\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        student: values.student,\n        description: values.description,\n        name: values.name,\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n      };\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.studentActivity.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(\n          PRIVATE_URLS.studentActivity.create,\n          payload\n        );\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: getData,\n    enableReinitialize: true,\n  });\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      description: dataToEdit?.description || \"\",\n      student: Formik.values.student || \"\",\n      academicYear: Formik.values.academicYear || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (\n      Formik.values.academicYear &&\n      Formik.values.class &&\n      Formik.values.section &&\n      selectedSetting\n    ) {\n      getStudents();\n    }\n  }, [\n    Formik.values.academicYear,\n    Formik.values.class,\n    Formik.values.section,\n    selectedSetting,\n  ]);\n\n  useEffect(() => {\n    if (Formik.values.class) {\n      getSections();\n    }\n  }, [Formik.values.class]);\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    if (Formik.values.academicYear) {\n      getData();\n    }\n  }, [Formik.values.academicYear]);\n\n  const handleDelete = async (id) => {\n    try {\n      const { data } = await del(\n        PRIVATE_URLS.studentActivity.delete + \"/\" + id\n      );\n      Formik.handleSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Student Activity\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          component=\"div\"\n          onSubmit={Formik.handleSubmit}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={Formik}\n              label=\"Select Academic Year\"\n              options={academicYearList}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={Formik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={Formik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={Formik}\n              label=\"Select Student\"\n              options={students}\n            />\n          </Grid>\n          <CheckPermission module=\"Student Activity\" permission=\"view\">\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\">\n              <Button\n                size=\"small\"\n                type=\"submit\"\n                variant=\"contained\"\n                disabled={!Formik.values.student}\n                onClick={Formik.handleSubmit}>\n                Find\n              </Button>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        module=\"Student Activity\"\n        tableKeys={studentActivityTableKeys}\n        bodyDataModal=\"student activity\"\n        bodyData={data}\n        onEditClick={handleEditClick}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* ====== Fab button component =======*/}\n      <AddForm\n        title=\"Student Activity\"\n        module=\"Student Activity\"\n        onAddClick={AddDepartmentHandel}\n        disabled={!Formik.values.student}\n      />\n      {/* ================================== */}\n\n      {/* ==== add/edit classes ======== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Student Activity\" : \"Add Student Activity\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"academicYear\"\n              label=\"Academic Year\"\n              required={true}\n              options={academicYearList}\n            />\n          </Grid> */}\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"student\"\n              label=\"Select Student\"\n              required={true}\n              showSearch={true}\n              options={students}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={12} item>\n            <FormInput formik={entryFormik} name=\"name\" label=\"Activity Name\" />\n          </Grid>\n\n          <Grid xs={12} sm={12} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const receiptBookTableKeys = [\n  {\n    name: \"Receipt Name\",\n    key: \"name\",\n  },\n];\n","/** @format */\n\nexport const feeMapTableKeys = [\n  {\n    name: \"Details\",\n    key: \"detail\",\n  },\n  { name: \"Fee\", key: \"fee\" },\n  // { name: \"Installments\", key: \"installment\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Divider,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst LABEL = {\n  class: \"Class\",\n  hostelMember: \"Hostel Member\",\n  transportMember: \"Transport Member\",\n  tcOption: \"TC Option\",\n};\n\nconst installmentsType = [\n  { label: \"Monthly\", id: 1 },\n  { label: \"Quaterly\", id: 2 },\n  { label: \"Half-Yearly\", id: 3 },\n  { label: \"Yearly\", id: 4 },\n  { label: \"Others\", id: 5 },\n];\n\nconst MEMBER_OPTIONS = [\n  { label: \"Yes\", _id: \"yes\" },\n  { label: \"No\", _id: \"no\" },\n];\n\nconst TC_OPTIONS = [\n  { label: \"With TC\", _id: \"with tc\" },\n  { label: \"Without TC\", _id: \"without tc\" },\n];\n\nfunction removeElementFromArray(array, elementToRemove) {\n  const index = array.indexOf(elementToRemove);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n  return array;\n}\n\nexport default function AddUpdateFeeMap({\n  dataToEdit,\n  selectedReceipt = \"\",\n  open = true,\n  setOpen = () => {},\n  getFeeMaps = () => {},\n}) {\n  const { selectedSetting } = useContext(SettingContext);\n  const [classes, setClasses] = useState([]);\n  const [academicYears, setAcademicYears] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [stops, setStops] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dependencies, setDependencies] = useState([]);\n  const [addForm, setAddForm] = useState({});\n  const [installments, setInstallments] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState(dataToEdit || null);\n\n  // get academic year\n  const getAcademicYears = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setAcademicYears(\n        data.result.map((academicData) => ({\n          ...academicData,\n          label: `${academicData.from} - ${academicData.to}`,\n          value: academicData._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get route and stops\n  const getRoutes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.route.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRoutes(\n        data.result.map((r) => ({\n          ...r,\n          label: `${r.vehicle?.number} ${r?.title} (${r?.routeStart} To ${r?.routeEnd})`,\n          value: r?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Hostels\n  const getHostels = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setHostels(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Room type\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setRoomTypes(\n        data.result.map((h) => ({\n          ...h,\n          label: h?.name,\n          value: h?._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get Rooms\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setRooms(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYears();\n    getClasses();\n    getRoutes();\n    getHostels();\n    getRoomTypes();\n    getRoom();\n  }, []);\n\n  const handleAddSubmit = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n\n    if (!addForm.pickType) {\n      removeElementFromArray(dependencies, \"pickType\");\n    }\n\n    try {\n      let payload = {\n        receiptTitleId: selectedReceipt,\n        dependencies: dependencies,\n        classId: addForm.class,\n        tcOption: addForm.tcOption,\n        hostelMember: addForm.hostelMember,\n        transportMember: addForm.transportMember,\n        fee: addForm.fee,\n        installmentType: addForm.installmentsType,\n        installments: installments.map((i) => ({\n          ...i,\n          dueDate: dayjs(i?.dueDate),\n        })),\n        schoolId: selectedSetting._id,\n      };\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMap.update + \"/\" + dataToEdit?._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.feeMap.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleClose = () => {\n    setAddForm({});\n    getFeeMaps();\n    setOpen(false);\n    setDependencies([]);\n    setInstallments([]);\n  };\n\n  useEffect(() => {\n    if (dataToEdit) {\n      const {\n        class: className,\n        hostelMember,\n        transportMember,\n        fee,\n        installmentType,\n        tcOption,\n        dependencies,\n      } = dataToEdit;\n\n      setAddForm({\n        class: className?._id || \"\",\n        hostelMember: hostelMember ? \"yes\" : \"no\",\n        transportMember: transportMember ? \"yes\" : \"no\",\n        tcOption: tcOption || \"\",\n        installmentsType: installmentType || \"\",\n        fee: fee || \"\",\n      });\n      setDataToUpdate(dataToEdit);\n      setDependencies(dependencies);\n    } else {\n      setAddForm({});\n    }\n  }, [dataToEdit]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    let recentValue = [...value];\n    recentValue = recentValue.pop();\n\n    if (!recentValue) {\n      setDependencies(value);\n    } else if (recentValue === \"classOld\") {\n      setDependencies(value.filter((v) => ![\"class\", \"classNew\"].includes(v)));\n    } else if (recentValue === \"classNew\") {\n      setDependencies(value.filter((v) => ![\"classOld\", \"class\"].includes(v)));\n    } else if (recentValue === \"class\") {\n      setDependencies(\n        value.filter((v) => ![\"classOld\", \"classNew\"].includes(v))\n      );\n    } else setDependencies(value);\n  };\n\n  const handleAddForm = (e) => {\n    const { name, value } = e.target;\n    if (name == \"fee\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: parseInt(value),\n      }));\n    } else if (name == \"others\") {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: Math.ceil(value),\n      }));\n    } else {\n      setAddForm((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleDelete = (chipToDelete) => {\n    setDependencies((chips) => chips.filter((chip) => chip !== chipToDelete));\n    if ([\"class\", \"classOld\", \"classNew\"].includes(chipToDelete)) {\n      setAddForm((prev) => ({ ...prev, class: \"\" }));\n    }\n    if (chipToDelete === \"hostel\") {\n      setAddForm((prev) => ({ ...prev, hostel: \"\" }));\n    }\n    if (chipToDelete === \"transport\") {\n      setAddForm((prev) => ({ ...prev, stop: \"\", route: \"\", pickType: \"\" }));\n    }\n  };\n\n  const handleAddInstallments = () => {\n    if (!addForm.installmentsType || !addForm.fee) return;\n    let installmentsData = [];\n\n    if (addForm.installmentsType === \"Monthly\") {\n      const monthlyAmount = Math.floor(addForm.fee / 12);\n      const missing = addForm.fee - monthlyAmount * 12;\n      installmentsData = Array.from({ length: 12 }).map((v, i) => ({\n        id: i + 1,\n        amount: monthlyAmount,\n        missing: missing,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Quaterly\") {\n      const quarterlyAmount = Math.floor(addForm.fee / 4);\n      const missing = addForm.fee - quarterlyAmount * 4;\n\n      installmentsData = Array.from({ length: 4 }).map((v, i) => ({\n        id: i + 1,\n        amount: quarterlyAmount,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Half-Yearly\") {\n      const halfYearlyAmount = Math.floor(addForm.fee / 2);\n      const missing = addForm.fee - halfYearlyAmount * 2;\n\n      installmentsData = Array.from({ length: 2 }).map((v, i) => ({\n        id: i + 1,\n        amount: halfYearlyAmount,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else if (addForm.installmentsType === \"Yearly\") {\n      installmentsData = Array.from({ length: 1 }).map((v, i) => ({\n        id: i,\n        amount: addForm.fee,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n    } else if (addForm.installmentsType === \"Others\") {\n      const othersAmount = Math.floor(addForm.fee / addForm.others);\n      const missing = addForm.fee - othersAmount * addForm.others;\n\n      installmentsData = Array.from({ length: addForm.others }).map((v, i) => ({\n        id: i + 1,\n        amount: othersAmount,\n        dueDate: dataToUpdate\n          ? dayjs(dataToUpdate.installments[i]?.dueDate)\n          : dayjs(),\n      }));\n      if (installmentsData.length > 0) {\n        installmentsData[0].amount += missing;\n      }\n    } else {\n      setInstallments([]);\n\n      return;\n    }\n\n    setInstallments(installmentsData);\n  };\n\n  useEffect(() => {\n    handleAddInstallments();\n  }, [addForm.installmentsType, addForm.others, addForm.fee, dataToUpdate]);\n\n  const handleInstallmentChange = (val, key, changeIndex) => {\n    setInstallments((prev) => {\n      let newInstallments = prev.map((installment, index) => {\n        if (index === changeIndex) {\n          return key === \"amount\"\n            ? { ...installment, [key]: parseInt(val) }\n            : key === \"dueDate\"\n            ? { ...installment, [key]: val }\n            : installment;\n        } else if (index > changeIndex) {\n          let diffInMonths = index - changeIndex;\n          if (addForm.installmentsType === \"Quaterly\") {\n            diffInMonths = diffInMonths * 3;\n          } else if (addForm.installmentsType === \"Half-Yearly\") {\n            diffInMonths = diffInMonths * 6;\n          } else if (addForm.installmentsType === \"Others\") {\n            diffInMonths = diffInMonths * 1;\n          }\n          const updatedDueDate = dayjs(val).add(diffInMonths, \"month\");\n          return { ...installment, dueDate: updatedDueDate };\n        } else {\n          return installment;\n        }\n      });\n\n      setDataToUpdate({ ...dataToUpdate, installments: newInstallments });\n\n      return newInstallments;\n    });\n  };\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onSubmit={handleAddSubmit}\n        component=\"form\">\n        <DialogTitle sx={{ fontWeight: 600 }}>\n          {dataToEdit ? \"Update Fee Map\" : \"Add Fee Map\"}\n        </DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={12} md={12} item>\n              <Typography variant=\"body\">\n                Choose the dependencies that will serve as the basis for the fee\n                calculation.\n              </Typography>\n              <Grid xs={12} sm={6} md={8} item>\n                <FormControl size=\"small\" sx={{ mt: 2, width: 400 }}>\n                  <InputLabel id=\"demo-multiple-chip-label\">\n                    Choose the dependencies\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-multiple-chip-label\"\n                    id=\"demo-multiple-chip\"\n                    size=\"small\"\n                    multiple\n                    label=\"Choose the dependencies\"\n                    value={dependencies}\n                    onChange={handleChange}>\n                    {Object.keys(LABEL).map((name) => (\n                      <MenuItem key={name} value={name}>\n                        {LABEL[name]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              {dependencies && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    gap: 0.5,\n                    marginLeft: \"20px\",\n                  }}>\n                  {dependencies.map((value, i) => (\n                    <Chip\n                      sx={{ mt: 2 }}\n                      key={value}\n                      label={LABEL[value]}\n                      onDelete={() => handleDelete(value)}\n                    />\n                  ))}\n                </Box>\n              )}\n            </Grid>\n\n            {dependencies.includes(\"class\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Select Class</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"class\"\n                    required\n                    value={addForm.class || \"\"}\n                    onChange={handleAddForm}\n                    label=\"Select Class\">\n                    {classes.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {dependencies.includes(\"tcOption\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>TC Option</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"tcOption\"\n                    required\n                    value={addForm.tcOption || false}\n                    onChange={handleAddForm}\n                    label=\"TC Option\">\n                    {TC_OPTIONS.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {dependencies.includes(\"hostelMember\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Is Hostel Member</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"hostelMember\"\n                    required\n                    value={addForm.hostelMember || false}\n                    onChange={handleAddForm}\n                    label=\"Is hostel member\">\n                    {MEMBER_OPTIONS.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            {dependencies.includes(\"transportMember\") && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <FormControl fullWidth size=\"small\">\n                  <InputLabel>Is Hostel Member</InputLabel>\n                  <Select\n                    size=\"small\"\n                    name=\"transportMember\"\n                    required\n                    value={addForm.transportMember || false}\n                    onChange={handleAddForm}\n                    label=\"Is transport member\">\n                    {MEMBER_OPTIONS.map((c) => (\n                      <MenuItem key={c._id} value={c._id}>\n                        {c.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                label=\"Fee\"\n                type=\"number\"\n                required\n                name=\"fee\"\n                value={addForm.fee || \"\"}\n                onChange={handleAddForm}\n              />\n            </Grid>\n            <Grid xs={12} sm={6} md={6} item mt={2}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Installment Type</InputLabel>\n                <Select\n                  size=\"small\"\n                  name=\"installmentsType\"\n                  value={addForm.installmentsType || \"\"}\n                  onChange={handleAddForm}\n                  label=\"Select Installment Type\">\n                  {installmentsType.map((installments) => (\n                    <MenuItem key={installments.id} value={installments.label}>\n                      {installments.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            {addForm.installmentsType == \"Others\" && (\n              <Grid xs={12} sm={6} md={6} item mt={2}>\n                <TextField\n                  fullWidth\n                  label=\"Number of installments\"\n                  size=\"small\"\n                  name=\"others\"\n                  type=\"number\"\n                  value={addForm.others || \"\"}\n                  onChange={handleAddForm}\n                />\n              </Grid>\n            )}\n            {installments.map((installment, index) => (\n              <React.Fragment key={index}>\n                <Grid container rowSpacing={0} columnSpacing={2} px={2}>\n                  <Grid item xs={12} sm={6} md={6} mt={2}>\n                    <TextField\n                      fullWidth\n                      type=\"number\"\n                      label={`installment ${index + 1}`}\n                      value={installment?.amount || 0}\n                      size=\"small\"\n                      // enabled={dataToEdit}\n                      onChange={(e) =>\n                        handleInstallmentChange(e.target.value, \"amount\", index)\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6}>\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DatePicker\n                        enabled={dataToEdit}\n                        label=\"Due Date\"\n                        format=\"DD/MM/YYYY\"\n                        value={installment?.dueDate || null}\n                        onChange={(newValue) =>\n                          handleInstallmentChange(newValue, \"dueDate\", index)\n                        }\n                        sx={{\n                          \"& .MuiInputBase-input\": {\n                            height: \"8px\",\n                          },\n                          marginTop: \"16px\",\n                          width: \"100%\",\n                        }}\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            enabled={dataToEdit}\n                            {...params}\n                            size=\"small\"\n                          />\n                        )}\n                      />\n                    </LocalizationProvider>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={loading}\n            variant=\"contained\"\n            type=\"submit\">\n            {dataToEdit ? \"Update\" : \"Submit\"}\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { Fragment, useContext } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\n\n// icons\nimport { Close } from \"@mui/icons-material\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\nimport dayjs from \"dayjs\";\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\nexport default function ViewInstallments({\n  open = true,\n  title = \"\",\n  tableData = [],\n  onClose = () => {},\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{\n            m: 0,\n            p: 2,\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            backgroundColor: isDarkMode ? \"#333\" : \"#fff\",\n            color: isDarkMode ? \"#fff\" : \"#000\",\n          }}>\n          <Table aria-label=\"customized table\">\n            <TableHead\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"dark\"\n                    ? theme.palette.primary.dark\n                    : theme.palette.primary.light,\n              }}>\n              <TableRow>\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                  S.No\n                </TableCell>\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Amount\n                </TableCell>\n                <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                  Due Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {tableData?.map((tableElement, i) => (\n                <Fragment key={i}>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">{i + 1}</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {tableElement.amount}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      {dayjs(tableElement.dueDate).format(\"DD/MM/YYYY\")}\n                    </StyledTableCell>\n                  </TableRow>\n                </Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { receiptBookTableKeys } from \"../../data/tableKeys/receiptBookData\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Tooltip,\n  Switch,\n  styled,\n} from \"@mui/material\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { useFormik } from \"formik\";\nimport { Add, Edit, Search } from \"@mui/icons-material\";\nimport { feeMapTableKeys } from \"../../data/tableKeys/feeMapData\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddUpdateFeeMap from \"./AddUpdateFeeMap\";\nimport ViewInstallments from \"./ViewInstallments\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst CustomSwitch = styled(Switch)(({}) => ({\n  \"& .MuiSwitch-switchBase.Mui-checked\": {\n    color: \"green\",\n  },\n  \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\n    backgroundColor: \"green\",\n  },\n  \"& .MuiSwitch-switchBase\": {\n    color: \"red\",\n  },\n  \"& .MuiSwitch-switchBase + .MuiSwitch-track\": {\n    backgroundColor: \"red\",\n  },\n}));\n\nexport const showInfo = (data) => {\n  let result = [];\n\n  for (let dep of data.dependencies) {\n    if ([\"class\"].includes(dep)) {\n      let newItem = `[${data.class?.name}]-Class`;\n      result.push(newItem);\n    } else if ([\"hostelMember\"].includes(dep)) {\n      let newItem = `[${data.hostelMember ? \"IS\" : \"IS-NOT\"}]-Hostel Member`;\n      result.push(newItem);\n    } else if ([\"transportMember\"].includes(dep)) {\n      let newItem = `[${\n        data.transportMember ? \"IS\" : \"IS-NOT\"\n      }]-Transport Member`;\n      result.push(newItem);\n    } else if ([\"tcOption\"].includes(dep)) {\n      let newItem = `[${data.tcOption}]-TC status`;\n      result.push(newItem);\n    }\n  }\n\n  return result.join(\" | \");\n};\n\nconst CustomActionFee = ({\n  onUpdate = () => {},\n  data = {},\n  onEditClick = () => {},\n  onNavigateFeeMap = () => {},\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const updateStatus = async () => {\n    try {\n      setLoading(true);\n      await put(`${PRIVATE_URLS.receiptTitle.toggleActiveStatus}/${data._id}`);\n      onUpdate();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <CheckPermission module=\"Receipt Book\" permission=\"add\">\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={() => onNavigateFeeMap(data._id)}>\n            Fee Map\n          </Button>\n        </CheckPermission>\n        <CheckPermission module=\"Receipt Book\" permission=\"update\">\n          <Tooltip title=\"Edit\">\n            <IconButton onClick={() => onEditClick(data)} size=\"small\">\n              <Edit color=\"primary\" fontSize=\"12px\" />\n            </IconButton>\n          </Tooltip>\n        </CheckPermission>\n        <CheckPermission module=\"Receipt Book\" permission=\"update\">\n          <Tooltip title={data.active ? \"Deactive\" : \"Activate\"}>\n            <CustomSwitch\n              size=\"small\"\n              checked={data.active}\n              onChange={updateStatus}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n            />\n          </Tooltip>\n        </CheckPermission>\n      </Stack>\n    </>\n  );\n};\n\nexport default function ReceiptBook() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [value, setSelectValue] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [receipts, setReceipts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openFeeMap, setOpenFeeMap] = useState(false);\n  const [selectedReceiptId, setSelectedReceiptId] = useState(\"\");\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: [],\n    action: () => {},\n  });\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { receiptTitle: selectedReceiptId },\n        },\n      });\n      console.log(data, \"data\");\n      setFeeMaps(data?.result?.map((f) => ({ ...f, detail: showInfo(f) })));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data, status } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setReceipts(data.result);\n      if (data.result.length > 0) {\n        setSelectedReceiptId(\n          selectedReceiptId ? selectedReceiptId : data.result[0]._id\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedReceiptId) {\n      getFeeMaps();\n    }\n  }, [selectedReceiptId, selectedSetting._id]);\n\n  useEffect(() => {\n    getReceipts();\n  }, [selectedSetting]);\n\n  const handleTabChange = (e, newValue) => {\n    setSelectValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    getReceipts();\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting?._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.receiptTitle.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.receiptTitle.create, payload);\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // active/inactive fee Map\n  const handleToggleButton = async (d) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.feeMap.toggleActiveStatus + \"/\" + d._id\n      );\n      // console.log(data, \"data\");\n      getFeeMaps();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleEditClick = (data) => {\n    setDataToEdit(data);\n    setOpen(true);\n  };\n\n  const handleOpenFeeMap = () => {\n    setOpenFeeMap(true);\n    setDataToEdit(null);\n  };\n\n  const handleFeeMapEdit = (data) => {\n    // console.log(data, \"newss\");\n    setDataToEdit(data);\n    setOpenFeeMap(true);\n  };\n\n  const handleFeeMapNavigate = (id) => {\n    setSelectedReceiptId(id);\n    setSelectValue(1);\n  };\n\n  const handleClickOpenView = (data) => {\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data?.installments,\n    });\n  };\n\n  const onCloseViewModel = (e) => {\n    setModalData({ ...modalData, open: false });\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Receipt Book\" />\n\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Receipt Book\", \"Fee Map\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <CheckPermission module=\"Receipt Book\" permission=\"add\">\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            onClick={handleClickOpen}\n            startIcon={<Add />}\n            sx={{ mt: 1, mb: 2 }}>\n            Add Receipt\n          </Button>\n        </CheckPermission>\n\n        <CustomTable\n          actions={[\"custom\"]}\n          bodyDataModal=\"Receipt Book\"\n          bodyData={receipts}\n          tableKeys={receiptBookTableKeys}\n          feeMapTableKeys\n          onEditClick={handleEditClick}\n          onNavigateFeeMap={handleFeeMapNavigate}\n          CustomAction={CustomActionFee}\n          onUpdate={getReceipts}\n        />\n        {/* Add/Update Receipt book ========= */}\n        <FormModal\n          open={open}\n          formik={entryFormik}\n          formTitle={dataToEdit ? \"Update Receipt Book\" : \"Add Receipt Book\"}\n          onClose={handleClose}\n          submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n          adding={loading}>\n          <Grid rowSpacing={0} columnSpacing={2} container>\n            <Grid xs={12} sm={6} md={12} item>\n              <FormInput\n                formik={entryFormik}\n                name=\"name\"\n                label=\"Receipt Name\"\n                required={true}\n              />\n            </Grid>\n          </Grid>\n        </FormModal>\n      </TabPanel>\n      <CheckPermission module=\"Receipt Book\" permission=\"add\">\n        <TabPanel index={1} value={value}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            sx={{ display: \"flex\", alignItems: \"center\", my: 1.5 }}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Select Receipt</InputLabel>\n                <Select\n                  required={true}\n                  fullWidth\n                  value={selectedReceiptId || \"\"}\n                  onChange={(e) => setSelectedReceiptId(e.target.value)}\n                  label=\"Select Receipt\">\n                  {receipts.map((receipt) => (\n                    <MenuItem value={receipt._id} key={receipt._id || \"\"}>\n                      {receipt.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <CheckPermission module=\"Receipt Book\" permission=\"add\">\n              <Grid xs={12} md={6} lg={3} item>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<Add />}\n                  onClick={handleOpenFeeMap}>\n                  Add Fee Map\n                </Button>\n              </Grid>\n            </CheckPermission>\n          </Grid>\n\n          <CustomTable\n            actions={[\"edit\", \"switch\", \"view\"]}\n            bodyDataModal=\"Fee Map\"\n            module=\"Receipt Book\"\n            bodyData={feeMaps}\n            tableKeys={feeMapTableKeys}\n            toggleStatus=\"active\"\n            onToggleSwitch={handleToggleButton}\n            onViewClick={handleClickOpenView}\n            onEditClick={handleFeeMapEdit}\n          />\n\n          {/* Add/Update Fee Map ========= */}\n          <AddUpdateFeeMap\n            open={openFeeMap}\n            dataToEdit={dataToEdit}\n            getFeeMaps={getFeeMaps}\n            setOpen={setOpenFeeMap}\n            loading={loading}\n            selectedReceipt={selectedReceiptId}\n          />\n\n          {/* view installments */}\n          <ViewInstallments\n            title=\"Installment Details\"\n            open={modalData?.open}\n            tableData={modalData?.tableData}\n            onClose={onCloseViewModel}\n          />\n        </TabPanel>\n      </CheckPermission>\n    </>\n  );\n}\n","/** @format */\n\nexport const feeMapCategoryTableKeys = [\n  {\n    name: \"Description\",\n    key: \"description\",\n  },\n  { name: \"Amount\t\", key: \"amount\" },\n  { name: \"Tax Rate\", key: \"taxRate\" },\n  { name: \"HSN Code\", key: \"hsnCode\" },\n];\n","/** @format */\n\nimport React from \"react\";\nimport { TextField, useTheme } from \"@mui/material\";\n\nexport default function CustomInput({\n  name,\n  label = \"default label\",\n  required = false,\n  onChange = () => {},\n  value,\n  style = {},\n  ...rest\n}) {\n  const theme = useTheme();\n\n  return (\n    <TextField\n      required={required}\n      id={name}\n      name={name}\n      label={label}\n      placeholder={`Enter ${label}`}\n      fullWidth\n      value={value || \"\"}\n      onChange={onChange}\n      sx={{\n        mt: 2,\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        ...style,\n      }}\n      variant=\"outlined\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      InputProps={{\n        multiple: true,\n        style: {\n          borderWidth: 1,\n          height: \"40px\",\n          borderRadius: theme.shape.borderRadius,\n        },\n      }}\n      {...rest}\n    />\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport FormModal from \"../../forms/FormModal\";\nimport {\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n  Grid,\n  useTheme,\n  useMediaQuery,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport { LoadingButton } from \"@mui/lab\";\n// icons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\n\nexport default function AddFeeMapCategory({\n  open = false,\n  categories = [],\n  adding = false,\n  setCategories = () => {},\n  addCategory = () => {},\n  removeCategory = () => {},\n  onClose = () => {},\n  onSubmit = () => {},\n  totalAmount = 0,\n  leftAmount = 0,\n}) {\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleCustomInputChange = (e, id) => {\n    setCategories([\n      ...categories.map((d) =>\n        d.id === id ? { ...d, [e.target.name]: e.target.value } : d\n      ),\n    ]);\n  };\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={onClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n          },\n        }}>\n        <DialogTitle sx={{ fontWeight: 600 }}>Add Fee Map Category</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Typography variant=\"caption\" fontSize={12}>\n            Total Amount:{\" \"}\n            <b style={{ color: \"rgb(0, 196, 159)\" }}>₹{totalAmount}</b>\n          </Typography>\n          <Typography variant=\"caption\" fontSize={12} ml={2}>\n            Left Amount:{\" \"}\n            <b style={{ color: \"rgb(255, 128, 66)\" }}>₹{leftAmount}</b>\n          </Typography>\n          {categories.map((c, i) => (\n            <Grid\n              key={c.id}\n              rowSpacing={0}\n              columnSpacing={1}\n              container\n              alignItems=\"center\">\n              <Grid xs={12} sm={3.5} item>\n                <CustomInput\n                  required={true}\n                  type=\"text\"\n                  name=\"description\"\n                  value={c.description || \"\"}\n                  label=\"Description\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={2.5} item>\n                <CustomInput\n                  required={true}\n                  type=\"number\"\n                  name=\"amount\"\n                  value={c.amount || \"\"}\n                  label=\"Amount\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={2.5} item>\n                <CustomInput\n                  required={true}\n                  type=\"number\"\n                  name=\"taxRate\"\n                  value={c.taxRate || \"\"}\n                  label=\"Tax Rate\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={2.5} item>\n                <CustomInput\n                  required={true}\n                  type=\"text\"\n                  name=\"hsnCode\"\n                  value={c.hsnCode || \"\"}\n                  label=\"HSN Code\"\n                  onChange={(e) => handleCustomInputChange(e, c.id)}\n                />\n              </Grid>\n              <Grid xs={12} sm={1} item>\n                <Tooltip title=\"Remove Category\">\n                  <IconButton\n                    color=\"error\"\n                    size=\"small\"\n                    onClick={() => removeCategory(c.id)}\n                    sx={{ mt: 1 }}>\n                    <RemoveIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          ))}\n          <Tooltip title=\"Add Category\" sx={{ mt: 1 }}>\n            <IconButton color=\"primary\" size=\"small\">\n              <AddIcon onClick={() => addCategory()} />\n            </IconButton>\n          </Tooltip>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={onClose}>\n            Close\n          </Button>\n          <LoadingButton\n            size=\"small\"\n            loading={adding}\n            variant=\"contained\"\n            onClick={onSubmit}>\n            Submit\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, Grid } from \"@mui/material\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { feeMapCategoryTableKeys } from \"../../data/tableKeys/feeMapCategoryData\";\nimport { Add } from \"@mui/icons-material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport { toast } from \"react-toastify\";\nimport AddFeeMapCategory from \"./AddFeeMapCategory\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\nimport { showInfo } from \"./ReceiptBook\";\n\nexport default function FeeMapCategory() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [openAddModal, setOpenAddModal] = useState(false);\n  const [categories, setCategories] = useState([\n    {\n      id: 1,\n      amount: 1,\n      description: \"\",\n      taxRate: \"\",\n      hsnCode: \"\",\n    },\n  ]);\n\n  const addCategory = () => {\n    let newCategories = [\n      ...categories,\n      {\n        id: categories.length + 1,\n        taxRate: \"\",\n        hsnCode: \"\",\n        amount: 1,\n        description: \"\",\n      },\n    ];\n    setCategories(newCategories);\n  };\n\n  const removeCategory = (id) => {\n    let newCategories = categories.filter((c) => c.id !== id);\n    setCategories(newCategories);\n  };\n\n  // get Receipt list\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      Formik.setFieldValue(\"name\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { receiptTitle: Formik.values.name },\n        },\n      });\n      setFeeMaps(\n        data?.result?.map((f) => ({ ...f, label: showInfo(f), value: f._id }))\n      );\n      Formik.setFieldValue(\"feeMap\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // get fee map category list\n  const handleGetFeeCategories = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMapCategory.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            feeMap: values?.feeMap,\n          },\n        },\n      });\n\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      name: \"\",\n      feeMap: \"\",\n    },\n    onSubmit: handleGetFeeCategories,\n  });\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.feeMapCategory.update + \"/\" + dataToEdit._id,\n          payload\n        );\n      } else {\n        if (\n          categories.find(\n            (c) =>\n              !c.description ||\n              !parseFloat(c.amount) ||\n              parseFloat(c.amount) < 0\n          )\n        ) {\n          setLoading(false);\n          return toast.error(\n            \"Please mention description and amount for each category\"\n          );\n        }\n\n        const { data } = await post(\n          PRIVATE_URLS.feeMapCategory.createMultiple,\n          {\n            schoolId: selectedSetting._id,\n            feeMapId: Formik.values.feeMap,\n            categories: categories.map((c) => ({\n              ...c,\n              amount: parseFloat(c.amount),\n            })),\n          }\n        );\n      }\n      handleClose();\n      handleCloseAddModel();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      description: dataToEdit?.description || \"\",\n      amount: dataToEdit?.amount || \"\",\n      taxRate: dataToEdit?.taxRate || \"\",\n      hsnCode: dataToEdit?.hsnCode || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (Formik.values.name) {\n      getFeeMaps();\n    }\n  }, [selectedSetting, Formik.values.name]);\n\n  useEffect(() => {\n    getReceipts();\n  }, [selectedSetting._id]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    Formik.handleSubmit();\n    entryFormik.resetForm();\n  };\n\n  const handleCloseAddModel = () => {\n    setOpenAddModal(false);\n    setCategories([\n      {\n        id: 1,\n        description: \"\",\n        hsnCode: \"\",\n        taxRate: \"\",\n        amount: \"\",\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    if (Formik.values.feeMap) {\n      Formik.handleSubmit();\n    }\n  }, [Formik.values.feeMap, selectedSetting._id]);\n\n  const handleFeeMapCategoryEdit = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.feeMapCategory.delete + \"/\" + id);\n      Formik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Fee Map Category\" />\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"name\"\n            formik={Formik}\n            label=\"Select Receipt Name\"\n            options={receipts}\n          />\n        </Grid>\n        <Grid xs={12} md={6} lg={3} item>\n          <FormSelect\n            required={true}\n            name=\"feeMap\"\n            formik={Formik}\n            label=\"Select Fee Maps\"\n            options={feeMaps}\n          />\n        </Grid>\n        <CheckPermission module=\"Fee Map Category\" permission=\"add\">\n          <Grid xs={12} md={6} lg={3} item>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<Add />}\n              onClick={() => setOpenAddModal(true)}>\n              Add Fee Category\n            </Button>\n          </Grid>\n        </CheckPermission>\n      </Grid>\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        bodyDataModal=\"Fee Map Category\"\n        module=\"Fee Map Category\"\n        bodyData={data}\n        tableKeys={feeMapCategoryTableKeys}\n        feeMapTableKeys\n        onEditClick={handleFeeMapCategoryEdit}\n        onDeleteClick={handleDelete}\n      />\n\n      {/* Update Fee map Category ========= */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\n          dataToEdit ? \"Update Fee Map Category\" : \"Add Fee Map Category\"\n        }\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={3} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"description\"\n              label=\"Description\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={3} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"amount\"\n              label=\"Amount\"\n              type=\"number\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={3} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"taxRate\"\n              label=\"Tax Rate\"\n              required={true}\n              type=\"number\"\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={3} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"hsnCode\"\n              label=\"HSN Code\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add Fee Map category modal */}\n      <AddFeeMapCategory\n        totalAmount={feeMaps.find((f) => f._id === Formik.values.feeMap)?.fee}\n        leftAmount={\n          feeMaps.find((f) => f._id === Formik.values.feeMap)?.fee -\n          data?.reduce((acc, f) => acc + f.amount, 0)\n        }\n        open={openAddModal}\n        adding={loading}\n        categories={categories}\n        setCategories={setCategories}\n        addCategory={addCategory}\n        removeCategory={removeCategory}\n        onClose={handleCloseAddModel}\n        onSubmit={() => entryFormik.handleSubmit()}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  useMediaQuery,\n  Typography,\n} from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\n// style\n\nconst style = {\n  width: \"100%\",\n  height: \"auto\",\n  bgcolor: \"background.paper\",\n  p: 2,\n};\n\nconst QuickFeeConcessionModal = (props) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState(\"\");\n  const formRef = useRef();\n  const btnClick = useRef();\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.refer && !formData.format && !formData.concession)\n      return setError(\"Please fill all fields\");\n    props.onSubmit(formData);\n    setFormData({});\n    setError(\"\");\n  };\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={props.open}\n        onClose={props.onClose}\n        sx={{\n          \"& .MuiDialog-container\": {\n            \"& .MuiPaper-root\": {\n              width: \"100%\",\n              maxWidth: { xs: \"100%\", sm: 400, md: 400, lg: 400 },\n            },\n          },\n        }}>\n        <Box sx={style}>\n          <form onSubmit={handleSubmit} ref={formRef}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Typography\n                  id=\"modal-modal-title\"\n                  variant=\"h6\"\n                  component=\"h2\"\n                  textAlign=\"center\"\n                  fontSize=\"20px\"\n                  fontWeight=\"bold\">\n                  Add Concession\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <TextField\n                  fullWidth\n                  required\n                  value={formData.refer || \"\"}\n                  name=\"refer\"\n                  label=\"Reference/recommended\"\n                  onChange={handleFormChange}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <FormControl fullWidth size=\"small\" required>\n                  <InputLabel>Concession format</InputLabel>\n                  <Select\n                    required\n                    value={formData.format || \"\"}\n                    name=\"format\"\n                    label=\"Concession format\"\n                    size=\"small\"\n                    onChange={handleFormChange}>\n                    <MenuItem value=\"Value\">Value</MenuItem>\n                    <MenuItem value=\"Percentage\">Percentage</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  required\n                  value={formData.concession || \"\"}\n                  name=\"concession\"\n                  label=\"Concession\"\n                  size=\"small\"\n                  onChange={handleFormChange}\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                display=\"flex\"\n                justifyContent=\"flex-end\">\n                <Stack direction=\"row\" gap={2}>\n                  <Button\n                    onClick={props.onClose}\n                    color=\"error\"\n                    variant=\"contained\"\n                    size=\"small\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      formRef.current.dispatchEvent(\n                        new Event(\"submit\", { cancelable: true, bubbles: true })\n                      );\n                    }}\n                    variant=\"contained\"\n                    size=\"small\"\n                    sx={{\n                      background: \"#1B3779\",\n                      \"&:hover\": {\n                        background: \"#1B3779\",\n                      },\n                    }}>\n                    Add\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QuickFeeConcessionModal;\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\n\n// style\n\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useTheme } from \"@mui/material/styles\";\nconst style = {\n  width: \"100%\",\n  height: \"auto\",\n  bgcolor: \"background.paper\",\n  p: 2,\n};\nconst QuickFeeCollectModal = ({\n  onSubmit = () => {},\n  onPreviewButtonClick = () => {},\n  onClose = () => {},\n  open = false,\n  payingAmount = 0,\n  note = \"\",\n  onUpdateNote = () => {},\n  collectingFee = false,\n  downloadingPreview = false,\n  payingDate = null,\n  setPayingDate = () => {},\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [paymentMode, setPaymentMode] = useState(\"\");\n\n  const [paymentDetails, setPaymentDetails] = useState({});\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setPaymentMode(value);\n  };\n\n  const handlePaymentDetails = (e) => {\n    const { name, value } = e.target;\n    setPaymentDetails((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setPayingDate(\"\");\n    onSubmit(paymentMode, paymentDetails);\n    setPaymentDetails({});\n  };\n\n  const onPreview = (e) => {\n    e.preventDefault();\n    onPreviewButtonClick(paymentMode, paymentDetails);\n  };\n\n  const handleClose = () => {\n    setPaymentMode(\"\");\n    onClose();\n  };\n\n  useEffect(() => {\n    setPaymentDetails({});\n  }, [paymentMode]);\n\n  return (\n    <Dialog fullScreen={fullScreen} open={open} onClose={onClose}>\n      <Box sx={style}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n                textAlign=\"center\"\n                fontSize=\"20px\"\n                fontWeight=\"bold\">\n                Collect Fee\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <Typography fontWeight=\"bold\" variant=\"body\">\n                <b>Total Amount Being Paid:</b>{\" \"}\n                <Typography color=\"red\" component=\"span\" fontSize={18}>\n                  {`₹${Number(payingAmount).toFixed(1)}`}\n                </Typography>\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                  format=\"DD/MM/YYYY\"\n                  sx={{ width: \"100%\" }}\n                  label=\"Payment Date\"\n                  value={payingDate || null}\n                  onChange={(newDate) => setPayingDate(newDate)}\n                  renderInput={(params) => (\n                    <TextField {...params} size=\"small\" fullWidth />\n                  )}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <FormControl required={true}>\n                <FormLabel>Select payment method</FormLabel>\n                <RadioGroup\n                  row\n                  value={paymentMode || \"\"}\n                  name=\"payment\"\n                  onChange={handleFormChange}>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Cash\"\n                      control={<Radio />}\n                      label=\"CASH\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Cheque\"\n                      control={<Radio />}\n                      label=\"Cheque\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={4}\n                    sm={4}\n                    md={2}\n                    lg={2}\n                    display=\"flex\"\n                    justifyContent={{\n                      xs: \"flex-start\",\n                      sm: \"flex-start\",\n                      md: \"center\",\n                      lg: \"center\",\n                    }}>\n                    <FormControlLabel\n                      value=\"DD\"\n                      control={<Radio />}\n                      label=\"DD\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Upi\"\n                      control={<Radio />}\n                      label=\"UPI\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Card\"\n                      control={<Radio />}\n                      label=\"Card\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} sm={4} md={2} lg={2}>\n                    <FormControlLabel\n                      value=\"Netbanking\"\n                      control={<Radio />}\n                      label=\"Netbanking\"\n                    />\n                  </Grid>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}>\n              <TextField\n                label=\"Note\"\n                multiline\n                rows={3}\n                name=\"note\"\n                value={note || \"\"}\n                size=\"small\"\n                fullWidth\n                onChange={(e) => onUpdateNote(e.target.value)}\n              />\n            </Grid>\n\n            {paymentMode === \"Cheque\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Branch Name\"\n                    value={paymentDetails.branchName || \"\"}\n                    fullWidth\n                    name=\"branchName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Cheque Number\"\n                    value={paymentDetails.chequeNumber || \"\"}\n                    fullWidth\n                    name=\"chequeNumber\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DatePicker\n                      sx={{ width: \"100%\" }}\n                      label=\"Cheque Date\"\n                      value={paymentDetails.chequeDate || null}\n                      onChange={(newDate) =>\n                        handlePaymentDetails({\n                          target: {\n                            name: \"chequeDate\",\n                            value: newDate,\n                          },\n                        })\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} size=\"small\" fullWidth />\n                      )}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"DD\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Branch Name\"\n                    value={paymentDetails.branchName || \"\"}\n                    fullWidth\n                    name=\"branchName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"Upi\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"UPI app name\"\n                    value={paymentDetails.upiApp || \"\"}\n                    fullWidth\n                    name=\"upiApp\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Ref Number\"\n                    value={paymentDetails.utrNo || \"\"}\n                    fullWidth\n                    name=\"utrNo\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"Card\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Card Type\"\n                    value={paymentDetails.cardType || \"\"}\n                    fullWidth\n                    name=\"cardType\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {paymentMode === \"Netbanking\" && (\n              <>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Bank Name\"\n                    value={paymentDetails.bankName || \"\"}\n                    fullWidth\n                    name=\"bankName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Reference Number\"\n                    value={paymentDetails.refNumber || \"\"}\n                    fullWidth\n                    name=\"refNumber\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={12} lg={12}>\n                  <TextField\n                    size=\"small\"\n                    label=\"Paid By\"\n                    value={paymentDetails.paidByName || \"\"}\n                    fullWidth\n                    name=\"paidByName\"\n                    onChange={handlePaymentDetails}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={12}\n              lg={12}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              gap={2}>\n              <Button\n                size=\"small\"\n                onClick={() => handleClose()}\n                variant=\"contained\"\n                color=\"error\">\n                cancel\n              </Button>\n              <LoadingButton\n                size=\"small\"\n                loading={collectingFee}\n                type=\"submit\"\n                variant=\"contained\">\n                collect\n              </LoadingButton>\n              <LoadingButton\n                size=\"small\"\n                loading={downloadingPreview}\n                onClick={onPreview}\n                variant=\"contained\">\n                preview\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default QuickFeeCollectModal;\n","/** @format */\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { get, post } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport dayjs from \"dayjs\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport QuickFeeConcessionModal from \"./QuickFeeConcessionModal\";\nimport QuickFeeCollectModal from \"./QuickFeeCollectModal\";\nimport { downloadFile } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport DownloadForOfflineSharpIcon from \"@mui/icons-material/DownloadForOfflineSharp\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\nimport { showInfo } from \"./ReceiptBook\";\n\nconst ExtraFeeContainer = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  padding: \"10px\",\n  columnGap: \"10px\",\n  backgroundColor:\n    theme.palette.mode === \"dark\" ? \"rgba(255,255,255,0.2)\" : \"whitesmoke\",\n  borderRadius: \"5px\",\n  marginTop: \"80px\",\n}));\n\nexport default function CollectFees() {\n  const [data, setData] = useState([]);\n  const { selectedSetting } = useContext(SettingContext);\n  const [receiptTitles, setReceiptTitles] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [feeDetails, setFeeDetails] = useState(null);\n  const [paymentData, setPaymentData] = useState({});\n  const [totalAmountToBePaid, setTotalAmountToBePaid] = useState(0);\n  const [selectedPastDueIds, setSelectedPastDueIds] = useState([]);\n  const [downloadingReceipt, setDownloadingReceipt] = useState(false);\n  const [fetchingStudents, setFetchingStudents] = useState(false);\n  const [installmentId, setInstallmentId] = useState(\"\");\n\n  const [penalty, setPenalty] = useState(\"\");\n  const [miscellaneous, setMiscellaneous] = useState(\"\");\n  const [openConcessionModal, setOpenConcessionModal] = useState(false);\n  const [concession, setConcession] = useState(null);\n  const [note, setNote] = useState(\"\");\n  const [payingDate, setPayingDate] = useState(dayjs(Date.now()));\n  const [collectingFee, setCollectingFee] = useState(false);\n  const [downloadingPreview, setDownloadingPreview] = useState(false);\n  const [openCollectModal, setOpenCollectModal] = useState(false);\n  const [payingAmount, setPayingAmount] = useState(\"\");\n\n  const handleCloseCollectFeeModal = () => setOpenCollectModal(false);\n  const handleOpenCollectFeeModal = () => setOpenCollectModal(true);\n\n  const handleConcessionSubmit = (data) => {\n    setConcession(data);\n    setOpenConcessionModal(false);\n  };\n\n  const handleCloseConcessionModal = () => setOpenConcessionModal(false);\n  const handleOpenConcessionModal = () => {\n    if (concession) {\n      setConcession(null);\n    } else {\n      setOpenConcessionModal(true);\n    }\n  };\n\n  // get student fee Details\n  const handleSubmitFind = async (values) => {\n    setFetchingStudents(true);\n\n    if (!values.feeMap || !values.student || !values.receiptName) {\n      setFeeDetails(null);\n      return setFetchingStudents(false);\n    }\n\n    try {\n      const { data: feeReceipt, status } = await get(\n        PRIVATE_URLS.receipt.getFeeDetails,\n        {\n          params: {\n            feeMapId: values.feeMap,\n            studentId: values.student,\n            receiptTitleId: values.receiptName,\n            installmentId:\n              installmentId ||\n              feeMaps.filter((f) => f._id == values.feeMap)[0]?.installments[0]\n                ._id,\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      setFeeDetails(feeReceipt.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setFetchingStudents(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: handleSubmitFind,\n    enableReinitialize: true,\n  });\n\n  const getAllReceiptTitles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: {\n          search: { active: true },\n          schoolId: selectedSetting._id,\n        },\n      });\n      setReceiptTitles(\n        data.result.map((d) => ({ ...d, label: d.name, value: d._id }))\n      );\n      entryFormik.setFieldValue(\"receiptName\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllReceiptTitles();\n  }, [selectedSetting._id]);\n\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list);\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get all classes\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  const getSections = async () => {\n    try {\n      if (!entryFormik.values.class) {\n        entryFormik.setFieldValue(\"section\", \"\");\n        return setSections([]);\n      }\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: { search: { class: entryFormik.values.class } },\n      });\n      setSections(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getSections();\n  }, [entryFormik.values.class]);\n\n  const getAllFeeMaps = async () => {\n    try {\n      if (!entryFormik.values.class || !entryFormik.values.receiptName) {\n        setFeeMaps([]);\n        entryFormik.setFieldValue(\"feeMap\", \"\");\n        return;\n      }\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          search: {\n            active: true,\n            receiptTitle: entryFormik.values.receiptName,\n            class: entryFormik.values.class,\n          },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setFeeMaps(\n        data?.result?.map((d) => ({ ...d, label: showInfo(d), value: d._id }))\n      );\n      entryFormik.setFieldValue(\"feeMap\", data?.result?.[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllFeeMaps();\n  }, [\n    entryFormik.values.receiptName,\n    entryFormik.values.class,\n    selectedSetting,\n  ]);\n\n  // get all students\n  const getAllStudents = async () => {\n    if (\n      !entryFormik.values.feeMap ||\n      !entryFormik.values.class ||\n      !entryFormik.values.section\n    ) {\n      setStudents([]);\n      entryFormik.setFieldValue(\"student\", \"\");\n      return;\n    }\n    try {\n      const filter = {\n        feeMapId: entryFormik.values.feeMap,\n        classId: entryFormik.values.class,\n        sectionId: entryFormik.values.section,\n      };\n\n      const { data: students } = await get(\n        PRIVATE_URLS.receipt.getStudentsList,\n        {\n          params: {\n            search: filter,\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      setStudents(\n        students.result.map((s) => ({\n          ...s,\n          label: `${s.basicInfo.name} | ${s.academicInfo.rollNumber} | ${s.fatherInfo.name}`,\n          value: s._id,\n        }))\n      );\n\n      entryFormik.setFieldValue(\"student\", students.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllStudents();\n  }, [\n    entryFormik.values.feeMap,\n    entryFormik.values.class,\n    entryFormik.values.section,\n  ]);\n\n  useEffect(() => {\n    setFeeDetails(null);\n    setInstallmentId(\n      feeMaps.find((f) => f._id === entryFormik.values.feeMap)?.installments[0]\n        ?._id\n    );\n  }, [entryFormik.values.student, entryFormik.values.feeMap]);\n\n  const handleChangeCollectingAmount = (e, itemDetail) => {\n    let newCategories = feeDetails.feeMapCategories?.map((c) =>\n      c._id === itemDetail._id ? { ...c, amountPaid: e.target.value } : c\n    );\n\n    setFeeDetails({ ...feeDetails, feeMapCategories: newCategories });\n  };\n\n  const payableAmount = useMemo(() => {\n    let feeParticularAmount = feeDetails\n      ? feeDetails.feeMapCategories?.reduce(\n          (acc, c) => acc + parseFloat(c.amountPaid * (1 + c.taxRate / 100)),\n          0\n        )\n      : 0;\n\n    let totalAmountBeingPaid =\n      parseFloat(feeParticularAmount) +\n      parseFloat(penalty || 0) +\n      parseFloat(miscellaneous || 0);\n\n    let concessionAmount = 0;\n    if (concession) {\n      if (concession.format === \"Percentage\") {\n        concessionAmount =\n          (Number(concession.concession) / 100) * Number(totalAmountBeingPaid);\n      } else {\n        concessionAmount = Number(concession.concession);\n      }\n    }\n    return (\n      parseFloat(feeParticularAmount) +\n      parseFloat(penalty * 1.18 || 0) +\n      parseFloat(miscellaneous * 1.18 || 0) -\n      concessionAmount\n    );\n  }, [feeDetails, penalty, miscellaneous, concession]);\n\n  const collectingAmount = useMemo(() => {\n    return feeDetails\n      ? feeDetails.feeMapCategories?.reduce(\n          (acc, c) => acc + parseFloat(c.amountPaid),\n          0\n        )\n      : 0;\n  }, [feeDetails]);\n\n  // Preview\n  const handlePreviewButtonClick = async (paymentMode, paymentDetails) => {\n    setDownloadingPreview(true);\n    const data = {\n      penalty: penalty || 0,\n      miscellaneous: miscellaneous || 0,\n      payingDate: payingDate ? dayjs(payingDate).format(\"DD/MM/YYYY\") : null,\n      note,\n      receiptTitleId: entryFormik.values.receiptName,\n      feeMapId: entryFormik.values.feeMap,\n      studentId: entryFormik.values.student,\n      paymentMode: paymentMode,\n      feeParticulars: feeDetails?.feeMapCategories?.filter(\n        (f) => f.amountPaid > 0\n      ),\n      installmentId,\n      concessionDetails: concession\n        ? {\n            amount: concession.concession,\n            referredBy: concession.refer,\n            givenAs: concession.format,\n          }\n        : {},\n      schoolId: selectedSetting._id,\n    };\n\n    switch (paymentMode) {\n      case \"Cash\":\n        data.cashDetails = {};\n        break;\n      case \"Cheque\":\n        data.chequeDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n          chequeNumber: paymentDetails.chequeNumber,\n          chequeDate: paymentDetails.chequeDate,\n        };\n        break;\n      case \"DD\":\n        data.ddDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n        };\n        break;\n      case \"Upi\":\n        data.upiDetails = {\n          upiApp: paymentDetails.upiApp,\n          utrNo: paymentDetails.utrNo,\n        };\n        break;\n      case \"Card\":\n        data.cardDetails = {\n          bankName: paymentDetails.bankName,\n          cardType: paymentDetails.cardType,\n        };\n        break;\n      case \"Netbanking\":\n        data.netBankingDetails = {\n          bankName: paymentDetails.bankName,\n          refNumber: paymentDetails.refNumber,\n          paidByName: paymentDetails.paidByName,\n        };\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const response = await post(PRIVATE_URLS.receipt.previewReceipt, data, {\n        responseType: \"blob\",\n        validateStatus: (status) => status < 500, // Accept any status code less than 500\n      });\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"Receipt_preview\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n    } finally {\n      setDownloadingPreview(false);\n    }\n  };\n\n  // collect\n\n  const handleCollectFee = async (paymentMode, paymentDetails) => {\n    setCollectingFee(true);\n    const data = {\n      penalty: penalty || 0,\n      miscellaneous: miscellaneous || 0,\n      payingDate: payingDate ? dayjs(payingDate).format(\"DD/MM/YYYY\") : null,\n      note,\n      receiptTitleId: entryFormik.values.receiptName,\n      feeMapId: entryFormik.values.feeMap,\n      studentId: entryFormik.values.student,\n      paymentMode: paymentMode,\n      feeParticulars: feeDetails?.feeMapCategories?.filter(\n        (f) => f.amountPaid > 0\n      ),\n      installmentId,\n      concessionDetails: concession\n        ? {\n            amount: concession.concession,\n            referredBy: concession.refer,\n            givenAs: concession.format,\n          }\n        : {},\n      schoolId: selectedSetting._id,\n    };\n\n    switch (paymentMode) {\n      case \"Cash\":\n        data.cashDetails = {};\n        break;\n      case \"Cheque\":\n        data.chequeDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n          chequeNumber: paymentDetails.chequeNumber,\n          chequeDate: paymentDetails.chequeDate,\n        };\n        break;\n      case \"DD\":\n        data.ddDetails = {\n          bankName: paymentDetails.bankName,\n          branchName: paymentDetails.branchName,\n        };\n        break;\n      case \"Upi\":\n        data.upiDetails = {\n          upiApp: paymentDetails.upiApp,\n          utrNo: paymentDetails.utrNo,\n        };\n        break;\n      case \"Card\":\n        data.cardDetails = {\n          bankName: paymentDetails.bankName,\n          cardType: paymentDetails.cardType,\n        };\n        break;\n      case \"Netbanking\":\n        data.netBankingDetails = {\n          bankName: paymentDetails.bankName,\n          refNumber: paymentDetails.refNumber,\n          paidByName: paymentDetails.paidByName,\n        };\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const response = await post(PRIVATE_URLS.receipt.collectFees, data, {\n        responseType: \"blob\",\n        validateStatus: (status) => status < 500, // Accept any status code less than 500\n      });\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"Receipt_preview\");\n        handleCloseCollectFeeModal();\n        entryFormik.handleSubmit();\n        setConcession(null);\n        setPenalty(\"\");\n        setMiscellaneous(\"\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.error(\"Network error:\", error);\n    } finally {\n      setCollectingFee(false);\n    }\n  };\n\n  // download receipts\n  const downloadReceipt = async (e, id) => {\n    e.preventDefault();\n    try {\n      setDownloadingReceipt(id);\n      const response = await get(\n        PRIVATE_URLS.receipt.downloadReceipt + \"/\" + id,\n        {\n          validateStatus: (status) => status < 500,\n          responseType: \"blob\",\n        }\n      );\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"receipt\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingReceipt(\"\");\n  };\n\n  useEffect(() => {\n    if (feeDetails) {\n      setFeeDetails({\n        ...feeDetails,\n        feeMapCategories: feeDetails.feeMapCategories.map((fm) => {\n          if (fm.description.includes(\"Tution Fee\")) {\n            return { ...fm, amountPaid: payingAmount * 0.25 };\n          } else if (fm.description.includes(\"Transport\")) {\n            return { ...fm, amountPaid: payingAmount * 0.1 };\n          } else if (fm.description.includes(\"Accomodation\")) {\n            return { ...fm, amountPaid: payingAmount * 0.15 };\n          } else if (fm.description.includes(\"Food\")) {\n            return { ...fm, amountPaid: payingAmount * 0.4 };\n          } else {\n            return { ...fm, amountPaid: payingAmount * 0.1 };\n          }\n        }),\n      });\n    }\n  }, [payingAmount, feeDetails]);\n\n  return (\n    <>\n      <PageHeader title=\"Collect Fees\" />\n\n      {/* Filter selection */}\n      <Paper sx={{ padding: 1, marginBottom: 2 }}>\n        <Grid columnSpacing={1} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receiptTitles}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"student\"\n              formik={entryFormik}\n              label=\"Select Students\"\n              options={students}\n            />\n          </Grid>\n          <CheckPermission module=\"Collect Fees\" permission=\"view\">\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <LoadingButton\n                loading={fetchingStudents}\n                onClick={entryFormik.handleSubmit}\n                size=\"small\"\n                variant=\"contained\">\n                Find\n              </LoadingButton>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n\n      {/* Student Info, installment info and due details */}\n      {feeDetails ? (\n        <Paper\n          sx={{\n            padding: 1,\n            my: 3,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\"\n                ? \"rgba(255,255,255,0.2)\"\n                : \"whitesmoke\",\n          }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}>\n            <Box>\n              <FormControl size=\"small\" sx={{ width: 300, mt: 1 }} required>\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Select Installment\n                </InputLabel>\n                <Select\n                  size=\"small\"\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  name=\"installmentId\"\n                  label=\"Select Installment\"\n                  value={\n                    installmentId || feeDetails?.feeMap?.installments[0]._id\n                  }\n                  required\n                  onChange={(event) => {\n                    setInstallmentId(event.target.value);\n                    entryFormik.handleSubmit();\n                  }}>\n                  {feeDetails?.feeMap?.installments?.map((row, index) => (\n                    <MenuItem\n                      key={row._id}\n                      value={row._id}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      {index + 1}-{row.amount}-\n                      {feeDetails?.previousReceipts?.filter(\n                        (r) => r.installmentPaid == row._id\n                      )[0]\n                        ? \"Paid\"\n                        : \"Not-Paid\"}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Typography\n                sx={{\n                  fontSize: \"14px\",\n                  margin: \"2px 0 0 0\",\n                  fontWeight: \"bold\",\n                  color: (theme) =>\n                    theme.palette.mode === \"dark\" ? \"orange\" : \"red\",\n                }}>\n                Due Date :{\" \"}\n                {installmentId\n                  ? dayjs(\n                      feeDetails?.feeMap?.installments.filter(\n                        (i) => i._id == installmentId\n                      )[0]?.dueDate\n                    )\n                      .toDate()\n                      .toLocaleDateString()\n                  : null}\n              </Typography>\n            </Box>\n\n            <Box>\n              <Typography fontSize=\"12px\">\n                <b>Past Due (All Other Academic Years) :</b> ₹{\" \"}\n                <span>{feeDetails?.pastDues?.toFixed(2)}</span>\n              </Typography>\n              <Typography fontSize=\"12px\">\n                <b>Total Due (Current Academic Year) :</b> ₹{\" \"}\n                <span>\n                  {feeDetails?.totalDueForThisAcademicYear?.toFixed(2)}\n                </span>\n              </Typography>\n              {installmentId && (\n                <Typography fontSize=\"12px\">\n                  <b>Current Due (Current Academic Year) :</b> ₹{\" \"}\n                  <span>{feeDetails?.currentDue?.toFixed(2)}</span>\n                </Typography>\n              )}\n              <Typography fontSize=\"12px\">\n                <b>Total Paid (Current Academic Year) :</b> ₹{\" \"}\n                <span>{feeDetails?.totalPaid?.toFixed(2)}</span>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      ) : null}\n\n      {/* Previous Receipts */}\n      {!feeDetails?.previousReceipts?.length ? null : (\n        <Paper sx={{ padding: \"10px\", margin: \"10px 0\" }}>\n          <Typography fontSize=\"14px\" mb={2}>\n            <b>Previous Receipts:</b> PP - Partially Paid, PPD - Partial Payment\n            Done, FP - Full Payment\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: \"10px\",\n              columnGap: \"5px\",\n            }}>\n            {feeDetails.previousReceipts.map((p) => (\n              <LoadingButton\n                loading={downloadingReceipt === p._id}\n                size=\"small\"\n                variant=\"outlined\"\n                disabled={downloadingReceipt ? true : false}\n                key={p._id}\n                onClick={(e) => downloadReceipt(e, p._id)}\n                endIcon={<DownloadForOfflineSharpIcon />}>\n                {dayjs(p.paidAt).format(\"DD/MM/YYYY\")}-\n                {p.partiallyPaid\n                  ? p.partialPaymentCompleted\n                    ? \"PPD\"\n                    : \"PP\"\n                  : \"FP\"}\n              </LoadingButton>\n            ))}\n          </Box>\n        </Paper>\n      )}\n      {/* Fee Particular details */}\n      {!feeDetails ? null : (\n        <TableContainer component={Paper}>\n          <Table size=\"small\">\n            <TableHead\n              sx={{\n                backgroundColor: (theme) => theme.palette.primary.main,\n              }}>\n              <TableRow>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  #SL\n                </TableCell>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Fee Particular\n                </TableCell>\n\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Due Amount\n                </TableCell>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Collecting Amount\n                </TableCell>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  SGST\n                </TableCell>\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  CGST\n                </TableCell>\n\n                <TableCell sx={{ color: \"white\" }} align=\"center\">\n                  Net Payable\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {feeDetails?.feeMapCategories?.map((itemDetail, index) => (\n                <TableRow key={index}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">\n                    <Typography>{itemDetail.description}</Typography>\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    <Typography fontWeight=\"bold\">\n                      ₹ {itemDetail.amount}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <CustomInput\n                      disabled={true}\n                      type=\"number\"\n                      style={{ maxWidth: \"150px\", margin: \"4px 0\" }}\n                      value={itemDetail.amountPaid || \"\"}\n                      label=\"₹ Amount\"\n                      onChange={(e) =>\n                        handleChangeCollectingAmount(e, itemDetail)\n                      }\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Typography>{itemDetail.taxRate / 2}%</Typography>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Typography>{itemDetail.taxRate / 2}%</Typography>\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    <Typography>\n                      ₹\n                      {(\n                        itemDetail.amountPaid *\n                        (1 + itemDetail.taxRate / 100)\n                      )?.toFixed(2)}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow\n                sx={{\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \"dark\"\n                      ? \"rgba(255,255,255,0.2)\"\n                      : \"whitesmoke\",\n                }}>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\">\n                  <Typography sx={{ fontWeight: \"bold\" }}>Total</Typography>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <Typography sx={{ fontWeight: \"bold\" }}>\n                    ₹ {feeDetails?.currentDue?.toFixed(2)}\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Typography sx={{ fontWeight: \"bold\" }}>\n                    ₹ {collectingAmount}\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\">\n                  <Typography fontWeight=\"bold\">\n                    ₹{\" \"}\n                    {Number(\n                      feeDetails?.feeMapCategories?.reduce(\n                        (t, c) =>\n                          t + parseFloat(c.amountPaid * (1 + c.taxRate / 100)),\n                        0\n                      )\n                    )?.toFixed(2)}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <ExtraFeeContainer>\n            <Stack direction=\"row\" columnGap={2}>\n              <CustomInput\n                type=\"number\"\n                name=\"penalty\"\n                value={penalty}\n                onChange={(e) => setPenalty(e.target.value)}\n                label=\"Penalty/Fine\"\n                style={{ marginBottom: \"15px\" }}\n              />\n              <CustomInput\n                type=\"number\"\n                name=\"miscellaneous\"\n                value={miscellaneous}\n                onChange={(e) => setMiscellaneous(e.target.value)}\n                label=\"Miscellaneous\"\n              />\n              <CustomInput\n                type=\"number\"\n                name=\"payingAmount\"\n                value={payingAmount}\n                onChange={(e) => setPayingAmount(e.target.value)}\n                label=\"Paying Amount\"\n              />\n            </Stack>\n            <Box sx={{ display: \"flex\", columnGap: 2, alignItems: \"center\" }}>\n              <Stack direction=\"row\" columnGap={2}>\n                <Typography sx={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n                  {concession\n                    ? concession?.format === \"Value\"\n                      ? `Concession : ₹${concession?.concession}`\n                      : `Concession : ${concession?.concession}%`\n                    : \"\"}\n                </Typography>\n                <Button\n                  color=\"warning\"\n                  onClick={handleOpenConcessionModal}\n                  variant=\"contained\"\n                  size=\"small\">\n                  {concession ? \"remove concession\" : \"add concession\"}\n                </Button>\n              </Stack>\n              <CheckPermission module=\"Collect Fees\" permission=\"add\">\n                <Button\n                  onClick={handleOpenCollectFeeModal}\n                  variant=\"contained\"\n                  size=\"small\">\n                  collect fee\n                </Button>\n              </CheckPermission>\n            </Box>\n          </ExtraFeeContainer>\n        </TableContainer>\n      )}\n\n      {/* Concession model */}\n      <QuickFeeConcessionModal\n        onSubmit={handleConcessionSubmit}\n        open={openConcessionModal}\n        onClose={handleCloseConcessionModal}\n      />\n      {/* payment details model */}\n      <QuickFeeCollectModal\n        collectingFee={collectingFee}\n        downloadingPreview={downloadingPreview}\n        onPreviewButtonClick={handlePreviewButtonClick}\n        feeReceipt={feeDetails}\n        onSubmit={handleCollectFee}\n        open={openCollectModal}\n        onClose={handleCloseCollectFeeModal}\n        onUpdateNote={setNote}\n        payingAmount={payableAmount}\n        note={note}\n        payingDate={payingDate}\n        setPayingDate={setPayingDate}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const balanceFeeReportTableKeys = [\n  {\n    name: \"Receipt\",\n    key: \"receiptTitle\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Class\",\n    key: \"class\",\n  },\n  {\n    name: \"Section\",\n    key: \"section\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Father\",\n    key: \"fatherName\",\n  },\n  {\n    name: \"Phone\",\n    key: \"phone\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amount\",\n  },\n  {\n    name: \"Concession\",\n    key: \"concession\",\n  },\n  {\n    name: \"Fine\",\n    key: \"fine\",\n  },\n  {\n    name: \"Miscellaneous\",\n    key: \"miscellaneous\",\n  },\n  {\n    name: \"Paid\",\n    key: \"paid\",\n  },\n  {\n    name: \"Balance\",\n    key: \"balance\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Grid, Paper } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { balanceFeeReportTableKeys } from \"../../data/tableKeys/balanceFeeReportData\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { downloadFile } from \"../../utils\";\nimport { toast } from \"react-toastify\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\nimport { showInfo } from \"./ReceiptBook\";\n\nexport default function BalanceFeeReport() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadingExcel, setDownloadingExcel] = useState(false);\n\n  // get balance fee reports\n  const handleSubmitFind = async (values) => {\n    console.log(values, \"values\");\n    setLoading(true);\n\n    try {\n      const { data: feeReport, status } = await get(\n        PRIVATE_URLS.receipt.getBalanceFeeReport,\n        {\n          params: {\n            classId: values.class,\n            sectionId: values.section,\n            feeMapId: values.feeMap,\n            academicYearId: values.academicYear,\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n\n      setData(feeReport.result);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      receiptName: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: handleSubmitFind,\n    enableReinitialize: true,\n  });\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get receipts\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: {\n          search: { active: true },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      entryFormik.setFieldValue(\"receiptName\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: entryFormik.values.class,\n          },\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            active: true,\n            class: entryFormik.values.class,\n            receiptTitle: entryFormik.values.receiptName,\n          },\n        },\n      });\n      setFeeMaps(\n        data?.result?.map((f) => ({ ...f, label: showInfo(f), value: f._id }))\n      );\n      entryFormik.setFieldValue(\"feeMap\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class]);\n\n  useEffect(() => {\n    if (entryFormik.values.receiptName && entryFormik.values.class) {\n      getFeeMaps();\n    }\n  }, [\n    entryFormik.values.receiptName,\n    entryFormik.values.class,\n    selectedSetting._id,\n  ]);\n\n  useEffect(() => {\n    setData([]);\n  }, [entryFormik.values.feeMap, selectedSetting._id]);\n\n  // Download excel file\n\n  const downloadBalanceReport = async () => {\n    setDownloadingExcel(true);\n    const values = entryFormik.values;\n    try {\n      const response = await get(\n        PRIVATE_URLS.receipt.downloadBalanceFeeReport,\n        {\n          params: {\n            classId: values.class,\n            sectionId: values.section,\n            feeMapId: values.feeMap,\n            academicYearId: values.academicYear,\n            schoolId: selectedSetting._id,\n          },\n          validateStatus: (status) => status < 500,\n          responseType: \"blob\",\n        }\n      );\n\n      if (response.status === 200) {\n        downloadFile(\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n          response.data,\n          \"Balance_Report.xlsx\"\n        );\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingExcel(false);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Balance Fee Report\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"receiptName\"\n              formik={entryFormik}\n              label=\"Select Receipt Name\"\n              options={receipts}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={classes}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={sections}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={feeMaps}\n            />\n          </Grid>\n          <CheckPermission module=\"Balance Fee\" permission=\"view\">\n            <Grid\n              xs={12}\n              md={6}\n              lg={3}\n              style={{ alignSelf: \"center\", marginTop: \"10px\" }}\n              item>\n              <LoadingButton\n                size=\"small\"\n                variant=\"contained\"\n                loading={loading}\n                onClick={entryFormik.handleSubmit}>\n                Find\n              </LoadingButton>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[]}\n        bodyDataModal=\"Balance Fee Report\"\n        bodyData={data}\n        tableKeys={balanceFeeReportTableKeys}\n      />\n      <CheckPermission module=\"Balance Fee\" permission=\"view\">\n        {data.length > 0 && (\n          <>\n            <Box\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n              }}>\n              <LoadingButton\n                loading={downloadingExcel}\n                onClick={downloadBalanceReport}\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ mt: 3 }}>\n                DOWNLOAD\n              </LoadingButton>\n            </Box>\n          </>\n        )}\n      </CheckPermission>\n    </>\n  );\n}\n","/** @format */\n\nexport const feeOverviewPaymentTableKeys = [\n  {\n    name: \"Payment\",\n    key: \"payment\",\n  },\n  { name: \"Total\", key: \"total\" },\n  { name: \"Cash\", key: \"cash\" },\n  { name: \"Cheque\", key: \"cheque\" },\n  { name: \"DD\", key: \"DD\" },\n  { name: \"NetBanking\", key: \"netBanking\" },\n  { name: \"Online\", key: \"Upi\" },\n];\n","/** @format */\n\nexport const feeOverviewReceiptTableKeys = [\n  {\n    name: \"Receipt No\",\n    key: \"receiptNumber\",\n  },\n  { name: \"Paid Date\", key: \"paidAt\", isDate: true },\n  { name: \"Amount\", key: \"amountPaid\" },\n  { name: \"Payment Mode\", key: \"paymentMode\" },\n  { name: \"Name\", key: \"name\" },\n  { name: \"Class\", key: \"class\" },\n  { name: \"Section\", key: \"section\" },\n  { name: \"Admission No\", key: \"admissionNumber\" },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { feeOverviewPaymentTableKeys } from \"../../data/tableKeys/feeOverviewPaymentData\";\nimport { feeOverviewReceiptTableKeys } from \"../../data/tableKeys/feeOverviewReceiptData\";\nimport FormInput from \"../../forms/FormInput\";\nimport { get } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\nimport { downloadFile } from \"../../utils\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { toast } from \"react-toastify\";\nimport CustomSelect from \"../../forms/CustomSelect\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\nimport { showInfo } from \"./ReceiptBook\";\n\nconst ALL_OPTION = {\n  label: \"All\",\n  value: \"all\",\n};\n\nconst Category_Options = [\n  {\n    label: \"Receipt No\",\n    value: \"receiptNumber\",\n  },\n  {\n    label: \"Amount\",\n    value: \"amountPaid\",\n  },\n\n  {\n    label: \"Payment Mode\",\n    value: \"paymentMode\",\n  },\n  {\n    label: \"Name\",\n    value: \"name\",\n  },\n  {\n    label: \"Admission Number\",\n    value: \"admissionNumber\",\n  },\n];\n\nconst CustomAction = ({ data }) => {\n  const [downloadingReceipt, setDownloadingReceipt] = useState(false);\n\n  const downloadStaffCopy = async (e) => {\n    e.preventDefault();\n    try {\n      setDownloadingReceipt(true);\n      const response = await get(\n        PRIVATE_URLS.receipt.downloadReceiptStaff + \"/\" + data?._id,\n        {\n          validateStatus: (status) => status < 500,\n          responseType: \"blob\",\n        }\n      );\n\n      if (response.status === 200) {\n        downloadFile(\"application/pdf\", response.data, \"receipt\");\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setDownloadingReceipt(false);\n  };\n  return (\n    <LoadingButton\n      loading={downloadingReceipt}\n      size=\"small\"\n      variant=\"contained\"\n      onClick={downloadStaffCopy}>\n      Staff Copy\n    </LoadingButton>\n  );\n};\n\nexport default function FeeOverview() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [receipts, setReceips] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [feeMaps, setFeeMaps] = useState([]);\n  const [collectedBy, setCollectedBy] = useState([]);\n  const [category, setCategory] = useState(\"admissionNumber\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [amountInDifferentModes, setAmountInDifferentModes] = useState(null);\n  const [allReceipts, setAllReceipts] = useState([]);\n  const [filteredReceipts, setFilteredReceipts] = useState([]);\n  const [downloadingOverview, setDownloadingOverview] = useState(false);\n\n  const getAmountInDifferentModes = async (values) => {\n    try {\n      let payload = {\n        academicYearId: values.academicYear,\n        cashierId: values.collected,\n        receiptTitleId: values.feeReceipt,\n        feeMapId: values.feeMap,\n        fromDate: values.fromDate,\n        toDate: values.toDate,\n        sectionId: values.section,\n        classId: values.class,\n        schoolId: selectedSetting._id,\n      };\n      const { data } = await get(\n        PRIVATE_URLS.receipt.getAmountCollectedWithDifferentModes,\n        {\n          params: payload,\n        }\n      );\n\n      const { data: receipts } = await get(\n        PRIVATE_URLS.receipt.getAllReceipts,\n        {\n          params: payload,\n        }\n      );\n\n      setAllReceipts(\n        receipts?.result?.map((r) => ({\n          ...r,\n          name: r.payeeDetails.name,\n          class: r.payeeDetails.className,\n          section: r.payeeDetails.sectionName,\n          admissionNumber: r.payeeDetails.admissionNumber,\n        }))\n      );\n\n      setFilteredReceipts(\n        receipts?.result?.map((r) => ({\n          ...r,\n          name: r.payeeDetails.name,\n          class: r.payeeDetails.className,\n          section: r.payeeDetails.sectionName,\n          admissionNumber: r.payeeDetails.admissionNumber,\n        }))\n      );\n      setAmountInDifferentModes(data.result?.finalResult);\n    } catch (error) {}\n  };\n\n  const downloadFeeOverview = async () => {\n    try {\n      const payload = {\n        academicYearId: entryFormik.values.academicYear,\n        cashierId: entryFormik.values.collected,\n        receiptTitleId: entryFormik.values.feeReceipt,\n        feeMapId: entryFormik.values.feeMap,\n        fromDate: entryFormik.values.fromDate,\n        toDate: entryFormik.values.toDate,\n        sectionId: entryFormik.values.section,\n        classId: entryFormik.values.class,\n        schoolId: selectedSetting._id,\n      };\n\n      setDownloadingOverview(true);\n\n      const response = await get(PRIVATE_URLS.receipt.downloadFeeOverView, {\n        params: payload,\n        validateStatus: (status) => status < 500,\n        responseType: \"blob\",\n      });\n\n      if (response.status === 200) {\n        downloadFile(\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n          response.data,\n          \"Fee_overview\"\n        );\n      } else {\n        const errorText = await new Response(response.data).text();\n        toast.error(JSON.parse(errorText)?.message);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setDownloadingOverview(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      collected: \"\",\n      feeReceipt: \"\",\n      feeMap: \"\",\n      class: \"\",\n      section: \"\",\n      fromDate: dayjs(new Date()),\n      toDate: dayjs(new Date()),\n    },\n    onSubmit: getAmountInDifferentModes,\n  });\n\n  useEffect(() => {\n    setAmountInDifferentModes(null);\n  }, [entryFormik.values]);\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getCollected = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list, {\n        params: {\n          search: {\n            $or: [\n              { name: \"ACCOUNTANT\" },\n              { name: \"SUPER ADMIN\" },\n              { name: \"ADMIN\" },\n            ],\n          },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      let roleIds = data.result.map((r) => r._id);\n\n      const employeeResponse = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          search: {\n            role: { $in: roleIds },\n          },\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      setCollectedBy(\n        employeeResponse?.data?.result.map((e) => ({\n          ...e,\n          label: e.role?.name,\n          value: e?._id,\n        }))\n      );\n      entryFormik.setFieldValue(\n        \"collected\",\n        employeeResponse?.data?.result[0]?._id\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get receipts\n  const getReceipts = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.receiptTitle.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n\n      setReceips(data.result.map((r) => ({ label: r.name, value: r._id })));\n      entryFormik.setFieldValue(\"feeReceipt\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      entryFormik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const filter = {};\n      if (entryFormik.values.class !== \"all\") {\n        filter[\"class\"] = entryFormik.values.class;\n      }\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: filter,\n        },\n      });\n      entryFormik.setFieldValue(\"section\", data.result[0]?._id);\n      setSections(\n        data.result.map((c) => ({\n          ...c,\n          label: `${c.class.name} - ${c.name}`,\n          value: c._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get fee map list\n  const getFeeMaps = async () => {\n    const filter = {\n      active: true,\n    };\n    if (entryFormik.values.class !== \"all\") {\n      filter[\"class\"] = entryFormik.values.class;\n    }\n    if (entryFormik.values.receiptName !== \"all\") {\n      filter[\"receiptTitle\"] = entryFormik.values.feeReceipt;\n    }\n    try {\n      const { data } = await get(PRIVATE_URLS.feeMap.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: filter,\n        },\n      });\n      console.log(data.result, \"result fee maps\");\n      setFeeMaps(\n        data?.result?.map((f) => ({ ...f, label: showInfo(f), value: f._id }))\n      );\n      entryFormik.setFieldValue(\"feeMap\", data.result[0]?._id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getAcademicYear();\n    getReceipts();\n    getClasses();\n    getCollected();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (entryFormik.values.class && entryFormik.values.feeReceipt) {\n      getFeeMaps();\n    }\n  }, [\n    entryFormik.values.class,\n    entryFormik.values.feeReceipt,\n    selectedSetting,\n  ]);\n\n  const filterData = () => {\n    const filtered = allReceipts.filter((receipt) =>\n      receipt[category]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(searchValue.toLowerCase())\n    );\n\n    setFilteredReceipts(filtered);\n  };\n\n  useEffect(() => {\n    if (category && searchValue) {\n      filterData();\n    } else {\n      setFilteredReceipts(allReceipts);\n    }\n  }, [category, searchValue]);\n\n  return (\n    <>\n      <PageHeader title=\"Fee Overview\" />\n      <Paper sx={{ padding: 2, marginBottom: 3 }}>\n        <Grid\n          rowSpacing={1}\n          columnSpacing={2}\n          container\n          sx={{ display: \"flex\", alignItems: \"center\", mb: 1 }}>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              options={academicYear}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"collected\"\n              formik={entryFormik}\n              label=\"Select Collected By\"\n              options={[ALL_OPTION, ...collectedBy]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeReceipt\"\n              formik={entryFormik}\n              label=\"Select Fee Receipt\"\n              options={[ALL_OPTION, ...receipts]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              options={[ALL_OPTION, ...classes]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"section\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              options={[ALL_OPTION, ...sections]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"feeMap\"\n              formik={entryFormik}\n              label=\"Select Fee Map\"\n              options={[ALL_OPTION, ...feeMaps]}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"fromDate\"\n              label=\"From Date\"\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormDatePicker\n              formik={entryFormik}\n              name=\"toDate\"\n              label=\"To Date\"\n            />\n          </Grid>\n          <CheckPermission module=\"Fee Overview\" permission=\"view\">\n            <Grid xs={12} md={6} lg={3} item>\n              <Button onClick={entryFormik.handleSubmit} variant=\"contained\">\n                Find\n              </Button>\n            </Grid>\n          </CheckPermission>\n        </Grid>\n      </Paper>\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead style={{ background: \"rgb(27 55 121)\" }}>\n              <TableRow>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">Payment</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">Total</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">Cash</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">Cheque</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">DD</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">Chalan</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">NetBanking</span>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <span className=\"class-table-header\">Online</span>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {!amountInDifferentModes ? (\n              <TableBody>\n                <TableRow\n                  sx={{\n                    \"&:last-child td, &:last-child th\": { border: 0 },\n                  }}>\n                  <TableCell align=\"center\" colSpan={8}>\n                    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>\n                      No data found\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              <TableBody>\n                <TableRow\n                  sx={{\n                    \"&:last-child td, &:last-child th\": { border: 0 },\n                  }}>\n                  <TableCell align=\"center\">\n                    Amount\n                    <CurrencyRupeeIcon size=\"small\" fontSize=\"10px\" />\n                  </TableCell>\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {Object.values(amountInDifferentModes).reduce(\n                      (t, c) => t + parseInt(c),\n                      0\n                    )}\n                  </TableCell>\n\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {amountInDifferentModes[\"Cash\"]}\n                  </TableCell>\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {amountInDifferentModes[\"Cheque\"]}\n                  </TableCell>\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {amountInDifferentModes[\"DD\"]}\n                  </TableCell>\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {amountInDifferentModes[\"Card\"]}\n                  </TableCell>\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {amountInDifferentModes[\"Netbanking\"]}\n                  </TableCell>\n                  <TableCell\n                    align=\"center\"\n                    style={{ textTransform: \"capitalize\" }}>\n                    {amountInDifferentModes[\"Upi\"]}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      </Paper>\n      <Grid\n        rowSpacing={1}\n        columnSpacing={2}\n        container\n        sx={{ display: \"flex\", alignItems: \"center\", my: 1 }}>\n        <Grid item xs={12} md={3}>\n          <CustomSelect\n            label=\"Search By\"\n            options={Category_Options}\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n            isSearch={false}\n          />\n        </Grid>\n        <Grid item xs={12} md={3} sx={{ alignSelf: \"center\" }}>\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            sx={{ mt: 2 }}\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <CustomTable\n        actions={[\"custom\"]}\n        bodyDataModal=\"data\"\n        bodyData={filteredReceipts}\n        tableKeys={feeOverviewReceiptTableKeys}\n        CustomAction={CustomAction}\n      />\n\n      {allReceipts.length && (\n        <Box\n          sx={{\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"flex-end\",\n            padding: \"10px\",\n            alignItems: \"center\",\n          }}>\n          <LoadingButton\n            variant=\"contained\"\n            size=\"small\"\n            loading={downloadingOverview}\n            onClick={downloadFeeOverview}>\n            Download\n          </LoadingButton>\n        </Box>\n      )}\n    </>\n  );\n}\n","/** @format */\n\nexport const reconciliationTableKeys = [\n  {\n    name: \"Receipt Number\",\n    key: \"receiptNumber\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Roll No\",\n    key: \"roleNo\",\n  },\n  {\n    name: \"Amount\",\n    key: \"amountPaid\",\n  },\n  {\n    name: \"Bank Name\",\n    key: \"bankName\",\n  },\n  {\n    name: \"Bank Branch\",\n    key: \"branchName\",\n  },\n\n  {\n    name: \"Cheque Number\",\n    key: \"chequeNumber\",\n  },\n  {\n    name: \"Date\",\n    key: \"chequeDate\",\n    isDate: true,\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { reconciliationTableKeys } from \"../../data/tableKeys/reconciliationData\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n// icons\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CircularProgress, IconButton, Stack, Tooltip } from \"@mui/material\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst CustomActionFee = ({\n  onUpdate = () => {},\n  data = {},\n  // onEditClick = () => {},\n  onNavigateFeeMap = () => {},\n}) => {\n  const [loading, setLoading] = useState(\"\");\n  console.log(data?.reconciliationStatus, \"llloosing\");\n\n  const updateStatus = async (status, id) => {\n    console.log(status, id, \"pooo\");\n\n    try {\n      setLoading(status);\n      const payload = {\n        action: status,\n      };\n      await put(\n        `${PRIVATE_URLS.receipt.updateSingleReceiptReconciliationStatusStatus}/${id}`,\n        payload\n      );\n      onUpdate();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(\"\");\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <CheckPermission module=\"Reconciliation\" permission=\"update\">\n          <Tooltip title=\"Approve\">\n            <IconButton\n              disabled={loading === \"Approve\"}\n              size=\"small\"\n              onClick={() => updateStatus(\"Approve\", data?._id)}>\n              {loading === \"Approve\" ? (\n                <CircularProgress size={20} />\n              ) : (\n                <CheckIcon color=\"primary\" fontSize=\"12px\" />\n              )}\n            </IconButton>\n          </Tooltip>\n        </CheckPermission>\n        <CheckPermission module=\"Reconciliation\" permission=\"update\">\n          {data?.reconciliationStatus != \"Rejected\" && (\n            <Tooltip title=\"Reject\">\n              <IconButton\n                disabled={loading === \"Reject\"}\n                size=\"small\"\n                onClick={() => updateStatus(\"Reject\", data?._id)}>\n                {loading === \"Reject\" ? (\n                  <CircularProgress size={20} />\n                ) : (\n                  <CloseIcon color=\"error\" fontSize=\"12px\" />\n                )}\n              </IconButton>\n            </Tooltip>\n          )}\n        </CheckPermission>\n      </Stack>\n    </>\n  );\n};\n\nexport default function Reconciliation() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n\n  const getAllReceipts = async () => {\n    try {\n      const { data } = await get(\n        PRIVATE_URLS.receipt.getReceiptsPaidWithCheque,\n        {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        }\n      );\n      setData(\n        data.result.map((d) => ({\n          ...d,\n          roleNo: d?.payeeDetails?.rollNumber,\n          name: d?.payeeDetails?.name,\n          bankName: d?.chequeDetails?.bankName,\n          branchName: d?.chequeDetails?.branchName,\n          chequeNumber: d?.chequeDetails?.chequeNumber,\n          chequeDate: d?.chequeDetails?.chequeDate,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllReceipts();\n  }, [selectedSetting._id]);\n\n  return (\n    <>\n      <PageHeader title=\"Fee Reconciliation\" />\n      <CustomTable\n        actions={[\"custom\"]}\n        bodyDataModal=\"Fee Reconciliation\"\n        bodyData={data}\n        tableKeys={reconciliationTableKeys}\n        CustomAction={CustomActionFee}\n        onUpdate={getAllReceipts}\n      />\n    </>\n  );\n}\n","export const manageHostelTableKeys = [\n  {\n    name: \"Hostel Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Hostel Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Address\",\n    key: \"address\",\n  },\n];\n","/** @format */\n\nimport React from \"react\";\nimport { Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\n// icons\nimport { Close } from \"@mui/icons-material\";\n\nexport default function ViewModel({ open, onClose, title, children }) {\n  return (\n    <>\n      <Dialog\n        onClose={onClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}>\n        <DialogTitle\n          sx={{ m: 0, p: 2, fontWeight: 600 }}\n          id=\"customized-dialog-title\">\n          {title}\n        </DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n          }}>\n          <Close />\n        </IconButton>\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function HostelViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.name}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Hostel Type{\" \"}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.type}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Address\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.address}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelTableKeys } from \"../../data/tableKeys/manageHostelData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Grid } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport HostelViewDialog from \"./HostelViewDialog\";\n\nconst hostelType = [\n  { label: \"Boys\", value: \"Boys\" },\n  { label: \"Girls\", value: \"Girls\" },\n  { label: \"Combined\", value: \"Combined\" },\n];\n\nexport default function ManageHostel() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getWarden = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n\n      const employeeData = data.result.filter((e) => e.role.name === \"WARDEN\");\n      setEmployees(\n        employeeData.map((e) => ({\n          ...e,\n          label: e.basicInfo.name,\n          value: e._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getWarden();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.hostel.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.hostel.create, values);\n      }\n      setDataToEdit(null);\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      type: dataToEdit?.type || \"\",\n      warden: dataToEdit?.warden?._id || \"\",\n      address: dataToEdit?.address || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      note: dataToEdit?.note || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const handleEdit = (data) => {\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const deleteHostel = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.hostel.delete + \"/\" + id);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    getData();\n    setDataToEdit(null);\n  };\n\n  const handleClickOpenView = (data) => {\n    console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting?.name,\n    });\n  };\n\n  const onClose = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        bodyDataModal=\"hostel\"\n        module=\"Manage Hostel\"\n        bodyData={data}\n        tableKeys={manageHostelTableKeys}\n        onDeleteClick={deleteHostel}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm\n        title=\"Add Hostel\"\n        module=\"Manage Hostel\"\n        onAddClick={onAddClick}\n      />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Hostel\" : \"Add Hostel\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Hostel Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"contactNumber\"\n              label=\"Phone No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"type\"\n              label=\"Hostel Type\"\n              required={true}\n              options={hostelType}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"warden\"\n              label=\"Select Warden\"\n              required={true}\n              options={employees}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"address\"\n              label=\"Address\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput formik={entryFormik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <HostelViewDialog\n        title=\"Hostel Information\"\n        open={modalData?.open}\n        tableData={modalData?.tableData}\n        schoolName={modalData?.schoolName}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n","export const manageHostelRoomTableKeys = [\n  {\n    name: \"Room Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Specification\",\n    key: \"specification\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomTableKeys } from \"../../data/tableKeys/manageHostelRoom\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport AddForm from \"../../forms/AddForm\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormModal from \"../../forms/FormModal\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ManageRoomType() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [data, setData] = useState([]);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const getRoomTypes = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setData(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomTypes();\n  }, [selectedSetting]);\n\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.roomType.update + \"/\" + dataToEdit._id,\n          values\n        );\n\n        // setDataToEdit(null);\n      } else {\n        const { data } = await post(PRIVATE_URLS.roomType.create, values);\n      }\n      setLoading(false);\n      getRoomTypes();\n      handleClose();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      specification: dataToEdit?.specification || \"\",\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const deleteRoomType = async (id) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.roomType.delete + \"/\" + id);\n      getRoomTypes();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    console.log(data, \"iiii\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Room Type\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\"]}\n        tableKeys={manageHostelRoomTableKeys}\n        module=\"Manage Room Type\"\n        bodyDataModal=\"room\"\n        bodyData={data}\n        onDeleteClick={deleteRoomType}\n        onEditClick={handleEdit}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm\n        title=\"Add Room Type\"\n        module=\"Manage Room Type\"\n        onAddClick={onAddClick}\n      />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={dataToEdit ? \"Update Room Type\" : \"Add Room Type\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"specification\"\n              label=\"Specification\"\n              required={true}\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n}\n","/** @format */\n\nexport const manageHostelRoomBedTableKeys = [\n  {\n    name: \"Room no\",\n    key: \"number\",\n  },\n  {\n    name: \"Room Type\",\n    key: \"roomType\",\n  },\n  {\n    name: \"Total Seat\",\n    key: \"totalBeds\",\n  },\n  {\n    name: \"Hostel Name\",\n    key: \"hostelName\",\n  },\n];\n","/** @format */\n\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  styled,\n  tableCellClasses,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport ViewModel from \"../../forms/ViewModel\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nconst StyledTableRow = styled(TableRow)(({ theme, isDarkMode }) => ({\n  width: \"200px\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme, isDarkMode }) => ({\n  width: \"300px\",\n  border: \"1px solid gray\",\n  color: isDarkMode ? \"#fff\" : \"#000\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: isDarkMode ? \"transparent\" : \"blue\",\n    color: isDarkMode ? \"#fff\" : \"#000\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function RoomAndBedViewDialog({\n  title = \"\",\n  onClose = () => {},\n  open = true,\n  tableData,\n  schoolName,\n}) {\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  console.log(tableData, \"tableData\");\n\n  return (\n    <>\n      <ViewModel title={title} onClose={onClose} open={open}>\n        <Table aria-label=\"customized table\">\n          <TableBody>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                School Name\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {schoolName}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Room No\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.number}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Seat Total\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.totalBeds}\n              </StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Bed\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.beds?.map((s) => (\n                  <Box\n                    sx={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      my: 1,\n                    }}\n                    key={s.name}>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Name\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.name || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: \"bold\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Position\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.position || \"NA\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow isDarkMode={isDarkMode}>\n                      <StyledTableCell\n                        align=\"left\"\n                        sx={{ fontWeight: 600, width: \"200px\" }}\n                        isDarkMode={isDarkMode}>\n                        Bed Allocated\n                      </StyledTableCell>\n                      <StyledTableCell\n                        align=\"left\"\n                        width={100}\n                        isDarkMode={isDarkMode}>\n                        {s?.allocated ? \"Yes\" : \"No\"}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  </Box>\n                ))}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Note\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.note}\n              </StyledTableCell>\n            </StyledTableRow>\n            <StyledTableRow isDarkMode={isDarkMode}>\n              <StyledTableCell\n                align=\"left\"\n                sx={{ fontWeight: \"bold\" }}\n                isDarkMode={isDarkMode}>\n                Created\n              </StyledTableCell>\n              <StyledTableCell align=\"left\" width={100} isDarkMode={isDarkMode}>\n                {tableData?.createdAt}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </ViewModel>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageHostelRoomBedTableKeys } from \"../../data/tableKeys/manageHostelRoomBedData\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { useFormik } from \"formik\";\nimport FormModal from \"../../forms/FormModal\";\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport AddForm from \"../../forms/AddForm\";\n// iocons\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CustomInput from \"../../forms/CustomInput\";\nimport RoomAndBedViewDialog from \"./RoomAndBedViewDialog\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\n\nexport default function ManageRoomAndBed() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { isDarkMode } = useContext(ThemeModeContext);\n  const [data, setData] = useState([]);\n  const [roomType, setRoomType] = useState([]);\n  const [hostels, setHostels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [updatingBed, setUpdatingBed] = useState(false);\n  const [deletingBed, setDeletingBed] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modalData, setModalData] = useState({\n    open: false,\n    tableData: \"\",\n    action: () => {},\n  });\n\n  // get rooms\n  const getRoomList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list);\n      setData(\n        data.result.map((h) => ({\n          ...h,\n          hostelName: h?.hostel?.name,\n          roomType: h.type?.name,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get room type list\n  const getRoomTypeList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.roomType.list);\n      setRoomType(data.result.map((r) => ({ label: r.name, value: r._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get hostel list\n  const getHostelList = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n      setHostels(data.result.map((h) => ({ label: h.name, value: h._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRoomList();\n    getRoomTypeList();\n    getHostelList();\n  }, [selectedSetting]);\n\n  // Add/Update event handle\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      if (dataToEdit) {\n        delete values.beds;\n        const { data } = await put(\n          PRIVATE_URLS.room.update + \"/\" + dataToEdit._id,\n          values\n        );\n      } else {\n        let payload = { ...values, totalBeds: values.beds.length };\n\n        const { data } = await post(PRIVATE_URLS.room.create, payload);\n      }\n      handleClose();\n      getRoomList();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      number: dataToEdit?.number || \"\",\n      type: dataToEdit?.type?._id || \"\",\n      totalBeds: dataToEdit?.totalBeds || 0,\n      hostel: dataToEdit?.hostel?._id || \"\",\n      note: dataToEdit?.note || \"\",\n      beds: dataToEdit?.beds || [\n        {\n          id: 1,\n          name: \"\",\n          position: \"\",\n          allocated: false,\n        },\n      ],\n    },\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n  });\n\n  const onAddBedsHandle = () => {\n    let initialBedsData = [...formik.values.beds];\n    let newBedData = {\n      id: initialBedsData.length + 1,\n      name: \"\",\n      position: \"\",\n      allocated: false,\n    };\n    formik.setFieldValue(\"beds\", [...initialBedsData, newBedData]);\n  };\n\n  const removeBed = (index) => {\n    let initialBedsData = [...formik.values.beds];\n    initialBedsData.splice(index, 1);\n    formik.setFieldValue(\"beds\", initialBedsData);\n  };\n\n  const updateBed = async (bedId) => {\n    let bedData = formik.values.beds.find((bed) => bed._id === bedId);\n    try {\n      setUpdatingBed(true);\n      const { data } = await put(\n        PRIVATE_URLS.room.update + \"/\" + bedId,\n        bedData\n      );\n      setUpdatingBed(false);\n    } catch (error) {\n      console.log(error);\n      setUpdatingBed(false);\n    }\n  };\n\n  const deleteBed = async (bedId) => {\n    try {\n      setDeletingBed(true);\n      const { data } = await put(PRIVATE_URLS.room.deleteBed + \"/\" + bedId);\n      setDeletingBed(false);\n    } catch (error) {\n      console.log(error);\n      setDeletingBed(false);\n    }\n  };\n\n  const deleteRoom = async (roomId) => {\n    try {\n      const { data } = await del(PRIVATE_URLS.room.delete + \"/\" + roomId);\n      getRoomList();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    // console.log(data, \"eee\");\n    setOpen(true);\n    setDataToEdit(data);\n  };\n\n  const onAddClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDataToEdit(null);\n    formik.resetForm();\n  };\n\n  const handleCustomInputChange = (event, bed) => {\n    formik.setFieldValue(\n      \"beds\",\n      formik.values.beds.map((b) =>\n        b.id === bed.id ? { ...b, [event.target.name]: event.target.value } : b\n      )\n    );\n  };\n\n  const handleClickOpenView = (data) => {\n    // console.log(data, \"vvvvvb\");\n    setModalData({\n      ...modalData,\n      open: true,\n      tableData: data,\n      schoolName: selectedSetting.name,\n    });\n    getRoomList();\n  };\n\n  const onCloseModal = () => {\n    setModalData({ ...modalData, open: false });\n  };\n  return (\n    <>\n      <PageHeader title=\"Hostel Room & Beds\" />\n\n      <CustomTable\n        actions={[\"edit\", \"delete\", \"view\"]}\n        module=\"Manage Room Bed\"\n        bodyDataModal=\"room\"\n        bodyData={data}\n        tableKeys={manageHostelRoomBedTableKeys}\n        onDeleteClick={deleteRoom}\n        onEditClick={handleEdit}\n        onViewClick={handleClickOpenView}\n      />\n\n      {/* feb model open ============== */}\n      <AddForm\n        title=\"Add Room & Bed\"\n        module=\"Manage Room Bed\"\n        onAddClick={onAddClick}\n      />\n\n      {/* Add/update model ============== */}\n      <FormModal\n        open={open}\n        formik={formik}\n        formTitle={dataToEdit ? \"Update Room & Bed\" : \"Add Room & Bed\"}\n        onClose={handleClose}\n        submitButtonTitle={dataToEdit ? \"Update\" : \"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"number\"\n              label=\"Room No.\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"type\"\n              label=\"Room Type\"\n              required={true}\n              options={roomType}\n            />\n          </Grid>\n          {/* <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={formik}\n              name=\"totalBeds\"\n              label=\"Total Beds\"\n              required={true}\n              disabled={true}\n            />\n          </Grid> */}\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={formik}\n              name=\"hostel\"\n              label=\"Hostel Name\"\n              required={true}\n              options={hostels}\n            />\n          </Grid>\n          <Grid xs={12} sm={12} md={12} item>\n            <Box\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                padding: \"10px\",\n                alignItems: \"center\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n              }}>\n              <Typography>Bed Name</Typography>\n              <Typography>Bed Position</Typography>\n              <Typography>Is Alloted</Typography>\n            </Box>\n\n            {/* <AddBedsTable onAddBedsHandle={onAddBedsHandle} formik={formik} /> */}\n            {formik.values.beds.map((b, i) => (\n              <Grid\n                container\n                key={i}\n                gap={1}\n                sx={{\n                  backgroundColor: isDarkMode ? \"transparent\" : \"#F0F8FF\",\n                  borderRadius: \"5px\",\n                  padding: \"20px 15px 30px 15px\",\n                  border: \"1px solid lightgrey\",\n                  my: 2,\n                }}>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.name}\n                    name=\"name\"\n                    label=\"Bed Name\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid xs={12} sm={4} md={4} item>\n                  <CustomInput\n                    value={b?.position}\n                    name=\"position\"\n                    label=\"Bed Position\"\n                    required={true}\n                    onChange={(e) => handleCustomInputChange(e, b)}\n                  />\n                </Grid>\n                <Grid\n                  xs={12}\n                  sm={3}\n                  md={3}\n                  item\n                  sx={{\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}>\n                  <Button onClick={() => onAddBedsHandle(b, i)}>\n                    <AddIcon />\n                  </Button>\n                  <Button color=\"error\" onClick={() => removeBed(i)}>\n                    <RemoveIcon color=\"error\" />\n                  </Button>\n                  {/* <Typography> */}\n                  {/* <Typography color={allocated ? \"green\" : \"red\"}> */}\n                  {/* Not Allotted */}\n                  {/* {allocated ? \"Allotted\" : \"Not Allotted\"} */}\n                  {/* </Typography> */}\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Grid xs={12} sm={12} md={12} item>\n            <FormInput formik={formik} name=\"note\" label=\"Note\" />\n          </Grid>\n        </Grid>\n      </FormModal>\n\n      {/* Add/update model ============== */}\n      <RoomAndBedViewDialog\n        title=\"Room Information\"\n        open={modalData.open}\n        tableData={modalData.tableData}\n        schoolName={modalData.schoolName}\n        onClose={onCloseModal}\n      />\n    </>\n  );\n}\n","/** @format */\n\nexport const hostelMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n  {\n    name: \"Room\",\n    key: \"number\",\n  },\n];\n","/** @format */\n\nexport const hostelNNonMemberTableKeys = [\n  {\n    name: \"Name\",\n    key: \"name\",\n    path: \"studentName\",\n  },\n  {\n    name: \"Admisson No\",\n    key: \"admissionNumber\",\n    path: \"admission\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport PageHeader from \"../../components/PageHeader\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport { hostelMemberTableKeys } from \"../../data/tableKeys/hostelMemberData\";\nimport { hostelNNonMemberTableKeys } from \"../../data/tableKeys/hostelNonMember\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper, Stack } from \"@mui/material\";\nimport { del, get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { Add } from \"@mui/icons-material\";\nimport FormModal from \"../../forms/FormModal\";\nimport FormInput from \"../../forms/FormInput\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst CustomActionAdd = ({ onUpdate = () => {}, data = {} }) => {\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { selectedSetting } = useContext(SettingContext);\n  const [hostel, setHostel] = useState([]);\n  const [room, setRoom] = useState([]);\n\n  const getHostel = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.hostel.list);\n\n      setHostel(\n        data.result.map((s) => ({ ...s, label: s.name, value: s._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoom = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.room.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            hostel: entryFormik.values.hostel,\n          },\n        },\n      });\n\n      setRoom(\n        data.result.map((s) => ({\n          ...s,\n          label: String(s.number),\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getHostel();\n  }, [selectedSetting]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMember = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        schoolId: selectedSetting._id,\n        hostel: values.hostel,\n        room: values.room,\n        bed: values.bed,\n      };\n      setLoading(true);\n      await put(\n        PRIVATE_URLS.student.updateHostelMember + \"/\" + data._id,\n        payload\n      );\n      onUpdate();\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: data?.basicInfo?.name || \"\",\n      hostel: \"\",\n      room: \"\",\n      bed: \"\",\n    },\n    onSubmit: addMember,\n  });\n  useEffect(() => {\n    if (entryFormik.values.hostel) {\n      getRoom();\n    }\n  }, [entryFormik.values.hostel, selectedSetting]);\n\n  return (\n    <>\n      <Stack direction=\"row\" spacing={1}>\n        <CheckPermission module=\"Hostel Member\" permission=\"update\">\n          <Button\n            size=\"small\"\n            startIcon={<Add />}\n            variant=\"contained\"\n            onClick={handleClickOpen}>\n            Member\n          </Button>\n        </CheckPermission>\n      </Stack>\n\n      <FormModal\n        open={open}\n        formik={entryFormik}\n        formTitle={\"Add Member\"}\n        onClose={handleClose}\n        submitButtonTitle={\"Submit\"}\n        adding={loading}>\n        <Grid rowSpacing={0} columnSpacing={2} container>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormInput\n              formik={entryFormik}\n              name=\"name\"\n              label=\"Name\"\n              required={true}\n            />\n          </Grid>\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"hostel\"\n              label=\"Hostel\"\n              required={true}\n              options={hostel}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"room\"\n              label=\"Room No\"\n              required={true}\n              options={room}\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={6} item>\n            <FormSelect\n              formik={entryFormik}\n              name=\"bed\"\n              label=\"Beds\"\n              required={true}\n              options={\n                room\n                  .find((r) => r._id === entryFormik.values.room)\n                  ?.beds.map((bed) => ({\n                    label: bed.name,\n                    value: bed._id,\n                  })) || []\n              }\n            />\n          </Grid>\n        </Grid>\n      </FormModal>\n    </>\n  );\n};\n\nexport default function HostelMember() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n\n  const [hostelMember, setHostelMember] = useState([]);\n  const [nonHostelMember, setNonHostelMember] = useState([]);\n\n  // get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClasses(data.result.map((d) => ({ label: d.name, value: d._id })));\n      entryFormik.setFieldValue(\"class\", data.result[0]?._id);\n      formik.setFieldValue(\"class\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get academic year\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYear(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      entryFormik.setFieldValue(\"academicYear\", data.result[0]._id);\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get section\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class || entryFormik.values.class,\n          },\n        },\n      });\n\n      const section = data.result.map((s) => ({\n        label: s.name,\n        value: s._id,\n      }));\n\n      const sectionAllOption = [{ label: \"All\", value: \"all\" }, ...section];\n      setSections(sectionAllOption);\n      entryFormik.setFieldValue(\"section\", \"all\");\n      formik.setFieldValue(\"section\", \"all\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDataMemberList = async (values) => {\n    try {\n      if (values.section === \"all\") {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n            },\n          },\n        });\n\n        console.log(data.result, \"=================\");\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      } else {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              academicYear: values.academicYear,\n              \"academicInfo.class\": values.class,\n              \"academicInfo.section\": values.section,\n            },\n          },\n        });\n\n        const filteredDataMember = data.result\n          .filter((s) => s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        const filteredDataNonMember = data.result\n          .filter((s) => !s?.otherInfo?.hostelMember)\n          .map((s) => ({\n            ...s,\n            studentName: s.basicInfo,\n            admission: s.academicInfo,\n          }));\n\n        setHostelMember(filteredDataMember);\n\n        setNonHostelMember(filteredDataNonMember);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getDataMemberList,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n\n  useEffect(() => {\n    if (entryFormik.values.class || formik.values.class) {\n      getSections();\n    }\n  }, [entryFormik.values.class, formik.values.class, selectedSetting]);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  const handleDelete = async (id) => {\n    try {\n      const res = await del(PRIVATE_URLS.student.removeHostelMember + \"/\" + id);\n      entryFormik.handleSubmit();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Hostel Member\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Member List\", \"Non Member List\"]}\n      />\n      <TabPanel index={0} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={entryFormik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={entryFormik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <CheckPermission module=\"Hostel Member\" permission=\"view\">\n                <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                  <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                    Find\n                  </Button>\n                </Grid>\n              </CheckPermission>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={[\"delete\"]}\n          bodyDataModal=\"hostel member\"\n          module=\"Hostel Member\"\n          tableKeys={hostelMemberTableKeys}\n          bodyData={hostelMember}\n          onDeleteClick={handleDelete}\n        />\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <Grid rowSpacing={1} columnSpacing={2} container>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"academicYear\"\n                  formik={formik}\n                  label=\"Select Academic Year\"\n                  options={academicYear}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={formik}\n                  label=\"Select Class\"\n                  options={classes}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={formik}\n                  label=\"Select Section\"\n                  options={sections}\n                />\n              </Grid>\n              <CheckPermission module=\"Hostel Member\" permission=\"view\">\n                <Grid item xs={12} md={6} lg={3} sx={{ alignSelf: \"center\" }}>\n                  <Button size=\"small\" type=\"submit\" variant=\"contained\">\n                    Find\n                  </Button>\n                </Grid>\n              </CheckPermission>\n            </Grid>\n          </form>\n        </Paper>\n        <CustomTable\n          actions={\"custom\"}\n          bodyDataModal=\"hostel member\"\n          tableKeys={hostelNNonMemberTableKeys}\n          bodyData={nonHostelMember}\n          CustomAction={CustomActionAdd}\n          onUpdate={formik.handleSubmit}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","export const studentBulkPhotoTableKeys = [\n  {\n    name: \"Roll No\",\n    key: \"rollNo\",\n  },\n  {\n    name: \"Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Photo\",\n    key: \"image\",\n  },\n\n  {\n    name: \"File\",\n    key: \"file\",\n  },\n];\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\n\nimport FormSelect from \"../../forms/FormSelect\";\nimport { Button, Grid, Paper } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { studentBulkPhotoTableKeys } from \"../../data/tableKeys/studentBulkPhotoData\";\n\nexport default function StudentBulkPhoto() {\n  const [data, setDate] = useState([]);\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n      student: \"\",\n    },\n    onSubmit: console.log(\"nnnn\"),\n  });\n  return (\n    <>\n      <PageHeader title=\"Student Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <Grid rowSpacing={1} columnSpacing={2} container>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"academicYear\"\n              formik={entryFormik}\n              label=\"Select Academic Year\"\n              // options={\"\"}\n            />\n          </Grid>\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"class\"\n              formik={entryFormik}\n              label=\"Select Class\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid xs={12} md={6} lg={3} item>\n            <FormSelect\n              required={true}\n              name=\"sectiion\"\n              formik={entryFormik}\n              label=\"Select Section\"\n              // options={\"\"}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Button size=\"small\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <CustomTable\n        actions={[\"edit\"]}\n        tableKeys={studentBulkPhotoTableKeys}\n        bodyDataModal=\"student bulk photo\"\n        bodyData={data}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Library_Member = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function AddEmployee() {\n  const { selectedSetting } = useContext(SettingContext);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [selectedPhoto, setSelectedPhoto] = useState([]);\n  const [resume, setResume] = useState([]);\n  console.log(dataToEdit, \"dataToEdit\");\n\n  const getEmployeeDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.getEmpById + \"/\" + id);\n\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getEmployeeDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n  }, [selectedSetting._id]);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: values.dob,\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n          responsibility: values.responsibility,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: values.joiningDate,\n          // resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public || false,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        photo: values.photo,\n        libraryMember: values.libraryMember,\n        schoolId: selectedSetting._id,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedPhoto.forEach((file) => formData.append(\"employeePhoto\", file));\n      resume.forEach((file) => formData.append(\"resume\", file));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.employee.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n        // console.log(data, \"data555\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.employee.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      navigate(\"/sch/human-resource/employee\");\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.basicInfo.name || \"\",\n      empId: dataToEdit?.basicInfo.empId || \"\",\n      responsibility: dataToEdit?.basicInfo.responsibility || \"\",\n      designation: dataToEdit?.basicInfo.designation._id || \"\",\n      contactNumber: dataToEdit?.contactNumber || \"\",\n      secMobileNo: dataToEdit?.basicInfo.secMobileNo || \"\",\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      presentAddress: dataToEdit?.basicInfo.presentAddress || \"\",\n      permanentAddress: dataToEdit?.basicInfo.permanentAddress || \"\",\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      fatherName: dataToEdit?.basicInfo.fatherName || \"\",\n      spouseName: dataToEdit?.basicInfo.spouseName || \"\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      fatherOccupation: dataToEdit?.basicInfo.fatherOccupation || \"\",\n      spouseOccupation: dataToEdit?.basicInfo.spouseOccupation || \"\",\n      qualification: dataToEdit?.academicInfo.qualification || \"\",\n      workExperience: dataToEdit?.academicInfo.workExperience || \"\",\n      email: dataToEdit?.academicInfo.email || \"\",\n      salaryType: dataToEdit?.academicInfo.salaryType || \"\",\n      role: dataToEdit?.role._id || \"\",\n      department: dataToEdit?.academicInfo.department._id || \"\",\n      joiningDate: dataToEdit?.academicInfo?.joiningDate\n        ? dayjs(dataToEdit.academicInfo.joiningDate).format(\"YYYY/MM/DD\")\n        : null,\n      libraryMember: dataToEdit?.libraryMember || false,\n      username: dataToEdit?.username || \"\",\n      password: dataToEdit?.otherInfo.password || \"\",\n      public: dataToEdit?.otherInfo.public || false,\n      showDetailsForWeb: dataToEdit?.otherInfo.showDetailsForWeb || false,\n      active: dataToEdit?.active || true,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"resume\") {\n        setResume(fileList);\n      } else {\n        setSelectedPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedPhoto(selectedPhoto.filter((img) => img.name != fileName));\n    setResume(resume.filter((img) => img.name != fileName));\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={\n              selectedPhoto.length > 0\n                ? URL.createObjectURL(selectedPhoto[0])\n                : dataToEdit?.photo\n                ? dataToEdit?.photo\n                : avatar\n            }\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"photo\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FileSelect\n              name=\"employeePhoto\"\n              multi={false}\n              label=\"Select Photo\"\n              onChange={(e) => handleChangePhoto(e, \"employeePhoto\")}\n              previousFile={dataToEdit?.photo}\n              customOnChange={true}\n              selectedFiles={selectedPhoto}\n              onRemove={(fileName) => handleRemoveFile(fileName)}\n              accept=\"image/jpeg, image/png\"\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"resume\"\n                  label=\"Upload Resume\"\n                  onChange={(e) => handleChangePhoto(e, \"resume\")}\n                  customOnChange={true}\n                  selectedFiles={resume}\n                  previousFile={dataToEdit?.academicInfo?.resume}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n\n              {!dataToEdit && (\n                <Grid xs={12} md={6} lg={3} item>\n                  <FormInput\n                    required={true}\n                    name=\"password\"\n                    formik={entryFormik}\n                    label=\"Password\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Library Member\"\n                  options={Library_Member}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"View On Web\"\n                  options={Is_Public}\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","export const manageInstituteTableKeys = [\n  {\n    name: \"School Name\",\n    key: \"name\",\n  },\n  {\n    name: \"Logo\",\n    type: \"image\",\n    key: \"logo\",\n  },\n];\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport CustomTable from \"../../components/Tables/CustomTable\";\nimport { manageInstituteTableKeys } from \"../../data/tableKeys/manageInstituteData\";\nimport AddForm from \"../../forms/AddForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function ManageInstitute() {\n  const [data, setData] = useState();\n  const { setSettings, settings } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const handleAddClick = (e) => {\n    navigate(\"/sch/manage-institute/add-institute\");\n  };\n\n  const getData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.list);\n      setSettings(data.result.filter((s) => s.active));\n      setData(data.result); // updating the settings state with the fetched data\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleToggleSwitch = async (school) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.toggleActiveStatus + \"/\" + school._id\n      );\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (data) => {\n    navigate(`/sch/manage-institute/edit-institute/${data._id}`);\n  };\n  return (\n    <>\n      <PageHeader title=\"Manage Institute\" />\n      <CustomTable\n        actions={[\"edit\", \"switch\"]}\n        module=\"Institute\"\n        bodyDataModal=\"manage institute\"\n        bodyData={data}\n        tableKeys={manageInstituteTableKeys}\n        toggleStatus=\"active\"\n        onToggleSwitch={handleToggleSwitch}\n        onEditClick={handleEdit}\n      />\n      {!settings.length ? (\n        <AddForm\n          module=\"Institute\"\n          title=\"Add Institute\"\n          onAddClick={handleAddClick}\n        />\n      ) : null}\n    </>\n  );\n}\n","/** @format */\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport { Close } from \"@mui/icons-material\";\nimport { put } from \"../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\n\nexport default function AddOrUpdateFiles({\n  dataToEdit,\n  title,\n  onUpdate = () => {},\n  styles = {},\n}) {\n  const [open, setOpen] = useState(false);\n  const [updatingFiles, setUpdatingFiles] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const theme = useTheme();\n  let fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClose = () => setOpen(false);\n  const handleOpenDialog = () => setOpen(true);\n\n  const handleSelectFile = (e) => {\n    const selectedFiles = e.target.files;\n\n    if (selectedFiles.length > 0) {\n      let fileList = [];\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n\n        fileList.push(file);\n      }\n      setSelectedFiles([...fileList]);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n  const handleRemoveFile = (i) => {\n    setSelectedFiles(selectedFiles.filter((f, index) => index !== i));\n  };\n\n  const handleUpdateItem = async (e) => {\n    e.preventDefault();\n\n    try {\n      setUpdatingFiles(true);\n      const formData = new FormData();\n      selectedFiles.forEach((f) => formData.append(\"bannerImages\", f));\n      console.log(selectedFiles, \"imageeeee\");\n      const { data } = await put(\n        PRIVATE_URLS.school.addFiles + \"/\" + dataToEdit._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      onUpdate(data.result);\n      handleClose();\n\n      setSelectedFiles([]);\n      setUpdatingFiles(false);\n    } catch (error) {\n      setUpdatingFiles(false);\n\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        fullWidth\n        onClick={handleOpenDialog}\n        size=\"small\"\n        variant=\"contained\"\n        sx={{ mt: 2 }}>\n        {title}\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          sx: {\n            width: \"100%\",\n            maxWidth: 650,\n            ...styles,\n          },\n        }}>\n        <DialogTitle>Add/Update Banner images</DialogTitle>\n        <Divider />\n        <DialogContent\n          sx={{\n            padding: \"10px\",\n          }}>\n          <Box sx={{ margin: \"20px 0\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}>\n              <Typography sx={{ fontWeight: \"bold\" }}>Add Files</Typography>\n              <TextField\n                name=\"images\"\n                label=\"Select files\"\n                fullWidth\n                onChange={handleSelectFile}\n                sx={{\n                  borderWidth: 1,\n                  borderRadius: theme.shape.borderRadius,\n                  maxWidth: \"300px\",\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{ type: \"file\", multiple: true }}\n                InputProps={{\n                  style: {\n                    borderWidth: 1,\n                    height: \"40px\",\n                    borderRadius: theme.shape.borderRadius,\n                  },\n                }}\n              />\n            </Box>\n            {selectedFiles.map((f, i) => (\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: \"10px\",\n\n                  background: \"#5fa5f661\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n                key={f.name + i.toString()}>\n                <Typography>{f.name}</Typography>\n                <IconButton onClick={(e) => handleRemoveFile(i)}>\n                  <Close fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"contained\"\n            onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            disabled={!selectedFiles.length}\n            size=\"small\"\n            loading={updatingFiles}\n            variant=\"contained\"\n            onClick={handleUpdateItem}>\n            Add\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, Grid } from \"@mui/material\";\nimport themeData from \"../data/themeData\";\nimport WebsiteThemeContext from \"../context/WebsiteThemeContext\";\nimport SettingContext from \"../context/SettingsContext\";\n\nexport default function ThemeSelector({ onThemeSelect = () => {}, webTheme }) {\n  const { selectedSetting } = React.useContext(SettingContext);\n  const { setSelectedTheme: setTheme } = React.useContext(WebsiteThemeContext);\n  const [selectedTheme, setSelectedTheme] = React.useState(\n    selectedSetting?.selectedTheme || 1\n  );\n\n  const [selectedIdCardTheme, setSelectedIdCardTheme] = React.useState(1);\n\n  const handleClick = (theme) => {\n    onThemeSelect(theme);\n    setSelectedTheme(theme);\n  };\n\n  const handleClickGenerateIdCard = (theme) => {\n    onThemeSelect(theme);\n    setSelectedIdCardTheme(theme);\n  };\n\n  return (\n    <React.Fragment>\n      <Box dividers>\n        <Grid spacing={2} container>\n          {webTheme\n            ? themeData.websiteThemes.map((t) => (\n                <Grid\n                  key={t.theme + t.image}\n                  item\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}>\n                  <div onClick={() => handleClick(t.theme)}>\n                    <img\n                      style={{\n                        height: \"150px\",\n                        width: \"200px\",\n                        objectFit: \"contain\",\n                        border:\n                          parseInt(selectedTheme) === t.theme\n                            ? \"2px solid green\"\n                            : \"2px solid lightgray\",\n                        borderRadius: \"5px\",\n                        overflow: \"hidden\",\n                      }}\n                      src={t.image}\n                      alt={`Theme ${t.theme}`}\n                    />\n                  </div>\n                </Grid>\n              ))\n            : themeData.idCardThemes.map((t) => (\n                <Grid\n                  key={t.theme + t.image}\n                  item\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}>\n                  <div onClick={() => handleClickGenerateIdCard(t.theme)}>\n                    <img\n                      style={{\n                        height: \"150px\",\n                        width: \"200px\",\n                        objectFit: \"contain\",\n                        border:\n                          parseInt(selectedIdCardTheme) === t.theme\n                            ? \"2px solid green\"\n                            : \"2px solid lightgray\",\n                        borderRadius: \"5px\",\n                        overflow: \"hidden\",\n                      }}\n                      src={t.image}\n                      alt={`Theme ${t.theme}`}\n                    />\n                  </div>\n                </Grid>\n              ))}\n        </Grid>\n      </Box>\n    </React.Fragment>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport TimezoneSelect from \"react-timezone-select\";\nimport currencyCodes from \"currency-codes\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport AddOrUpdateFiles from \"../../forms/AddOrUpdateFiles\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport currencyToSymbolMap from \"currency-symbol-map/map\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS, PUBLIC_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ThemeModeContext from \"../../context/ThemeModeContext\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport ThemeSelector from \"../../components/ThemeSelector\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst RollNumber_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto ascending name\",\n    value: \"autoAscendingName\",\n  },\n  {\n    label: \"Auto ascending name female\",\n    value: \"autoAscendingNameFemale\",\n  },\n];\nconst Attendence_Type = [\n  {\n    label: \"Class wise\",\n    value: \"classWise\",\n  },\n  {\n    label: \"Subject wise\",\n    value: \"subjectWise\",\n  },\n  {\n    label: \"Session wise\",\n    value: \"sessionWise\",\n  },\n];\nconst Admission_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Auto Ascending No.\",\n    value: \"autoAscendingNo\",\n  },\n];\nexport default function AddInstitute({ initialValue = null }) {\n  const { selectedSetting, setSelectedSetting, setSettings } =\n    useContext(SettingContext);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const symbol = Object.keys(currencyToSymbolMap);\n  const [dataToEdit, setDataToEdit] = useState(initialValue);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState([]);\n  const [bannerImages, setBannerImages] = useState([]);\n  const { isDarkMode } = useContext(ThemeModeContext);\n\n  const getSchoolDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.school.details + \"/\" + id);\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getSchoolDetails();\n    }\n  }, [id]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"logo\") {\n        setLogo(fileList);\n      } else if (type === \"bannerImages\") {\n        setBannerImages(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setLogo(logo.filter((img) => img.name != fileName));\n    setBannerImages(bannerImages.filter((img) => img.name != fileName));\n  };\n\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const currencies = currencyCodes.data.map((currency) => ({\n    label: `${currency.currency} - ${currency.code}`,\n    value: currency.code,\n  }));\n\n  const getAllSchools = async () => {\n    try {\n      const { data } = await get(PUBLIC_URLS.school.getSchools);\n      setSettings(data.result);\n      setSelectedSetting(\n        data.result?.find((s) => s._id === selectedSetting._id)\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        ...values,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"bodyData\", JSON.stringify(payload));\n      logo.forEach((f) => formData.append(\"logo\", f));\n\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.school.update + \"/\" + dataToEdit._id,\n          formData,\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\n        );\n      } else {\n        const { data } = await post(PRIVATE_URLS.school.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n\n      entryFormik.resetForm();\n      getAllSchools();\n      setLogo([]);\n      navigate(-1);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: dataToEdit?.name || \"\",\n      address: dataToEdit?.address || \"\",\n      phone: dataToEdit?.phone || \"\",\n\n      regDate: dataToEdit?.regDate\n        ? dayjs(dataToEdit.regDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      email: dataToEdit?.email || \"\",\n      fax: dataToEdit?.fax || \"\",\n      websiteFooter: dataToEdit?.websiteFooter || \"\",\n      description: dataToEdit?.description || \"\",\n      currency: dataToEdit?.currency || \"\",\n      currencySymbol: dataToEdit?.currencySymbol || \"\",\n      sessionStartMonth:\n        dataToEdit && dataToEdit.sessionStartMonth\n          ? dataToEdit.sessionStartMonth\n          : null,\n      sessionEndMonth:\n        dataToEdit && dataToEdit.sessionEndMonth\n          ? dataToEdit.sessionEndMonth\n          : null,\n      rollNumberType: dataToEdit?.rollNumberType || \"\",\n      studentAttendenceType: dataToEdit?.studentAttendenceType || \"\",\n      admissionNo: dataToEdit?.admissionNo || \"\",\n      latitude: dataToEdit?.latitude || \"\",\n      longitude: dataToEdit?.longitude || \"\",\n      defaultTimeZone: dataToEdit?.defaultTimeZone || \"\",\n      googleAnalyticsId: dataToEdit?.googleAnalyticsId || \"\",\n      teacherActivityFeedbackEnabled:\n        dataToEdit?.teacherActivityFeedbackEnabled || false,\n      facebookUrl: dataToEdit?.facebookUrl || \"\",\n      twitterUrl: dataToEdit?.twitterUrl || \"\",\n      linkedinUrl: dataToEdit?.linkedinUrl || \"\",\n      // gplusUrl: dataToEdit?.gplusUrl || \"\",\n      youtubeUrl: dataToEdit?.youtubeUrl || \"\",\n      instagramUrl: dataToEdit?.instagramUrl || \"\",\n      pinterestUrl: dataToEdit?.pinterestUrl || \"\",\n      location: dataToEdit?.location || \"\",\n      selectedTheme: dataToEdit?.selectedTheme || 1,\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const handleRemoveImg = async (img) => {\n    try {\n      const { data } = await put(\n        PRIVATE_URLS.school.removeFile + \"/\" + dataToEdit._id,\n        {\n          file: img,\n        }\n      );\n      getSchoolDetails();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSelectTheme = (theme) => {\n    entryFormik.setFieldValue(\"selectedTheme\", theme);\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Add Institute\" showTextField={false} />\n\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          <MuiBox>\n            <img\n              src={\n                logo.length > 0\n                  ? URL.createObjectURL(logo[0])\n                  : dataToEdit?.logo\n                  ? dataToEdit?.logo\n                  : avatar\n              }\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                objectFit: \"contain\",\n              }}\n              alt=\"loogo\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"logo\"\n                label=\"Select Logo\"\n                onChange={(e) => handleChangePhoto(e, \"logo\")}\n                previousFile={dataToEdit?.logo}\n                customOnChange={true}\n                selectedFiles={logo}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox style={{ position: \"relative\", zIndex: \"1\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"School Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"address\"\n                  formik={entryFormik}\n                  label=\"Address\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"phone\"\n                  formik={entryFormik}\n                  label=\"Phone number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Registration Date\"\n                  name=\"regDate\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"fax\" formik={entryFormik} label=\"Fax\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"location\"\n                  formik={entryFormik}\n                  label=\"Location\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"websiteFooter\"\n                  formik={entryFormik}\n                  label=\"Website Footer\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={12} lg={12} item>\n                <FormInput\n                  name=\"description\"\n                  formik={entryFormik}\n                  label=\"Note\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Settings */}\n        <FormBox sx={{ overflow: \"visible\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Setting Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"currency\"\n                  formik={entryFormik}\n                  label=\"Currency\"\n                  options={currencies}\n                  onChange={(event) => {\n                    const selectedCurrency = event.target.value;\n                    entryFormik.setFieldValue(\"currency\", selectedCurrency);\n                    entryFormik.setFieldValue(\n                      \"currencySymbol\",\n                      currencyToSymbolMap[selectedCurrency]\n                    );\n                  }}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"currencySymbol\"\n                  formik={entryFormik}\n                  label=\"Currency Symbol\"\n                  disabled\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session Start Month\"\n                  name=\"sessionStartMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MMM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Session End Month\"\n                  name=\"sessionEndMonth\"\n                  openTo=\"month\"\n                  inputFormat=\"MMM\"\n                  views={[\"month\"]}\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rollNumberType\"\n                  formik={entryFormik}\n                  label=\"Roll Number\"\n                  options={RollNumber_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"studentAttendenceType\"\n                  formik={entryFormik}\n                  label=\"Attendence Type \"\n                  options={Attendence_Type}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"admissionNo\"\n                  formik={entryFormik}\n                  label=\"Admission Number\"\n                  options={Admission_Options}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"latitude\"\n                  formik={entryFormik}\n                  label=\"Latitude\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"longitude\"\n                  formik={entryFormik}\n                  label=\"Longitude\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item mt={2}>\n                <TimezoneSelect\n                  styles={{\n                    control: (baseStyle, state) => ({\n                      ...baseStyle,\n                      height: \"42px\",\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                    }),\n                    menu: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                    }),\n\n                    option: (provided, state) => ({\n                      ...provided,\n                      zIndex: 1000,\n                      backgroundColor: isDarkMode ? \"black\" : \"white\",\n                      color: isDarkMode ? \"white\" : \"black\",\n                      \"&:hover\": {\n                        backgroundColor: isDarkMode ? \"lightgray\" : \"white\",\n                        color: isDarkMode ? \"black\" : \"\",\n                      },\n                    }),\n                  }}\n                  placeholder=\"Default Timezone\"\n                  name=\"defaultTimeZone\"\n                  value={entryFormik.values.defaultTimeZone}\n                  onChange={(value) =>\n                    entryFormik.setFieldValue(\"defaultTimeZone\", value)\n                  }\n                  label=\"Time Zone\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"googleAnalyticsId\"\n                  formik={entryFormik}\n                  label=\"Google Analytics Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"teacherActivityFeedbackEnabled\"\n                  formik={entryFormik}\n                  label=\"Teacher Activity Feedack Enable\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Social Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"X URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Banner Images */}\n        {dataToEdit ? (\n          <FormBox>\n            <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Banner Image\n            </Title>\n\n            <Grid container spacing={2}>\n              <Grid\n                container\n                item\n                xs={12}\n                sm={12}\n                md={12}\n                justifyContent=\"flex-end\">\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginRight: \"10px\",\n                  }}>\n                  <AddOrUpdateFiles\n                    dataToEdit={dataToEdit}\n                    title={\"Upload Banner\"}\n                    onUpdate={getSchoolDetails}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={12}\n                m={2}\n                gap={2}\n                sx={{\n                  display: \"flex\",\n                  overflowX: \"auto\",\n                }}>\n                {dataToEdit?.bannerImages?.map((image, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      justifyContent: \"center\",\n\n                      backgroundSize: \"cover\",\n                      \"&:hover\": {\n                        position: \"relative\",\n                        display: \"inline-block\",\n                      },\n                    }}>\n                    <img\n                      src={image}\n                      alt={\"image\"}\n                      style={{\n                        width: \"150px\",\n                        height: \"100px\",\n\n                        borderRadius: \"5px\",\n                        boxShadow: \"0px 0px 2px 0px gray\",\n                      }}\n                    />\n\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete\"\n                      onClick={() => handleRemoveImg(image)}\n                      sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        borderRadius: \"50px\",\n                        padding: \"2px\",\n                        cursor: \"pointer\",\n                        background: \"#DEE0E2\",\n                      }}>\n                      <CloseIcon color=\"error\" />\n                    </IconButton>\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n          </FormBox>\n        ) : null}\n\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Select Your Favorite Theme\n          </Title>\n          <Box m={2}>\n            <ThemeSelector onThemeSelect={handleSelectTheme} webTheme={true} />\n          </Box>\n        </FormBox>\n\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  {dataToEdit ? \"Update\" : \"Submit\"}\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get } from \"../../services/apiMethods\";\nimport themeData from \"../../data/themeData\";\nimport { Padding } from \"@mui/icons-material\";\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"#44628561\",\n    // width: \"100%\",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  width: 200,\n  padding: \"13px 5px\",\n  border: \"1px solid gray\",\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nexport default function FormTable({ employee }) {\n  const handleLinkClick = (url) => {\n    window.open(url, \"_blank\");\n  };\n\n  return (\n    <>\n      {employee?.photo ? (\n        <img\n          src={employee.photo}\n          height={100}\n          width={100}\n          style={{\n            borderRadius: \"50%\",\n            display: \"block\",\n            objectFit: \"cover\",\n            margin: \"0 auto\",\n            border: \"1x solid lightgray\",\n          }}\n          alt=\"Employee Photo\"\n        />\n      ) : (\n        <Avatar sx={{ height: 75, width: 75 }} src=\"/broken-image.jpg\" />\n      )}\n\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: 660,\n          my: 2,\n          display: {\n            xs: \"none\",\n            sm: \"block\",\n            md: \"block\",\n            lg: \"block\",\n          },\n          borderRadius: \"5px\",\n        }}>\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n\n      {/* ======== Mobile view table ============ */}\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          width: \"100%\",\n          mx: 2,\n          my: 2,\n          display: {\n            xs: \"visible\",\n            sm: \"none\",\n            md: \"none\",\n            lg: \"none\",\n          },\n        }}>\n        <TableBody>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Name\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              National Id\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.aadharNo || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Designation\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.designation.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Phone\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.contactNumber || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Present Address{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.presentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Permanent Address\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.permanentAddress || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Gender\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.gender || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Blood Group\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.bloodGroup.toUpperCase() || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Birth Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.basicInfo.dob || \"NA\").format(\"DD-MM-YYYY\")}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Religion{\" \"}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.basicInfo.religion || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Email\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.academicInfo.email || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Role\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {employee.role.name || \"NA\"}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Joining Date\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">\n              {dayjs(employee.academicInfo.joiningDate || \"NA\").format(\n                \"DD-MM-YYYY\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" sx={{ fontWeight: \"bold\" }}>\n              Resume\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">\n              {employee.academicInfo.resume ? (\n                <IconButton color=\"primary\">\n                  <FileDownloadIcon\n                    onClick={() =>\n                      handleLinkClick(employee.academicInfo.resume)\n                    }\n                  />\n                </IconButton>\n              ) : (\n                \"NA\"\n              )}\n            </StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n      {/* )} */}\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"50px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nexport default function ProfileUpdate({\n  getEmployees = () => {},\n  employee = \"\",\n  setSelectValue = 0,\n}) {\n  const navigate = useNavigate();\n  const { selectedSetting } = useContext(SettingContext);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const [designations, setDesignations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [profileImages, setProfileImages] = useState([]);\n  const [resume, setResume] = useState([]);\n\n  console.log(employee, \"usha\");\n\n  const getDesignation = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesignations(\n        data.result.map((m) => ({ label: m.name, value: m._id }))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // create || update actions\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        schoolId: selectedSetting._id,\n        basicInfo: {\n          name: values.name,\n          aadharNo: values.aadharNo,\n          designation: values.designation,\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          dob: values.dob,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n        },\n        academicInfo: {\n          email: values.email,\n          username: values.username,\n          joiningDate: values.joiningDate,\n          resume: values.resume,\n        },\n        otherInfo: {\n          facebookUrl: values?.facebookUrl,\n          twitterUrl: values?.twitterUrl,\n          linkedinUrl: values?.linkedinUrl,\n          googlePlusUrl: values?.googlePlusUrl,\n          youtubeUrl: values?.youtubeUrl,\n          instagramUrl: values?.instagramUrl,\n          pinterestUrl: values?.pinterestUrl,\n        },\n        username: values.username,\n        photo: values.photo,\n        contactNumber: values.contactNumber,\n      };\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      profileImages.forEach((file) => formData.append(\"employeePhoto\", file));\n      resume.forEach((file) => formData.append(\"resume\", file));\n\n      const { data } = await put(\n        PRIVATE_URLS.employee.update + \"/\" + employee._id,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      console.log(data, \"put\");\n\n      window.localStorage.setItem(\n        \"current_ecs_user\",\n        JSON.stringify(data.result)\n      );\n      getEmployees();\n      setSelectValue(0);\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"photo\") {\n        console.log(fileList, \"photo\");\n        setProfileImages(fileList);\n      } else if (type === \"resume\") {\n        setResume(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setResume(resume.filter((img) => img.name != fileName));\n    setProfileImages(profileImages.filter((img) => img.name != fileName));\n  };\n\n  useEffect(() => {\n    getDesignation();\n  }, []);\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: employee?.basicInfo?.name || \"\",\n      aadharNo: employee?.basicInfo?.aadharNo || \"\",\n      designation: employee?.basicInfo?.designation?._id || \"\",\n      gender: employee?.basicInfo?.gender || \"\",\n      bloodGroup: employee?.basicInfo?.bloodGroup || \"\",\n      religion: employee?.basicInfo?.religion || \"\",\n      dob: employee?.basicInfo?.dob ? dayjs(employee?.dob) : null,\n      presentAddress: employee?.basicInfo?.presentAddress || \"\",\n      permanentAddress: employee?.basicInfo?.permanentAddress || \"\",\n      email: employee?.academicInfo?.email || \"\",\n      joiningDate: employee?.academicInfo?.joiningDate\n        ? dayjs(employee?.academicInfo?.joiningDate)\n        : null,\n      resume: employee?.academicInfo?.resume || \"\",\n      facebookUrl: employee?.otherInfo?.facebookUrl || \"\",\n      twitterUrl: employee?.otherInfo?.twitterUrl || \"\",\n      linkedinUrl: employee?.otherInfo?.linkedinUrl || \"\",\n      youtubeUrl: employee?.otherInfo?.youtubeUrl || \"\",\n      instagramUrl: employee?.otherInfo?.instagramUrl || \"\",\n      pinterestUrl: employee?.otherInfo?.pinterestUrl || \"\",\n      username: employee?.username || \"\",\n      contactNumber: employee?.contactNumber || \"\",\n      photo: employee?.photo || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: false,\n  });\n\n  return (\n    <>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <BasicData>\n          <MuiBox>\n            <img\n              // src={profileImages || avatar}\n              src={\n                profileImages.length > 0\n                  ? URL.createObjectURL(profileImages[0])\n                  : employee?.photo\n                  ? employee?.photo\n                  : avatar\n              }\n              style={{\n                width: \"100px\",\n                height: \"100px\",\n                display: \"block\",\n                objectFit: \"cover\",\n                margin: \"0 auto\",\n              }}\n              alt=\"Preview\"\n            />\n          </MuiBox>\n          <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n            <Grid xs={12} md={6} lg={3} item>\n              <FileSelect\n                multi={false}\n                name=\"photo\"\n                label=\"Select Profile\"\n                onChange={(e) => handleChangePhoto(e, \"photo\")}\n                previousFile={employee?.photo}\n                customOnChange={true}\n                selectedFiles={profileImages}\n                onRemove={(fileName) => handleRemoveFile(fileName)}\n                accept=\"image/jpeg, image/png\"\n              />\n            </Grid>\n          </Grid>\n        </BasicData>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"National Id\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designations}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Phone No.\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Gender\"\n                  options={Gender}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Settings */}\n\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Joining\"\n                  name=\"joiningDate\"\n                  required={true}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"resume\"\n                  label=\"Select Resume\"\n                  onChange={(e) => handleChangePhoto(e, \"resume\")}\n                  previousFile={employee?.academicInfo?.resume}\n                  customOnChange={true}\n                  selectedFiles={resume}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        {/* Social Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"facebookUrl\"\n                  formik={entryFormik}\n                  label=\"Facebook URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"twitterUrl\"\n                  formik={entryFormik}\n                  label=\"X URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"linkedinUrl\"\n                  formik={entryFormik}\n                  label=\"Linkedin Url\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"youtubeUrl\"\n                  formik={entryFormik}\n                  label=\"Youtube URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"instagramUrl\"\n                  formik={entryFormik}\n                  label=\"Instagram URL\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"pinterestUrl\"\n                  formik={entryFormik}\n                  label=\"Pinterest URL\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n\n        <StyledBox>\n          <Stack spacing={2} direction=\"row\" justifyContent=\"flex-end\">\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setSelectValue(0)}>\n              Cancel\n            </Button>\n            <LoadingButton\n              loading={loading}\n              type=\"submit\"\n              size=\"small\"\n              variant=\"contained\">\n              Update\n            </LoadingButton>\n          </Stack>\n        </StyledBox>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  styled,\n  tableCellClasses,\n  IconButton,\n  Avatar,\n  Box,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport themeData from \"../../data/themeData\";\n// icons\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport TabList from \"../../components/Tabs/Tablist\";\nimport TabPanel from \"../../components/Tabs/TabPanel\";\nimport FormTable from \"./FormTable\";\nimport ProfileUpdate from \"./ProfileUpdate\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nexport default function Profile() {\n  const { selectedSetting } = useContext(SettingContext);\n  const [value, setSelectValue] = useState(0);\n  // const [dataToEdit, setDataToEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState(null);\n\n  const handleTabChange = (e, newValue) => setSelectValue(newValue);\n\n  // console.log(selectedSetting, \"selectedSetting\");\n  // console.log(employee, \"employee\");\n\n  const getEmployees = async () => {\n    const user = window.localStorage.getItem(\n      process.env.REACT_APP_CURRENT_USER\n    );\n    setEmployee(JSON.parse(user));\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  if (!employee) {\n    return null;\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Profile\" />\n      <TabList\n        onChange={handleTabChange}\n        value={value}\n        labels={[\"Profile\", \"Update Profile\"]}\n      />\n      <TabPanel index={0} value={value}>\n        {/* {employee && ( */}\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            mt: 3,\n          }}>\n          <FormTable employee={employee} />\n        </Box>\n      </TabPanel>\n      <TabPanel index={1} value={value}>\n        <ProfileUpdate\n          employee={employee}\n          setSelectValue={setSelectValue}\n          getEmployees={getEmployees}\n        />\n      </TabPanel>\n    </>\n  );\n}\n","/** @format */\n\nimport { useLocation } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Typography, Button, Stack, styled, Box } from \"@mui/material\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { get, put } from \"../../services/apiMethods\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport avatar from \"../../assets/images/avatar.jpg\";\nimport SettingContext from \"../../context/SettingsContext\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\nconst MuiBox = styled(Box)({\n  background: \"#ececec\",\n  width: \"100px\",\n  height: \"100px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  backgroundPosition: \"center\",\n});\n\nconst BasicData = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginBottom: \"15px\",\n  padding: \"15px 0px\",\n});\n\nconst Gender_Options = [\n  {\n    label: \"Male\",\n    value: \"male\",\n  },\n  {\n    label: \"Female\",\n    value: \"female\",\n  },\n];\n\nconst BloodGroup_Options = [\n  {\n    label: \"A+\",\n    value: \"a\",\n  },\n  {\n    label: \"A-\",\n    value: \"a-\",\n  },\n  {\n    label: \"B+\",\n    value: \"b+\",\n  },\n  {\n    label: \"B-\",\n    value: \"b-\",\n  },\n  {\n    label: \"O+\",\n    value: \"o+\",\n  },\n  {\n    label: \"O-\",\n    value: \"o-\",\n  },\n  {\n    label: \"AB+\",\n    value: \"ab+\",\n  },\n  {\n    label: \"AB-\",\n    value: \"ab-\",\n  },\n];\n\nconst Active = [\n  { label: \"Active\", value: true },\n  { label: \"Inactive\", value: false },\n];\n\nconst Is_Public = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst View_Web = [\n  { label: \"Yes\", value: true },\n  { label: \"No\", value: false },\n];\n\nconst Salary_Type = [\n  { label: \"Monthly\", value: \"monthly\" },\n  { label: \"Hourly\", value: \"hourly\" },\n];\n\nexport default function UpdateEmployee() {\n  const location = useLocation();\n  const empData = location.state && location.state.data;\n  const { selectedSetting } = useContext(SettingContext);\n  const [loading, setLoading] = useState(false);\n  const [designationData, setDesgnationData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [previewCreateUrl, setPreviewCreateUrl] = useState(null);\n  const navigate = useNavigate();\n\n  const getDesignationData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.designation.list);\n      setDesgnationData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDepartmentData = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.department.list);\n      setDepartmentData(\n        data.result.map((s) => ({\n          label: s.name,\n          value: s._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoles = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.role.list);\n      setRolesData(\n        data.result.map((r) => ({\n          label: r.name,\n          value: r._id,\n        }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDesignationData();\n    getDepartmentData();\n    getRoles();\n  }, []);\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      setLoading(true);\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          empId: values.empId,\n          designation: values.designation,\n          secMobileNo: values.secMobileNo,\n          gender: values.gender,\n          religion: values.religion,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n          dob: dayjs(values.dob),\n          fatherName: values.fatherName,\n          spouseName: values.spouseName,\n          aadharNo: values.aadharNo,\n          fatherOccupation: values.fatherOccupation,\n          spouseOccupation: values.spouseOccupation,\n        },\n        academicInfo: {\n          workExperience: values.workExperience,\n          salaryGrade: values.salaryGrade,\n          email: values.email,\n          salaryType: values.salaryType,\n          department: values.department,\n          joiningDate: dayjs(values.joiningDate),\n          resume: values.resume,\n        },\n        otherInfo: {\n          public: values.public,\n          showDetailsForWeb: values.showDetailsForWeb || false,\n        },\n        contactNumber: values.contactNumber,\n        role: values.role,\n        username: values.username,\n        password: values.password,\n        active: values.active,\n        schoolId: selectedSetting._id,\n      };\n\n      const { data } = await put(\n        PRIVATE_URLS.employee.update + \"/\" + empData._id,\n        payload\n      );\n\n      console.log(data, \"erttfyuygiu\");\n\n      navigate(\"/sch/human-resource/employee\");\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      name: empData ? empData.basicInfo.name : \"\",\n      empId: empData ? empData.basicInfo.empId : \"\",\n      responsibility: empData ? empData.basicInfo.responsibility : \"\",\n      designation: empData ? empData.basicInfo.designation._id : \"\",\n      contactNumber: empData ? empData.contactNumber : \"\",\n      secMobileNo: empData ? empData.basicInfo.secMobileNo : \"\",\n      gender: empData ? empData.basicInfo.gender : \"\",\n      bloodGroup: empData ? empData.basicInfo.bloodGroup : \"\",\n      religion: empData ? empData.basicInfo.religion : \"\",\n      presentAddress: empData ? empData.basicInfo.presentAddress : \"\",\n      permanentAddress: empData ? empData.basicInfo.permanentAddress : \"\",\n      dob: empData ? dayjs(empData.basicInfo.dob) : dayjs(new Date()),\n      fatherName: empData ? empData.basicInfo.fatherName : \"\",\n      spouseName: empData ? empData.basicInfo.spouseName : \"\",\n      aadharNo: empData ? empData.basicInfo.aadharNo : \"\",\n      fatherOccupation: empData ? empData.basicInfo.fatherOccupation : \"\",\n      spouseOccupation: empData ? empData.basicInfo.spouseOccupation : \"\",\n      qualification: empData ? empData.academicInfo.qualification : \"\",\n      workExperience: empData ? empData.academicInfoworkExperience : \"\",\n      salaryGrade: empData ? empData.academicInfosalaryGrade : \"\",\n      email: empData ? empData.academicInfo.email : \"\",\n      salaryType: empData ? empData.academicInfo.salaryType : \"\",\n      role: empData ? empData.role._id : \"\",\n      department: empData ? empData.academicInfo.department._id : \"\",\n      joiningDate: empData\n        ? dayjs(empData.academicInfo.joiningDate)\n        : dayjs(new Date()),\n      resume: empData ? empData.resume : \"\",\n      username: empData ? empData.username : \"\",\n      password: empData ? empData.password : \"\",\n      public: empData ? empData.public : \"\",\n      showDetailsForWeb: empData ? empData.showDetailsForWeb : false,\n      photo: empData ? empData.photo : \"\",\n      active: empData ? empData.active : \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n  });\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreviewCreateUrl(imageUrl);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Update Employee\" showTextField={false} />\n\n      <BasicData>\n        <MuiBox>\n          <img\n            src={previewCreateUrl || avatar}\n            style={{\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"contain\",\n            }}\n            alt=\"Preview\"\n          />\n        </MuiBox>\n        <Grid container spacing={2} display=\"flex\" justifyContent=\"center\">\n          <Grid xs={12} md={6} lg={3} item>\n            <FormInput\n              // required={true}\n              name=\"photo\"\n              formik={entryFormik}\n              label=\"Photo\"\n              type=\"file\"\n              onChange={handleImageChange}\n            />\n          </Grid>\n        </Grid>\n      </BasicData>\n      <form onSubmit={entryFormik.handleSubmit}>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"empId\"\n                  formik={entryFormik}\n                  label=\"Employee Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"responsibility\"\n                  formik={entryFormik}\n                  label=\"Responsibility\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"designation\"\n                  formik={entryFormik}\n                  label=\"Designation\"\n                  options={designationData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"secMobileNo\"\n                  formik={entryFormik}\n                  label=\"Secondary Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={BloodGroup_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religon\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  formik={entryFormik}\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  required={true}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseName\"\n                  formik={entryFormik}\n                  label=\"Spouse Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherOccupation\"\n                  formik={entryFormik}\n                  label=\"Father Occupation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"spouseOccupation\"\n                  formik={entryFormik}\n                  label=\"Spouse Occupation\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"qualification\"\n                  formik={entryFormik}\n                  label=\"Qualification              \"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"workExperience\"\n                  formik={entryFormik}\n                  label=\"Work Experience\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"salaryGrade\"\n                  formik={entryFormik}\n                  label=\"Select Salary Grade\"\n                  // options={\"\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"email\"\n                  formik={entryFormik}\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"salaryType\"\n                  formik={entryFormik}\n                  label=\"Select Salary Type\"\n                  options={Salary_Type}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"role\"\n                  formik={entryFormik}\n                  label=\"Select Role\"\n                  options={rolesData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"department\"\n                  formik={entryFormik}\n                  label=\"Select Department\"\n                  options={departmentData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"joiningDate\"\n                  formik={entryFormik}\n                  label=\"Joining Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"resume\"\n                  formik={entryFormik}\n                  label=\"Resume\"\n                  type=\"file\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Log In Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"username\"\n                  formik={entryFormik}\n                  label=\"User Name\"\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"password\"\n                  formik={entryFormik}\n                  label=\"Password\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"public\"\n                  formik={entryFormik}\n                  label=\"View On Web\"\n                  options={Is_Public}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"showDetailsForWeb\"\n                  formik={entryFormik}\n                  label=\"Show Details For Web\"\n                  options={View_Web}\n                />\n              </Grid>\n              {/* <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"photo\"\n                  formik={entryFormik}\n                  label=\"Photo\"\n                  type=\"file\"\n                />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </FormBox>\n        <FormBox sx={{ marginBottom: \"60px\" }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Profile Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Status\"\n                  options={Active}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Update\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  Typography,\n  styled,\n} from \"@mui/material\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FormInput from \"../../forms/FormInput\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post, put } from \"../../services/apiMethods\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport dayjs from \"dayjs\";\n\nconst FormBox = styled(Box)(({ theme }) => ({\n  border: \"1px solid\",\n  borderColor: \"lightgray\",\n  marginBottom: \"20px\",\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n}));\n\nconst Title = styled(Typography)(({ theme }) => ({\n  textAlign: \"start\",\n  fontSize: \"14px\",\n  padding: \"5px 10px\",\n  borderBottom: \"1px solid\",\n  borderBottomColor: \"lightgray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  background: theme.palette.secondary.main,\n}));\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: theme.spacing(2),\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  background: \"whitesmoke\",\n  padding: theme.spacing(2),\n  zIndex: 1000,\n}));\n\nconst Gender_Options = [\n  { label: \"Male\", value: \"male\" },\n  { label: \"Female\", value: \"female\" },\n];\n\nconst Blood_Group = [\n  { label: \"A+\", value: \"a+\" },\n  { label: \"B+\", value: \"b+\" },\n  { label: \"A-\", value: \"a-\" },\n  { label: \"B-\", value: \"b-\" },\n  { label: \"O+\", value: \"o+\" },\n  { label: \"O-\", value: \"o-\" },\n  { label: \"AB+\", value: \"ab+\" },\n  { label: \"AB-\", value: \"ab-\" },\n];\n\nconst Relation_With_Guardian = [\n  { label: \"Father\", value: \"Father\" },\n  { label: \"Mother\", value: \"Mother\" },\n  { label: \"Sister\", value: \"Sister\" },\n  { label: \"Brother\", value: \"Brother\" },\n  { label: \"Uncle\", value: \"Uncle\" },\n  { label: \"Other Relative\", value: \"Other Relative\" },\n];\n\nconst RTE_Options = [\n  { label: \"Yes\", value: \"yes\" },\n  { label: \"No\", value: \"no\" },\n];\n\nconst TC_OPTIONS = [\n  { label: \"With TC\", value: \"with tc\" },\n  { label: \"Without TC\", value: \"without tc\" },\n];\n\nexport default function AddStudent() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedStudentPhoto, setSelectedStuentPhoto] = useState([]);\n  const [selectedMotherPhoto, setSelectedMotherPhoto] = useState([]);\n  const [selectedFatherPhoto, setSelectedFatherPhoto] = useState([]);\n  const [transferCertificate, setTransperCertificate] = useState([]);\n  const [academicYear, setAcademicYear] = useState([]);\n  const [classData, setClassData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n\n  const { id } = useParams();\n  const getStudentDetails = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.details + \"/\" + id);\n      console.log(data.result, \"==========\");\n      setDataToEdit(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (id) {\n      getStudentDetails();\n    }\n  }, [id, selectedSetting]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setAcademicYear(\n        data.result.map((d) => ({ label: `${d.from}-${d.to}`, value: d._id }))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCreateOrUpdate = async (values) => {\n    try {\n      const payload = {\n        basicInfo: {\n          name: values.name,\n          admissionDate: dayjs(values.admissionDate).format(\"YYYY/MM/DD\"),\n          dob: dayjs(values.dob).format(\"YYYY/MM/DD\"),\n          gender: values.gender,\n          bloodGroup: values.bloodGroup,\n          religion: values.religion,\n          rte: values.rte,\n          caste: values.caste,\n          motherTongue: values.motherTongue,\n          birthPlace: values.birthPlace,\n          aadharNo: values.aadharNo,\n          cicn: values.cicn,\n          satNo: values.satNo,\n          grNo: values.grNo,\n          tcOption: values.tcOption,\n        },\n        motherInfo: {\n          name: values.motherName,\n          contactNumber: values.motherPhone,\n          education: values.motherEdu,\n          profession: values.motherProfession,\n          designation: values.motherDesignation,\n        },\n        fatherInfo: {\n          name: values.fatherName,\n          contactNumber: values.fatherPhone,\n          education: values.fatherEdu,\n          profession: values.fatherProfession,\n          designation: values.fatherDesignation,\n        },\n        academicInfo: {\n          class: values.class,\n          section: values.section,\n          rollNumber: values.rollNumber,\n          admissionNumber: values.admissionNumber,\n        },\n        otherInfo: {\n          email: values.email,\n          healthCondition: values.healthCondition,\n          hostelMember: values.hostelMember,\n          transportMember: values.transportMember,\n          libraryMember: values.libraryMember,\n          busStop: values.busStop,\n          extraInfo: values.extraInfo,\n        },\n        contactInfo: {\n          guardianName: values.guardianName,\n          guardianContactNumber: values.guardianContactNumber,\n          guardianContactNumberSecondary: values.guardianContactNumberSecondary,\n          guardianRelation: values.guardianRelation,\n          nationId: values.nationId,\n          presentAddress: values.presentAddress,\n          permanentAddress: values.permanentAddress,\n        },\n        prevSchInfo: {\n          name: values.prevSchName,\n          tcNo: values.tcNo,\n          prevClass: values.prevClass,\n        },\n        academicYear: values.academicYear,\n        schoolId: selectedSetting._id,\n        contactNumber: values.contactNumber,\n        active: values.active,\n      };\n      const formData = new FormData();\n      formData.append(\"body\", JSON.stringify(payload));\n      selectedStudentPhoto.forEach((file) =>\n        formData.append(\"studentPhoto\", file)\n      );\n      selectedFatherPhoto.forEach((file) =>\n        formData.append(\"fatherPhoto\", file)\n      );\n      selectedMotherPhoto.forEach((file) =>\n        formData.append(\"motherPhoto\", file)\n      );\n      transferCertificate.forEach((file) =>\n        formData.append(\"transferCertificate\", file)\n      );\n\n      setLoading(true);\n      if (dataToEdit) {\n        const { data } = await put(\n          PRIVATE_URLS.student.update + \"/\" + dataToEdit._id,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        navigate(\"/sch/student/admit-student\");\n      } else {\n        const { data } = await post(PRIVATE_URLS.student.create, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        navigate(\"/sch/student/admit-student\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const entryFormik = useFormik({\n    initialValues: {\n      academicYear: dataToEdit?.academicYear._id || \"\",\n      name: dataToEdit?.basicInfo.name || \"\",\n\n      admissionDate: dataToEdit?.basicInfo?.admissionDate\n        ? dayjs(dataToEdit.basicInfo.admissionDate).format(\"YYYY/MM/DD\")\n        : null,\n\n      motherTongue: dataToEdit?.basicInfo.motherTongue || \"\",\n\n      dob: dataToEdit?.basicInfo?.dob\n        ? dayjs(dataToEdit.basicInfo.dob).format(\"YYYY/MM/DD\")\n        : null,\n      gender: dataToEdit?.basicInfo.gender || \"\",\n      bloodGroup: dataToEdit?.basicInfo.bloodGroup || \"\",\n      cicn: dataToEdit?.basicInfo.cicn || \"\",\n      religion: dataToEdit?.basicInfo.religion || \"\",\n      caste: dataToEdit?.basicInfo.caste || \"\",\n      rte: dataToEdit?.basicInfo.rte || \"no\",\n      aadharNo: dataToEdit?.basicInfo.aadharNo || \"\",\n      satNo: dataToEdit?.basicInfo.satNo || \"\",\n      grNo: dataToEdit?.basicInfo.grNo || \"\",\n      tcOption: dataToEdit?.basicInfo.tcOption || \"\",\n\n      birthPlace: dataToEdit?.basicInfo.birthPlace || \"\",\n\n      class: dataToEdit?.academicInfo?.class?._id || \"\",\n      section: dataToEdit?.academicInfo?.section?._id || \"\",\n      rollNumber: dataToEdit?.academicInfo?.rollNumber || \"\",\n      admissionNumber: dataToEdit?.academicInfo?.admissionNumber || \"\",\n\n      contactNumber: dataToEdit?.contactNumber || \"\",\n\n      guardianName: dataToEdit?.contactInfo?.guardianName || \"\",\n      guardianContactNumber:\n        dataToEdit?.contactInfo?.guardianContactNumber || \"\",\n      guardianContactNumberSecondary:\n        dataToEdit?.contactInfo?.guardianContactNumberSecondary || \"\",\n      guardianRelation: dataToEdit?.contactInfo?.guardianRelation || \"\",\n      nationId: dataToEdit?.contactInfo?.nationId || \"\",\n      presentAddress: dataToEdit?.contactInfo?.presentAddress || \"\",\n      permanentAddress: dataToEdit?.contactInfo?.permanentAddress || \"\",\n\n      prevSchName: dataToEdit?.prevSchInfo?.name || \"\",\n      tcNo: dataToEdit?.prevSchInfo?.tcNo || \"\",\n      prevClass: dataToEdit?.prevSchInfo?.prevClass || \"\",\n\n      email: dataToEdit?.otherInfo?.email || \"\",\n      healthCondition: dataToEdit?.otherInfo?.healthCondition || \"\",\n      transportMember: dataToEdit?.otherInfo?.transportMember || false,\n      hostelMember: dataToEdit?.otherInfo?.hostelMember || false,\n      libraryMember: dataToEdit?.otherInfo?.libraryMember || false,\n      busStop: dataToEdit?.otherInfo?.busStop || \"\",\n      extraInfo: dataToEdit?.otherInfo?.extraInfo || \"\",\n      active: dataToEdit?.active || true,\n\n      fatherName: dataToEdit?.fatherInfo.name || \"\",\n      fatherPhone: dataToEdit?.fatherInfo.contactNumber || \"\",\n      fatherEdu: dataToEdit?.fatherInfo.education || \"\",\n      fatherProfession: dataToEdit?.fatherInfo.profession || \"\",\n      fatherDesignation: dataToEdit?.fatherInfo.designation || \"\",\n\n      motherName: dataToEdit?.motherInfo.name || \"\",\n      motherPhone: dataToEdit?.motherInfo.contactNumber || \"\",\n      motherEdu: dataToEdit?.motherInfo.education || \"\",\n      motherProfession: dataToEdit?.motherInfo.profession || \"\",\n      motherDesignation: dataToEdit?.motherInfo.designation || \"\",\n    },\n    onSubmit: handleCreateOrUpdate,\n    enableReinitialize: true,\n  });\n\n  const getSection = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: { class: entryFormik.values.class },\n        },\n      });\n      setSectionData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClass = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: { schoolId: selectedSetting._id },\n      });\n      setClassData(data.result.map((s) => ({ label: s.name, value: s._id })));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // get data on page load\n  useEffect(() => {\n    getAcademicYear();\n    getClass();\n  }, []);\n\n  useEffect(() => {\n    if (entryFormik.values.class) {\n      getSection();\n    }\n  }, [entryFormik.values.class, selectedSetting]);\n\n  const handleChangePhoto = (e, type) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      if (type === \"fatherPhoto\") {\n        setSelectedFatherPhoto(fileList);\n      } else if (type === \"motherPhoto\") {\n        setSelectedMotherPhoto(fileList);\n      } else if (type === \"transferCertificate\") {\n        setTransperCertificate(fileList);\n      } else {\n        setSelectedStuentPhoto(fileList);\n      }\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  const handleRemoveFile = (fileName, index) => {\n    setSelectedStuentPhoto(\n      selectedStudentPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedFatherPhoto(\n      selectedFatherPhoto.filter((img) => img.name != fileName)\n    );\n    setSelectedMotherPhoto(\n      selectedMotherPhoto.filter((img) => img.name != fileName)\n    );\n\n    setTransperCertificate(\n      transferCertificate.filter((img) => img.name != fileName)\n    );\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Admit Student\" />\n      <form onSubmit={entryFormik.handleSubmit}>\n        <Paper sx={{ padding: 2, marginBottom: 2 }}>\n          <Grid rowSpacing={1} columnSpacing={2} container>\n            <Grid xs={12} md={12} lg={12} item>\n              <Typography\n                component=\"span\"\n                color=\"red\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Note:{\" \"}\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                component=\"span\"\n                fontWeight=\"bold\"\n                sx={{ display: \"inline\" }}>\n                Student will be admited to session\n              </Typography>\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={entryFormik}\n                label=\"Select Academic Year\"\n                options={academicYear}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* Basic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Basic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"name\"\n                  formik={entryFormik}\n                  label=\"Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"admissionNumber\"\n                  formik={entryFormik}\n                  label=\"Admission No.\"\n                  disabled={selectedSetting?.admissionNo !== \"manual\"}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"admissionDate\"\n                  formik={entryFormik}\n                  label=\"Admission Date\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormDatePicker\n                  required={true}\n                  name=\"dob\"\n                  formik={entryFormik}\n                  label=\"Date Of Birth\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"gender\"\n                  formik={entryFormik}\n                  label=\"Select Gender\"\n                  options={Gender_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"bloodGroup\"\n                  formik={entryFormik}\n                  label=\"Select Blood Group\"\n                  options={Blood_Group}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"religion\"\n                  formik={entryFormik}\n                  label=\"Religion\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"rte\"\n                  formik={entryFormik}\n                  label=\"Select RTE\"\n                  options={RTE_Options}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"caste\" formik={entryFormik} label=\"Cast\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"cicn\"\n                  formik={entryFormik}\n                  label=\"Cast Income Certificate No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherTongue\"\n                  formik={entryFormik}\n                  label=\"Mother Tongue\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"birthPlace\"\n                  formik={entryFormik}\n                  label=\"Birth Place\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"aadharNo\"\n                  formik={entryFormik}\n                  label=\"Aadhar No.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"satNo\" formik={entryFormik} label=\"SAT No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"grNo\" formik={entryFormik} label=\"GR No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"tcOption\"\n                  formik={entryFormik}\n                  options={TC_OPTIONS}\n                  label=\"TC option\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* contact Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Contact Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"contactNumber\"\n                  formik={entryFormik}\n                  label=\"Contact Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianName\"\n                  formik={entryFormik}\n                  label=\"Guardian Name\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumber\"\n                  formik={entryFormik}\n                  label=\"Guardian Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"guardianContactNumberSecondary\"\n                  formik={entryFormik}\n                  label=\"Alternate Number\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"guardianRelation\"\n                  formik={entryFormik}\n                  label=\"Select Relation With Guardian\"\n                  options={Relation_With_Guardian}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"nationId\"\n                  formik={entryFormik}\n                  label=\"Select National Id\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"presentAddress\"\n                  formik={entryFormik}\n                  label=\"Present Address\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"permanentAddress\"\n                  formik={entryFormik}\n                  label=\"Permanent Address\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Academic Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Academic Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"class\"\n                  formik={entryFormik}\n                  label=\"Select Class\"\n                  options={classData}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  required={true}\n                  name=\"section\"\n                  formik={entryFormik}\n                  label=\"Select Section\"\n                  options={sectionData}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"rollNumber\"\n                  formik={entryFormik}\n                  label=\"Roll No\"\n                  disabled={selectedSetting?.rollNumberType !== \"manual\"}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Previous school Info */}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Previous School Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevSchName\"\n                  formik={entryFormik}\n                  label=\"Previous School\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"prevClass\"\n                  formik={entryFormik}\n                  label=\"Previous Class\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"tcNo\" formik={entryFormik} label=\"TC No.\" />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  multi={false}\n                  name=\"transferCertificate\"\n                  label=\"Select File\"\n                  onChange={(e) => handleChangePhoto(e, \"transferCertificate\")}\n                  previousFile={dataToEdit?.prevSchInfo?.transferCertificate}\n                  customOnChange={true}\n                  selectedFiles={transferCertificate}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/*,.pdf\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Father Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Father Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"fatherName\"\n                  formik={entryFormik}\n                  label=\"Father Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  required={true}\n                  name=\"fatherPhone\"\n                  formik={entryFormik}\n                  label=\"Father Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherEdu\"\n                  formik={entryFormik}\n                  label=\"Father Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherProfession\"\n                  formik={entryFormik}\n                  label=\"Father Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"fatherDesignation\"\n                  formik={entryFormik}\n                  label=\"Father Designation\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"fatherPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"fatherPhoto\")}\n                  previousFile={dataToEdit?.fatherInfo?.photo}\n                  customOnChange={true}\n                  selectedFiles={selectedFatherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Mother Information*/}\n        <FormBox>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Mother Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherName\"\n                  formik={entryFormik}\n                  label=\"Mother Name\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherPhone\"\n                  formik={entryFormik}\n                  label=\"Mother Phone\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherEdu\"\n                  formik={entryFormik}\n                  label=\"Mother Education.\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherProfession\"\n                  formik={entryFormik}\n                  label=\"Mother Profession\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"motherDesignation\"\n                  formik={entryFormik}\n                  label=\"Mother Designation\"\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  label=\"Select Photo\"\n                  multi={false}\n                  name=\"motherPhoto\"\n                  onChange={(e) => handleChangePhoto(e, \"motherPhoto\")}\n                  previousFile={dataToEdit?.motherInfo?.photo}\n                  customOnChange={true}\n                  selectedFiles={selectedMotherPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        {/* Other Information*/}\n        <FormBox\n          sx={{\n            marginBottom: \"60px\",\n          }}>\n          <Title id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Other Information\n          </Title>\n          <Box sx={{ padding: \"10px\" }}>\n            <Grid container spacing={2}>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput name=\"email\" formik={entryFormik} label=\"Email\" />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"healthCondition\"\n                  formik={entryFormik}\n                  label=\"Health Condition\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"active\"\n                  formik={entryFormik}\n                  label=\"Select Status\"\n                  options={[\n                    { label: \"Inactive\", value: false },\n                    { label: \"Active\", value: true },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"hostelMember\"\n                  formik={entryFormik}\n                  label=\"Select Hostel Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"transportMember\"\n                  formik={entryFormik}\n                  label=\"Select Transport Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n\n              <Grid xs={12} md={6} lg={3} item>\n                <FormSelect\n                  name=\"libraryMember\"\n                  formik={entryFormik}\n                  label=\"Select Library Member\"\n                  options={[\n                    { label: \"Yes\", value: true },\n                    { label: \"No\", value: false },\n                  ]}\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"busStop\"\n                  formik={entryFormik}\n                  label=\"Bus Stop\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FormInput\n                  name=\"extraInfo\"\n                  formik={entryFormik}\n                  label=\"Other Info\"\n                />\n              </Grid>\n              <Grid xs={12} md={6} lg={3} item>\n                <FileSelect\n                  name=\"studentPhoto\"\n                  multi={false}\n                  label=\"Select Photo\"\n                  onChange={(e) => handleChangePhoto(e, \"studentPhoto\")}\n                  previousFile={dataToEdit?.photo}\n                  customOnChange={true}\n                  selectedFiles={selectedStudentPhoto}\n                  onRemove={(fileName) => handleRemoveFile(fileName)}\n                  accept=\"image/jpeg, image/png\"\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </FormBox>\n        <Grid container>\n          <Grid item xs={12} md={12}>\n            <StyledBox>\n              <Stack spacing={2} direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => navigate(-1)}>\n                  Cancel\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\">\n                  Submit\n                </LoadingButton>\n              </Stack>\n            </StyledBox>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  Box,\n  Card,\n  FormControl,\n  Grid,\n  InputLabel,\n  LinearProgress,\n  linearProgressClasses,\n  MenuItem,\n  Select,\n  styled,\n  TextareaAutosize,\n  TextField,\n  Switch,\n  Button,\n  Checkbox,\n  ListItemText,\n  Autocomplete,\n  InputBase,\n  Popper,\n  InputAdornment,\n  Typography,\n} from \"@mui/material\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { del, get, post, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { LoadingButton } from \"@mui/lab\";\nimport PageHeader from \"../../components/PageHeader\";\nimport FileSelect from \"../../forms/FileSelect\";\nimport { useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 25,\n  borderRadius: 15,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 800 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 15,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#f42323\" : \"#308fe8\",\n  },\n}));\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n  borderBottom: `1px solid ${\n    theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n  }`,\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\n\nconst Compose = () => {\n  const { selectedSetting } = useContext(SettingContext);\n\n  const { state } = useLocation();\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [receiverType, setReceiverType] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n\n  const [smsFrom, setSmsFrom] = useState({\n    sms: state\n      ? state.message\n      : `Dear {{VAR}}, We would like to inform you {{VAR1}},{{VAR2}},{{VAR3}},{{VAR4}},{{VAR5}} Regards Webspruce.`,\n  });\n\n  const [contacts, setContacts] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [notifyChecked, setNotifyChecked] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [selectFile, setSelectFile] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n\n  const [totalSms, setTotalSms] = useState(50);\n  const [consumedSms, setConsumedSms] = useState(0);\n  const [balance, setBalance] = useState(50);\n\n  const handleEmployeeAuto = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (employeeAutoSelect.length === employees.length) {\n        setEmployeeAutoSelect([]);\n        setSelectedEmployeeCount(0);\n        setSelectEmployee(\"\");\n      } else {\n        setEmployeeAutoSelect([...employees]);\n        setSelectedEmployeeCount(employees.length);\n        setSelectEmployee(\"All\");\n      }\n    } else {\n      const employeeNames = val.map((emp) => emp.basicInfo.name);\n      const selectedEmployeeIds = val.map((emp) => emp._id);\n      setEmployeeAutoSelect(val);\n      setSelectedEmployeeCount(val.length);\n      setSelectEmployee(employeeNames.join(\", \"));\n    }\n  };\n\n  useEffect(() => {\n    setSectionAutoSelect([]);\n    setSelectSection(\"\");\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [classAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    setSelectContacts(\"\");\n    setContactsAutoSelect([]);\n  }, [sectionAutoSelect, selectedSetting._id]);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  const handleChangeFiles = (e, index) => {\n    const { files } = e.target;\n    let fileList = [];\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        fileList.push(file);\n      }\n      setSelectFile(fileList);\n    } else {\n      console.log(\"No files selected\");\n    }\n  };\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleSelectRoleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setSmsFrom({ ...smsFrom, [name]: value });\n  };\n\n  const handleRoleChange = async (e) => {\n    handleFormChange(e);\n    const role = e.target.value;\n    try {\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: role,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (contactsAutoSelect.length === students.length) {\n        setContactsAutoSelect([]);\n        setContacts([]);\n        setSelectedStudentCount(0);\n        setSelectContacts(\"\");\n      } else {\n        const allStudentContacts = students.map((student) => student._id);\n        setContactsAutoSelect([...students]);\n        setContacts(allStudentContacts);\n        setSelectedStudentCount(students.length);\n        setSelectContacts(\"All\");\n      }\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n      setContactsAutoSelect(val);\n    }\n  };\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n        const filteredSections = sectionAutoSelect.filter((section) =>\n          classIds.includes(section.class._id)\n        );\n        setSectionAutoSelect(filteredSections);\n        setSelectSection(\n          filteredSections\n            .map((section) => `${section.name} (${section.class.name})`)\n            .join(\", \")\n        );\n\n        const filteredSectionIds = filteredSections.map(\n          (section) => section._id\n        );\n        if (filteredSectionIds.length) {\n          const { data: studentData } = await get(PRIVATE_URLS.student.list, {\n            params: {\n              schoolId: selectedSetting._id,\n              search: {\n                \"academicInfo.section\": filteredSectionIds,\n              },\n            },\n          });\n          setStudents(studentData.result);\n        } else {\n          setStudents([]);\n        }\n      } else {\n        setSections([]);\n        setSectionAutoSelect([]);\n        setSelectSection(\"\");\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleNotifiy = (e) => {\n    setNotifyChecked(e.target.checked);\n  };\n\n  const resetForm = () => {\n    setSmsFrom({\n      sms: state\n        ? state.message\n        : `Dear {{VAR}}, We would like to inform you {{VAR1}},{{VAR2}},{{VAR3}},{{VAR4}},{{VAR5}} Regards Webspruce.`,\n    });\n    setSelectRoles([]);\n    setSelectClass(\"\");\n    setSelectSection(\"\");\n    setSelectContacts(\"\");\n    setSelectEmployee([]);\n    setReceiverType(\"\");\n    setStudents([]);\n    setContactsAutoSelect([]);\n    setEmployees([]);\n    selectedStudentCount(0);\n    setSelectedEmployeeCount(0);\n    setEmployeeAutoSelect([]);\n  };\n\n  const handleSubmitSms = async (e) => {\n    e.preventDefault();\n    setSendingMessage(true);\n    try {\n      setConsumedSms(consumedSms + 1);\n      setBalance(totalSms - (consumedSms + 1));\n\n      toast.success(\"Message sent successfully\");\n      resetForm();\n      setSendingMessage(false);\n    } catch (error) {\n      setSendingMessage(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Compose\" />\n\n      <form onSubmit={handleSubmitSms}>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box\n            sx={{\n              paddingLeft: \"1rem\",\n              display: \"flex\",\n              gap: \"8px\",\n            }}>\n            <Box>\n              Total SMS:{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {totalSms}\n              </Typography>\n            </Box>\n            <Box>\n              Consumed SMS:{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {consumedSms}\n              </Typography>\n            </Box>\n            <Box>\n              Balance SMS:{\" \"}\n              <Typography component={\"span\"} fontWeight={\"bold\"}>\n                {balance}\n              </Typography>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              padding: \"1rem\",\n            }}>\n            <BorderLinearProgress\n              variant=\"determinate\"\n              value={((79875 - balance) * 100) / 79875}\n            />\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Box sx={{ flexFlow: 1 }}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <FormControl size=\"small\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-filrlccled-label\">\n                    Receiver Type\n                  </InputLabel>\n                  <Select\n                    label=\"Receiver Type\"\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"receiverType\"\n                    value={receiverType}\n                    onChange={(e) => setReceiverType(e.target.value)}>\n                    <MenuItem\n                      value={\"role\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Role\n                    </MenuItem>\n                    <MenuItem\n                      value={\"user\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      User\n                    </MenuItem>\n                    <MenuItem\n                      value={\"students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"All Students\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      All Students\n                    </MenuItem>\n                    <MenuItem\n                      value={\"file\"}\n                      sx={{ fontSize: 12, fontWeight: 500 }}>\n                      File\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              {receiverType === \"file\" && (\n                <>\n                  <Grid\n                    item\n                    xs={12}\n                    md={3}\n                    lg={1}\n                    sx={{ alignSelf: \"center\", mt: \"-15px\" }}>\n                    <Button size=\"small\" variant=\"contained\">\n                      Sample File\n                    </Button>\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={12}\n                    md={4}\n                    lg={3}\n                    sx={{ alignSelf: \"center\", mt: \"-15px\" }}>\n                    <FileSelect\n                      name=\"file\"\n                      onChange={(e) => handleChangeFiles(e)}\n                      customOnChange={true}\n                      label=\"Select File\"\n                      selectedFiles={selectFile}\n                    />\n                  </Grid>\n                </>\n              )}\n              {receiverType === \"students\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Popper\n                      id={\"classPopper\"}\n                      open={!!classPopper}\n                      anchorEl={classPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          onBlur={() => setClassPopper(null)}\n                          open={true}\n                          value={classAutoSelect}\n                          multiple\n                          onChange={handleClassSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={classes}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => `${option.name}`}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={selected}\n                              />\n                              {`${option.name}`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Class\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Popper\n                      id={\"sectionPopper\"}\n                      open={!!sectionPopper}\n                      anchorEl={sectionPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setSectionPopper(null)}\n                          open={true}\n                          value={sectionAutoSelect}\n                          onChange={handleSectionSelect}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={sections.sort((a, b) =>\n                            a.class.name.localeCompare(b.class.name)\n                          )}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option.name}(class:${option.class.name})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {`${option.name}(class:${option.class.name})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Section\"\n                              autoFocus\n                            />\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    <Popper\n                      id={\"contactsPopper\"}\n                      open={!!contactsPopper}\n                      anchorEl={contactsPopper}>\n                      <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                        {/* <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: \"All\",\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? \"All\"\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n\n                              {`${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <StyledInput\n                              ref={params.InputProps.ref}\n                              inputProps={params.inputProps}\n                              placeholder=\"Students\"\n                              autoFocus\n                            />\n                          )}\n                        /> */}\n\n                        <Autocomplete\n                          multiple\n                          onBlur={() => setContactsPopper(null)}\n                          open={true}\n                          value={contactsAutoSelect}\n                          onChange={handleContactsList}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          id=\"checkboxes-tags-demo\"\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: {\n                                name: `All (${students.length})`,\n                              },\n                              contactNumber: \"\",\n                            },\n                            ...students,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            option._id === \"all\"\n                              ? `All (${students.length})`\n                              : `${option.basicInfo.name} (${option.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={\n                                  selected ||\n                                  (option._id === \"all\" &&\n                                    contactsAutoSelect.length ===\n                                      students.length)\n                                }\n                              />\n                              {option._id === \"all\"\n                                ? `All (${students.length})`\n                                : `${option.basicInfo.name} (${option.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <Box\n                              sx={{\n                                ml: 5,\n                                width: \"100%\",\n                              }}>\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Search student with name\"\n                                autoFocus\n                              />\n                            </Box>\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n\n              {receiverType === \"role\" && (\n                <Grid item xs={12} md={3} lg={3}>\n                  <FormControl size=\"small\" fullWidth>\n                    <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n                    <Select\n                      label=\"Role\"\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={selectRoles}\n                      onChange={handleSelectRoleChange}\n                      multiple\n                      renderValue={(selected) => selected.join(\", \")}\n                      MenuProps={MenuProps}>\n                      {roles &&\n                        roles.map((row, index) => (\n                          <MenuItem\n                            key={row._id}\n                            value={row.name}\n                            sx={{ fontSize: 12 }}>\n                            <Checkbox\n                              checked={selectRoles.indexOf(row.name) > -1}\n                            />\n                            <ListItemText primary={row.name} />\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {receiverType === \"user\" && (\n                <>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <FormControl size=\"small\" fullWidth>\n                      <InputLabel sx={{ fontSize: 12 }}>Role</InputLabel>\n\n                      <Select\n                        labelId=\"demo-simple-select-filled-label\"\n                        id=\"demo-simple-select-filled\"\n                        name=\"role\"\n                        sx={{ marginBottom: \"15px\" }}\n                        label=\"Role\"\n                        size=\"small\"\n                        onChange={handleRoleChange}\n                        value={smsFrom.role}>\n                        {roles &&\n                          roles\n                            .filter((r) => r.name?.toLowerCase() !== \"student\")\n                            .map((row, index) => (\n                              <MenuItem\n                                key={row._id}\n                                value={row._id}\n                                sx={{ fontSize: 12, fontWeight: 500 }}>\n                                {row.name}\n                              </MenuItem>\n                            ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Popper\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={\n                                  selected ||\n                                  (option._id === \"all\" &&\n                                    employeeAutoSelect.length ===\n                                      employees.length)\n                                }\n                              />\n                              {option._id === \"all\"\n                                ? `All (${employees.length})`\n                                : `${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <Box\n                              sx={{\n                                ml: 5,\n                                width: \"100%\",\n                              }}>\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Employees\"\n                                autoFocus\n                              />\n                            </Box>\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Card>\n        <Card sx={{ padding: \"10px\", mb: 1 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={6} lg={4}>\n              <FormControl required={true} size=\"small\" fullWidth>\n                <InputLabel sx={{ fontSize: 12 }}>SMS Type</InputLabel>\n                <Select\n                  label=\"SMS Type\"\n                  id=\"demo-simple-select-filled\"\n                  name=\"smsType\"\n                  value={smsFrom.smsType || \"\"}\n                  onChange={handleFormChange}>\n                  <MenuItem\n                    value={\"general\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    General\n                  </MenuItem>\n                  <MenuItem\n                    value={\"attendance\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Attendence\n                  </MenuItem>\n                  <MenuItem\n                    value={\"fee\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Fee\n                  </MenuItem>\n                  <MenuItem\n                    value={\"credential\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Credential\n                  </MenuItem>\n                  <MenuItem\n                    value={\"exam\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Exam\n                  </MenuItem>\n                  <MenuItem\n                    value={\"leave\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Leave\n                  </MenuItem>\n                  <MenuItem\n                    value={\"library\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Library\n                  </MenuItem>\n                  <MenuItem\n                    value={\"transport\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Transport\n                  </MenuItem>\n                  <MenuItem\n                    value={\"hostel\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Hostel\n                  </MenuItem>\n                  <MenuItem\n                    value={\"preaddmission\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Preaddmission\n                  </MenuItem>\n                  <MenuItem\n                    value={\"parentMeeting\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Parent Meeting\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolTiming\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Timing\n                  </MenuItem>\n                  <MenuItem\n                    value={\"notice\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Notice\n                  </MenuItem>\n                  <MenuItem\n                    value={\"schoolOpen\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    School Open\n                  </MenuItem>\n                  <MenuItem\n                    value={\"education\"}\n                    style={{ fontSize: 12, fontWeight: 500 }}>\n                    Education\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              <TextField\n                required={true}\n                size=\"small\"\n                label=\"Subject\"\n                fullWidth\n                name=\"subject\"\n                value={smsFrom.subject || \"\"}\n                onChange={handleFormChange}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={12} lg={12}>\n              <Box style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                <Typography component={\"span\"}>Dynamic Tag: </Typography>\n\n                <Box>\n                  [name],[school_name] - wil get autoreplaced,\n                  <Typography component={\"span\"} color=\"error\">\n                    replace - {\"{{var}}\"} with your content, variable fields may\n                    vary in length. Space consumed for 1 variable is 30 char and\n                    avoid double space.\n                  </Typography>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <TextareaAutosize\n                maxRows={4}\n                aria-label=\"maximum height\"\n                placeholder=\"Text Message\"\n                style={{\n                  width: \"100%\",\n                  height: \"120px\",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}\n                name=\"sms\"\n                fullWidth\n                value={smsFrom.sms}\n                onChange={handleFormChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <span>Click here to Notify Via SMS</span>\n              <Switch onChange={handleNotifiy} checked={notifyChecked} />\n            </Grid>\n          </Grid>\n        </Card>\n\n        <CheckPermission module=\"Compose\" permission=\"add\">\n          {\" \"}\n          <Grid container spacing={2}>\n            <Grid\n              item\n              xs={12}\n              md={12}\n              lg={12}\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <LoadingButton\n                loading={sendingMessage}\n                size=\"small\"\n                variant=\"contained\"\n                type=\"submit\">\n                Submit\n              </LoadingButton>\n            </Grid>\n          </Grid>\n        </CheckPermission>\n      </form>\n    </>\n  );\n};\n\nexport default Compose;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../../components/PageHeader\";\nimport {\n  Button,\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Tooltip,\n  IconButton,\n  TablePagination,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport { useFormik } from \"formik\";\nimport FormDatePicker from \"../../forms/FormDatePicker\";\nimport ReplyRoundedIcon from \"@mui/icons-material/ReplyRounded\";\nimport RedoRoundedIcon from \"@mui/icons-material/RedoRounded\";\nimport SimCardDownloadRoundedIcon from \"@mui/icons-material/SimCardDownloadRounded\";\nimport { RefreshRounded } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst Type_Options = [\n  {\n    label: \"Manual\",\n    value: \"manual\",\n  },\n  {\n    label: \"Automatic\",\n    value: \"automatic\",\n  },\n];\n\nexport default function Report() {\n  const [report, setReport] = useState([\n    {\n      smsSubject: \"Pre-Admission\",\n      smsType: \"Manual\",\n      message:\n        \"Dear John,Thank you for your admission at webspruce. Our staff will help you for all admission related process.\",\n    },\n    {\n      smsSubject: \"Pre-Admission\",\n      smsType: \"Manual\",\n      message:\n        \"Dear John,Thank you for your admission at webspruce. Our staff will help you for all admission related process.\",\n    },\n    {\n      smsSubject: \"Pre-Admission\",\n      smsType: \"Manual\",\n      message:\n        \"Dear John,Thank you for your admission at webspruce. Our staff will help you for all admission related process.\",\n    },\n  ]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // filter pagination==========\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  // ==============\n\n  const getList = async (values) => {\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const entryFormik = useFormik({\n    initialValues: {\n      type: \"\",\n      fromDate: null,\n      toDate: null,\n    },\n    onSubmit: getList,\n    enableReinitialize: true,\n  });\n\n  return (\n    <>\n      <PageHeader title=\"Report\" />\n      <Grid container spacing={2}>\n        <Grid xs={12} md={3} item>\n          <FormSelect\n            required={true}\n            name=\"type\"\n            formik={entryFormik}\n            label=\"Type\"\n            options={Type_Options}\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker\n            formik={entryFormik}\n            label=\"From Date\"\n            name=\"fromDate\"\n          />\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <FormDatePicker formik={entryFormik} label=\"To Date\" name=\"toDate\" />\n        </Grid>\n        <CheckPermission module=\"Report\" permission=\"view\">\n          <Grid item xs={12} md={3} lg={3} display=\"flex\" alignSelf=\"center\">\n            <Button size=\"small\" type=\"submit\" variant=\"contained\">\n              Find\n            </Button>\n          </Grid>\n        </CheckPermission>\n      </Grid>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                S.No\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Subject\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Type\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Message\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Total SMS\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Time/Date\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                Action\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {report &&\n              report\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => (\n                  <TableRow key={row._id}>\n                    <TableCell align=\"center\">{index + 1}</TableCell>\n                    <TableCell align=\"center\">{row.smsSubject}</TableCell>\n                    <TableCell align=\"center\">{row.smsType}</TableCell>\n                    <TableCell align=\"center\">\n                      {row.message.substring(0, 50) + \"...\"}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Typography>Total:50</Typography>\n                      <Typography>Awaiting:30</Typography>\n                      <Typography>Delivered:20</Typography>{\" \"}\n                      <Typography>Rejected/Failed:0 </Typography>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {dayjs(row.sentTime).format(\"DD-MM-YYYY hh:mm A\")}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                        }}>\n                        <Box>\n                          {\" \"}\n                          <Tooltip title=\"Refresh\">\n                            <IconButton>\n                              <RefreshRounded color=\"primary\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Report\">\n                            <IconButton>\n                              <SimCardDownloadRoundedIcon color=\"secondary\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                        <Box>\n                          {\" \"}\n                          <Tooltip title=\"Resend\">\n                            <IconButton>\n                              <ReplyRoundedIcon color=\"warning\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Forward\">\n                            <IconButton>\n                              <RedoRoundedIcon color=\"success\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n        {!report.length && (\n          <Typography\n            variant=\"h6\"\n            sx={{ textAlign: \"center\", margin: \"5px\", padding: \"5px\" }}>\n            No data found\n          </Typography>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={report.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start,\",\n          }}\n        />\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Grid,\n  Card,\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  Autocomplete,\n  Popper,\n  Checkbox,\n  styled,\n  InputBase,\n  InputAdornment,\n  Button,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, post } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useResizeObserver from \"use-resize-observer\";\nimport CheckPermission from \"../../components/Authentication/CheckPermission\";\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: \"100%\",\n\n  \"& input\": {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : \"#0d1117\",\n    padding: 8,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    border: `1px solid ${\n      theme.palette.mode === \"light\" ? \"#eaecef\" : \"#30363d\"\n    }`,\n    fontSize: 14,\n    \"&:focus\": {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === \"light\"\n          ? \"rgba(3, 102, 214, 0.3)\"\n          : \"rgb(12, 45, 107)\"\n      }`,\n      borderColor: theme.palette.mode === \"light\" ? \"#0366d6\" : \"#388bfd\",\n    },\n  },\n}));\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst Credentails = () => {\n  const { selectedSetting } = useContext(SettingContext);\n  const [roles, setRoles] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectEmployee, setSelectEmployee] = useState(\"\");\n  const [selectRoles, setSelectRoles] = useState([]);\n  const [employeeListPopper, setEmployeeListPopper] = useState(false);\n  const [employeeAutoSelect, setEmployeeAutoSelect] = useState([]);\n  const [classPopper, setClassPopper] = useState(false);\n  const [sectionPopper, setSectionPopper] = useState(false);\n  const [selectClass, setSelectClass] = useState(\"\");\n  const [classes, setClasses] = useState([]);\n  const [contactsPopper, setContactsPopper] = useState(false);\n  const [sections, setSections] = useState([]);\n  const [selectSection, setSelectSection] = useState(\"\");\n  const [selectContacts, setSelectContacts] = useState(\"\");\n  const [classAutoSelect, setClassAutoSelect] = useState([]);\n  const [sectionAutoSelect, setSectionAutoSelect] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [contactsAutoSelect, setContactsAutoSelect] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [selectedStudentCount, setSelectedStudentCount] = useState(0);\n  const [selectedEmployeeCount, setSelectedEmployeeCount] = useState(0);\n  const { ref, width, height } = useResizeObserver();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getRoles = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.role.list);\n        setRoles(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    const getClasses = async () => {\n      try {\n        const { data } = await get(PRIVATE_URLS.class.list, {\n          params: {\n            schoolId: selectedSetting._id,\n          },\n        });\n        setClasses(data.result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getClasses();\n  }, [selectedSetting._id]);\n\n  const handleClassSelect = async (e, val) => {\n    const classIds = val.map((schclass) => schclass._id);\n    const classNames = val.map((schclass) => schclass.name);\n    setClassAutoSelect(val);\n    setSelectClass(classNames.join(\",\"));\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.section.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              class: {\n                $in: classIds,\n              },\n            },\n          },\n        });\n\n        const sortedSections = data.result.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setSections(sortedSections);\n        const filteredSections = sectionAutoSelect.filter((section) =>\n          classIds.includes(section.class._id)\n        );\n        setSectionAutoSelect(filteredSections);\n        setSelectSection(\n          filteredSections\n            .map((section) => `${section.name} (${section.class.name})`)\n            .join(\", \")\n        );\n\n        const filteredSectionIds = filteredSections.map(\n          (section) => section._id\n        );\n        if (filteredSectionIds.length) {\n          const { data: studentData } = await get(PRIVATE_URLS.student.list, {\n            params: {\n              schoolId: selectedSetting._id,\n              search: {\n                \"academicInfo.section\": filteredSectionIds,\n              },\n            },\n          });\n          setStudents(studentData.result);\n        } else {\n          setStudents([]);\n        }\n      } else {\n        setSections([]);\n        setSectionAutoSelect([]);\n        setSelectSection(\"\");\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSectionSelect = async (e, val) => {\n    const sectionIds = val.map((section) => section._id);\n    const sectionNames = val.map((section) => section.name);\n    const classNames = val.map((section) => section.class.name);\n\n    setSectionAutoSelect(val);\n    setSelectSection(\n      sectionNames\n        .map((name, index) => `${name} (${classNames[index]})`)\n        .join(\", \")\n    );\n\n    try {\n      if (val.length) {\n        const { data } = await get(PRIVATE_URLS.student.list, {\n          params: {\n            schoolId: selectedSetting._id,\n            search: {\n              \"academicInfo.section\": sectionIds,\n            },\n          },\n        });\n\n        setStudents(data.result);\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleContactsList = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (contactsAutoSelect.length === students.length) {\n        setContactsAutoSelect([]);\n        setContacts([]);\n        setSelectedStudentCount(0);\n        setSelectContacts(\"\");\n      } else {\n        const allStudentContacts = students.map((student) => student._id);\n        setContactsAutoSelect([...students]);\n        setContacts(allStudentContacts);\n        setSelectedStudentCount(students.length);\n        setSelectContacts(\"All\");\n      }\n    } else {\n      const studentNames = val.map((schclass) => schclass.basicInfo.name);\n      const contacts = val.map((ele) => ele._id);\n      setContacts(contacts);\n      setSelectedStudentCount(val.length);\n      setSelectContacts(studentNames.join(\", \"));\n      setContactsAutoSelect(val);\n    }\n  };\n\n  const handleRoleChange = async (e) => {\n    try {\n      const {\n        target: { value },\n      } = e;\n      setSelectRoles(typeof value === \"string\" ? value.split(\",\") : value);\n      const { data } = await get(PRIVATE_URLS.employee.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            role: {\n              $in: value,\n            },\n          },\n        },\n      });\n      setEmployees(data.result);\n    } catch (error) {}\n  };\n\n  const handleEmployeeAuto = (event, val) => {\n    const findAll = val.some((item) => item._id === \"all\");\n\n    if (findAll) {\n      if (employeeAutoSelect.length === employees.length) {\n        setEmployeeAutoSelect([]);\n        setSelectedEmployeeCount(0);\n        setSelectEmployee(\"\");\n      } else {\n        setEmployeeAutoSelect([...employees]);\n        setSelectedEmployeeCount(employees.length);\n        setSelectEmployee(\"All\");\n      }\n    } else {\n      const employeeNames = val.map((emp) => emp.basicInfo.name);\n      const selectedEmployeeIds = val.map((emp) => emp._id);\n      setEmployeeAutoSelect(val);\n      setSelectedEmployeeCount(val.length);\n      setSelectEmployee(employeeNames.join(\", \"));\n    }\n  };\n\n  const isStudentRoleSelected = selectRoles.some((roleId) => {\n    const role = roles.find((r) => r._id === roleId);\n    return role && role.name.includes(\"STUDENT\");\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      toast.success(\"Credential sent successfully\");\n      setSelectRoles([]);\n      setSelectClass(\"\");\n      setSelectSection(\"\");\n      setSelectContacts([]);\n      setSelectEmployee([]);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Credentials\" />\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Card\n          sx={{\n            padding: \"15px\",\n            width: { xs: \"100%\", sm: \"100%\", md: \"70%\", lg: \"50%\" },\n          }}>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12} lg={12}>\n                <FormControl variant=\"outlined\" fullWidth required>\n                  <InputLabel\n                    id=\"demo-simple-select-filled-label\"\n                    sx={{ fontSize: 12 }}>\n                    User Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    name=\"role\"\n                    sx={{ marginBottom: \"15px\" }}\n                    multiple\n                    label=\"User Type\"\n                    size=\"small\"\n                    onChange={handleRoleChange}\n                    value={selectRoles}>\n                    {roles &&\n                      roles.map((row, index) => (\n                        <MenuItem\n                          key={row._id}\n                          value={row._id}\n                          sx={{ fontSize: 12, fontWeight: 500 }}>\n                          {row.name}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n                {selectRoles.some((roleId) => {\n                  const role = roles.find((r) => r._id === roleId);\n                  return role && role.name.includes(\"STUDENT\");\n                }) && selectRoles.length == 1 ? (\n                  <>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectClass}\n                        fullWidth\n                        sx={{ marginBottom: \"15px\" }}\n                        aria-describedby={\"classPopper\"}\n                        onFocus={(e) => {\n                          setClassPopper(classPopper ? null : e.currentTarget);\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Class\"\n                      />\n                      <Box ref={ref}>\n                        <Popper\n                          sx={{\n                            width: width ? width + 15 : 700,\n                            zIndex: 1,\n                          }}\n                          id={\"classPopper\"}\n                          open={!!classPopper}\n                          anchorEl={classPopper}>\n                          <FormControl\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth>\n                            <Autocomplete\n                              onBlur={() => setClassPopper(null)}\n                              open={true}\n                              value={classAutoSelect}\n                              multiple\n                              onChange={handleClassSelect}\n                              isOptionEqualToValue={(option, value) =>\n                                option._id === value._id\n                              }\n                              options={classes}\n                              disableCloseOnSelect\n                              getOptionLabel={(option) => `${option.name}`}\n                              renderOption={(props, option, { selected }) => (\n                                <li {...props}>\n                                  <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    checked={selected}\n                                  />\n                                  {`${option.name}`}\n                                </li>\n                              )}\n                              renderInput={(params) => (\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Class\"\n                                  autoFocus\n                                />\n                              )}\n                            />\n                          </FormControl>\n                        </Popper>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectSection}\n                        aria-describedby={\"sectionPopper\"}\n                        sx={{ marginBottom: \"15px\" }}\n                        fullWidth\n                        onFocus={(e) => {\n                          setSectionPopper(\n                            sectionPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Section\"\n                      />\n                      <Box ref={ref}>\n                        <Popper\n                          sx={{\n                            width: width ? width + 15 : 700,\n                            zIndex: 1,\n                          }}\n                          id={\"sectionPopper\"}\n                          open={!!sectionPopper}\n                          anchorEl={sectionPopper}>\n                          <FormControl\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth>\n                            <Autocomplete\n                              multiple\n                              onBlur={() => setSectionPopper(null)}\n                              open={true}\n                              value={sectionAutoSelect}\n                              onChange={handleSectionSelect}\n                              isOptionEqualToValue={(option, value) =>\n                                option._id === value._id\n                              }\n                              id=\"checkboxes-tags-demo\"\n                              options={sections.sort((a, b) =>\n                                a.class.name.localeCompare(b.class.name)\n                              )}\n                              disableCloseOnSelect\n                              getOptionLabel={(option) =>\n                                `${option.name}(class:${option.class.name})`\n                              }\n                              renderOption={(props, option, { selected }) => (\n                                <li {...props}>\n                                  <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    style={{ marginRight: 8 }}\n                                    checked={selected}\n                                  />\n                                  {`${option.name}(class:${option.class.name})`}\n                                </li>\n                              )}\n                              renderInput={(params) => (\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Section\"\n                                  autoFocus\n                                />\n                              )}\n                            />\n                          </FormControl>\n                        </Popper>\n                      </Box>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      <TextField\n                        value={selectContacts}\n                        aria-describedby={\"contactsPopper\"}\n                        fullWidth\n                        onFocus={(e) => {\n                          setContactsPopper(\n                            contactsPopper ? null : e.currentTarget\n                          );\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Students\"\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              All Total-{selectedStudentCount}\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                      <Box ref={ref}>\n                        <Popper\n                          sx={{\n                            width: width ? width + 15 : 700,\n                            zIndex: 1,\n                          }}\n                          id={\"contactsPopper\"}\n                          open={!!contactsPopper}\n                          anchorEl={contactsPopper}>\n                          <FormControl\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth>\n                            <Autocomplete\n                              multiple\n                              onBlur={() => setContactsPopper(null)}\n                              open={true}\n                              value={contactsAutoSelect}\n                              onChange={handleContactsList}\n                              isOptionEqualToValue={(option, value) =>\n                                option._id === value._id\n                              }\n                              id=\"checkboxes-tags-demo\"\n                              options={[\n                                {\n                                  _id: \"all\",\n                                  basicInfo: {\n                                    name: `All (${students.length})`,\n                                  },\n                                  contactNumber: \"\",\n                                },\n                                ...students,\n                              ]}\n                              disableCloseOnSelect\n                              getOptionLabel={(option) =>\n                                option._id === \"all\"\n                                  ? `All (${students.length})`\n                                  : `${option.basicInfo.name} (${option.contactNumber})`\n                              }\n                              renderOption={(props, option, { selected }) => (\n                                <li {...props}>\n                                  <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    style={{ marginRight: 8 }}\n                                    checked={\n                                      selected ||\n                                      (option._id === \"all\" &&\n                                        contactsAutoSelect.length ===\n                                          students.length)\n                                    }\n                                  />\n                                  {option._id === \"all\"\n                                    ? `All (${students.length})`\n                                    : `${option.basicInfo.name} (${option.contactNumber})`}\n                                </li>\n                              )}\n                              renderInput={(params) => (\n                                <Box\n                                  sx={{\n                                    ml: 5,\n                                    width: \"100%\",\n                                  }}>\n                                  <StyledInput\n                                    ref={params.InputProps.ref}\n                                    inputProps={params.inputProps}\n                                    placeholder=\"Search student with name\"\n                                    autoFocus\n                                  />\n                                </Box>\n                              )}\n                            />\n                          </FormControl>\n                        </Popper>\n                      </Box>\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n              {!isStudentRoleSelected ? (\n                <Grid item xs={12} md={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    value={selectEmployee}\n                    aria-describedby={\"employeePopper\"}\n                    onFocus={(e) => {\n                      setEmployeeListPopper(\n                        employeeListPopper ? null : e.currentTarget\n                      );\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Employees\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          All Total- {selectedEmployeeCount}\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <Box ref={ref}>\n                    <Popper\n                      sx={{\n                        width: width ? width + 15 : 700,\n                        zIndex: 1,\n                      }}\n                      id={\"employeePopper\"}\n                      open={!!employeeListPopper}\n                      anchorEl={employeeListPopper}>\n                      <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                        <Autocomplete\n                          onBlur={() => setEmployeeListPopper(null)}\n                          open={true}\n                          value={employeeAutoSelect}\n                          multiple\n                          onChange={handleEmployeeAuto}\n                          isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                          }\n                          options={[\n                            {\n                              _id: \"all\",\n                              basicInfo: { name: \"All\" },\n                            },\n                            ...employees,\n                          ]}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) =>\n                            `${option?.basicInfo.name} (${option?.contactNumber})`\n                          }\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                checked={\n                                  selected ||\n                                  (option._id === \"all\" &&\n                                    employeeAutoSelect.length ===\n                                      employees.length)\n                                }\n                              />\n                              {option._id === \"all\"\n                                ? `All (${employees.length})`\n                                : `${option?.basicInfo.name} (${option?.contactNumber})`}\n                            </li>\n                          )}\n                          renderInput={(params) => (\n                            <Box\n                              sx={{\n                                ml: 5,\n                                width: \"100%\",\n                              }}>\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Employees\"\n                                autoFocus\n                              />\n                            </Box>\n                          )}\n                        />\n                      </FormControl>\n                    </Popper>\n                  </Box>\n                </Grid>\n              ) : null}\n\n              {selectRoles.length >= 2 &&\n              selectRoles.some((roleId) => {\n                const role = roles.find((r) => r._id === roleId);\n                return role && role.name.includes(\"STUDENT\");\n              }) ? (\n                <>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectClass}\n                      fullWidth\n                      aria-describedby={\"classPopper\"}\n                      onFocus={(e) => {\n                        setClassPopper(classPopper ? null : e.currentTarget);\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Class\"\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"classPopper\"}\n                        open={!!classPopper}\n                        anchorEl={classPopper}>\n                        <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                          <Autocomplete\n                            onBlur={() => setClassPopper(null)}\n                            open={true}\n                            value={classAutoSelect}\n                            multiple\n                            onChange={handleClassSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            options={classes}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) => `${option.name}`}\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  checked={selected}\n                                />\n                                {`${option.name}`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Class\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectSection}\n                      aria-describedby={\"sectionPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setSectionPopper(\n                          sectionPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Section\"\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"sectionPopper\"}\n                        open={!!sectionPopper}\n                        anchorEl={sectionPopper}>\n                        <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setSectionPopper(null)}\n                            open={true}\n                            value={sectionAutoSelect}\n                            onChange={handleSectionSelect}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={sections.sort((a, b) =>\n                              a.class.name.localeCompare(b.class.name)\n                            )}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              `${option.name}(class:${option.class.name})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n                                {`${option.name}(class:${option.class.name})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <StyledInput\n                                ref={params.InputProps.ref}\n                                inputProps={params.inputProps}\n                                placeholder=\"Section\"\n                                autoFocus\n                              />\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      value={selectContacts}\n                      aria-describedby={\"contactsPopper\"}\n                      fullWidth\n                      onFocus={(e) => {\n                        setContactsPopper(\n                          contactsPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Students\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            All Total-{selectedStudentCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"contactsPopper\"}\n                        open={!!contactsPopper}\n                        anchorEl={contactsPopper}>\n                        <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                          <Autocomplete\n                            multiple\n                            onBlur={() => setContactsPopper(null)}\n                            open={true}\n                            value={contactsAutoSelect}\n                            onChange={handleContactsList}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            id=\"checkboxes-tags-demo\"\n                            options={[\n                              {\n                                _id: \"all\",\n                                basicInfo: {\n                                  name: `All (${students.length})`,\n                                },\n                                contactNumber: \"\",\n                              },\n                              ...students,\n                            ]}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              option._id === \"all\"\n                                ? `All (${students.length})`\n                                : `${option.basicInfo.name} (${option.contactNumber})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={\n                                    selected ||\n                                    (option._id === \"all\" &&\n                                      contactsAutoSelect.length ===\n                                        students.length)\n                                  }\n                                />\n                                {option._id === \"all\"\n                                  ? `All (${students.length})`\n                                  : `${option.basicInfo.name} (${option.contactNumber})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <Box\n                                sx={{\n                                  ml: 5,\n                                  width: \"100%\",\n                                }}>\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Search student with name\"\n                                  autoFocus\n                                />\n                              </Box>\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <TextField\n                      fullWidth\n                      value={selectEmployee}\n                      aria-describedby={\"employeePopper\"}\n                      onFocus={(e) => {\n                        setEmployeeListPopper(\n                          employeeListPopper ? null : e.currentTarget\n                        );\n                      }}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Employees\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            All Total- {selectedEmployeeCount}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <Box ref={ref}>\n                      <Popper\n                        sx={{\n                          width: width ? width + 15 : 700,\n                          zIndex: 1,\n                        }}\n                        id={\"employeePopper\"}\n                        open={!!employeeListPopper}\n                        anchorEl={employeeListPopper}>\n                        <FormControl variant=\"outlined\" fullWidth size=\"small\">\n                          <Autocomplete\n                            onBlur={() => setEmployeeListPopper(null)}\n                            open={true}\n                            value={employeeAutoSelect}\n                            multiple\n                            onChange={handleEmployeeAuto}\n                            isOptionEqualToValue={(option, value) =>\n                              option._id === value._id\n                            }\n                            options={[\n                              {\n                                _id: \"all\",\n                                basicInfo: { name: \"All\" },\n                              },\n                              ...employees,\n                            ]}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) =>\n                              `${option?.basicInfo.name} (${option?.contactNumber})`\n                            }\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  checked={\n                                    selected ||\n                                    (option._id === \"all\" &&\n                                      employeeAutoSelect.length ===\n                                        employees.length)\n                                  }\n                                />\n                                {option._id === \"all\"\n                                  ? `All (${employees.length})`\n                                  : `${option?.basicInfo.name} (${option?.contactNumber})`}\n                              </li>\n                            )}\n                            renderInput={(params) => (\n                              <Box\n                                sx={{\n                                  ml: 5,\n                                  width: \"100%\",\n                                }}>\n                                <StyledInput\n                                  ref={params.InputProps.ref}\n                                  inputProps={params.inputProps}\n                                  placeholder=\"Employees\"\n                                  autoFocus\n                                />\n                              </Box>\n                            )}\n                          />\n                        </FormControl>\n                      </Popper>\n                    </Box>\n                  </Grid>\n                </>\n              ) : (\n                \"\"\n              )}\n              <CheckPermission module=\"Credential\" permission=\"add\">\n                <Grid item xs={12} md={12} lg={6} container>\n                  <LoadingButton\n                    loading={loading}\n                    variant=\"contained\"\n                    size=\"small\"\n                    type=\"submit\">\n                    Send Credentials\n                  </LoadingButton>\n                </Grid>\n              </CheckPermission>\n            </Grid>\n          </form>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default Credentails;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRIVATE_URLS } from \"../../services/urlConstants\";\nimport { get, put } from \"../../services/apiMethods\";\nimport SettingContext from \"../../context/SettingsContext\";\nimport {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport FormSelect from \"../../forms/FormSelect\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport FileSelect from \"../../forms/FileSelect\";\n\nexport default function BulkPhoto() {\n  const { selectedSetting } = useContext(SettingContext);\n  const navigate = useNavigate();\n  const [academicYearList, setAcademicYearList] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  const getAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n\n      setAcademicYearList(\n        data.result.map((d) => ({\n          ...d,\n          label: `${d.from}-${d.to}`,\n          value: d._id,\n        }))\n      );\n      formik.setFieldValue(\"academicYear\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get class\n  const getClasses = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.class.list, {\n        params: {\n          schoolId: selectedSetting._id,\n        },\n      });\n      setClasses(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"class\", data.result[0]._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //get sections\n  const getSections = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.section.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            class: formik.values.class,\n          },\n        },\n      });\n\n      setSections(\n        data.result.map((c) => ({ ...c, label: c.name, value: c._id }))\n      );\n      formik.setFieldValue(\"section\", data.result[0]?._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStudents = async (values) => {\n    try {\n      const { data } = await get(PRIVATE_URLS.student.list, {\n        params: {\n          schoolId: selectedSetting._id,\n          search: {\n            academicYear: values.academicYear,\n            \"academicInfo.class\": values.class,\n            \"academicInfo.section\": values.section,\n          },\n        },\n      });\n      setStudents(data.result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      academicYear: \"\",\n      class: \"\",\n      section: \"\",\n    },\n    onSubmit: getStudents,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    getAcademicYear();\n    getClasses();\n  }, [selectedSetting._id]);\n  useEffect(() => {\n    if (formik.values.class) {\n      getSections();\n    }\n  }, [formik.values.class, selectedSetting]);\n\n  useEffect(() => {\n    if (\n      formik.values.academicYear &&\n      formik.values.class &&\n      formik.values.section\n    ) {\n      getStudents(formik.values);\n    }\n  }, [\n    formik.values.academicYear,\n    formik.values.class,\n    formik.values.section,\n    selectedSetting,\n  ]);\n\n  const handleNavigateStudent = (student) => {\n    navigate(`/sch/student/edit-student/${student._id}`);\n  };\n\n  const handleChangeFiles = async (e, studentId) => {\n    const { files } = e.target;\n    if (files.length > 0) {\n      const formData = new FormData();\n      formData.append(\"photo\", files[0]);\n\n      try {\n        await put(\n          PRIVATE_URLS.student.updatePhoto + \"/\" + studentId,\n          formData,\n          {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          }\n        );\n\n        getStudents(formik.values);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Bulk Photo\" />\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Grid\n            rowSpacing={1}\n            columnSpacing={2}\n            container\n            component=\"div\"\n            onSubmit={formik.handleSubmit}>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"academicYear\"\n                formik={formik}\n                label=\"Select Academic Year\"\n                options={academicYearList}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"class\"\n                formik={formik}\n                label=\"Select Class\"\n                options={classes}\n              />\n            </Grid>\n\n            <Grid xs={12} md={6} lg={3} item>\n              <FormSelect\n                required={true}\n                name=\"section\"\n                formik={formik}\n                label=\"Select Section\"\n                options={sections}\n              />\n            </Grid>\n            <Grid xs={12} md={6} lg={3} item sx={{ alignSelf: \"center\" }}>\n              <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                Find\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\"\n                  ? theme.palette.primary.dark\n                  : theme.palette.primary.light,\n            }}>\n            <TableRow>\n              <TableCell align=\"center\">SL</TableCell>\n              <TableCell align=\"center\">Roll No</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Photo</TableCell>\n              <TableCell align=\"center\">File</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {students.map((student, index) => (\n              <TableRow key={student._id}>\n                <TableCell align=\"center\">{index + 1}</TableCell>\n                <TableCell align=\"center\">\n                  {student.academicInfo.rollNumber}\n                </TableCell>\n                <TableCell align=\"center\">{student.basicInfo.name}</TableCell>\n                <TableCell align=\"center\">\n                  <Avatar src={student.photo} sx={{ margin: \"auto\" }} />\n                </TableCell>\n                <TableCell align=\"center\" sx={{ maxWidth: \"100px\" }}>\n                  {/* <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    style={{ display: \"block\", margin: \"auto\" }}\n                  /> */}\n\n                  <FileSelect\n                    multi={false}\n                    onChange={(e) => handleChangeFiles(e, student._id)}\n                    customOnChange={true}\n                    label=\"Select Image\"\n                  />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton onClick={() => handleNavigateStudent(student)}>\n                      <EditIcon color=\"primary\" fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/** @format */\n\nimport React, { useEffect } from \"react\";\nimport { Box, Typography, styled, Button, Grid } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport image from \"../assets/images/computing.png\";\nimport themeData from \"../data/themeData\";\n\nconst Container = styled(Box)(() => ({\n  display: \"flex\",\n  height: \"80vh\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n}));\n\nconst BackButton = styled(Button)(() => ({\n  backgroundColor: \"#fff\",\n  color: themeData.darkPalette.primary.main,\n  \"&:hover\": {\n    backgroundColor: themeData.darkPalette.primary.main,\n    color: \"#fff\",\n  },\n}));\n\nfunction PageNotFound() {\n  const navigate = useNavigate();\n\n  return (\n    <Container>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}>\n          <img src={image} style={{ height: \"300px\", width: \"300px\" }} />\n\n          <BackButton\n            onClick={() => navigate(-1)}\n            size=\"small\"\n            variant=\"outlined\">\n            Go Back\n          </BackButton>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default PageNotFound;\n","export const notificationsTableKeys = [\n  {\n    name: \"Subject\",\n    key: \"subject\",\n  },\n  {\n    name: \"Type\",\n    key: \"type\",\n  },\n  {\n    name: \"Message\",\n    key: \"message\",\n  },\n  {\n    name: \"Total SMS\",\n    key: \"totalSMS\",\n  },\n  {\n    name: \"Time/Date\",\n    key: \"female\",\n  },\n];\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport CustomTable from \"../components/Tables/CustomTable\";\nimport { notificationsTableKeys } from \"../data/tableKeys/notificationsData\";\n\nexport default function Notifications() {\n  const [data, setData] = useState([]);\n  return (\n    <>\n      <PageHeader title=\"Notifications\" />\n      <CustomTable\n        actions={[]}\n        module=\"Notification\"\n        bodyDataModal=\"Notifications\"\n        bodyData={data}\n        tableKeys={notificationsTableKeys}\n      />\n    </>\n  );\n}\n","/** @format */\n\nimport * as React from \"react\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport {\n  Avatar,\n  Collapse,\n  Menu,\n  MenuItem,\n  Stack,\n  Switch,\n  Tooltip,\n} from \"@mui/material\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { Route, Routes } from \"react-router-dom\";\n// icons\nimport CircleNotificationsIcon from \"@mui/icons-material/CircleNotifications\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport LockResetIcon from \"@mui/icons-material/LockReset\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nimport menu from \"../data/menu\";\nimport Dashboard from \"../pages/Dashboard\";\n\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport LOGO from \"../assets/images/deleteicon.png\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport ThemeModeContext from \"../context/ThemeModeContext\";\nimport AcademicYear from \"../pages/Administrator/AcademicYear\";\nimport ManageDesignation from \"../pages/HumanResource/ManageDesignation\";\nimport ManageDepartment from \"../pages/HumanResource/ManageDepartment\";\nimport Employee from \"../pages/HumanResource/Employee\";\nimport OfferLetter from \"../pages/HumanResource/OfferLetter\";\nimport RelievingLetter from \"../pages/HumanResource/RelievingLetter\";\nimport OffBoarding from \"../pages/HumanResource/OffBoarding\";\nimport ExperienceLetter from \"../pages/HumanResource/ExperienceLetter\";\nimport TeacherActivity from \"../pages/HumanResource/TeacherActivity\";\nimport RolePermission from \"../pages/Administrator/RolePermission\";\nimport UserRole from \"../pages/Administrator/UserRole\";\nimport ResetPassword from \"../pages/Administrator/ResetPassword\";\nimport Class from \"../pages/Academic/Class\";\nimport Section from \"../pages/Academic/Section\";\nimport Subject from \"../pages/Academic/Subject\";\n\nimport Overview from \"../pages/Student/Overview\";\nimport AdmitStudent from \"../pages/Student/AdmitStudent\";\nimport Reshuffle from \"../pages/Student/Reshuffle\";\nimport Promotion from \"../pages/Student/Promotion\";\nimport BulkAdmission from \"../pages/Student/BulkAdmission\";\nimport Credential from \"../pages/Student/Credential\";\nimport StudentActivity from \"../pages/Student/StudentActivity\";\n\nimport ReceiptBook from \"../pages/Fees/ReceiptBook\";\nimport FeeMapCategory from \"../pages/Fees/FeeMapCategory\";\nimport CollectFees from \"../pages/Fees/CollectFees\";\nimport BalanceFeeReport from \"../pages/Fees/BalanceFeeReport\";\nimport FeeOverview from \"../pages/Fees/FeeOverview\";\nimport Reconciliation from \"../pages/Fees/Reconciliation\";\nimport ManageHostel from \"../pages/Hostel/ManageHostel\";\nimport ManageRoomType from \"../pages/Hostel/ManageRoomType\";\nimport ManageRoomAndBed from \"../pages/Hostel/ManageRoomAndBed\";\nimport HostelMember from \"../pages/Hostel/HostelMember\";\nimport StudentBulkPhoto from \"../pages/Student/StudentBulkPhoto\";\nimport AddEmployee from \"../pages/HumanResource/AddEmployee\";\nimport ManageInstitute from \"../pages/ManageInstitute/ManageInstitute\";\nimport AddInstitute from \"../pages/ManageInstitute/AddInstitute\";\nimport Profile from \"../pages/AccountSettings/Profile\";\nimport UpdateEmployee from \"../pages/HumanResource/UpdateEmployee\";\nimport { PRIVATE_URLS } from \"../services/urlConstants\";\nimport { get } from \"../services/apiMethods\";\nimport SettingContext from \"../context/SettingsContext\";\nimport AddStudent from \"../pages/Student/AddStudent\";\nimport Compose from \"../pages/Communication/Compose\";\nimport Report from \"../pages/Communication/Report\";\nimport Credentials from \"../pages/Communication/Credentials\";\nimport BulkPhoto from \"../pages/Student/BulkPhoto\";\nimport PageNotFound from \"./PageNotFound\";\nimport Notifications from \"../pages/Notifications\";\n\n// exlnt_70471681\n// 9538063455\n\nconst drawerWidth = 250;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst DrawerFooter = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-start\",\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nexport default function NavDrawer() {\n  const theme = useTheme();\n  const { selectedSetting } = React.useContext(SettingContext);\n  const [open, setOpen] = React.useState(true);\n  const [sideMenuData, setSideMenuData] = React.useState([]);\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const openProfile = Boolean(anchorEl);\n  const [activeYear, setActiveYear] = React.useState([]);\n  const [employee, setEmployee] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const getEmployees = async () => {\n    const user = window.localStorage.getItem(\n      process.env.REACT_APP_CURRENT_USER\n    );\n    setEmployee(JSON.parse(user));\n  };\n\n  const { isDarkMode, setIsDarkMode } = React.useContext(ThemeModeContext);\n  const [selecteSubMenu, setSelectedSubMenu] = React.useState(\"\");\n  const [selectedMenu, setSelectedMenu] = React.useState(null);\n  const { SIDE_MENU_DATA } = menu;\n\n  React.useEffect(() => {\n    let role = employee?.role;\n\n    if (!role) {\n      setSideMenuData([]);\n    } else if (role.name === \"SUPER ADMIN\") {\n      setSideMenuData(SIDE_MENU_DATA);\n    } else {\n      let permissions = role.permissions;\n      let newSideMenuData = [];\n      for (let menuData of SIDE_MENU_DATA) {\n        if (menuData.subMenus.length) {\n          let newMenu = { ...menuData, subMenus: [] };\n\n          for (let ren of menuData.renderName) {\n            if (\n              permissions\n                ?.filter(\n                  (p) => p.module.toLowerCase() === ren?.toLowerCase()\n                )[0]\n                ?.permissions?.includes(\"view\")\n            ) {\n              newMenu.subMenus = [\n                ...new Set([\n                  ...newMenu.subMenus,\n                  ...menuData.subMenus.filter(\n                    (s) => s.renderName?.toLowerCase() === ren?.toLowerCase()\n                  ),\n                ]),\n              ];\n            }\n          }\n\n          if (newMenu.subMenus.length) {\n            newSideMenuData.push(newMenu);\n          }\n        } else {\n          if (\n            permissions\n              ?.filter(\n                (p) =>\n                  p.module.toLowerCase() ===\n                  menuData.renderName[0]?.toLowerCase()\n              )[0]\n              ?.permissions?.includes(\"view\")\n          ) {\n            newSideMenuData.push(menuData);\n          }\n        }\n      }\n\n      setSideMenuData(newSideMenuData);\n    }\n  }, [employee]);\n\n  React.useEffect(() => {\n    getActiveAcademicYear();\n  }, [selectedSetting]);\n\n  React.useEffect(() => {\n    getEmployees();\n  }, [selectedSetting]);\n\n  //get academic year\n  const getActiveAcademicYear = async () => {\n    try {\n      const { data } = await get(PRIVATE_URLS.academicYear.list);\n      setActiveYear(data.result[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // on load if any selected sub-menu was there then open\n  React.useEffect(() => {\n    const openPreviousMenu = () => {\n      let path = window.location.pathname;\n      let menuIndex = null;\n\n      for (let menu of SIDE_MENU_DATA) {\n        if (menu.subMenus.length) {\n          let pathNames = menu.subMenus.map((s) => s.path);\n          if (pathNames.includes(path)) {\n            menuIndex = SIDE_MENU_DATA.indexOf(menu);\n          }\n        }\n      }\n\n      if (menuIndex) {\n        setSelectedMenu(menuIndex);\n        setOpen(true);\n      }\n    };\n\n    openPreviousMenu();\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleModeChange = () => {\n    setIsDarkMode(!isDarkMode);\n    window.localStorage.setItem(\"isDarkMode\", !isDarkMode);\n  };\n\n  const handleToggleMenuOpen = (index) => {\n    if (selectedMenu === index) {\n      return setSelectedMenu(null);\n    }\n    setSelectedMenu(index);\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(process.env.REACT_APP_ACCESS_TOKEN);\n    window.localStorage.removeItem(process.env.REACT_APP_CURRENT_USER);\n    window.localStorage.removeItem(process.env.REACT_APP_USER_TYPE);\n    navigate(\"/\");\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: 5,\n              ...(open && { display: \"none\" }),\n            }}>\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            color=\"white\"\n            textAlign=\"center\"\n            fontSize=\"18px\"\n            sx={{ display: { xs: \"none\", md: \"block\" } }}>\n            {selectedSetting?.name} [{activeYear ? activeYear?.from : \"-\"} -{\" \"}\n            {activeYear ? activeYear?.to : \"-\"}]\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              width: \"100%\",\n              flex: 1,\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}>\n            <Stack\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              spacing={1}\n              direction=\"row\">\n              <Tooltip title=\"Notification\">\n                <Link to=\"/sch/notifications\">\n                  <IconButton>\n                    <NotificationsIcon\n                      sx={{ width: 26, height: 26, color: \"#BDBDBD\" }}\n                    />\n                  </IconButton>\n                </Link>\n              </Tooltip>\n              <Tooltip title=\"Account Settings\">\n                <IconButton\n                  onClick={handleClick}\n                  aria-controls={openProfile ? \"account-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={openProfile ? true : undefined}>\n                  {employee?.photo ? (\n                    <img\n                      src={employee?.photo}\n                      style={{\n                        width: \"26px\",\n                        height: \"26px\",\n                        display: \"block\",\n                        objectFit: \"cover\",\n                        margin: \"0 auto\",\n                        borderRadius: \"50%\",\n                        overflow: \"hidden\",\n                        cursor: \"pointer\",\n                      }}\n                      alt=\"Preview\"\n                    />\n                  ) : (\n                    <Avatar sx={{ width: 26, height: 26 }} />\n                  )}\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Website\">\n                <Link to=\"/\">\n                  <IconButton>\n                    <Avatar\n                      src=\"/world-wide-web.png\"\n                      alt=\"loading...\"\n                      sx={{ width: 26, height: 26 }}\n                    />\n                  </IconButton>\n\n                  {/* <img\n                  src=\"/world-wide-web.png\"\n                  alt=\"loading...\"\n                  width={30}\n                  height={30}\n                  color=\"#fff\"\n                /> */}\n                </Link>\n              </Tooltip>\n            </Stack>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={openProfile}\n        onClose={handleClose}\n        onClick={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: \"visible\",\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n            mt: 1.5,\n            \"& .MuiAvatar-root\": {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            \"&::before\": {\n              content: '\"\"',\n              display: \"block\",\n              position: \"absolute\",\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: \"background.paper\",\n              transform: \"translateY(-50%) rotate(45deg)\",\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/profile\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <PersonIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>Profile</ListItemText>\n          </Link>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <Link\n            to=\"/sch/administrator/reset-password\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <LockResetIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>\n              Reset Password\n            </ListItemText>\n          </Link>\n        </MenuItem>\n\n        <MenuItem onClick={handleLogout}>\n          <Link\n            to=\"/sch/administrator/reset-password\"\n            style={{ display: \"flex\", textDecoration: \"none\" }}>\n            <ListItemIcon>\n              <LogoutIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>Log Out</ListItemText>\n          </Link>\n        </MenuItem>\n      </Menu>\n\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader\n          sx={{\n            justifyContent: \"space-between\",\n            position: \"sticky\",\n            top: 0,\n            zIndex: 1,\n            backgroundColor: isDarkMode ? \"#000\" : \"#fff\",\n            overflow: \"hidden\",\n          }}>\n          <Box></Box>\n          <img\n            style={{\n              height: \"50px\",\n              width: \"80px\",\n\n              objectFit: \"contain\",\n            }}\n            src={selectedSetting?.logo}\n          />\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon color=\"primary\" />\n            ) : (\n              <ChevronLeftIcon color=\"primary\" />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {sideMenuData.map((m, index) =>\n            !m.subMenus.length ? (\n              <div key={m.path}>\n                <ListItem disablePadding>\n                  <Link\n                    to={m.path}\n                    style={{\n                      textDecoration: \"none\",\n                      display: \"flex\",\n                      flex: 1,\n                    }}>\n                    <ListItemButton\n                      onClick={() => setSelectedMenu(index)}\n                      selected={\n                        selectedMenu === index ||\n                        window.location.pathname === m.path\n                      }>\n                      <ListItemIcon>{m.icon}</ListItemIcon>\n                      <ListItemText primary={m.name} />\n                    </ListItemButton>\n                  </Link>\n                </ListItem>\n                {/* <Divider /> */}\n              </div>\n            ) : (\n              <div key={m.path + m.name}>\n                <ListItem key={m.path} sx={{ padding: 0 }}>\n                  <ListItemButton\n                    selected={\n                      selectedMenu === index ||\n                      window.location.pathname === m.path\n                    }\n                    onClick={() => handleToggleMenuOpen(index)}>\n                    <ListItemIcon>{m.icon}</ListItemIcon>\n                    <ListItemText primary={m.name} />\n\n                    {selectedMenu === index ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                </ListItem>\n                <Collapse\n                  timeout=\"auto\"\n                  unmountOnExit\n                  in={selectedMenu === index}\n                  sx={{ width: \"100%\" }}>\n                  <List>\n                    {m.subMenus.map((sub) => (\n                      <ListItem sx={{ width: \"100%\" }} key={sub.name}>\n                        <Link\n                          to={sub.path}\n                          style={{\n                            textDecoration: \"none\",\n                            display: \"flex\",\n                            flex: 1,\n                            color: \"red\",\n                          }}>\n                          <ListItemButton\n                            onClick={() => setSelectedSubMenu(sub.path)}\n                            sx={{\n                              \"& .MuiListItemText-root\": {\n                                whiteSpace: \"normal\",\n                                wordWrap: \"wrap\",\n                              },\n                              \"& .MuiListItemIcon-root\": {\n                                // This ensures the ListItemIcon doesn't use the default minimum width\n                                // Adjust this value to decrease the space\n                              },\n                            }}\n                            selected={\n                              selecteSubMenu === sub.path ||\n                              window.location.pathname === sub.path\n                            }>\n                            <ListItemIcon>{sub.icon}</ListItemIcon>\n                            <ListItemText primary={sub.name} />\n                          </ListItemButton>\n                        </Link>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n                {/* <Divider /> */}\n              </div>\n            )\n          )}\n        </List>\n        <Divider />\n        <ListItem disablePadding>\n          <ListItemButton\n            sx={{\n              paddingLeft: 0,\n              \"& .MuiListItemText-root\": {\n                whiteSpace: \"normal\",\n                wordWrap: \"wrap\",\n              },\n              \"& .MuiListItemIcon-root\": {\n                // This ensures the ListItemIcon doesn't use the default minimum width\n                // Adjust this value to decrease the space\n              },\n            }}>\n            <Switch\n              sx={{ marginRight: \"20px\" }}\n              checked={isDarkMode}\n              onChange={handleModeChange}\n            />\n            <ListItemText primary={isDarkMode ? \"Dark Mode\" : \"Light Mode\"} />\n          </ListItemButton>\n        </ListItem>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n\n          overflowX: \"hidden\",\n          overflowY: \"auto\",\n        }}>\n        <DrawerHeader />\n\n        <Routes>\n          <Route path=\"dashboard\" element={<Dashboard />} />\n          <Route path=\"manage-institute\" element={<ManageInstitute />} />\n          <Route path=\"administrator/academicYear\" element={<AcademicYear />} />\n          <Route\n            path=\"administrator/role-permission\"\n            element={<RolePermission />}\n          />\n          <Route path=\"administrator/user-role\" element={<UserRole />} />\n          <Route\n            path=\"administrator/reset-password\"\n            element={<ResetPassword />}\n          />\n          <Route\n            path=\"human-resource/manage-designation\"\n            element={<ManageDesignation />}\n          />\n          <Route\n            path=\"human-resource/manage-department\"\n            element={<ManageDepartment />}\n          />\n          <Route path=\"human-resource/employee\" element={<Employee />} />\n          <Route\n            path=\"human-resource/update-employee/:id\"\n            element={<UpdateEmployee />}\n          />\n          <Route path=\"human-resource/offer-letter\" element={<OfferLetter />} />\n          <Route\n            path=\"human-resource/relieving-letter\"\n            element={<RelievingLetter />}\n          />\n\n          {/* <Route path=\"human-resource/off-boarding\" element={<OffBoarding />} /> */}\n          <Route\n            path=\"human-resource/experience-letter\"\n            element={<ExperienceLetter />}\n          />\n\n          <Route\n            path=\"human-resource/teacher-activity\"\n            element={<TeacherActivity />}\n          />\n\n          <Route path=\"academic/class\" element={<Class />} />\n          <Route path=\"academic/section\" element={<Section />} />\n          <Route path=\"academic/subject\" element={<Subject />} />\n\n          <Route path=\"student/overview\" element={<Overview />} />\n          <Route path=\"student/admit-student\" element={<AdmitStudent />} />\n          <Route path=\"student/add-student\" element={<AddStudent />} />\n          <Route path=\"student/edit-student/:id\" element={<AddStudent />} />\n          <Route path=\"student/reshuffle\" element={<Reshuffle />} />\n          <Route path=\"student/promotion\" element={<Promotion />} />\n          <Route path=\"student/bulk-admission\" element={<BulkAdmission />} />\n          <Route path=\"student/credential\" element={<Credential />} />\n\n          <Route path=\"student/bulk-photo\" element={<BulkPhoto />} />\n          <Route\n            path=\"student/student-activity\"\n            element={<StudentActivity />}\n          />\n          <Route\n            path=\"student/student-bulk-photo\"\n            element={<StudentBulkPhoto />}\n          />\n\n          <Route path=\"fees/receipt-book\" element={<ReceiptBook />} />\n          <Route path=\"fees/feeMap-category\" element={<FeeMapCategory />} />\n          <Route path=\"fees/collect-fees\" element={<CollectFees />} />\n          <Route path=\"fees/balance-fee\" element={<BalanceFeeReport />} />\n          <Route path=\"fees/fee-overview\" element={<FeeOverview />} />\n          <Route path=\"fees/re-conciliation\" element={<Reconciliation />} />\n\n          <Route path=\"hostel/manage-hostel\" element={<ManageHostel />} />\n          <Route path=\"hostel/manage-room-type\" element={<ManageRoomType />} />\n          <Route path=\"hostel/manage-room-bed\" element={<ManageRoomAndBed />} />\n          <Route path=\"hostel/hostel-member\" element={<HostelMember />} />\n\n          <Route path=\"human-resource/add-employee\" element={<AddEmployee />} />\n          <Route path=\"notifications\" element={<Notifications />} />\n\n          <Route path=\"communication_compose\" element={<Compose />} />\n          <Route path=\"communication_report\" element={<Report />} />\n          <Route path=\"communication_credentials\" element={<Credentials />} />\n\n          <Route\n            path=\"human-resource/edit-employee/:id\"\n            element={<AddEmployee />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/add-institute\"\n            element={<AddInstitute />}\n          />\n          <Route\n            path=\"manage-institute/edit-institute/:id\"\n            element={<AddInstitute />}\n          />\n          <Route path=\"profile\" element={<Profile />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n}\n"],"names":["SIDE_MENU_DATA","name","path","renderName","subMenus","icon","_jsx","DashboardRoundedIcon","color","fontSize","SettingsSuggest","Person","SubdirectoryArrowRightOutlinedIcon","Diversity2Icon","AccountBalance","Groups","InstallMobileRounded","NotificationsActiveRoundedIcon","CurrencyRupee","GiteIcon","Wrapper","styled","Box","_ref","theme","display","justifyContent","alignItems","padding","marginBottom","borderBottom","borderBottomColor","palette","primary","light","PageHeader","_ref2","title","showTextField","children","Typography","component","sx","fontWeight","mode","ChartBar","selectedSetting","useContext","SettingContext","classes","setClasses","useState","uniqueSections","setUniqueSections","ref","width","useResizeObserver","useEffect","async","data","get","PRIVATE_URLS","student","getDashboardStudentDetails","params","schoolId","_id","transformedData","result","map","classItem","transformedItem","className","Object","keys","sections","forEach","section","Set","add","error","console","log","getData","flex","ResponsiveContainer","height","Paper","_jsxs","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","sectionName","Bar","fill","Math","floor","random","toString","stackId","Card","breakpoints","down","flexDirection","alignSelf","_ref3","_ref4","textAlign","_ref5","marginTop","Attendance","studentAttendence","setStudentAttendence","employeeAttendence","setEmployeeAttendence","_studentData$data","_employeeData$data","studentData","employeeData","Promise","all","studentAttendance","getAttendanceSummaryForToday","employeeAttendance","getEmployeeAttendanceSummaryForToday","getStudentAttendanceSummary","window","localStorage","getItem","_Fragment","xs","sm","md","lg","backgroundColor","Grid","container","spacing","item","CheckPermission","_role$name","module","permission","process","user","role","JSON","parse","toLowerCase","moduleR","permissions","find","p","_p$module","includes","DataContainer","StyledFab","Fab","background","QuickLinks","Link","to","style","textDecoration","size","Message","borderRadius","transform","animation","animationPlayState","from","marginLeft","marginRight","paddingBottom","position","cursor","borderLeft","paddingLeft","_ref6","themeData","darkPalette","main","Events","notice","setNotice","holidays","setHolidays","list","getNotice","holiday","getHolidays","mt","Calendar","tileClassName","_ref7","date","today","Date","toDateString","FilterStudent","navigate","useNavigate","setSections","students","setStudents","entryFormik","useFormik","initialValues","class","onSubmit","values","concat","enableReinitialize","label","value","setFieldValue","search","sectionAllOption","s","getSections","d","basicInfo","academicInfo","rollNumber","contactNumber","getStudents","classesAllOption","getClasses","rowSpacing","columnSpacing","handleSubmit","FormSelect","required","formik","options","showSearch","Button","variant","type","Dashboard","AddForm","disabled","onAddClick","onClick","AddIcon","FormModal","formTitle","open","onClose","submitButtonTitle","styles","adding","useTheme","fullScreen","useMediaQuery","Dialog","PaperProps","maxWidth","DialogTitle","Divider","DialogContent","DialogActions","LoadingButton","loading","NoTableData","dataPresent","charAt","toUpperCase","slice","bgcolor","boxShadow","CustomSwitch","Switch","getDataValue","k","key","length","isDate","substring","CustomTable","bodyData","bodyDataModal","tableKeys","actions","onEditClick","onDeleteClick","onViewClick","onCardClick","onNavigateFeeMap","onToggleSwitch","toggleStatus","isDataReady","CustomAction","onUpdate","onDownloadClick","page","setPage","React","rowsPerPage","setRowsPerPage","setOpen","selectedItem","setSelectedItem","handleClose","getTooltipTitle","TableContainer","Table","TableHead","dark","TableRow","TableCell","align","r","i","TableBody","index","Avatar","objectFit","src","columnGap","checkOut","IconButton","EditIcon","handleDeleteClick","DeleteIcon","RemoveRedEyeRoundedIcon","checked","Download","paddingTop","PuffLoader","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","Modal","image","my","gap","academicYearTableKeys","AcademicYear","setData","dataToEdit","setDataToEdit","setLoading","academicYear","note","payload","put","update","post","create","toggleActiveStatus","AddDepartmentHandel","FormInput","designationTableKeys","ManageDesignation","designation","orderSequence","del","delete","id","AddDesigationHandel","departmentTableKeys","ManageDepartment","department","a11yProps","TabList","labels","onChange","Tabs","scrollButtons","allowScrollButtonsMobile","l","Tab","props","other","hidden","overviewTableKeys","employeeTableKeys","inactiveTableKeys","Employee","setSelectValue","activeData","setActiveData","InactiveData","setInactiveData","overviewData","setOverviewData","allEmployee","setAllEmployee","searchFilter","setSearchFilter","setSearch","employee","filter","active","inactiveData","maleCount","emp","gender","femaleCount","totalCount","male","female","total","getDataDepartment","handleDelete","handeleClickEdit","handleSearch","e","trim","ele","handleTabChange","newValue","TabPanel","TextField","ml","placeholder","InputProps","endAdornment","InputAdornment","edge","Search","Print","ListAlt","offerLetterTableKeys","openTo","views","inputFormat","disableFutureDates","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","disableFuture","slotProps","textField","InputLabelProps","closeOnSelect","format","dayjs","LetterViewModal","content","onPrintClick","contentRef","useRef","m","CloseIcon","gutterBottom","dangerouslySetInnerHTML","__html","ReactToPrint","trigger","startIcon","PrintIcon","current","OfferLetter","componentRef","handlePrint","useReactToPrint","modalData","setModalData","containt","offerLetter","joiningDate","resetForm","FormDatePicker","ReactQuill","relievingLetterDataTableKeys","RelievingLetter","relievingLetter","experienceTableKeys","ExperienceLetter","experienceLetter","onBlur","handleBlur","teacherActivityTableKeys","TeacherActivity","loadingFind","setLoadingFind","setAcademicYear","subjects","setSubjects","employees","setEmployees","currentUserStringified","currentUser","teacherActivity","teacher","subject","fromDate","toDate","classId","getSubject","_data$result","match","RegExp","empOption","getEmployees","getAcademicYear","topic","rolePermissionTableKeys","ROLE_PERMISSIONS","subModule","toggleItemInArray","array","indexOf","push","splice","removeFromArray","arr","str","StyledBox","zIndex","CRUD_OPERATIONS","RolePermission","setValue","roles","setRoles","roleToEdit","setRoleToEdit","roleKeys","setRoleKeys","allPermissionUpdate","setAllPermissionUpdate","getRoleKeys","allKeys","handleAddOrUpdate","formikUpdate","handleUpdateAll","allPermissions","co","every","handleChange","openRoleAddUpdateModal","handleModalClose","maxHeight","stickyHeader","Checkbox","roleModule","colSpan","grey","o","_roleKeys$find","_roleKeys$find$permis","handleChangePermission","Stack","direction","handleCancelClick","userRoleTableKeys","UserRole","Type_Options","ResetPassword","setEmployee","userType","employeeId","password","studentId","account","changePasswordForUser","_r$name","getRoles","_data$result$","c","_data$result$2","academicClassTableKeys","Active","IS_PUBLIC","Class","_dataToEdit$classTeac","classTeachers","isPublic","numericName","multiple","academicSectionTableKeys","CustomSelect","isSearch","blurred","setBlurred","inputRef","undefined","isDarkMode","ThemeModeContext","searchText","setSearchText","displayedOptions","useMemo","option","containsText","text","labelColor","FormControl","fullWidth","InputLabel","shrink","Select","notched","labelId","onAnimationEnd","_inputRef$current","focus","MenuProps","autoFocus","ListSubheader","startAdornment","SearchIcon","onKeyDown","stopPropagation","MenuItem","memo","Section","_dataToEdit$class","_dataToEdit$sectionTe","selectedClass","setSelectedClass","setSubject","subjectTeachers","setSubjectTeachers","_data$result2","sectionTeacher","clearFormValues","setValues","_data$result3","previousSubjectTeachers","subjectsAndTheirTeachers","_previousSubjectTeach","t","border","_subject$find","sub","handleSelectSubjectTeacher","updatedSubjectTeachers","idx","academicSubjectTableKeys","Subject_Type","Subject_Group","Subject","_dataToEdit$subjectTe","code","subjectType","subjectGroup","TitleContainer","ValueContainer","StudentCount","showTitle","downloadFile","contentType","arguments","filename","blob","Blob","saveAs","blobUrl","URL","createObjectURL","setTimeout","revokeObjectURL","hasAllValues","obj","exceptions","showToast","allValuesPresent","toast","TableHeader","borderRight","TableDivider","DataContiner","rowGap","Overview","_overviewDetails$data","selectAcademicYear","setSelectAcademicYear","overviewDetails","setOverviewDetails","totalStudents","setTotalStudents","totalMaleStudents","setTotalMaleStudents","totalFemaleStudents","setTotalFemaleStudents","overView","totalStudentsCount","totalMaleStudentsCount","totalFemaleStudentsCount","academicYearChanged","downloadAllStudentsExcel","academicYearId","responseType","overview","maleStudents","femaleStudents","admitStudentTableKeys","FileListModal","selectedFiles","setSelectFiles","customOnChage","onRemove","f","handleRemoveImage","fileName","Close","FileSelect","multi","setSelectedFiles","customOnChange","accept","previousFile","rest","overflow","files","fileList","file","DownloadForOfflineIcon","Status_Options","AdmitStudent","navigation","classData","setClassData","sectionData","setSectionData","openModal","setOpenModal","openModalAdmit","setOpenModalAdmit","loader","setLoader","setFile","fileAdmit","setFileAdmit","handleChangeFiles","getClass","getSection","downloadStudentsExcel","sectionId","DownloadForOfflineSharpIcon","downloadStudentsPdf","PrintSharp","handleNavigate","preventDefault","formData","FormData","append","bulkStudentAdmit","headers","endIcon","DownloadIcon","getBulkStudentAdmitSheet","handleCloseAdmitModal","bulkUpdate","bulkUpdateSheet","handleCloseUpdateModal","isBottom","setIsBottom","inputProps","Reshuffle","studentReshuffle","setStudentReshuffle","checkBox","setCheckBox","reshuffle","setReshuffle","newSection","_data$result$3","ids","row","fatherInfo","handleReshffleCheckBox","prev","rowsPerPageOptions","StickyBar","varient","currentSectionId","studentIds","resuffle","Promotion","activeAcademicYear","setActiveAcademicYear","promoting","setPromoting","gettingStudentsList","setGettingStudentsList","promoteAcademicYearId","currentClassId","promoteClassId","promoteSectionId","allAcademicYears","a","handlePromotionCheckBox","promote","MuiTypography","BulkAdmission","academicYearList","setAcademicYearList","visibility","studentCrendentialsTableKeys","Credential","username","fatherName","studentActivityTableKeys","StudentActivity","setDate","setFormData","studentActivity","Formik","description","receiptBookTableKeys","feeMapTableKeys","LABEL","hostelMember","transportMember","tcOption","installmentsType","MEMBER_OPTIONS","TC_OPTIONS","AddUpdateFeeMap","selectedReceipt","getFeeMaps","academicYears","setAcademicYears","routes","setRoutes","stops","setStops","hostels","setHostels","roomTypes","setRoomTypes","rooms","setRooms","dependencies","setDependencies","addForm","setAddForm","installments","setInstallments","dataToUpdate","setDataToUpdate","academicData","getAcademicYears","route","_r$vehicle","vehicle","number","routeStart","routeEnd","getRoutes","hostel","h","getHostels","roomType","getRoomTypes","room","getRoom","fee","installmentType","handleAddForm","ceil","handleAddInstallments","installmentsData","monthlyAmount","missing","Array","v","_dataToUpdate$install","amount","dueDate","quarterlyAmount","_dataToUpdate$install2","halfYearlyAmount","_dataToUpdate$install3","_dataToUpdate$install4","othersAmount","others","_dataToUpdate$install5","handleInstallmentChange","val","changeIndex","newInstallments","installment","diffInMonths","updatedDueDate","pickType","elementToRemove","removeElementFromArray","receiptTitleId","feeMap","recentValue","pop","flexWrap","Chip","onDelete","chipToDelete","chips","chip","stop","px","enabled","renderInput","StyledTableCell","tableCellClasses","head","body","ViewInstallments","tableData","tableElement","Fragment","showInfo","dep","_data$class","newItem","join","CustomActionFee","Edit","receiptTitle","ReceiptBook","feeMaps","setFeeMaps","receipts","setReceipts","openFeeMap","setOpenFeeMap","selectedReceiptId","setSelectedReceiptId","action","detail","getReceipts","status","handleClickOpen","Add","mb","receipt","handleOpenFeeMap","feeMapCategoryTableKeys","CustomInput","borderWidth","shape","AddFeeMapCategory","categories","setCategories","addCategory","removeCategory","totalAmount","leftAmount","handleCustomInputChange","taxRate","hsnCode","RemoveIcon","FeeMapCategory","_feeMaps$find","_feeMaps$find2","setReceips","openAddModal","setOpenAddModal","feeMapCategory","parseFloat","createMultiple","feeMapId","handleCloseAddModel","reduce","acc","newCategories","setError","formRef","handleFormChange","refer","concession","dispatchEvent","Event","cancelable","bubbles","onPreviewButtonClick","payingAmount","onUpdateNote","collectingFee","downloadingPreview","payingDate","setPayingDate","paymentMode","setPaymentMode","paymentDetails","setPaymentDetails","handlePaymentDetails","Number","toFixed","newDate","FormLabel","RadioGroup","FormControlLabel","control","Radio","multiline","rows","bankName","branchName","chequeNumber","chequeDate","upiApp","utrNo","cardType","refNumber","paidByName","ExtraFeeContainer","CollectFees","_feeDetails$feeMap","_feeDetails$feeMap2","_feeDetails$feeMap2$i","_feeDetails$feeMap3","_feeDetails$feeMap3$i","_feeDetails$pastDues","_feeDetails$totalDueF","_feeDetails$currentDu","_feeDetails$totalPaid","_feeDetails$previousR2","_feeDetails$feeMapCat6","_feeDetails$currentDu2","_Number","_feeDetails$feeMapCat7","receiptTitles","setReceiptTitles","selectedStudent","setSelectedStudent","feeDetails","setFeeDetails","paymentData","setPaymentData","totalAmountToBePaid","setTotalAmountToBePaid","selectedPastDueIds","setSelectedPastDueIds","downloadingReceipt","setDownloadingReceipt","fetchingStudents","setFetchingStudents","installmentId","setInstallmentId","penalty","setPenalty","miscellaneous","setMiscellaneous","openConcessionModal","setOpenConcessionModal","setConcession","setNote","now","setCollectingFee","setDownloadingPreview","openCollectModal","setOpenCollectModal","setPayingAmount","handleCloseCollectFeeModal","receiptName","_feeMaps$filter$","feeReceipt","getFeeDetails","getAllReceiptTitles","_data$result2$","getAllFeeMaps","_students$result$","getStudentsList","getAllStudents","_feeMaps$find$install","payableAmount","_feeDetails$feeMapCat2","feeParticularAmount","feeMapCategories","amountPaid","totalAmountBeingPaid","concessionAmount","collectingAmount","_feeDetails$feeMapCat3","fm","_feeDetails$previousR","previousReceipts","installmentPaid","toLocaleDateString","pastDues","totalDueForThisAcademicYear","currentDue","totalPaid","response","downloadReceipt","validateStatus","_JSON$parse3","errorText","Response","message","paidAt","partiallyPaid","partialPaymentCompleted","itemDetail","handleChangeCollectingAmount","_feeDetails$feeMapCat","handleOpenConcessionModal","handleOpenCollectFeeModal","QuickFeeConcessionModal","handleCloseConcessionModal","QuickFeeCollectModal","_feeDetails$feeMapCat4","feeParticulars","concessionDetails","referredBy","givenAs","cashDetails","chequeDetails","ddDetails","upiDetails","cardDetails","netBankingDetails","previewReceipt","_JSON$parse","_feeDetails$feeMapCat5","collectFees","_JSON$parse2","balanceFeeReportTableKeys","BalanceFeeReport","downloadingExcel","setDownloadingExcel","feeReport","getBalanceFeeReport","downloadBalanceFeeReport","feeOverviewReceiptTableKeys","ALL_OPTION","Category_Options","downloadReceiptStaff","FeeOverview","collectedBy","setCollectedBy","category","setCategory","searchValue","setSearchValue","amountInDifferentModes","setAmountInDifferentModes","allReceipts","setAllReceipts","filteredReceipts","setFilteredReceipts","downloadingOverview","setDownloadingOverview","collected","_receipts$result","_receipts$result2","cashierId","getAmountCollectedWithDifferentModes","getAllReceipts","payeeDetails","admissionNumber","finalResult","_employeeResponse$dat","_employeeResponse$dat2","_employeeResponse$dat3","$or","roleIds","employeeResponse","$in","_e$role","getCollected","filterData","filtered","_receipt$category","_receipt$category$toS","_receipt$category$toS2","minWidth","CurrencyRupeeIcon","textTransform","downloadFeeOverView","reconciliationTableKeys","reconciliationStatus","updateStatus","updateSingleReceiptReconciliationStatusStatus","CircularProgress","CheckIcon","Reconciliation","getReceiptsPaidWithCheque","_d$payeeDetails","_d$payeeDetails2","_d$chequeDetails","_d$chequeDetails2","_d$chequeDetails3","_d$chequeDetails4","roleNo","manageHostelTableKeys","ViewModel","StyledTableRow","HostelViewDialog","schoolName","address","createdAt","hostelType","ManageHostel","_dataToEdit$warden","getWarden","warden","manageHostelRoomTableKeys","ManageRoomType","specification","manageHostelRoomBedTableKeys","RoomAndBedViewDialog","_tableData$beds","totalBeds","beds","allocated","ManageRoomAndBed","_dataToEdit$type","_dataToEdit$hostel","setRoomType","updatingBed","setUpdatingBed","deletingBed","setDeletingBed","getRoomList","_h$hostel","_h$type","hostelName","getRoomTypeList","getHostelList","bed","b","roomId","onAddBedsHandle","initialBedsData","newBedData","removeBed","onCloseModal","hostelMemberTableKeys","hostelNNonMemberTableKeys","CustomActionAdd","_data$basicInfo","_room$find","setHostel","setRoom","getHostel","updateHostelMember","String","HostelMember","setHostelMember","nonHostelMember","setNonHostelMember","getDataMemberList","filteredDataMember","_s$otherInfo","otherInfo","studentName","admission","filteredDataNonMember","_s$otherInfo2","_s$otherInfo3","_s$otherInfo4","removeHostelMember","studentBulkPhotoTableKeys","StudentBulkPhoto","FormBox","borderColor","Title","secondary","MuiBox","backgroundPosition","BasicData","Gender_Options","BloodGroup_Options","Is_Public","Library_Member","Salary_Type","AddEmployee","_dataToEdit$basicInfo","_dataToEdit$academicI","_dataToEdit$academicI2","useParams","designationData","setDesgnationData","departmentData","setDepartmentData","rolesData","setRolesData","selectedPhoto","setSelectedPhoto","resume","setResume","getEmpById","getEmployeeDetails","getDesignationData","getDepartmentData","empId","responsibility","secMobileNo","bloodGroup","religion","presentAddress","permanentAddress","dob","spouseName","aadharNo","fatherOccupation","spouseOccupation","qualification","workExperience","email","salaryType","libraryMember","public","showDetailsForWeb","photo","stringify","handleChangePhoto","handleRemoveFile","img","avatar","alt","manageInstituteTableKeys","ManageInstitute","setSettings","settings","school","AddOrUpdateFiles","updatingFiles","setUpdatingFiles","handleOpenDialog","addFiles","ThemeSelector","onThemeSelect","webTheme","setSelectedTheme","setTheme","WebsiteThemeContext","selectedTheme","selectedIdCardTheme","setSelectedIdCardTheme","dividers","websiteThemes","handleClick","idCardThemes","handleClickGenerateIdCard","RollNumber_Options","Attendence_Type","Admission_Options","AddInstitute","_dataToEdit$bannerIma","initialValue","setSelectedSetting","currencyToSymbolMap","logo","setLogo","bannerImages","setBannerImages","getSchoolDetails","details","previewCreateUrl","setPreviewCreateUrl","currencies","currencyCodes","currency","phone","regDate","fax","websiteFooter","currencySymbol","sessionStartMonth","sessionEndMonth","rollNumberType","studentAttendenceType","admissionNo","latitude","longitude","defaultTimeZone","googleAnalyticsId","teacherActivityFeedbackEnabled","facebookUrl","twitterUrl","linkedinUrl","youtubeUrl","instagramUrl","pinterestUrl","location","PUBLIC_URLS","getSchools","getAllSchools","selectedCurrency","TimezoneSelect","baseStyle","state","menu","provided","overflowX","backgroundSize","removeFile","handleRemoveImg","common","black","white","FormTable","handleLinkClick","url","FileDownloadIcon","mx","Gender","Blood_Group","ProfileUpdate","_employee$basicInfo","_employee$basicInfo2","_employee$basicInfo3","_employee$basicInfo3$","_employee$basicInfo4","_employee$basicInfo5","_employee$basicInfo6","_employee$basicInfo7","_employee$basicInfo8","_employee$basicInfo9","_employee$academicInf","_employee$academicInf2","_employee$academicInf3","_employee$academicInf4","_employee$otherInfo","_employee$otherInfo2","_employee$otherInfo3","_employee$otherInfo4","_employee$otherInfo5","_employee$otherInfo6","_employee$academicInf5","designations","setDesignations","profileImages","setProfileImages","getDesignation","googlePlusUrl","setItem","Profile","View_Web","UpdateEmployee","useLocation","empData","academicInfoworkExperience","salaryGrade","academicInfosalaryGrade","imageUrl","Relation_With_Guardian","RTE_Options","AddStudent","_dataToEdit$basicInfo2","_dataToEdit$academicI3","_dataToEdit$academicI4","_dataToEdit$academicI5","_dataToEdit$academicI6","_dataToEdit$contactIn","_dataToEdit$contactIn2","_dataToEdit$contactIn3","_dataToEdit$contactIn4","_dataToEdit$contactIn5","_dataToEdit$contactIn6","_dataToEdit$contactIn7","_dataToEdit$prevSchIn","_dataToEdit$prevSchIn2","_dataToEdit$prevSchIn3","_dataToEdit$otherInfo","_dataToEdit$otherInfo2","_dataToEdit$otherInfo3","_dataToEdit$otherInfo4","_dataToEdit$otherInfo5","_dataToEdit$otherInfo6","_dataToEdit$otherInfo7","_dataToEdit$prevSchIn4","_dataToEdit$fatherInf","_dataToEdit$motherInf","selectedStudentPhoto","setSelectedStuentPhoto","selectedMotherPhoto","setSelectedMotherPhoto","selectedFatherPhoto","setSelectedFatherPhoto","transferCertificate","setTransperCertificate","getStudentDetails","admissionDate","motherTongue","cicn","caste","rte","satNo","grNo","birthPlace","guardianName","contactInfo","guardianContactNumber","guardianContactNumberSecondary","guardianRelation","nationId","prevSchName","prevSchInfo","tcNo","prevClass","healthCondition","busStop","extraInfo","fatherPhone","fatherEdu","education","fatherProfession","profession","fatherDesignation","motherName","motherInfo","motherPhone","motherEdu","motherProfession","motherDesignation","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","ITEM_HEIGHT","BorderLinearProgress","LinearProgress","linearProgressClasses","colorPrimary","bar","StyledInput","InputBase","transition","transitions","Compose","sendingMessage","setSendingMessage","receiverType","setReceiverType","selectRoles","setSelectRoles","smsFrom","setSmsFrom","sms","contacts","setContacts","classPopper","setClassPopper","sectionPopper","setSectionPopper","contactsPopper","setContactsPopper","notifyChecked","setNotifyChecked","selectClass","setSelectClass","selectSection","setSelectSection","selectContacts","setSelectContacts","selectedStudentCount","setSelectedStudentCount","selectEmployee","setSelectEmployee","classAutoSelect","setClassAutoSelect","sectionAutoSelect","setSectionAutoSelect","contactsAutoSelect","setContactsAutoSelect","selectFile","setSelectFile","employeeListPopper","setEmployeeListPopper","selectedEmployeeCount","setSelectedEmployeeCount","employeeAutoSelect","setEmployeeAutoSelect","totalSms","setTotalSms","consumedSms","setConsumedSms","balance","setBalance","success","flexFlow","onFocus","currentTarget","Popper","anchorEl","Autocomplete","classIds","schclass","classNames","sortedSections","sort","localeCompare","filteredSections","filteredSectionIds","isOptionEqualToValue","disableCloseOnSelect","getOptionLabel","renderOption","selected","sectionIds","sectionNames","handleContactsList","some","allStudentContacts","studentNames","split","renderValue","ListItemText","handleEmployeeAuto","employeeNames","smsType","TextareaAutosize","maxRows","Report","report","setReport","smsSubject","sentTime","RefreshRounded","SimCardDownloadRoundedIcon","ReplyRoundedIcon","RedoRoundedIcon","Credentails","handleClassSelect","handleSectionSelect","isStudentRoleSelected","roleId","_ref8","_ref9","BulkPhoto","updatePhoto","handleNavigateStudent","Container","BackButton","notificationsTableKeys","Notifications","drawerWidth","openedMixin","easing","sharp","duration","enteringScreen","closedMixin","leavingScreen","up","DrawerHeader","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","NavDrawer","sideMenuData","setSideMenuData","setAnchorEl","openProfile","Boolean","activeYear","setActiveYear","setIsDarkMode","selecteSubMenu","setSelectedSubMenu","selectedMenu","setSelectedMenu","newSideMenuData","menuData","newMenu","ren","_permissions$filter$","_permissions$filter$$","_s$renderName","_permissions$filter$2","_permissions$filter$3","_menuData$renderName$","getActiveAcademicYear","openPreviousMenu","pathname","menuIndex","CssBaseline","Toolbar","handleDrawerOpen","MenuIcon","NotificationsIcon","Menu","MenuListProps","elevation","mr","transformOrigin","horizontal","vertical","anchorOrigin","ListItemIcon","PersonIcon","LockResetIcon","handleLogout","removeItem","LogoutIcon","handleDrawerClose","ChevronRightIcon","ChevronLeftIcon","List","ListItem","ListItemButton","handleToggleMenuOpen","ExpandLess","ExpandMore","Collapse","timeout","unmountOnExit","in","wordWrap","disablePadding","handleModeChange","flexGrow","overflowY","Routes","Route","element","Credentials","PageNotFound","Outlet"],"sourceRoot":""}